{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\AccountLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\n\n// Utility to convert month number to month name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const date = new Date();\n  date.setMonth(monthNumber - 1);\n  return date.toLocaleString('en-US', {\n    month: 'long'\n  });\n};\nconst AccountLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tableRef = useRef(null);\n\n  // UI state\n  const [accounts, setAccounts] = useState([]);\n  const [commentsMap, setCommentsMap] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [commentInput, setCommentInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [notification, setNotification] = useState({\n    message: '',\n    type: ''\n  }); // For custom alerts\n\n  // Active filters from URL/session storage\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeMonthName, setActiveMonthName] = useState(null);\n  const [activeSbu, setActiveSbu] = useState(null);\n\n  // New states for column filters\n  const [columnFilters, setColumnFilters] = useState({\n    accountId: new Set(),\n    accountName: new Set(),\n    totalProjects: new Set(),\n    totalRevenue: new Set(),\n    forecastNetRevenue: new Set(),\n    difference: new Set()\n  });\n  const [filterOptions, setFilterOptions] = useState({}); // To store unique values for filter dropdowns\n  const [visibleFilterDropdown, setVisibleFilterDropdown] = useState(null); // Track which dropdown is open\n\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (value = 0) => value.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Load Poppins font\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch accounts when filters change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\n      setLoading(true);\n      setError(null);\n      setAccounts([]); // Clear accounts before fetching new data\n      setFilterOptions({}); // Clear filter options\n      setColumnFilters({\n        // Reset column filters\n        accountId: new Set(),\n        accountName: new Set(),\n        totalProjects: new Set(),\n        totalRevenue: new Set(),\n        forecastNetRevenue: new Set(),\n        difference: new Set()\n      });\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            monthNameParam,\n            sbu\n          })\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(txt || resp.statusText);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setAccounts(list);\n\n        // Seed comments map\n        const initMap = {};\n        list.forEach(acc => {\n          if (acc.accountComment) {\n            initMap[acc.accountId] = acc.accountComment;\n          }\n        });\n        setCommentsMap(initMap);\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load accounts: ${e.message}`);\n        setNotification({\n          message: `Failed to load accounts: ${e.message}`,\n          type: 'error'\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Read from React state, sessionStorage, or URL query\n    const qs = new URLSearchParams(location.search);\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let s = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.sbu;\n    if (!m) {\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\n      const qm = qs.get('month');\n      m = sm !== null && sm !== void 0 ? sm : qm;\n    }\n    if (!y) {\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\n      const qy = qs.get('year');\n      y = sy !== null && sy !== void 0 ? sy : qy;\n    }\n    if (!s) {\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\n      const qsS = qs.get('sbu');\n      s = ss !== null && ss !== void 0 ? ss : qsS;\n    }\n\n    // Normalize numeric values\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && s) {\n      const mn = getMonthName(m);\n      // Only refetch if any filter changed or first load\n      if (m !== activeMonth || y !== activeYear || s !== activeSbu || accounts.length === 0 // Force refetch on first load if accounts is empty\n      ) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveMonthName(mn);\n        setActiveSbu(s);\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\n        fetchAccountData(m, y, mn, s);\n      }\n    } else {\n      setError('Missing month, year or SBU. Please navigate here with those parameters.');\n      setLoading(false);\n    }\n  }, [location.state, location.search]); // Removed activeMonth, activeYear, activeSbu, accounts.length from deps to avoid infinite loop when accounts changes\n\n  // Populate filter options when accounts data changes\n  useEffect(() => {\n    if (accounts.length > 0) {\n      const options = {};\n      const columns = ['accountId', 'accountName', 'totalProjects', 'totalRevenue', 'forecastNetRevenue', 'difference'];\n      columns.forEach(col => {\n        // Handle currency formatting for revenue columns\n        if (col === 'totalRevenue' || col === 'forecastNetRevenue' || col === 'difference') {\n          options[col] = [...new Set(accounts.map(acc => formatCurrency(acc[col])))].sort();\n        } else {\n          options[col] = [...new Set(accounts.map(acc => acc[col]))].sort();\n        }\n      });\n      setFilterOptions(options);\n    }\n  }, [accounts, formatCurrency]); // formatCurrency is stable, but adding it for completeness\n\n  // Initialize & destroy DataTable with custom filter\n  useEffect(() => {\n    let dt;\n    if (!loading && tableRef.current) {\n      const $tbl = $(tableRef.current);\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n        $.fn.dataTable.ext.search.pop(); // Remove previous filter function\n      }\n\n      // Custom DataTables filter function\n      const customFilter = function (settings, data, dataIndex) {\n        const rowData = accounts[dataIndex]; // Get original row data from state\n\n        // Apply filters\n        for (const colKey in columnFilters) {\n          const selectedValues = columnFilters[colKey];\n          if (selectedValues.size > 0) {\n            let cellValue = rowData[colKey];\n            // Match the formatted currency values for revenue columns\n            if (colKey === 'totalRevenue' || colKey === 'forecastNetRevenue' || colKey === 'difference') {\n              cellValue = formatCurrency(cellValue);\n            }\n            if (!selectedValues.has(cellValue)) {\n              return false; // Hide row if it doesn't match the filter for this column\n            }\n          }\n        }\n        return true; // Show row if it passes all filters\n      };\n      $.fn.dataTable.ext.search.push(customFilter);\n      dt = $tbl.DataTable({\n        paging: true,\n        searching: false,\n        // Disable default search box\n        ordering: false,\n        // Disable default sorting arrows\n        info: true,\n        autoWidth: false\n      });\n      dt.draw(); // Redraw table with new filter settings\n    }\n    return () => {\n      if (tableRef.current && $.fn.DataTable.isDataTable($(tableRef.current))) {\n        $(tableRef.current).DataTable().destroy();\n        $.fn.dataTable.ext.search.pop(); // Clean up filter function\n      }\n    };\n  }, [loading, accounts, columnFilters, formatCurrency]); // Re-initialize DataTable when filters or data change\n\n  // Download Excel (.xls) of current table view (respects DataTables filters/search)\n  const handleDownloadExcel = () => {\n    const $tbl = $(tableRef.current);\n    let headers = [];\n    let rows = [];\n    if ($.fn.DataTable.isDataTable($tbl)) {\n      const dt = $tbl.DataTable();\n\n      // Read headers (first 6 columns)\n      headers = $tbl.find('thead th').slice(0, 6) // Only take the data columns, not Comment/View\n      .map(function () {\n        return $(this).text().trim().replace(/▼/g, '').trim(); // Remove filter icon text\n      }).get();\n\n      // Read visible rows (filtered by DataTables) and grab displayed text for first 6 cells\n      // Use dt.rows({ filter: 'applied' }) to get rows visible after DataTables' internal filtering\n      // which includes our custom filter.\n      const nodes = dt.rows({\n        search: 'applied',\n        filter: 'applied'\n      }).nodes().toArray();\n      rows = nodes.map(tr => Array.from(tr.cells).slice(0, 6) // Only take the data cells\n      .map(td => td.textContent.trim()));\n    } else {\n      // Fallback: build from state if DataTable not initialized\n      headers = ['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference'];\n      rows = accounts.map(acc => {\n        var _acc$accountId, _acc$accountName, _acc$totalProjects, _acc$totalRevenue, _acc$forecastNetReven, _acc$difference;\n        return [String((_acc$accountId = acc.accountId) !== null && _acc$accountId !== void 0 ? _acc$accountId : ''), String((_acc$accountName = acc.accountName) !== null && _acc$accountName !== void 0 ? _acc$accountName : ''), String((_acc$totalProjects = acc.totalProjects) !== null && _acc$totalProjects !== void 0 ? _acc$totalProjects : ''), formatCurrency((_acc$totalRevenue = acc.totalRevenue) !== null && _acc$totalRevenue !== void 0 ? _acc$totalRevenue : 0), formatCurrency((_acc$forecastNetReven = acc.forecastNetRevenue) !== null && _acc$forecastNetReven !== void 0 ? _acc$forecastNetReven : 0), formatCurrency((_acc$difference = acc.difference) !== null && _acc$difference !== void 0 ? _acc$difference : 0)];\n      });\n    }\n\n    // Build simple HTML table which Excel can open as .xls\n    const theadHtml = '<tr>' + headers.map(h => `<th>${h.replace(/&/g, '&amp;').replace(/</g, '&lt;')}</th>`).join('') + '</tr>';\n    const tbodyHtml = rows.map(r => '<tr>' + r.map(v => `<td>${String(v).replace(/&/g, '&amp;').replace(/</g, '&lt;')}</td>`).join('') + '</tr>').join('');\n    const html = `<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" ` + `xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ` + `xmlns=\"http://www.w3.org/TR/REC-html40\">` + `<head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets>` + `<x:ExcelWorksheet><x:Name>AccountLevel</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet>` + `</x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head>` + `<body><table border=\"1\"><thead>${theadHtml}</thead><tbody>${tbodyHtml}</tbody></table></body></html>`;\n    const blob = new Blob([html], {\n      type: 'application/vnd.ms-excel;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    const fileName = `AccountLevel_${activeSbu || 'All'}_${activeMonthName || ''}${activeYear || ''}.xls`;\n    a.href = url;\n    a.download = fileName.replace(/\\s+/g, '_');\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  // Open comment modal\n  const openCommentModal = accId => {\n    setCurrentAccountId(accId);\n    setCommentInput(commentsMap[accId] || '');\n    setModalVisible(true);\n  };\n\n  // Save or update comment\n  const saveComment = async () => {\n    try {\n      const dto = {\n        accId: currentAccountId,\n        month: activeMonth,\n        year: activeYear,\n        comment: commentInput\n      };\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dto)\n      });\n      if (!resp.ok) {\n        throw new Error(await resp.text());\n      }\n      // Update local maps\n      setCommentsMap(m => ({\n        ...m,\n        [currentAccountId]: commentInput\n      }));\n      setAccounts(list => list.map(acc => acc.accountId === currentAccountId ? {\n        ...acc,\n        accountComment: commentInput\n      } : acc));\n      setModalVisible(false);\n      setNotification({\n        message: 'Comment saved successfully!',\n        type: 'success'\n      });\n      setTimeout(() => setNotification({\n        message: '',\n        type: ''\n      }), 3000); // Clear after 3 seconds\n    } catch (e) {\n      setNotification({\n        message: 'Error saving comment: ' + e.message,\n        type: 'error'\n      });\n    }\n  };\n\n  // Handle filter checkbox change\n  const handleFilterChange = (column, value, isChecked) => {\n    setColumnFilters(prev => {\n      const newSet = new Set(prev[column]);\n      if (isChecked) {\n        newSet.add(value);\n      } else {\n        newSet.delete(value);\n      }\n      return {\n        ...prev,\n        [column]: newSet\n      };\n    });\n  };\n\n  // Toggle filter dropdown visibility\n  const toggleFilterDropdown = column => {\n    setVisibleFilterDropdown(visibleFilterDropdown === column ? null : column);\n  };\n\n  // Clear all filters for a specific column\n  const clearFilter = column => {\n    setColumnFilters(prev => ({\n      ...prev,\n      [column]: new Set()\n    }));\n  };\n\n  // Dynamic breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      monthName: activeMonthName,\n      sbu: activeSbu\n    }\n  }] : []), {\n    name: 'Account Level',\n    page: 'accounts'\n  }].filter(Boolean);\n  const getColumnValue = (acc, columnKey) => {\n    if (columnKey === 'totalRevenue' || columnKey === 'forecastNetRevenue' || columnKey === 'difference') {\n      return formatCurrency(acc[columnKey]);\n    }\n    return acc[columnKey];\n  };\n\n  // Common JSX for filterable table headers\n  const renderFilterableHeader = (columnKey, headerText) => /*#__PURE__*/_jsxDEV(\"th\", {\n    style: {\n      position: 'relative',\n      paddingRight: '30px'\n    },\n    children: [headerText, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-sm text-white\",\n      onClick: () => toggleFilterDropdown(columnKey),\n      style: {\n        position: 'absolute',\n        right: '5px',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        fontSize: '1rem',\n        // Make the arrow larger\n        padding: '0 5px',\n        // Add some padding\n        backgroundColor: 'rgba(255, 255, 255, 0.2)',\n        // Slight background for contrast\n        borderRadius: '0.25rem',\n        // Rounded corners\n        border: 'none' // Remove border if not desired\n      },\n      title: `Filter by ${headerText}`,\n      children: \"\\u25BC \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), visibleFilterDropdown === columnKey && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white shadow rounded p-2\",\n      style: {\n        position: 'absolute',\n        zIndex: 1000,\n        top: '100%',\n        left: '0',\n        maxHeight: '200px',\n        overflowY: 'auto',\n        width: '200px',\n        border: '1px solid #ddd'\n      },\n      onClick: e => e.stopPropagation() // Prevent closing when clicking inside\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fw-bold\",\n          children: [\"Filter \", headerText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-outline-danger\",\n          onClick: () => clearFilter(columnKey),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }, this), filterOptions[columnKey] && filterOptions[columnKey].length > 0 ? filterOptions[columnKey].map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          id: `filter-${columnKey}-${option}`,\n          onChange: e => handleFilterChange(columnKey, option, e.target.checked),\n          checked: columnFilters[columnKey].has(option)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `filter-${columnKey}-${option}`,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 17\n        }, this)]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No options available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3 mb-md-0 fw-semibold text-dark\",\n          children: [\"\\uD83C\\uDFE2 Account Level Overview \\u2013 \", activeSbu, activeMonthName && activeYear && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2 text-primary\",\n            children: [\"(\", activeMonthName, \" \", activeYear, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDownloadExcel,\n          disabled: loading || !!error,\n          title: \"Download current table view as Excel\",\n          className: \"btn\",\n          style: {\n            backgroundColor: '#ffffff',\n            border: '1px solid #198754',\n            color: '#198754'\n          },\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this), notification.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${notification.type === 'error' ? 'danger' : 'success'} mb-3`,\n        role: \"alert\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Account Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload'),\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [renderFilterableHeader('accountId', 'Account ID'), renderFilterableHeader('accountName', 'Account Name'), renderFilterableHeader('totalProjects', 'Total Projects'), renderFilterableHeader('totalRevenue', 'Total Revenue'), renderFilterableHeader('forecastNetRevenue', 'Forecast Revenue'), renderFilterableHeader('difference', 'Revenue Difference'), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 556,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: accounts.map(acc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.totalProjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.totalRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 573,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.forecastNetRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.difference)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-secondary\",\n                  onClick: () => openCommentModal(acc.accountId),\n                  children: \"\\uD83D\\uDCAC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/accounts/${acc.accountId}/project-types`, {\n                    state: {\n                      accId: acc.accountId,\n                      month: activeMonth,\n                      year: activeYear,\n                      monthName: activeMonthName,\n                      sbu: activeSbu\n                    }\n                  }),\n                  title: \"View Project Types\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 21\n              }, this)]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      style: {\n        backgroundColor: '#00000066'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"\\uD83D\\uDCAC Comment for \", currentAccountId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setModalVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setModalVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: saveComment,\n              disabled: !commentInput.trim(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 484,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountLevel, \"640d3SJvdOPommw1QllqlTOk7cc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AccountLevel;\nexport default AccountLevel;\nvar _c;\n$RefreshReg$(_c, \"AccountLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","AccountLevel","_s","navigate","location","tableRef","accounts","setAccounts","commentsMap","setCommentsMap","modalVisible","setModalVisible","currentAccountId","setCurrentAccountId","commentInput","setCommentInput","loading","setLoading","error","setError","notification","setNotification","message","type","activeMonth","setActiveMonth","activeYear","setActiveYear","activeMonthName","setActiveMonthName","activeSbu","setActiveSbu","columnFilters","setColumnFilters","accountId","Set","accountName","totalProjects","totalRevenue","forecastNetRevenue","difference","filterOptions","setFilterOptions","visibleFilterDropdown","setVisibleFilterDropdown","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","value","style","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","_location$state3","fetchAccountData","year","monthNameParam","sbu","resp","fetch","method","headers","JSON","stringify","ok","txt","text","Error","statusText","data","json","list","Array","isArray","filter","Boolean","initMap","forEach","acc","accountComment","e","console","qs","URLSearchParams","search","m","state","y","s","sm","sessionStorage","getItem","qm","get","sy","qy","ss","qsS","parseInt","mn","length","setItem","toString","options","columns","col","map","sort","dt","current","$tbl","fn","DataTable","isDataTable","destroy","dataTable","ext","pop","customFilter","settings","dataIndex","rowData","colKey","selectedValues","size","cellValue","has","push","paging","searching","ordering","info","autoWidth","draw","handleDownloadExcel","rows","find","slice","trim","replace","nodes","toArray","tr","from","cells","td","textContent","_acc$accountId","_acc$accountName","_acc$totalProjects","_acc$totalRevenue","_acc$forecastNetReven","_acc$difference","String","theadHtml","h","join","tbodyHtml","r","v","html","blob","Blob","url","URL","createObjectURL","a","fileName","download","click","remove","revokeObjectURL","openCommentModal","accId","saveComment","dto","comment","setTimeout","handleFilterChange","column","isChecked","prev","newSet","add","delete","toggleFilterDropdown","clearFilter","breadcrumbPath","name","page","monthName","getColumnValue","columnKey","renderFilterableHeader","headerText","position","paddingRight","children","className","onClick","right","top","transform","fontSize","padding","backgroundColor","borderRadius","border","title","_jsxFileName","lineNumber","columnNumber","zIndex","left","maxHeight","overflowY","width","stopPropagation","option","id","onChange","target","checked","htmlFor","background","maxWidth","path","disabled","color","role","ref","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/AccountLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\n// Utility to convert month number to month name\r\nconst getMonthName = (monthNumber) => {\r\n  const date = new Date();\r\n  date.setMonth(monthNumber - 1);\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n};\r\n\r\nconst AccountLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  // UI state\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [notification, setNotification] = useState({ message: '', type: '' }); // For custom alerts\r\n\r\n  // Active filters from URL/session storage\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeMonthName, setActiveMonthName] = useState(null);\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n\r\n  // New states for column filters\r\n  const [columnFilters, setColumnFilters] = useState({\r\n    accountId: new Set(),\r\n    accountName: new Set(),\r\n    totalProjects: new Set(),\r\n    totalRevenue: new Set(),\r\n    forecastNetRevenue: new Set(),\r\n    difference: new Set(),\r\n  });\r\n  const [filterOptions, setFilterOptions] = useState({}); // To store unique values for filter dropdowns\r\n  const [visibleFilterDropdown, setVisibleFilterDropdown] = useState(null); // Track which dropdown is open\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits,\r\n  } = commonData.currencySettings;\r\n\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits,\r\n    });\r\n\r\n  // Load Poppins font\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch accounts when filters change\r\n  useEffect(() => {\r\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\r\n      setLoading(true);\r\n      setError(null);\r\n      setAccounts([]); // Clear accounts before fetching new data\r\n      setFilterOptions({}); // Clear filter options\r\n      setColumnFilters({ // Reset column filters\r\n        accountId: new Set(),\r\n        accountName: new Set(),\r\n        totalProjects: new Set(),\r\n        totalRevenue: new Set(),\r\n        forecastNetRevenue: new Set(),\r\n        difference: new Set(),\r\n      });\r\n\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, monthNameParam, sbu }),\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(txt || resp.statusText);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setAccounts(list);\r\n\r\n        // Seed comments map\r\n        const initMap = {};\r\n        list.forEach((acc) => {\r\n          if (acc.accountComment) {\r\n            initMap[acc.accountId] = acc.accountComment;\r\n          }\r\n        });\r\n        setCommentsMap(initMap);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load accounts: ${e.message}`);\r\n        setNotification({ message: `Failed to load accounts: ${e.message}`, type: 'error' });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Read from React state, sessionStorage, or URL query\r\n    const qs = new URLSearchParams(location.search);\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    let s = location.state?.sbu;\r\n\r\n    if (!m) {\r\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\r\n      const qm = qs.get('month');\r\n      m = sm ?? qm;\r\n    }\r\n    if (!y) {\r\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\r\n      const qy = qs.get('year');\r\n      y = sy ?? qy;\r\n    }\r\n    if (!s) {\r\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\r\n      const qsS = qs.get('sbu');\r\n      s = ss ?? qsS;\r\n    }\r\n\r\n    // Normalize numeric values\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && s) {\r\n      const mn = getMonthName(m);\r\n      // Only refetch if any filter changed or first load\r\n      if (\r\n        m !== activeMonth ||\r\n        y !== activeYear ||\r\n        s !== activeSbu ||\r\n        accounts.length === 0 // Force refetch on first load if accounts is empty\r\n      ) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveMonthName(mn);\r\n        setActiveSbu(s);\r\n\r\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\r\n\r\n        fetchAccountData(m, y, mn, s);\r\n      }\r\n    } else {\r\n      setError(\r\n        'Missing month, year or SBU. Please navigate here with those parameters.'\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, location.search]); // Removed activeMonth, activeYear, activeSbu, accounts.length from deps to avoid infinite loop when accounts changes\r\n\r\n  // Populate filter options when accounts data changes\r\n  useEffect(() => {\r\n    if (accounts.length > 0) {\r\n      const options = {};\r\n      const columns = [\r\n        'accountId',\r\n        'accountName',\r\n        'totalProjects',\r\n        'totalRevenue',\r\n        'forecastNetRevenue',\r\n        'difference',\r\n      ];\r\n\r\n      columns.forEach((col) => {\r\n        // Handle currency formatting for revenue columns\r\n        if (col === 'totalRevenue' || col === 'forecastNetRevenue' || col === 'difference') {\r\n          options[col] = [...new Set(accounts.map((acc) => formatCurrency(acc[col])))].sort();\r\n        } else {\r\n          options[col] = [...new Set(accounts.map((acc) => acc[col]))].sort();\r\n        }\r\n      });\r\n      setFilterOptions(options);\r\n    }\r\n  }, [accounts, formatCurrency]); // formatCurrency is stable, but adding it for completeness\r\n\r\n  // Initialize & destroy DataTable with custom filter\r\n  useEffect(() => {\r\n    let dt;\r\n    if (!loading && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n        $.fn.dataTable.ext.search.pop(); // Remove previous filter function\r\n      }\r\n\r\n      // Custom DataTables filter function\r\n      const customFilter = function (settings, data, dataIndex) {\r\n        const rowData = accounts[dataIndex]; // Get original row data from state\r\n\r\n        // Apply filters\r\n        for (const colKey in columnFilters) {\r\n          const selectedValues = columnFilters[colKey];\r\n          if (selectedValues.size > 0) {\r\n            let cellValue = rowData[colKey];\r\n            // Match the formatted currency values for revenue columns\r\n            if (colKey === 'totalRevenue' || colKey === 'forecastNetRevenue' || colKey === 'difference') {\r\n              cellValue = formatCurrency(cellValue);\r\n            }\r\n            if (!selectedValues.has(cellValue)) {\r\n              return false; // Hide row if it doesn't match the filter for this column\r\n            }\r\n          }\r\n        }\r\n        return true; // Show row if it passes all filters\r\n      };\r\n\r\n      $.fn.dataTable.ext.search.push(customFilter);\r\n\r\n      dt = $tbl.DataTable({\r\n        paging: true,\r\n        searching: false, // Disable default search box\r\n        ordering: false, // Disable default sorting arrows\r\n        info: true,\r\n        autoWidth: false,\r\n      });\r\n\r\n      dt.draw(); // Redraw table with new filter settings\r\n    }\r\n\r\n    return () => {\r\n      if (tableRef.current && $.fn.DataTable.isDataTable($(tableRef.current))) {\r\n        $(tableRef.current).DataTable().destroy();\r\n        $.fn.dataTable.ext.search.pop(); // Clean up filter function\r\n      }\r\n    };\r\n  }, [loading, accounts, columnFilters, formatCurrency]); // Re-initialize DataTable when filters or data change\r\n\r\n  // Download Excel (.xls) of current table view (respects DataTables filters/search)\r\n  const handleDownloadExcel = () => {\r\n    const $tbl = $(tableRef.current);\r\n    let headers = [];\r\n    let rows = [];\r\n\r\n    if ($.fn.DataTable.isDataTable($tbl)) {\r\n      const dt = $tbl.DataTable();\r\n\r\n      // Read headers (first 6 columns)\r\n      headers = $tbl\r\n        .find('thead th')\r\n        .slice(0, 6) // Only take the data columns, not Comment/View\r\n        .map(function () {\r\n          return $(this).text().trim().replace(/▼/g, '').trim(); // Remove filter icon text\r\n        })\r\n        .get();\r\n\r\n      // Read visible rows (filtered by DataTables) and grab displayed text for first 6 cells\r\n      // Use dt.rows({ filter: 'applied' }) to get rows visible after DataTables' internal filtering\r\n      // which includes our custom filter.\r\n      const nodes = dt.rows({ search: 'applied', filter: 'applied' }).nodes().toArray();\r\n      rows = nodes.map((tr) =>\r\n        Array.from(tr.cells)\r\n          .slice(0, 6) // Only take the data cells\r\n          .map((td) => td.textContent.trim())\r\n      );\r\n    } else {\r\n      // Fallback: build from state if DataTable not initialized\r\n      headers = [\r\n        'Account ID',\r\n        'Account Name',\r\n        'Total Projects',\r\n        'Total Revenue',\r\n        'Forecast Revenue',\r\n        'Revenue Difference',\r\n      ];\r\n      rows = accounts.map((acc) => [\r\n        String(acc.accountId ?? ''),\r\n        String(acc.accountName ?? ''),\r\n        String(acc.totalProjects ?? ''),\r\n        formatCurrency(acc.totalRevenue ?? 0),\r\n        formatCurrency(acc.forecastNetRevenue ?? 0),\r\n        formatCurrency(acc.difference ?? 0),\r\n      ]);\r\n    }\r\n\r\n    // Build simple HTML table which Excel can open as .xls\r\n    const theadHtml =\r\n      '<tr>' + headers.map((h) => `<th>${h.replace(/&/g, '&amp;').replace(/</g, '&lt;')}</th>`).join('') + '</tr>';\r\n    const tbodyHtml = rows\r\n      .map(\r\n        (r) =>\r\n          '<tr>' +\r\n          r\r\n            .map((v) => `<td>${String(v).replace(/&/g, '&amp;').replace(/</g, '&lt;')}</td>`)\r\n            .join('') +\r\n          '</tr>'\r\n      )\r\n      .join('');\r\n\r\n    const html =\r\n      `<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" ` +\r\n      `xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ` +\r\n      `xmlns=\"http://www.w3.org/TR/REC-html40\">` +\r\n      `<head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets>` +\r\n      `<x:ExcelWorksheet><x:Name>AccountLevel</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet>` +\r\n      `</x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head>` +\r\n      `<body><table border=\"1\"><thead>${theadHtml}</thead><tbody>${tbodyHtml}</tbody></table></body></html>`;\r\n\r\n    const blob = new Blob([html], { type: 'application/vnd.ms-excel;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const fileName = `AccountLevel_${activeSbu || 'All'}_${activeMonthName || ''}${activeYear || ''}.xls`;\r\n    a.href = url;\r\n    a.download = fileName.replace(/\\s+/g, '_');\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Open comment modal\r\n  const openCommentModal = (accId) => {\r\n    setCurrentAccountId(accId);\r\n    setCommentInput(commentsMap[accId] || '');\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // Save or update comment\r\n  const saveComment = async () => {\r\n    try {\r\n      const dto = {\r\n        accId: currentAccountId,\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        comment: commentInput,\r\n      };\r\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dto),\r\n      });\r\n      if (!resp.ok) {\r\n        throw new Error(await resp.text());\r\n      }\r\n      // Update local maps\r\n      setCommentsMap((m) => ({ ...m, [currentAccountId]: commentInput }));\r\n      setAccounts((list) =>\r\n        list.map((acc) =>\r\n          acc.accountId === currentAccountId\r\n            ? { ...acc, accountComment: commentInput }\r\n            : acc\r\n        )\r\n      );\r\n      setModalVisible(false);\r\n      setNotification({ message: 'Comment saved successfully!', type: 'success' });\r\n      setTimeout(() => setNotification({ message: '', type: '' }), 3000); // Clear after 3 seconds\r\n    } catch (e) {\r\n      setNotification({ message: 'Error saving comment: ' + e.message, type: 'error' });\r\n    }\r\n  };\r\n\r\n  // Handle filter checkbox change\r\n  const handleFilterChange = (column, value, isChecked) => {\r\n    setColumnFilters((prev) => {\r\n      const newSet = new Set(prev[column]);\r\n      if (isChecked) {\r\n        newSet.add(value);\r\n      } else {\r\n        newSet.delete(value);\r\n      }\r\n      return { ...prev, [column]: newSet };\r\n    });\r\n  };\r\n\r\n  // Toggle filter dropdown visibility\r\n  const toggleFilterDropdown = (column) => {\r\n    setVisibleFilterDropdown(visibleFilterDropdown === column ? null : column);\r\n  };\r\n\r\n  // Clear all filters for a specific column\r\n  const clearFilter = (column) => {\r\n    setColumnFilters((prev) => ({ ...prev, [column]: new Set() }));\r\n  };\r\n\r\n  // Dynamic breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    ...(activeSbu ? [{ name: `${activeSbu} SBU Level`, page: 'sbu', state: { month: activeMonth, year: activeYear, monthName: activeMonthName, sbu: activeSbu } }] : []),\r\n    { name: 'Account Level', page: 'accounts' },\r\n  ].filter(Boolean);\r\n\r\n  const getColumnValue = (acc, columnKey) => {\r\n    if (columnKey === 'totalRevenue' || columnKey === 'forecastNetRevenue' || columnKey === 'difference') {\r\n      return formatCurrency(acc[columnKey]);\r\n    }\r\n    return acc[columnKey];\r\n  };\r\n\r\n  // Common JSX for filterable table headers\r\n  const renderFilterableHeader = (columnKey, headerText) => (\r\n    <th style={{ position: 'relative', paddingRight: '30px' }}>\r\n      {headerText}\r\n      <button\r\n        className=\"btn btn-sm text-white\" \r\n        onClick={() => toggleFilterDropdown(columnKey)}\r\n        style={{\r\n          position: 'absolute',\r\n          right: '5px',\r\n          top: '50%',\r\n          transform: 'translateY(-50%)',\r\n          fontSize: '1rem', // Make the arrow larger\r\n          padding: '0 5px', // Add some padding\r\n          backgroundColor: 'rgba(255, 255, 255, 0.2)', // Slight background for contrast\r\n          borderRadius: '0.25rem', // Rounded corners\r\n          border: 'none', // Remove border if not desired\r\n        }}\r\n        title={`Filter by ${headerText}`}\r\n      >\r\n        ▼ {/* This can be replaced with an actual filter icon, e.g., Font Awesome <i className=\"fa fa-filter\"></i> */}\r\n      </button>\r\n      {visibleFilterDropdown === columnKey && (\r\n        <div\r\n          className=\"bg-white shadow rounded p-2\"\r\n          style={{\r\n            position: 'absolute',\r\n            zIndex: 1000,\r\n            top: '100%',\r\n            left: '0',\r\n            maxHeight: '200px',\r\n            overflowY: 'auto',\r\n            width: '200px',\r\n            border: '1px solid #ddd',\r\n          }}\r\n          onClick={(e) => e.stopPropagation()} // Prevent closing when clicking inside\r\n        >\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <span className=\"fw-bold\">Filter {headerText}</span>\r\n            <button className=\"btn btn-sm btn-outline-danger\" onClick={() => clearFilter(columnKey)}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n          {filterOptions[columnKey] && filterOptions[columnKey].length > 0 ? (\r\n            filterOptions[columnKey].map((option) => (\r\n              <div key={option} className=\"form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  id={`filter-${columnKey}-${option}`}\r\n                  onChange={(e) => handleFilterChange(columnKey, option, e.target.checked)}\r\n                  checked={columnFilters[columnKey].has(option)}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor={`filter-${columnKey}-${option}`}>\r\n                  {option}\r\n                </label>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-muted\">No options available</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </th>\r\n  );\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\">\r\n          <h2 className=\"mb-3 mb-md-0 fw-semibold text-dark\">\r\n            🏢 Account Level Overview – {activeSbu}\r\n            {activeMonthName && activeYear && (\r\n              <span className=\"ms-2 text-primary\">\r\n                ({activeMonthName} {activeYear})\r\n              </span>\r\n            )}\r\n          </h2>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleDownloadExcel}\r\n            disabled={loading || !!error}\r\n            title=\"Download current table view as Excel\"\r\n            className=\"btn\"\r\n            style={{ backgroundColor: '#ffffff', border: '1px solid #198754', color: '#198754' }}\r\n          >\r\n            Download\r\n          </button>\r\n        </div>\r\n\r\n        {notification.message && (\r\n          <div className={`alert alert-${notification.type === 'error' ? 'danger' : 'success'} mb-3`} role=\"alert\">\r\n            {notification.message}\r\n          </div>\r\n        )}\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\" />\r\n            <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')}\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              ref={tableRef}\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  {renderFilterableHeader('accountId', 'Account ID')}\r\n                  {renderFilterableHeader('accountName', 'Account Name')}\r\n                  {renderFilterableHeader('totalProjects', 'Total Projects')}\r\n                  {renderFilterableHeader('totalRevenue', 'Total Revenue')}\r\n                  {renderFilterableHeader('forecastNetRevenue', 'Forecast Revenue')}\r\n                  {renderFilterableHeader('difference', 'Revenue Difference')}\r\n                  <th className=\"text-center\">Comment</th>\r\n                  <th className=\"text-center\">View</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {accounts.map((acc) => (\r\n                  <tr key={acc.accountId}>\r\n                    <td>{acc.accountId}</td>\r\n                    <td>{acc.accountName}</td>\r\n                    <td>{acc.totalProjects}</td>\r\n                    <td>{formatCurrency(acc.totalRevenue)}</td>\r\n                    <td>{formatCurrency(acc.forecastNetRevenue)}</td>\r\n                    <td>{formatCurrency(acc.difference)}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-secondary\"\r\n                        onClick={() => openCommentModal(acc.accountId)}\r\n                      >\r\n                        💬\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                        onClick={() =>\r\n                          navigate(`/accounts/${acc.accountId}/project-types`, {\r\n                            state: {\r\n                              accId: acc.accountId,\r\n                              month: activeMonth,\r\n                              year: activeYear,\r\n                              monthName: activeMonthName,\r\n                              sbu: activeSbu,\r\n                            },\r\n                          })\r\n                        }\r\n                        title=\"View Project Types\"\r\n                      >\r\n                        🔍\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {modalVisible && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: '#00000066' }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">\r\n                  💬 Comment for {currentAccountId}\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModalVisible(false)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  value={commentInput}\r\n                  onChange={(e) => setCommentInput(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setModalVisible(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={saveComment}\r\n                  disabled={!commentInput.trim()}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountLevel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAO,gBAAgB;AACvB,OAAO,qDAAqD;AAC5D,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,UAAU,MAAM,4BAA4B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAIC,WAAW,IAAK;EACpC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvBD,IAAI,CAACE,QAAQ,CAACH,WAAW,GAAG,CAAC,CAAC;EAC9B,OAAOC,IAAI,CAACG,cAAc,CAAC,OAAO,EAAE;IAAEC,KAAK,EAAE;EAAO,CAAC,CAAC;AACxD,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGrB,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACA,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,QAAQ,CAAC;IAAEoC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC,CAAC,CAAC;;EAE7E;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC0C,eAAe,EAAEC,kBAAkB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC4C,SAAS,EAAEC,YAAY,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACA,MAAM,CAAC8C,aAAa,EAAEC,gBAAgB,CAAC,GAAG/C,QAAQ,CAAC;IACjDgD,SAAS,EAAE,IAAIC,GAAG,CAAC,CAAC;IACpBC,WAAW,EAAE,IAAID,GAAG,CAAC,CAAC;IACtBE,aAAa,EAAE,IAAIF,GAAG,CAAC,CAAC;IACxBG,YAAY,EAAE,IAAIH,GAAG,CAAC,CAAC;IACvBI,kBAAkB,EAAE,IAAIJ,GAAG,CAAC,CAAC;IAC7BK,UAAU,EAAE,IAAIL,GAAG,CAAC;EACtB,CAAC,CAAC;EACF,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGxD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACyD,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1E,MAAM2D,WAAW,GAAG,uBAAuB;;EAE3C;EACA,MAAM;IACJC,MAAM;IACNC,QAAQ;IACRC,qBAAqB;IACrBC;EACF,CAAC,GAAG1D,UAAU,CAAC2D,gBAAgB;EAE/B,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAG,CAAC,KAC/BA,KAAK,CAACrD,cAAc,CAAC+C,MAAM,EAAE;IAC3BO,KAAK,EAAE,UAAU;IACjBN,QAAQ;IACRC,qBAAqB;IACrBC;EACF,CAAC,CAAC;;EAEJ;EACAhE,SAAS,CAAC,MAAM;IACd,MAAMqE,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAC3CF,IAAI,CAACG,IAAI,GACP,gFAAgF;IAClFH,IAAI,CAACI,GAAG,GAAG,YAAY;IACvBH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BC,QAAQ,CAACM,IAAI,CAACR,KAAK,CAACS,UAAU,GAAG,uBAAuB;EAC1D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7E,SAAS,CAAC,MAAM;IAAA,IAAA8E,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;IACd,MAAMC,gBAAgB,GAAG,MAAAA,CAAOlE,KAAK,EAAEmE,IAAI,EAAEC,cAAc,EAAEC,GAAG,KAAK;MACnEpD,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACdZ,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACjBmC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtBT,gBAAgB,CAAC;QAAE;QACjBC,SAAS,EAAE,IAAIC,GAAG,CAAC,CAAC;QACpBC,WAAW,EAAE,IAAID,GAAG,CAAC,CAAC;QACtBE,aAAa,EAAE,IAAIF,GAAG,CAAC,CAAC;QACxBG,YAAY,EAAE,IAAIH,GAAG,CAAC,CAAC;QACvBI,kBAAkB,EAAE,IAAIJ,GAAG,CAAC,CAAC;QAC7BK,UAAU,EAAE,IAAIL,GAAG,CAAC;MACtB,CAAC,CAAC;MAEF,IAAI;QACF,MAAMmC,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAG1B,WAAW,cAAc,EAAE;UACrD2B,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CZ,IAAI,EAAEa,IAAI,CAACC,SAAS,CAAC;YAAE3E,KAAK;YAAEmE,IAAI;YAAEC,cAAc;YAAEC;UAAI,CAAC;QAC3D,CAAC,CAAC;QACF,IAAI,CAACC,IAAI,CAACM,EAAE,EAAE;UACZ,MAAMC,GAAG,GAAG,MAAMP,IAAI,CAACQ,IAAI,CAAC,CAAC;UAC7B,MAAM,IAAIC,KAAK,CAACF,GAAG,IAAIP,IAAI,CAACU,UAAU,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMX,IAAI,CAACY,IAAI,CAAC,CAAC;QAC9B,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC,CAACK,MAAM,CAACC,OAAO,CAAC;QAChEhF,WAAW,CAAC4E,IAAI,CAAC;;QAEjB;QACA,MAAMK,OAAO,GAAG,CAAC,CAAC;QAClBL,IAAI,CAACM,OAAO,CAAEC,GAAG,IAAK;UACpB,IAAIA,GAAG,CAACC,cAAc,EAAE;YACtBH,OAAO,CAACE,GAAG,CAACxD,SAAS,CAAC,GAAGwD,GAAG,CAACC,cAAc;UAC7C;QACF,CAAC,CAAC;QACFlF,cAAc,CAAC+E,OAAO,CAAC;MACzB,CAAC,CAAC,OAAOI,CAAC,EAAE;QACVC,OAAO,CAAC3E,KAAK,CAAC0E,CAAC,CAAC;QAChBzE,QAAQ,CAAC,4BAA4ByE,CAAC,CAACtE,OAAO,EAAE,CAAC;QACjDD,eAAe,CAAC;UAAEC,OAAO,EAAE,4BAA4BsE,CAAC,CAACtE,OAAO,EAAE;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MACtF,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;;IAED;IACA,MAAM6E,EAAE,GAAG,IAAIC,eAAe,CAAC3F,QAAQ,CAAC4F,MAAM,CAAC;IAC/C,IAAIC,CAAC,IAAAlC,eAAA,GAAG3D,QAAQ,CAAC8F,KAAK,cAAAnC,eAAA,uBAAdA,eAAA,CAAgB/D,KAAK;IAC7B,IAAImG,CAAC,IAAAnC,gBAAA,GAAG5D,QAAQ,CAAC8F,KAAK,cAAAlC,gBAAA,uBAAdA,gBAAA,CAAgBG,IAAI;IAC5B,IAAIiC,CAAC,IAAAnC,gBAAA,GAAG7D,QAAQ,CAAC8F,KAAK,cAAAjC,gBAAA,uBAAdA,gBAAA,CAAgBI,GAAG;IAE3B,IAAI,CAAC4B,CAAC,EAAE;MACN,MAAMI,EAAE,GAAGC,cAAc,CAACC,OAAO,CAAC,yBAAyB,CAAC;MAC5D,MAAMC,EAAE,GAAGV,EAAE,CAACW,GAAG,CAAC,OAAO,CAAC;MAC1BR,CAAC,GAAGI,EAAE,aAAFA,EAAE,cAAFA,EAAE,GAAIG,EAAE;IACd;IACA,IAAI,CAACL,CAAC,EAAE;MACN,MAAMO,EAAE,GAAGJ,cAAc,CAACC,OAAO,CAAC,wBAAwB,CAAC;MAC3D,MAAMI,EAAE,GAAGb,EAAE,CAACW,GAAG,CAAC,MAAM,CAAC;MACzBN,CAAC,GAAGO,EAAE,aAAFA,EAAE,cAAFA,EAAE,GAAIC,EAAE;IACd;IACA,IAAI,CAACP,CAAC,EAAE;MACN,MAAMQ,EAAE,GAAGN,cAAc,CAACC,OAAO,CAAC,uBAAuB,CAAC;MAC1D,MAAMM,GAAG,GAAGf,EAAE,CAACW,GAAG,CAAC,KAAK,CAAC;MACzBL,CAAC,GAAGQ,EAAE,aAAFA,EAAE,cAAFA,EAAE,GAAIC,GAAG;IACf;;IAEA;IACAZ,CAAC,GAAGA,CAAC,GAAGa,QAAQ,CAACb,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;IAC9BE,CAAC,GAAGA,CAAC,GAAGW,QAAQ,CAACX,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;IAE9B,IAAIF,CAAC,IAAIE,CAAC,IAAIC,CAAC,EAAE;MACf,MAAMW,EAAE,GAAGrH,YAAY,CAACuG,CAAC,CAAC;MAC1B;MACA,IACEA,CAAC,KAAKzE,WAAW,IACjB2E,CAAC,KAAKzE,UAAU,IAChB0E,CAAC,KAAKtE,SAAS,IACfxB,QAAQ,CAAC0G,MAAM,KAAK,CAAC,CAAC;MAAA,EACtB;QACAvF,cAAc,CAACwE,CAAC,CAAC;QACjBtE,aAAa,CAACwE,CAAC,CAAC;QAChBtE,kBAAkB,CAACkF,EAAE,CAAC;QACtBhF,YAAY,CAACqE,CAAC,CAAC;QAEfE,cAAc,CAACW,OAAO,CAAC,yBAAyB,EAAEhB,CAAC,CAACiB,QAAQ,CAAC,CAAC,CAAC;QAC/DZ,cAAc,CAACW,OAAO,CAAC,wBAAwB,EAAEd,CAAC,CAACe,QAAQ,CAAC,CAAC,CAAC;QAC9DZ,cAAc,CAACW,OAAO,CAAC,uBAAuB,EAAEb,CAAC,CAAC;QAElDlC,gBAAgB,CAAC+B,CAAC,EAAEE,CAAC,EAAEY,EAAE,EAAEX,CAAC,CAAC;MAC/B;IACF,CAAC,MAAM;MACLjF,QAAQ,CACN,yEACF,CAAC;MACDF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACb,QAAQ,CAAC8F,KAAK,EAAE9F,QAAQ,CAAC4F,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEvC;EACA/G,SAAS,CAAC,MAAM;IACd,IAAIqB,QAAQ,CAAC0G,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMG,OAAO,GAAG,CAAC,CAAC;MAClB,MAAMC,OAAO,GAAG,CACd,WAAW,EACX,aAAa,EACb,eAAe,EACf,cAAc,EACd,oBAAoB,EACpB,YAAY,CACb;MAEDA,OAAO,CAAC3B,OAAO,CAAE4B,GAAG,IAAK;QACvB;QACA,IAAIA,GAAG,KAAK,cAAc,IAAIA,GAAG,KAAK,oBAAoB,IAAIA,GAAG,KAAK,YAAY,EAAE;UAClFF,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC,GAAG,IAAIlF,GAAG,CAAC7B,QAAQ,CAACgH,GAAG,CAAE5B,GAAG,IAAKvC,cAAc,CAACuC,GAAG,CAAC2B,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;QACrF,CAAC,MAAM;UACLJ,OAAO,CAACE,GAAG,CAAC,GAAG,CAAC,GAAG,IAAIlF,GAAG,CAAC7B,QAAQ,CAACgH,GAAG,CAAE5B,GAAG,IAAKA,GAAG,CAAC2B,GAAG,CAAC,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;QACrE;MACF,CAAC,CAAC;MACF7E,gBAAgB,CAACyE,OAAO,CAAC;IAC3B;EACF,CAAC,EAAE,CAAC7G,QAAQ,EAAE6C,cAAc,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACAlE,SAAS,CAAC,MAAM;IACd,IAAIuI,EAAE;IACN,IAAI,CAACxG,OAAO,IAAIX,QAAQ,CAACoH,OAAO,EAAE;MAChC,MAAMC,IAAI,GAAGrI,CAAC,CAACgB,QAAQ,CAACoH,OAAO,CAAC;MAChC,IAAIpI,CAAC,CAACsI,EAAE,CAACC,SAAS,CAACC,WAAW,CAACH,IAAI,CAAC,EAAE;QACpCA,IAAI,CAACE,SAAS,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;QAC1BzI,CAAC,CAACsI,EAAE,CAACI,SAAS,CAACC,GAAG,CAAChC,MAAM,CAACiC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnC;;MAEA;MACA,MAAMC,YAAY,GAAG,SAAAA,CAAUC,QAAQ,EAAElD,IAAI,EAAEmD,SAAS,EAAE;QACxD,MAAMC,OAAO,GAAG/H,QAAQ,CAAC8H,SAAS,CAAC,CAAC,CAAC;;QAErC;QACA,KAAK,MAAME,MAAM,IAAItG,aAAa,EAAE;UAClC,MAAMuG,cAAc,GAAGvG,aAAa,CAACsG,MAAM,CAAC;UAC5C,IAAIC,cAAc,CAACC,IAAI,GAAG,CAAC,EAAE;YAC3B,IAAIC,SAAS,GAAGJ,OAAO,CAACC,MAAM,CAAC;YAC/B;YACA,IAAIA,MAAM,KAAK,cAAc,IAAIA,MAAM,KAAK,oBAAoB,IAAIA,MAAM,KAAK,YAAY,EAAE;cAC3FG,SAAS,GAAGtF,cAAc,CAACsF,SAAS,CAAC;YACvC;YACA,IAAI,CAACF,cAAc,CAACG,GAAG,CAACD,SAAS,CAAC,EAAE;cAClC,OAAO,KAAK,CAAC,CAAC;YAChB;UACF;QACF;QACA,OAAO,IAAI,CAAC,CAAC;MACf,CAAC;MAEDpJ,CAAC,CAACsI,EAAE,CAACI,SAAS,CAACC,GAAG,CAAChC,MAAM,CAAC2C,IAAI,CAACT,YAAY,CAAC;MAE5CV,EAAE,GAAGE,IAAI,CAACE,SAAS,CAAC;QAClBgB,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,KAAK;QAAE;QAClBC,QAAQ,EAAE,KAAK;QAAE;QACjBC,IAAI,EAAE,IAAI;QACVC,SAAS,EAAE;MACb,CAAC,CAAC;MAEFxB,EAAE,CAACyB,IAAI,CAAC,CAAC,CAAC,CAAC;IACb;IAEA,OAAO,MAAM;MACX,IAAI5I,QAAQ,CAACoH,OAAO,IAAIpI,CAAC,CAACsI,EAAE,CAACC,SAAS,CAACC,WAAW,CAACxI,CAAC,CAACgB,QAAQ,CAACoH,OAAO,CAAC,CAAC,EAAE;QACvEpI,CAAC,CAACgB,QAAQ,CAACoH,OAAO,CAAC,CAACG,SAAS,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;QACzCzI,CAAC,CAACsI,EAAE,CAACI,SAAS,CAACC,GAAG,CAAChC,MAAM,CAACiC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnC;IACF,CAAC;EACH,CAAC,EAAE,CAACjH,OAAO,EAAEV,QAAQ,EAAE0B,aAAa,EAAEmB,cAAc,CAAC,CAAC,CAAC,CAAC;;EAExD;EACA,MAAM+F,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMxB,IAAI,GAAGrI,CAAC,CAACgB,QAAQ,CAACoH,OAAO,CAAC;IAChC,IAAIhD,OAAO,GAAG,EAAE;IAChB,IAAI0E,IAAI,GAAG,EAAE;IAEb,IAAI9J,CAAC,CAACsI,EAAE,CAACC,SAAS,CAACC,WAAW,CAACH,IAAI,CAAC,EAAE;MACpC,MAAMF,EAAE,GAAGE,IAAI,CAACE,SAAS,CAAC,CAAC;;MAE3B;MACAnD,OAAO,GAAGiD,IAAI,CACX0B,IAAI,CAAC,UAAU,CAAC,CAChBC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAAA,CACZ/B,GAAG,CAAC,YAAY;QACf,OAAOjI,CAAC,CAAC,IAAI,CAAC,CAACyF,IAAI,CAAC,CAAC,CAACwE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;MACzD,CAAC,CAAC,CACD7C,GAAG,CAAC,CAAC;;MAER;MACA;MACA;MACA,MAAM+C,KAAK,GAAGhC,EAAE,CAAC2B,IAAI,CAAC;QAAEnD,MAAM,EAAE,SAAS;QAAEV,MAAM,EAAE;MAAU,CAAC,CAAC,CAACkE,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACjFN,IAAI,GAAGK,KAAK,CAAClC,GAAG,CAAEoC,EAAE,IAClBtE,KAAK,CAACuE,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC,CACjBP,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAAA,CACZ/B,GAAG,CAAEuC,EAAE,IAAKA,EAAE,CAACC,WAAW,CAACR,IAAI,CAAC,CAAC,CACtC,CAAC;IACH,CAAC,MAAM;MACL;MACA7E,OAAO,GAAG,CACR,YAAY,EACZ,cAAc,EACd,gBAAgB,EAChB,eAAe,EACf,kBAAkB,EAClB,oBAAoB,CACrB;MACD0E,IAAI,GAAG7I,QAAQ,CAACgH,GAAG,CAAE5B,GAAG;QAAA,IAAAqE,cAAA,EAAAC,gBAAA,EAAAC,kBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,eAAA;QAAA,OAAK,CAC3BC,MAAM,EAAAN,cAAA,GAACrE,GAAG,CAACxD,SAAS,cAAA6H,cAAA,cAAAA,cAAA,GAAI,EAAE,CAAC,EAC3BM,MAAM,EAAAL,gBAAA,GAACtE,GAAG,CAACtD,WAAW,cAAA4H,gBAAA,cAAAA,gBAAA,GAAI,EAAE,CAAC,EAC7BK,MAAM,EAAAJ,kBAAA,GAACvE,GAAG,CAACrD,aAAa,cAAA4H,kBAAA,cAAAA,kBAAA,GAAI,EAAE,CAAC,EAC/B9G,cAAc,EAAA+G,iBAAA,GAACxE,GAAG,CAACpD,YAAY,cAAA4H,iBAAA,cAAAA,iBAAA,GAAI,CAAC,CAAC,EACrC/G,cAAc,EAAAgH,qBAAA,GAACzE,GAAG,CAACnD,kBAAkB,cAAA4H,qBAAA,cAAAA,qBAAA,GAAI,CAAC,CAAC,EAC3ChH,cAAc,EAAAiH,eAAA,GAAC1E,GAAG,CAAClD,UAAU,cAAA4H,eAAA,cAAAA,eAAA,GAAI,CAAC,CAAC,CACpC;MAAA,EAAC;IACJ;;IAEA;IACA,MAAME,SAAS,GACb,MAAM,GAAG7F,OAAO,CAAC6C,GAAG,CAAEiD,CAAC,IAAK,OAAOA,CAAC,CAAChB,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAACiB,IAAI,CAAC,EAAE,CAAC,GAAG,OAAO;IAC9G,MAAMC,SAAS,GAAGtB,IAAI,CACnB7B,GAAG,CACDoD,CAAC,IACA,MAAM,GACNA,CAAC,CACEpD,GAAG,CAAEqD,CAAC,IAAK,OAAON,MAAM,CAACM,CAAC,CAAC,CAACpB,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAChFiB,IAAI,CAAC,EAAE,CAAC,GACX,OACJ,CAAC,CACAA,IAAI,CAAC,EAAE,CAAC;IAEX,MAAMI,IAAI,GACR,0DAA0D,GAC1D,mDAAmD,GACnD,0CAA0C,GAC1C,oEAAoE,GACpE,kIAAkI,GAClI,iEAAiE,GACjE,kCAAkCN,SAAS,kBAAkBG,SAAS,gCAAgC;IAExG,MAAMI,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,IAAI,CAAC,EAAE;MAAErJ,IAAI,EAAE;IAA0C,CAAC,CAAC;IAClF,MAAMwJ,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;IACrC,MAAMK,CAAC,GAAG3H,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrC,MAAM2H,QAAQ,GAAG,gBAAgBrJ,SAAS,IAAI,KAAK,IAAIF,eAAe,IAAI,EAAE,GAAGF,UAAU,IAAI,EAAE,MAAM;IACrGwJ,CAAC,CAACzH,IAAI,GAAGsH,GAAG;IACZG,CAAC,CAACE,QAAQ,GAAGD,QAAQ,CAAC5B,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IAC1ChG,QAAQ,CAACM,IAAI,CAACD,WAAW,CAACsH,CAAC,CAAC;IAC5BA,CAAC,CAACG,KAAK,CAAC,CAAC;IACTH,CAAC,CAACI,MAAM,CAAC,CAAC;IACVN,GAAG,CAACO,eAAe,CAACR,GAAG,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClC5K,mBAAmB,CAAC4K,KAAK,CAAC;IAC1B1K,eAAe,CAACP,WAAW,CAACiL,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC9K,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAM+K,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG;QACVF,KAAK,EAAE7K,gBAAgB;QACvBZ,KAAK,EAAEwB,WAAW;QAClB2C,IAAI,EAAEzC,UAAU;QAChBkK,OAAO,EAAE9K;MACX,CAAC;MACD,MAAMwD,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAG1B,WAAW,sBAAsB,EAAE;QAC7D2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CZ,IAAI,EAAEa,IAAI,CAACC,SAAS,CAACgH,GAAG;MAC1B,CAAC,CAAC;MACF,IAAI,CAACrH,IAAI,CAACM,EAAE,EAAE;QACZ,MAAM,IAAIG,KAAK,CAAC,MAAMT,IAAI,CAACQ,IAAI,CAAC,CAAC,CAAC;MACpC;MACA;MACArE,cAAc,CAAEwF,CAAC,KAAM;QAAE,GAAGA,CAAC;QAAE,CAACrF,gBAAgB,GAAGE;MAAa,CAAC,CAAC,CAAC;MACnEP,WAAW,CAAE4E,IAAI,IACfA,IAAI,CAACmC,GAAG,CAAE5B,GAAG,IACXA,GAAG,CAACxD,SAAS,KAAKtB,gBAAgB,GAC9B;QAAE,GAAG8E,GAAG;QAAEC,cAAc,EAAE7E;MAAa,CAAC,GACxC4E,GACN,CACF,CAAC;MACD/E,eAAe,CAAC,KAAK,CAAC;MACtBU,eAAe,CAAC;QAAEC,OAAO,EAAE,6BAA6B;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;MAC5EsK,UAAU,CAAC,MAAMxK,eAAe,CAAC;QAAEC,OAAO,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOqE,CAAC,EAAE;MACVvE,eAAe,CAAC;QAAEC,OAAO,EAAE,wBAAwB,GAAGsE,CAAC,CAACtE,OAAO;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;IACnF;EACF,CAAC;;EAED;EACA,MAAMuK,kBAAkB,GAAGA,CAACC,MAAM,EAAE3I,KAAK,EAAE4I,SAAS,KAAK;IACvD/J,gBAAgB,CAAEgK,IAAI,IAAK;MACzB,MAAMC,MAAM,GAAG,IAAI/J,GAAG,CAAC8J,IAAI,CAACF,MAAM,CAAC,CAAC;MACpC,IAAIC,SAAS,EAAE;QACbE,MAAM,CAACC,GAAG,CAAC/I,KAAK,CAAC;MACnB,CAAC,MAAM;QACL8I,MAAM,CAACE,MAAM,CAAChJ,KAAK,CAAC;MACtB;MACA,OAAO;QAAE,GAAG6I,IAAI;QAAE,CAACF,MAAM,GAAGG;MAAO,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMG,oBAAoB,GAAIN,MAAM,IAAK;IACvCnJ,wBAAwB,CAACD,qBAAqB,KAAKoJ,MAAM,GAAG,IAAI,GAAGA,MAAM,CAAC;EAC5E,CAAC;;EAED;EACA,MAAMO,WAAW,GAAIP,MAAM,IAAK;IAC9B9J,gBAAgB,CAAEgK,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,MAAM,GAAG,IAAI5J,GAAG,CAAC;IAAE,CAAC,CAAC,CAAC;EAChE,CAAC;;EAED;EACA,MAAMoK,cAAc,GAAG,CACrB;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,+BAA+B;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzD,IAAI3K,SAAS,GAAG,CAAC;IAAE0K,IAAI,EAAE,GAAG1K,SAAS,YAAY;IAAE2K,IAAI,EAAE,KAAK;IAAEvG,KAAK,EAAE;MAAElG,KAAK,EAAEwB,WAAW;MAAE2C,IAAI,EAAEzC,UAAU;MAAEgL,SAAS,EAAE9K,eAAe;MAAEyC,GAAG,EAAEvC;IAAU;EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EACpK;IAAE0K,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAW,CAAC,CAC5C,CAACnH,MAAM,CAACC,OAAO,CAAC;EAEjB,MAAMoH,cAAc,GAAGA,CAACjH,GAAG,EAAEkH,SAAS,KAAK;IACzC,IAAIA,SAAS,KAAK,cAAc,IAAIA,SAAS,KAAK,oBAAoB,IAAIA,SAAS,KAAK,YAAY,EAAE;MACpG,OAAOzJ,cAAc,CAACuC,GAAG,CAACkH,SAAS,CAAC,CAAC;IACvC;IACA,OAAOlH,GAAG,CAACkH,SAAS,CAAC;EACvB,CAAC;;EAED;EACA,MAAMC,sBAAsB,GAAGA,CAACD,SAAS,EAAEE,UAAU,kBACnDrN,OAAA;IAAI4D,KAAK,EAAE;MAAE0J,QAAQ,EAAE,UAAU;MAAEC,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,GACvDH,UAAU,eACXrN,OAAA;MACEyN,SAAS,EAAC,uBAAuB;MACjCC,OAAO,EAAEA,CAAA,KAAMd,oBAAoB,CAACO,SAAS,CAAE;MAC/CvJ,KAAK,EAAE;QACL0J,QAAQ,EAAE,UAAU;QACpBK,KAAK,EAAE,KAAK;QACZC,GAAG,EAAE,KAAK;QACVC,SAAS,EAAE,kBAAkB;QAC7BC,QAAQ,EAAE,MAAM;QAAE;QAClBC,OAAO,EAAE,OAAO;QAAE;QAClBC,eAAe,EAAE,0BAA0B;QAAE;QAC7CC,YAAY,EAAE,SAAS;QAAE;QACzBC,MAAM,EAAE,MAAM,CAAE;MAClB,CAAE;MACFC,KAAK,EAAE,aAAad,UAAU,EAAG;MAAAG,QAAA,EAClC;IACG;MAAA9B,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EACRpL,qBAAqB,KAAKiK,SAAS,iBAClCnN,OAAA;MACEyN,SAAS,EAAC,6BAA6B;MACvC7J,KAAK,EAAE;QACL0J,QAAQ,EAAE,UAAU;QACpBiB,MAAM,EAAE,IAAI;QACZX,GAAG,EAAE,MAAM;QACXY,IAAI,EAAE,GAAG;QACTC,SAAS,EAAE,OAAO;QAClBC,SAAS,EAAE,MAAM;QACjBC,KAAK,EAAE,OAAO;QACdT,MAAM,EAAE;MACV,CAAE;MACFR,OAAO,EAAGvH,CAAC,IAAKA,CAAC,CAACyI,eAAe,CAAC,CAAE,CAAC;MAAA;MAAApB,QAAA,gBAErCxN,OAAA;QAAKyN,SAAS,EAAC,wDAAwD;QAAAD,QAAA,gBACrExN,OAAA;UAAMyN,SAAS,EAAC,SAAS;UAAAD,QAAA,GAAC,SAAO,EAACH,UAAU;QAAA;UAAA3B,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpDtO,OAAA;UAAQyN,SAAS,EAAC,+BAA+B;UAACC,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAACM,SAAS,CAAE;UAAAK,QAAA,EAAC;QAEzF;UAAA9B,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLtL,aAAa,CAACmK,SAAS,CAAC,IAAInK,aAAa,CAACmK,SAAS,CAAC,CAAC5F,MAAM,GAAG,CAAC,GAC9DvE,aAAa,CAACmK,SAAS,CAAC,CAACtF,GAAG,CAAEgH,MAAM,iBAClC7O,OAAA;QAAkByN,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACtCxN,OAAA;UACE8B,IAAI,EAAC,UAAU;UACf2L,SAAS,EAAC,kBAAkB;UAC5BqB,EAAE,EAAE,UAAU3B,SAAS,IAAI0B,MAAM,EAAG;UACpCE,QAAQ,EAAG5I,CAAC,IAAKkG,kBAAkB,CAACc,SAAS,EAAE0B,MAAM,EAAE1I,CAAC,CAAC6I,MAAM,CAACC,OAAO,CAAE;UACzEA,OAAO,EAAE1M,aAAa,CAAC4K,SAAS,CAAC,CAAClE,GAAG,CAAC4F,MAAM;QAAE;UAAAnD,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eACFtO,OAAA;UAAOyN,SAAS,EAAC,kBAAkB;UAACyB,OAAO,EAAE,UAAU/B,SAAS,IAAI0B,MAAM,EAAG;UAAArB,QAAA,EAC1EqB;QAAM;UAAAnD,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GAVAO,MAAM;QAAAnD,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWX,CACN,CAAC,gBAEFtO,OAAA;QAAGyN,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAoB;QAAA9B,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAClD;IAAA;MAAA5C,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAA5C,QAAA,EAAA0C,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CACL;EAGD,oBACEtO,OAAA;IACEyN,SAAS,EAAC,4DAA4D;IACtE7J,KAAK,EAAE;MACLuL,UAAU,EAAE,oDAAoD;MAChE9K,UAAU,EAAE;IACd,CAAE;IAAAmJ,QAAA,gBAEFxN,OAAA;MACEyN,SAAS,EAAC,8BAA8B;MACxC7J,KAAK,EAAE;QACLwL,QAAQ,EAAE,QAAQ;QAClBpB,eAAe,EAAE,WAAW;QAC5BC,YAAY,EAAE;MAChB,CAAE;MAAAT,QAAA,gBAEFxN,OAAA,CAACH,WAAW;QAACwP,IAAI,EAAEvC;MAAe;QAAApB,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAErCtO,OAAA;QAAKyN,SAAS,EAAC,mFAAmF;QAAAD,QAAA,gBAChGxN,OAAA;UAAIyN,SAAS,EAAC,oCAAoC;UAAAD,QAAA,GAAC,6CACrB,EAACnL,SAAS,EACrCF,eAAe,IAAIF,UAAU,iBAC5BjC,OAAA;YAAMyN,SAAS,EAAC,mBAAmB;YAAAD,QAAA,GAAC,GACjC,EAACrL,eAAe,EAAC,GAAC,EAACF,UAAU,EAAC,GACjC;UAAA;YAAAyJ,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACP;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACLtO,OAAA;UACE8B,IAAI,EAAC,QAAQ;UACb4L,OAAO,EAAEjE,mBAAoB;UAC7B6F,QAAQ,EAAE/N,OAAO,IAAI,CAAC,CAACE,KAAM;UAC7B0M,KAAK,EAAC,sCAAsC;UAC5CV,SAAS,EAAC,KAAK;UACf7J,KAAK,EAAE;YAAEoK,eAAe,EAAE,SAAS;YAAEE,MAAM,EAAE,mBAAmB;YAAEqB,KAAK,EAAE;UAAU,CAAE;UAAA/B,QAAA,EACtF;QAED;UAAA9B,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAEL3M,YAAY,CAACE,OAAO,iBACnB7B,OAAA;QAAKyN,SAAS,EAAE,eAAe9L,YAAY,CAACG,IAAI,KAAK,OAAO,GAAG,QAAQ,GAAG,SAAS,OAAQ;QAAC0N,IAAI,EAAC,OAAO;QAAAhC,QAAA,EACrG7L,YAAY,CAACE;MAAO;QAAA6J,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CACN,EAEA/M,OAAO,gBACNvB,OAAA;QAAKyN,SAAS,EAAC,kDAAkD;QAAAD,QAAA,gBAC/DxN,OAAA;UAAKyN,SAAS,EAAC,6BAA6B;UAAC+B,IAAI,EAAC;QAAQ;UAAA9D,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7DtO,OAAA;UAAGyN,SAAS,EAAC,mBAAmB;UAAAD,QAAA,EAAC;QAAuB;UAAA9B,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,GACJ7M,KAAK,gBACPzB,OAAA;QAAKyN,SAAS,EAAC,0EAA0E;QAAAD,QAAA,gBACvFxN,OAAA;UAAGyN,SAAS,EAAC,MAAM;UAAAD,QAAA,GAAC,SAAO,EAAC/L,KAAK;QAAA;UAAAiK,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCtO,OAAA;UACEyN,SAAS,EAAC,sBAAsB;UAChCC,OAAO,EAAEA,CAAA,KAAMhN,QAAQ,CAAC,SAAS,CAAE;UAAA8M,QAAA,EACpC;QAED;UAAA9B,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,gBAENtO,OAAA;QAAKyN,SAAS,EAAC,0BAA0B;QAAAD,QAAA,eACvCxN,OAAA;UACEyP,GAAG,EAAE7O,QAAS;UACd6M,SAAS,EAAC,4DAA4D;UACtE7J,KAAK,EAAE;YAAE+K,KAAK,EAAE;UAAO,CAAE;UAAAnB,QAAA,gBAEzBxN,OAAA;YACEyN,SAAS,EAAC,YAAY;YACtB7J,KAAK,EAAE;cACLuL,UAAU,EAAE;YACd,CAAE;YAAA3B,QAAA,eAEFxN,OAAA;cAAAwN,QAAA,GACGJ,sBAAsB,CAAC,WAAW,EAAE,YAAY,CAAC,EACjDA,sBAAsB,CAAC,aAAa,EAAE,cAAc,CAAC,EACrDA,sBAAsB,CAAC,eAAe,EAAE,gBAAgB,CAAC,EACzDA,sBAAsB,CAAC,cAAc,EAAE,eAAe,CAAC,EACvDA,sBAAsB,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,EAChEA,sBAAsB,CAAC,YAAY,EAAE,oBAAoB,CAAC,eAC3DpN,OAAA;gBAAIyN,SAAS,EAAC,aAAa;gBAAAD,QAAA,EAAC;cAAO;gBAAA9B,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxCtO,OAAA;gBAAIyN,SAAS,EAAC,aAAa;gBAAAD,QAAA,EAAC;cAAI;gBAAA9B,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAA5C,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRtO,OAAA;YAAAwN,QAAA,EACG3M,QAAQ,CAACgH,GAAG,CAAE5B,GAAG,iBAChBjG,OAAA;cAAAwN,QAAA,gBACExN,OAAA;gBAAAwN,QAAA,EAAKvH,GAAG,CAACxD;cAAS;gBAAAiJ,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxBtO,OAAA;gBAAAwN,QAAA,EAAKvH,GAAG,CAACtD;cAAW;gBAAA+I,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1BtO,OAAA;gBAAAwN,QAAA,EAAKvH,GAAG,CAACrD;cAAa;gBAAA8I,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5BtO,OAAA;gBAAAwN,QAAA,EAAK9J,cAAc,CAACuC,GAAG,CAACpD,YAAY;cAAC;gBAAA6I,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3CtO,OAAA;gBAAAwN,QAAA,EAAK9J,cAAc,CAACuC,GAAG,CAACnD,kBAAkB;cAAC;gBAAA4I,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjDtO,OAAA;gBAAAwN,QAAA,EAAK9J,cAAc,CAACuC,GAAG,CAAClD,UAAU;cAAC;gBAAA2I,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzCtO,OAAA;gBAAIyN,SAAS,EAAC,aAAa;gBAAAD,QAAA,eACzBxN,OAAA;kBACEyN,SAAS,EAAC,kCAAkC;kBAC5CC,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAAC9F,GAAG,CAACxD,SAAS,CAAE;kBAAA+K,QAAA,EAChD;gBAED;kBAAA9B,QAAA,EAAA0C,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAA5C,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLtO,OAAA;gBAAIyN,SAAS,EAAC,aAAa;gBAAAD,QAAA,eACzBxN,OAAA;kBACEyN,SAAS,EAAC,+CAA+C;kBACzDC,OAAO,EAAEA,CAAA,KACPhN,QAAQ,CAAC,aAAauF,GAAG,CAACxD,SAAS,gBAAgB,EAAE;oBACnDgE,KAAK,EAAE;sBACLuF,KAAK,EAAE/F,GAAG,CAACxD,SAAS;sBACpBlC,KAAK,EAAEwB,WAAW;sBAClB2C,IAAI,EAAEzC,UAAU;sBAChBgL,SAAS,EAAE9K,eAAe;sBAC1ByC,GAAG,EAAEvC;oBACP;kBACF,CAAC,CACF;kBACD8L,KAAK,EAAC,oBAAoB;kBAAAX,QAAA,EAC3B;gBAED;kBAAA9B,QAAA,EAAA0C,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAA5C,QAAA,EAAA0C,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GAjCErI,GAAG,CAACxD,SAAS;cAAAiJ,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAkClB,CACL;UAAC;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACN;IAAA;MAAA5C,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELrN,YAAY,iBACXjB,OAAA;MACEyN,SAAS,EAAC,yBAAyB;MACnC7J,KAAK,EAAE;QAAEoK,eAAe,EAAE;MAAY,CAAE;MAAAR,QAAA,eAExCxN,OAAA;QAAKyN,SAAS,EAAC,oCAAoC;QAAAD,QAAA,eACjDxN,OAAA;UAAKyN,SAAS,EAAC,eAAe;UAAAD,QAAA,gBAC5BxN,OAAA;YAAKyN,SAAS,EAAC,cAAc;YAAAD,QAAA,gBAC3BxN,OAAA;cAAIyN,SAAS,EAAC,aAAa;cAAAD,QAAA,GAAC,2BACX,EAACrM,gBAAgB;YAAA;cAAAuK,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC,eACLtO,OAAA;cACE8B,IAAI,EAAC,QAAQ;cACb2L,SAAS,EAAC,WAAW;cACrBC,OAAO,EAAEA,CAAA,KAAMxM,eAAe,CAAC,KAAK;YAAE;cAAAwK,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNtO,OAAA;YAAKyN,SAAS,EAAC,YAAY;YAAAD,QAAA,eACzBxN,OAAA;cACEyN,SAAS,EAAC,cAAc;cACxB/D,IAAI,EAAC,GAAG;cACR/F,KAAK,EAAEtC,YAAa;cACpB0N,QAAQ,EAAG5I,CAAC,IAAK7E,eAAe,CAAC6E,CAAC,CAAC6I,MAAM,CAACrL,KAAK;YAAE;cAAA+H,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD;UAAC;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNtO,OAAA;YAAKyN,SAAS,EAAC,cAAc;YAAAD,QAAA,gBAC3BxN,OAAA;cACEyN,SAAS,EAAC,mBAAmB;cAC7BC,OAAO,EAAEA,CAAA,KAAMxM,eAAe,CAAC,KAAK,CAAE;cAAAsM,QAAA,EACvC;YAED;cAAA9B,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTtO,OAAA;cACEyN,SAAS,EAAC,iBAAiB;cAC3BC,OAAO,EAAEzB,WAAY;cACrBqD,QAAQ,EAAE,CAACjO,YAAY,CAACwI,IAAI,CAAC,CAAE;cAAA2D,QAAA,EAChC;YAED;cAAA9B,QAAA,EAAA0C,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAA5C,QAAA,EAAA0C,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAA5C,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAA5C,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAA5C,QAAA,EAAA0C,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7N,EAAA,CAjoBID,YAAY;EAAA,QACCd,WAAW,EACXC,WAAW;AAAA;AAAA+P,EAAA,GAFxBlP,YAAY;AAmoBlB,eAAeA,YAAY;AAAC,IAAAkP,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}