{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = 'http://localhost:8081';\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n  const [activeSbu, setActiveSbu] = useState(null);\n  const [activeProjectType, setActiveProjectType] = useState(null);\n  const [columnFilters, setColumnFilters] = useState({});\n\n  // Format a number as currency string\n  const formatCurrency = (v = 0) => v.toLocaleString(commonData.currencySettings.locale, {\n    style: 'currency',\n    currency: commonData.currencySettings.currency,\n    minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\n    maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\n  });\n\n  // Month name helper\n  const getMonthName = m => {\n    if (!m) return '';\n    const d = new Date();\n    d.setMonth(m - 1);\n    return d.toLocaleString('en-US', {\n      month: 'long'\n    });\n  };\n\n  // Build unique options for a column’s <select>\n  const getUniqueOptions = columnKey => {\n    const raw = projects.map(p => columnKey === 'revenue' ? formatCurrency(p[columnKey]) : p[columnKey]);\n    const uniq = Array.from(new Set(raw.map(String)));\n    uniq.sort((a, b) => {\n      const na = Number(a),\n        nb = Number(b);\n      return !isNaN(na) && !isNaN(nb) ? na - nb : a.localeCompare(b);\n    });\n    return ['All', ...uniq];\n  };\n\n  // Handle dropdown changes\n  const handleFilterChange = (col, val) => {\n    setColumnFilters(prev => ({\n      ...prev,\n      [col]: val === 'All' ? null : val\n    }));\n  };\n\n  // Build and download CSV of currently filtered data\n  const handleDownloadData = () => {\n    if (!projects.length) return;\n    const headers = ['Project ID', 'Project Name', 'Total Associates', 'Company Hours', 'Client Hours', 'Variance Hours', 'Revenue'];\n    // Apply same filters client‐side\n    const filtered = projects.filter(p => Object.entries(columnFilters).every(([col, val]) => {\n      if (!val) return true;\n      let cell = p[col];\n      if (col === 'revenue') cell = formatCurrency(cell);\n      return String(cell).trim().toLowerCase() === String(val).trim().toLowerCase();\n    }));\n    const rows = filtered.map(p => [`\"${p.projectId}\"`, `\"${p.projectName}\"`, p.totalAssociatesCount, p.totalCompanyHours, p.totalClientHours, p.varianceHours, `\"${formatCurrency(p.revenue)}\"`].join(','));\n    const csv = [headers.join(','), ...rows].join('\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = `Projects_Account_${activeAccountId}_${getMonthName(activeMonth)}_${activeYear}.csv`;\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Load Poppins font once\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch data whenever month/year/account change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3, _location$state4, _location$state5;\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    const acc = urlAccountId;\n    let accName = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.accountName;\n    let sbu = (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.sbu;\n    let pType = (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.projectType;\n\n    // Fallback to sessionStorage\n    if (!m) m = sessionStorage.getItem('lastFetchedProjectMonth');\n    if (!y) y = sessionStorage.getItem('lastFetchedProjectYear');\n    if (!accName) accName = sessionStorage.getItem('lastFetchedProjectAccountName');\n    if (!sbu) sbu = sessionStorage.getItem('lastFetchedProjectSbu');\n    if (!pType) pType = sessionStorage.getItem('lastFetchedProjectType');\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (!(m && y && acc)) {\n      setError('Missing month, year, or Account ID. Please navigate here with all parameters.');\n      setLoading(false);\n      return;\n    }\n    const shouldFetch = m !== activeMonth || y !== activeYear || acc !== activeAccountId || sbu !== activeSbu || pType !== activeProjectType;\n    if (!shouldFetch) {\n      setLoading(false);\n      return;\n    }\n\n    // Sync state + sessionStorage\n    setActiveMonth(m);\n    setActiveYear(y);\n    setActiveAccountId(acc);\n    if (accName) setActiveAccountName(accName);\n    if (sbu) setActiveSbu(sbu);\n    if (pType) setActiveProjectType(pType);\n    sessionStorage.setItem('lastFetchedProjectMonth', m);\n    sessionStorage.setItem('lastFetchedProjectYear', y);\n    sessionStorage.setItem('lastFetchedProjectAccountId', acc);\n    if (accName) sessionStorage.setItem('lastFetchedProjectAccountName', accName);\n    if (sbu) sessionStorage.setItem('lastFetchedProjectSbu', sbu);\n    if (pType) sessionStorage.setItem('lastFetchedProjectType', pType);\n\n    // Fire the API call\n    (async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month: m,\n            year: y,\n            accId: acc,\n            projectType: pType\n          })\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(`status: ${resp.status}, ${txt || resp.statusText}`);\n        }\n        const json = await resp.json();\n        const list = Array.isArray(json) ? json : [json].filter(Boolean);\n        setProjects(list);\n        setColumnFilters({});\n        if (list.length > 0 && list[0].accountName) {\n          setActiveAccountName(list[0].accountName);\n        }\n      } catch (e) {\n        setError(`Failed to fetch project data: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [location.state, urlAccountId, activeMonth, activeYear, activeAccountId, activeSbu, activeProjectType]);\n\n  // Initialize / re-init DataTable when data arrives\n  useEffect(() => {\n    if (loading || !projects.length || !tableRef.current) return;\n    const $tbl = $(tableRef.current);\n\n    // Destroy old instance\n    if ($.fn.DataTable.isDataTable($tbl)) {\n      $tbl.DataTable().destroy();\n    }\n\n    // Instantiate fresh\n    setTimeout(() => {\n      const dt = $tbl.DataTable({\n        data: projects,\n        columns: [{\n          data: 'projectId',\n          title: 'Project ID'\n        }, {\n          data: 'projectName',\n          title: 'Project Name'\n        }, {\n          data: 'totalAssociatesCount',\n          title: 'Total Associates'\n        }, {\n          data: 'totalCompanyHours',\n          title: 'Company Hours'\n        }, {\n          data: 'totalClientHours',\n          title: 'Client Hours'\n        }, {\n          data: 'varianceHours',\n          title: 'Variance Hours'\n        }, {\n          data: 'revenue',\n          title: 'Revenue',\n          render: v => formatCurrency(v)\n        }, {\n          data: null,\n          title: 'View',\n          orderable: false,\n          className: 'text-center',\n          defaultContent: '<button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" title=\"View Associates\">🔍</button>'\n        }],\n        paging: true,\n        searching: true,\n        ordering: false,\n        info: true,\n        autoWidth: false,\n        createdRow: (row, data) => {\n          // Attach React navigate handler\n          $(row).find('button.view-btn').on('click', () => navigate(`/projects/${data.projectId}/associates`, {\n            state: {\n              projectId: data.projectId,\n              projectName: data.projectName,\n              accountId: data.accountId,\n              accountName: data.accountName,\n              month: activeMonth,\n              year: activeYear,\n              sbu: activeSbu,\n              projectType: activeProjectType\n            }\n          }));\n        }\n      });\n      tableRef.current.dataTableInstance = dt;\n    }, 0);\n\n    // Cleanup on unmount / re-init\n    return () => {\n      var _tableRef$current;\n      const inst = (_tableRef$current = tableRef.current) === null || _tableRef$current === void 0 ? void 0 : _tableRef$current.dataTableInstance;\n      if (inst) {\n        inst.destroy();\n        tableRef.current.dataTableInstance = null;\n      }\n    };\n  }, [loading, projects]);\n\n  // Apply columnFilters (via DataTables API) when dropdowns change\n  useEffect(() => {\n    var _tableRef$current2;\n    const inst = (_tableRef$current2 = tableRef.current) === null || _tableRef$current2 === void 0 ? void 0 : _tableRef$current2.dataTableInstance;\n    if (!inst) return;\n\n    // Clear existing column searches\n    inst.columns().search('');\n\n    // Map col-keys → table indices\n    const colMap = {\n      projectId: 0,\n      projectName: 1,\n      totalAssociatesCount: 2,\n      totalCompanyHours: 3,\n      totalClientHours: 4,\n      varianceHours: 5,\n      revenue: 6\n    };\n    Object.entries(columnFilters).forEach(([col, val]) => {\n      if (val != null && colMap[col] != null) {\n        const idx = colMap[col];\n        const term = String(val).trim();\n        // Exact match, case-insensitive\n        inst.column(idx).search(`^${term}$`, true, false);\n      }\n    });\n    inst.draw();\n  }, [columnFilters]);\n\n  // Breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, activeSbu && {\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }, {\n    name: 'Account Level',\n    page: 'accounts',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }, activeProjectType && {\n    name: `${activeProjectType} Project Type`,\n    page: `accounts/${activeAccountId}/project-types`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu,\n      accId: activeAccountId\n    }\n  }, {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }].filter(Boolean);\n\n  // Loading / Error UIs\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate('/accounts', {\n          state: {\n            month: activeMonth,\n            year: activeYear,\n            sbu: activeSbu\n          }\n        }),\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1200px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0 fw-semibold text-dark\",\n          children: [\"\\uD83D\\uDCC1 Project Level Overview\", ' ', activeAccountId ? `for ${activeAccountName}` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Project Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-borderless mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #3b82f6, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [[{\n                key: 'projectId',\n                label: 'Project ID'\n              }, {\n                key: 'projectName',\n                label: 'Project Name'\n              }, {\n                key: 'totalAssociatesCount',\n                label: 'Total Associates'\n              }, {\n                key: 'totalCompanyHours',\n                label: 'Company Hours'\n              }, {\n                key: 'totalClientHours',\n                label: 'Client Hours'\n              }, {\n                key: 'varianceHours',\n                label: 'Variance Hours'\n              }, {\n                key: 'revenue',\n                label: 'Revenue'\n              }].map(({\n                key,\n                label\n              }) => {\n                var _columnFilters$key;\n                return /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [label, /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-select form-select-sm mt-1\",\n                    onChange: e => handleFilterChange(key, e.target.value),\n                    value: (_columnFilters$key = columnFilters[key]) !== null && _columnFilters$key !== void 0 ? _columnFilters$key : 'All',\n                    children: getUniqueOptions(key).map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: opt,\n                      children: opt\n                    }, opt, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 468,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 21\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 19\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"iF7U0hrG/y0GUcZwJ6do31j7prE=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ProjectLevel;\nexport default ProjectLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useParams","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","BACKEND_URL","ProjectLevel","_s","navigate","accountId","urlAccountId","location","tableRef","projects","setProjects","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","activeSbu","setActiveSbu","activeProjectType","setActiveProjectType","columnFilters","setColumnFilters","formatCurrency","v","toLocaleString","currencySettings","locale","style","currency","minimumFractionDigits","maximumFractionDigits","getMonthName","m","d","Date","setMonth","month","getUniqueOptions","columnKey","raw","map","p","uniq","Array","from","Set","String","sort","a","b","na","Number","nb","isNaN","localeCompare","handleFilterChange","col","val","prev","handleDownloadData","length","headers","filtered","filter","Object","entries","every","cell","trim","toLowerCase","rows","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","join","csv","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","visibility","body","appendChild","click","removeChild","rel","head","fontFamily","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","state","y","year","acc","accName","accountName","sbu","pType","projectType","sessionStorage","getItem","parseInt","shouldFetch","setItem","resp","fetch","method","JSON","stringify","accId","ok","txt","text","Error","status","statusText","json","list","isArray","Boolean","e","message","current","$tbl","fn","DataTable","isDataTable","destroy","setTimeout","dt","data","columns","title","render","orderable","className","defaultContent","paging","searching","ordering","info","autoWidth","createdRow","row","find","on","dataTableInstance","_tableRef$current","inst","_tableRef$current2","search","colMap","forEach","idx","term","column","draw","breadcrumbPath","name","page","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","maxWidth","backgroundColor","borderRadius","path","ref","width","key","label","_columnFilters$key","onChange","target","value","opt","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/ProjectLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\nconst BACKEND_URL = 'http://localhost:8081';\r\n\r\nconst ProjectLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { accountId: urlAccountId } = useParams();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading,  setLoading]  = useState(true);\r\n  const [error,    setError]    = useState(null);\r\n  const [activeMonth, setActiveMonth]       = useState(null);\r\n  const [activeYear,  setActiveYear]        = useState(null);\r\n  const [activeAccountId,   setActiveAccountId]   = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n  const [activeSbu,         setActiveSbu]         = useState(null);\r\n  const [activeProjectType, setActiveProjectType] = useState(null);\r\n  const [columnFilters, setColumnFilters] = useState({});\r\n\r\n  // Format a number as currency string\r\n  const formatCurrency = (v = 0) =>\r\n    v.toLocaleString(commonData.currencySettings.locale, {\r\n      style:    'currency',\r\n      currency: commonData.currencySettings.currency,\r\n      minimumFractionDigits:\r\n        commonData.currencySettings.minimumFractionDigits,\r\n      maximumFractionDigits:\r\n        commonData.currencySettings.maximumFractionDigits,\r\n    });\r\n\r\n  // Month name helper\r\n  const getMonthName = (m) => {\r\n    if (!m) return '';\r\n    const d = new Date();\r\n    d.setMonth(m - 1);\r\n    return d.toLocaleString('en-US', { month: 'long' });\r\n  };\r\n\r\n  // Build unique options for a column’s <select>\r\n  const getUniqueOptions = (columnKey) => {\r\n    const raw = projects.map((p) =>\r\n      columnKey === 'revenue' ? formatCurrency(p[columnKey]) : p[columnKey]\r\n    );\r\n    const uniq = Array.from(new Set(raw.map(String)));\r\n    uniq.sort((a, b) => {\r\n      const na = Number(a), nb = Number(b);\r\n      return !isNaN(na) && !isNaN(nb)\r\n        ? na - nb\r\n        : a.localeCompare(b);\r\n    });\r\n    return ['All', ...uniq];\r\n  };\r\n\r\n  // Handle dropdown changes\r\n  const handleFilterChange = (col, val) => {\r\n    setColumnFilters((prev) => ({\r\n      ...prev,\r\n      [col]: val === 'All' ? null : val,\r\n    }));\r\n  };\r\n\r\n  // Build and download CSV of currently filtered data\r\n  const handleDownloadData = () => {\r\n    if (!projects.length) return;\r\n    const headers = [\r\n      'Project ID',\r\n      'Project Name',\r\n      'Total Associates',\r\n      'Company Hours',\r\n      'Client Hours',\r\n      'Variance Hours',\r\n      'Revenue',\r\n    ];\r\n    // Apply same filters client‐side\r\n    const filtered = projects.filter((p) =>\r\n      Object.entries(columnFilters).every(([col, val]) => {\r\n        if (!val) return true;\r\n        let cell = p[col];\r\n        if (col === 'revenue') cell = formatCurrency(cell);\r\n        return String(cell).trim().toLowerCase()\r\n             === String(val).trim().toLowerCase();\r\n      })\r\n    );\r\n\r\n    const rows = filtered.map((p) => [\r\n      `\"${p.projectId}\"`,\r\n      `\"${p.projectName}\"`,\r\n      p.totalAssociatesCount,\r\n      p.totalCompanyHours,\r\n      p.totalClientHours,\r\n      p.varianceHours,\r\n      `\"${formatCurrency(p.revenue)}\"`,\r\n    ].join(','));\r\n\r\n    const csv = [headers.join(','), ...rows].join('\\n');\r\n    const blob = new Blob([csv], {\r\n      type: 'text/csv;charset=utf-8;',\r\n    });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = `Projects_Account_${activeAccountId}_${getMonthName(\r\n      activeMonth\r\n    )}_${activeYear}.csv`;\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Load Poppins font once\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch data whenever month/year/account change\r\n  useEffect(() => {\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    const acc = urlAccountId;\r\n    let accName = location.state?.accountName;\r\n    let sbu = location.state?.sbu;\r\n    let pType = location.state?.projectType;\r\n\r\n    // Fallback to sessionStorage\r\n    if (!m)       m = sessionStorage.getItem('lastFetchedProjectMonth');\r\n    if (!y)       y = sessionStorage.getItem('lastFetchedProjectYear');\r\n    if (!accName) accName = sessionStorage.getItem('lastFetchedProjectAccountName');\r\n    if (!sbu)     sbu = sessionStorage.getItem('lastFetchedProjectSbu');\r\n    if (!pType)   pType = sessionStorage.getItem('lastFetchedProjectType');\r\n\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (!(m && y && acc)) {\r\n      setError(\r\n        'Missing month, year, or Account ID. Please navigate here with all parameters.'\r\n      );\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const shouldFetch =\r\n      m !== activeMonth ||\r\n      y !== activeYear ||\r\n      acc !== activeAccountId ||\r\n      sbu !== activeSbu ||\r\n      pType !== activeProjectType;\r\n\r\n    if (!shouldFetch) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // Sync state + sessionStorage\r\n    setActiveMonth(m);\r\n    setActiveYear(y);\r\n    setActiveAccountId(acc);\r\n    if (accName) setActiveAccountName(accName);\r\n    if (sbu)     setActiveSbu(sbu);\r\n    if (pType)   setActiveProjectType(pType);\r\n\r\n    sessionStorage.setItem('lastFetchedProjectMonth', m);\r\n    sessionStorage.setItem('lastFetchedProjectYear', y);\r\n    sessionStorage.setItem('lastFetchedProjectAccountId', acc);\r\n    if (accName) sessionStorage.setItem('lastFetchedProjectAccountName', accName);\r\n    if (sbu)     sessionStorage.setItem('lastFetchedProjectSbu', sbu);\r\n    if (pType)   sessionStorage.setItem('lastFetchedProjectType', pType);\r\n\r\n    // Fire the API call\r\n    (async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            month: m,\r\n            year: y,\r\n            accId: acc,\r\n            projectType: pType,\r\n          }),\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(`status: ${resp.status}, ${txt || resp.statusText}`);\r\n        }\r\n\r\n        const json = await resp.json();\r\n        const list = Array.isArray(json) ? json : [json].filter(Boolean);\r\n        setProjects(list);\r\n        setColumnFilters({});\r\n\r\n        if (list.length > 0 && list[0].accountName) {\r\n          setActiveAccountName(list[0].accountName);\r\n        }\r\n      } catch (e) {\r\n        setError(`Failed to fetch project data: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [\r\n    location.state,\r\n    urlAccountId,\r\n    activeMonth,\r\n    activeYear,\r\n    activeAccountId,\r\n    activeSbu,\r\n    activeProjectType,\r\n  ]);\r\n\r\n  // Initialize / re-init DataTable when data arrives\r\n  useEffect(() => {\r\n    if (loading || !projects.length || !tableRef.current) return;\r\n    const $tbl = $(tableRef.current);\r\n\r\n    // Destroy old instance\r\n    if ($.fn.DataTable.isDataTable($tbl)) {\r\n      $tbl.DataTable().destroy();\r\n    }\r\n\r\n    // Instantiate fresh\r\n    setTimeout(() => {\r\n      const dt = $tbl.DataTable({\r\n        data: projects,\r\n        columns: [\r\n          { data: 'projectId',   title: 'Project ID' },\r\n          { data: 'projectName', title: 'Project Name' },\r\n          {\r\n            data: 'totalAssociatesCount',\r\n            title: 'Total Associates',\r\n          },\r\n          { data: 'totalCompanyHours', title: 'Company Hours' },\r\n          { data: 'totalClientHours',  title: 'Client Hours' },\r\n          { data: 'varianceHours',     title: 'Variance Hours' },\r\n          {\r\n            data:    'revenue',\r\n            title:   'Revenue',\r\n            render:  (v) => formatCurrency(v),\r\n          },\r\n          {\r\n            data:       null,\r\n            title:      'View',\r\n            orderable:  false,\r\n            className:  'text-center',\r\n            defaultContent:\r\n              '<button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" title=\"View Associates\">🔍</button>',\r\n          },\r\n        ],\r\n        paging:     true,\r\n        searching:  true,\r\n        ordering:   false,\r\n        info:       true,\r\n        autoWidth:  false,\r\n        createdRow: (row, data) => {\r\n          // Attach React navigate handler\r\n          $(row)\r\n            .find('button.view-btn')\r\n            .on('click', () =>\r\n              navigate(\r\n                `/projects/${data.projectId}/associates`,\r\n                {\r\n                  state: {\r\n                    projectId:   data.projectId,\r\n                    projectName: data.projectName,\r\n                    accountId:   data.accountId,\r\n                    accountName: data.accountName,\r\n                    month:       activeMonth,\r\n                    year:        activeYear,\r\n                    sbu:         activeSbu,\r\n                    projectType: activeProjectType,\r\n                  },\r\n                }\r\n              )\r\n            );\r\n        },\r\n      });\r\n\r\n      tableRef.current.dataTableInstance = dt;\r\n    }, 0);\r\n\r\n    // Cleanup on unmount / re-init\r\n    return () => {\r\n      const inst = tableRef.current?.dataTableInstance;\r\n      if (inst) {\r\n        inst.destroy();\r\n        tableRef.current.dataTableInstance = null;\r\n      }\r\n    };\r\n  }, [loading, projects]);\r\n\r\n  // Apply columnFilters (via DataTables API) when dropdowns change\r\n  useEffect(() => {\r\n    const inst = tableRef.current?.dataTableInstance;\r\n    if (!inst) return;\r\n\r\n    // Clear existing column searches\r\n    inst.columns().search('');\r\n\r\n    // Map col-keys → table indices\r\n    const colMap = {\r\n      projectId:             0,\r\n      projectName:           1,\r\n      totalAssociatesCount:  2,\r\n      totalCompanyHours:     3,\r\n      totalClientHours:      4,\r\n      varianceHours:         5,\r\n      revenue:               6,\r\n    };\r\n\r\n    Object.entries(columnFilters).forEach(([col, val]) => {\r\n      if (val != null && colMap[col] != null) {\r\n        const idx  = colMap[col];\r\n        const term = String(val).trim();\r\n        // Exact match, case-insensitive\r\n        inst.column(idx).search(`^${term}$`, true, false);\r\n      }\r\n    });\r\n\r\n    inst.draw();\r\n  }, [columnFilters]);\r\n\r\n  // Breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    {\r\n      name: 'Revenue Forecast - Early View',\r\n      page: 'upload',\r\n    },\r\n    activeSbu && {\r\n      name: `${activeSbu} SBU Level`,\r\n      page: 'sbu',\r\n      state: { month: activeMonth, year: activeYear, sbu: activeSbu },\r\n    },\r\n    {\r\n      name: 'Account Level',\r\n      page: 'accounts',\r\n      state: { month: activeMonth, year: activeYear, sbu: activeSbu },\r\n    },\r\n    activeProjectType && {\r\n      name: `${activeProjectType} Project Type`,\r\n      page: `accounts/${activeAccountId}/project-types`,\r\n      state: {\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        sbu: activeSbu,\r\n        accId: activeAccountId,\r\n      },\r\n    },\r\n    {\r\n      name: `Projects (${activeAccountName})`,\r\n      page: `accounts/${activeAccountId}/projects`,\r\n    },\r\n  ].filter(Boolean);\r\n\r\n  // Loading / Error UIs\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() =>\r\n            navigate('/accounts', {\r\n              state: {\r\n                month: activeMonth,\r\n                year: activeYear,\r\n                sbu: activeSbu,\r\n              },\r\n            })\r\n          }\r\n        >\r\n          Go to Account Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main render\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background:   'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth:      '1200px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius:  '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h2 className=\"mb-0 fw-semibold text-dark\">\r\n            📁 Project Level Overview{' '}\r\n            {activeAccountId ? `for ${activeAccountName}` : ''}\r\n          </h2>\r\n          <button\r\n            className=\"btn btn-outline-success rounded-pill px-3\"\r\n            onClick={handleDownloadData}\r\n            title=\"Download Project Data\"\r\n          >\r\n            <i className=\"bi bi-download me-2\" /> Download Data\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"table-responsive rounded\">\r\n          <table\r\n            ref={tableRef}\r\n            className=\"display table table-hover align-middle table-borderless mb-0\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            <thead\r\n              className=\"text-white\"\r\n              style={{\r\n                background: 'linear-gradient(to right, #3b82f6, #2563eb)',\r\n              }}\r\n            >\r\n              <tr>\r\n                {[\r\n                  { key: 'projectId',             label: 'Project ID' },\r\n                  { key: 'projectName',           label: 'Project Name' },\r\n                  { key: 'totalAssociatesCount',  label: 'Total Associates' },\r\n                  { key: 'totalCompanyHours',     label: 'Company Hours' },\r\n                  { key: 'totalClientHours',      label: 'Client Hours' },\r\n                  { key: 'varianceHours',         label: 'Variance Hours' },\r\n                  { key: 'revenue',               label: 'Revenue' },\r\n                ].map(({ key, label }) => (\r\n                  <th key={key}>\r\n                    {label}\r\n                    <select\r\n                      className=\"form-select form-select-sm mt-1\"\r\n                      onChange={(e) =>\r\n                        handleFilterChange(key, e.target.value)\r\n                      }\r\n                      value={columnFilters[key] ?? 'All'}\r\n                    >\r\n                      {getUniqueOptions(key).map((opt) => (\r\n                        <option key={opt} value={opt}>\r\n                          {opt}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </th>\r\n                ))}\r\n                <th className=\"text-center\">View</th>\r\n              </tr>\r\n            </thead>\r\n            {/* tbody is left empty—DataTables will populate it */}\r\n            <tbody />\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}