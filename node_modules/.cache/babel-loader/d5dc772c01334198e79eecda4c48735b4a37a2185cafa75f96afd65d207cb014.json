{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const [projects, setProjects] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  const [columnFilters, setColumnFilters] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n  const [activeSbu, setActiveSbu] = useState(null);\n  const [activeProjectType, setActiveProjectType] = useState(null);\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // format numbers as currency using settings\n  const formatCurrency = (value = 0) => value.toLocaleString(commonData.currencySettings.locale, {\n    style: 'currency',\n    currency: commonData.currencySettings.currency,\n    minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\n    maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\n  });\n\n  // convert month number to name\n  const getMonthName = monthNumber => {\n    if (!monthNumber) return '';\n    const date = new Date();\n    date.setMonth(monthNumber - 1);\n    return date.toLocaleString('en-US', {\n      month: 'long'\n    });\n  };\n\n  // download CSV of current filteredProjects\n  const handleDownloadData = () => {\n    if (!filteredProjects.length) return;\n    const headers = ['Project ID', 'Project Name', 'Total Associates', 'Company Hours', 'Client Hours', 'Variance Hours', 'Revenue'];\n    const csvRows = filteredProjects.map(proj => [`\"${proj.projectId}\"`, `\"${proj.projectName}\"`, proj.totalAssociatesCount, proj.totalCompanyHours, proj.totalClientHours, proj.varianceHours, `\"${formatCurrency(proj.revenue)}\"`].join(','));\n    const csvContent = [headers.join(','), ...csvRows].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    const monthName = getMonthName(activeMonth);\n    const fileName = `Projects_Account_${activeAccountId}_${monthName}_${activeYear}.csv`;\n    link.setAttribute('href', url);\n    link.setAttribute('download', fileName);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  // returns sorted dropdown options including \"All\"\n  const getUniqueOptions = columnKey => {\n    const items = projects.map(p => p[columnKey]);\n    const uniques = Array.from(new Set(items)).sort();\n    return ['All', ...uniques];\n  };\n  const handleFilterChange = (col, val) => {\n    setColumnFilters(prev => ({\n      ...prev,\n      [col]: val === 'All' ? null : val\n    }));\n  };\n\n  // enhanced filtering: numeric equality or substring match\n  const applyFilters = (rows, filters) => {\n    return rows.filter(row => Object.entries(filters).every(([col, filterVal]) => {\n      if (filterVal == null) return true;\n      const cell = row[col];\n      if (cell == null) return false;\n\n      // numeric compare if both can parse as numbers\n      if (typeof cell === 'number' && !isNaN(filterVal)) {\n        return cell === Number(filterVal);\n      }\n\n      // otherwise case-insensitive substring match\n      return String(cell).toLowerCase().includes(String(filterVal).toLowerCase());\n    }));\n  };\n\n  // load Google Font once\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // fetch data when parameters change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3, _location$state4, _location$state5;\n    const fetchProjectData = async (month, year, accId, projectType) => {\n      setLoading(true);\n      setError(null);\n      try {\n        var _list$;\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            accId,\n            projectType\n          })\n        });\n        if (!resp.ok) {\n          const msg = await resp.text();\n          throw new Error(`status ${resp.status}: ${msg || resp.statusText}`);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        console.log('🔍 fetched projects:', list);\n        setProjects(list);\n        if ((_list$ = list[0]) !== null && _list$ !== void 0 && _list$.accountName) {\n          setActiveAccountName(list[0].accountName);\n        } else {\n          setActiveAccountName(sessionStorage.getItem('lastFetchedProjectAccountName') || accId);\n        }\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load project data: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // derive parameters from location.state, URL, sessionStorage\n    let m = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month) || sessionStorage.getItem('lastFetchedProjectMonth');\n    let y = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year) || sessionStorage.getItem('lastFetchedProjectYear');\n    let sbu = ((_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.sbu) || sessionStorage.getItem('lastFetchedProjectSbu');\n    let type = ((_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.projectType) || sessionStorage.getItem('lastFetchedProjectType');\n    let accName = ((_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.accountName) || sessionStorage.getItem('lastFetchedProjectAccountName');\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && urlAccountId) {\n      // only fetch if any key param changed\n      if (m !== activeMonth || y !== activeYear || urlAccountId !== activeAccountId || sbu !== activeSbu || type !== activeProjectType) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveAccountId(urlAccountId);\n        setActiveSbu(sbu);\n        setActiveProjectType(type);\n        if (accName) setActiveAccountName(accName);\n        sessionStorage.setItem('lastFetchedProjectMonth', m.toString());\n        sessionStorage.setItem('lastFetchedProjectYear', y.toString());\n        sessionStorage.setItem('lastFetchedProjectAccountId', urlAccountId);\n        if (accName) sessionStorage.setItem('lastFetchedProjectAccountName', accName);\n        if (sbu) sessionStorage.setItem('lastFetchedProjectSbu', sbu);\n        if (type) sessionStorage.setItem('lastFetchedProjectType', type);\n        fetchProjectData(m, y, urlAccountId, type);\n      } else {\n        setLoading(false);\n      }\n    } else {\n      setError('Missing month, year, or Account ID. Please navigate here with all parameters.');\n      setLoading(false);\n    }\n  }, [location.state, urlAccountId, activeMonth, activeYear, activeAccountId, activeSbu, activeProjectType]);\n\n  // re-apply filters whenever projects or filters change\n  useEffect(() => {\n    setFilteredProjects(applyFilters(projects, columnFilters));\n  }, [projects, columnFilters]);\n\n  // initialize / destroy DataTable when filteredProjects update\n  useEffect(() => {\n    if (!loading && filteredProjects.length && tableRef.current) {\n      const $tbl = $(tableRef.current);\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n      }\n      $tbl.DataTable({\n        paging: true,\n        searching: true,\n        ordering: false,\n        info: true,\n        autoWidth: false\n      });\n    }\n    return () => {\n      if (tableRef.current) {\n        const $tbl = $(tableRef.current);\n        if ($.fn.DataTable.isDataTable($tbl)) {\n          $tbl.DataTable().destroy();\n        }\n      }\n    };\n  }, [loading, filteredProjects]);\n\n  // build breadcrumb trail\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }] : []), {\n    name: 'Account Level',\n    page: 'accounts',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }, ...(activeProjectType ? [{\n    name: `${activeProjectType} Project Type`,\n    page: `accounts/${activeAccountId}/project-types`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu,\n      accId: activeAccountId\n    }\n  }] : []), {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }].filter(Boolean);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate('/accounts', {\n          state: {\n            month: activeMonth,\n            year: activeYear,\n            sbu: activeSbu\n          }\n        }),\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif'\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1200px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0 fw-semibold text-dark\",\n          children: [\"\\uD83D\\uDCC1 Project Level Overview \", activeAccountName && `for ${activeAccountName}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), projects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Project Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-borderless mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #3b82f6, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [[{\n                label: 'Project ID',\n                key: 'projectId'\n              }, {\n                label: 'Project Name',\n                key: 'projectName'\n              }, {\n                label: 'Total Associates',\n                key: 'totalAssociatesCount'\n              }, {\n                label: 'Company Hours',\n                key: 'totalCompanyHours'\n              }, {\n                label: 'Client Hours',\n                key: 'totalClientHours'\n              }, {\n                label: 'Variance Hours',\n                key: 'varianceHours'\n              }, {\n                label: 'Revenue',\n                key: 'revenue'\n              }].map(col => {\n                var _columnFilters$col$ke;\n                return /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [col.label, /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-select form-select-sm mt-1\",\n                    value: (_columnFilters$col$ke = columnFilters[col.key]) !== null && _columnFilters$col$ke !== void 0 ? _columnFilters$col$ke : 'All',\n                    onChange: e => handleFilterChange(col.key, e.target.value),\n                    children: getUniqueOptions(col.key).map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: opt,\n                      children: opt\n                    }, opt, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 21\n                  }, this)]\n                }, col.key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredProjects.map(proj => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: proj.projectId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: proj.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: proj.totalAssociatesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: proj.totalCompanyHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: proj.totalClientHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: proj.varianceHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(proj.revenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/projects/${proj.projectId}/associates`, {\n                    state: {\n                      projectId: proj.projectId,\n                      projectName: proj.projectName,\n                      accountId: proj.accountId,\n                      accountName: proj.accountName,\n                      month: activeMonth,\n                      year: activeYear,\n                      sbu: activeSbu,\n                      projectType: activeProjectType\n                    }\n                  }),\n                  title: \"View Associates\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)]\n            }, proj.projectId + '-' + proj.totalCompanyHours, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, JSON.stringify(columnFilters), true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"e0hFCGP7L7OM0P4tKEvSUX20xLw=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ProjectLevel;\nexport default ProjectLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useParams","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","ProjectLevel","_s","navigate","accountId","urlAccountId","location","tableRef","projects","setProjects","filteredProjects","setFilteredProjects","columnFilters","setColumnFilters","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","activeSbu","setActiveSbu","activeProjectType","setActiveProjectType","BACKEND_URL","formatCurrency","value","toLocaleString","currencySettings","locale","style","currency","minimumFractionDigits","maximumFractionDigits","getMonthName","monthNumber","date","Date","setMonth","month","handleDownloadData","length","headers","csvRows","map","proj","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","join","csvContent","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","monthName","fileName","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","getUniqueOptions","columnKey","items","p","uniques","Array","from","Set","sort","handleFilterChange","col","val","prev","applyFilters","rows","filters","filter","row","Object","entries","every","filterVal","cell","isNaN","Number","String","toLowerCase","includes","href","rel","head","fontFamily","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","fetchProjectData","year","accId","projectType","_list$","resp","fetch","method","JSON","stringify","ok","msg","text","Error","status","statusText","data","json","list","isArray","Boolean","console","log","accountName","sessionStorage","getItem","e","message","m","state","y","sbu","accName","parseInt","setItem","toString","current","$tbl","fn","DataTable","isDataTable","destroy","paging","searching","ordering","info","autoWidth","breadcrumbPath","name","page","className","children","role","_jsxFileName","lineNumber","columnNumber","onClick","background","maxWidth","backgroundColor","borderRadius","path","title","ref","width","label","key","_columnFilters$col$ke","onChange","target","opt","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/ProjectLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\nconst ProjectLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { accountId: urlAccountId } = useParams();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  const [projects, setProjects] = useState([]);\r\n  const [filteredProjects, setFilteredProjects] = useState([]);\r\n  const [columnFilters, setColumnFilters] = useState({});\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeAccountId, setActiveAccountId] = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n  const [activeProjectType, setActiveProjectType] = useState(null);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // format numbers as currency using settings\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(commonData.currencySettings.locale, {\r\n      style: 'currency',\r\n      currency: commonData.currencySettings.currency,\r\n      minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\r\n      maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\r\n    });\r\n\r\n  // convert month number to name\r\n  const getMonthName = (monthNumber) => {\r\n    if (!monthNumber) return '';\r\n    const date = new Date();\r\n    date.setMonth(monthNumber - 1);\r\n    return date.toLocaleString('en-US', { month: 'long' });\r\n  };\r\n\r\n  // download CSV of current filteredProjects\r\n  const handleDownloadData = () => {\r\n    if (!filteredProjects.length) return;\r\n\r\n    const headers = [\r\n      'Project ID',\r\n      'Project Name',\r\n      'Total Associates',\r\n      'Company Hours',\r\n      'Client Hours',\r\n      'Variance Hours',\r\n      'Revenue'\r\n    ];\r\n\r\n    const csvRows = filteredProjects.map(proj => [\r\n      `\"${proj.projectId}\"`,\r\n      `\"${proj.projectName}\"`,\r\n      proj.totalAssociatesCount,\r\n      proj.totalCompanyHours,\r\n      proj.totalClientHours,\r\n      proj.varianceHours,\r\n      `\"${formatCurrency(proj.revenue)}\"`\r\n    ].join(','));\r\n\r\n    const csvContent = [headers.join(','), ...csvRows].join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n\r\n    const link = document.createElement('a');\r\n    const url = URL.createObjectURL(blob);\r\n    const monthName = getMonthName(activeMonth);\r\n    const fileName = `Projects_Account_${activeAccountId}_${monthName}_${activeYear}.csv`;\r\n\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', fileName);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // returns sorted dropdown options including \"All\"\r\n  const getUniqueOptions = (columnKey) => {\r\n    const items = projects.map(p => p[columnKey]);\r\n    const uniques = Array.from(new Set(items)).sort();\r\n    return ['All', ...uniques];\r\n  };\r\n\r\n  const handleFilterChange = (col, val) => {\r\n    setColumnFilters(prev => ({\r\n      ...prev,\r\n      [col]: val === 'All' ? null : val\r\n    }));\r\n  };\r\n\r\n  // enhanced filtering: numeric equality or substring match\r\n  const applyFilters = (rows, filters) => {\r\n    return rows.filter(row =>\r\n      Object.entries(filters).every(([col, filterVal]) => {\r\n        if (filterVal == null) return true;\r\n\r\n        const cell = row[col];\r\n        if (cell == null) return false;\r\n\r\n        // numeric compare if both can parse as numbers\r\n        if (typeof cell === 'number' && !isNaN(filterVal)) {\r\n          return cell === Number(filterVal);\r\n        }\r\n\r\n        // otherwise case-insensitive substring match\r\n        return String(cell)\r\n          .toLowerCase()\r\n          .includes(String(filterVal).toLowerCase());\r\n      })\r\n    );\r\n  };\r\n\r\n  // load Google Font once\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // fetch data when parameters change\r\n  useEffect(() => {\r\n    const fetchProjectData = async (month, year, accId, projectType) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, accId, projectType })\r\n        });\r\n\r\n        if (!resp.ok) {\r\n          const msg = await resp.text();\r\n          throw new Error(`status ${resp.status}: ${msg || resp.statusText}`);\r\n        }\r\n\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n\r\n        console.log('🔍 fetched projects:', list);\r\n        setProjects(list);\r\n\r\n        if (list[0]?.accountName) {\r\n          setActiveAccountName(list[0].accountName);\r\n        } else {\r\n          setActiveAccountName(\r\n            sessionStorage.getItem('lastFetchedProjectAccountName') || accId\r\n          );\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load project data: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // derive parameters from location.state, URL, sessionStorage\r\n    let m = location.state?.month || sessionStorage.getItem('lastFetchedProjectMonth');\r\n    let y = location.state?.year || sessionStorage.getItem('lastFetchedProjectYear');\r\n    let sbu = location.state?.sbu || sessionStorage.getItem('lastFetchedProjectSbu');\r\n    let type = location.state?.projectType || sessionStorage.getItem('lastFetchedProjectType');\r\n    let accName = location.state?.accountName || sessionStorage.getItem('lastFetchedProjectAccountName');\r\n\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && urlAccountId) {\r\n      // only fetch if any key param changed\r\n      if (\r\n        m !== activeMonth ||\r\n        y !== activeYear ||\r\n        urlAccountId !== activeAccountId ||\r\n        sbu !== activeSbu ||\r\n        type !== activeProjectType\r\n      ) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveAccountId(urlAccountId);\r\n        setActiveSbu(sbu);\r\n        setActiveProjectType(type);\r\n        if (accName) setActiveAccountName(accName);\r\n\r\n        sessionStorage.setItem('lastFetchedProjectMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedProjectYear', y.toString());\r\n        sessionStorage.setItem('lastFetchedProjectAccountId', urlAccountId);\r\n        if (accName) sessionStorage.setItem('lastFetchedProjectAccountName', accName);\r\n        if (sbu) sessionStorage.setItem('lastFetchedProjectSbu', sbu);\r\n        if (type) sessionStorage.setItem('lastFetchedProjectType', type);\r\n\r\n        fetchProjectData(m, y, urlAccountId, type);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setError('Missing month, year, or Account ID. Please navigate here with all parameters.');\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    location.state,\r\n    urlAccountId,\r\n    activeMonth,\r\n    activeYear,\r\n    activeAccountId,\r\n    activeSbu,\r\n    activeProjectType\r\n  ]);\r\n\r\n  // re-apply filters whenever projects or filters change\r\n  useEffect(() => {\r\n    setFilteredProjects(applyFilters(projects, columnFilters));\r\n  }, [projects, columnFilters]);\r\n\r\n  // initialize / destroy DataTable when filteredProjects update\r\n  useEffect(() => {\r\n    if (!loading && filteredProjects.length && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n      }\r\n      $tbl.DataTable({\r\n        paging: true,\r\n        searching: true,\r\n        ordering: false,\r\n        info: true,\r\n        autoWidth: false\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (tableRef.current) {\r\n        const $tbl = $(tableRef.current);\r\n        if ($.fn.DataTable.isDataTable($tbl)) {\r\n          $tbl.DataTable().destroy();\r\n        }\r\n      }\r\n    };\r\n  }, [loading, filteredProjects]);\r\n\r\n  // build breadcrumb trail\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    ...(activeSbu ? [{ name: `${activeSbu} SBU Level`, page: 'sbu', state: { month: activeMonth, year: activeYear, sbu: activeSbu } }] : []),\r\n    { name: 'Account Level', page: 'accounts', state: { month: activeMonth, year: activeYear, sbu: activeSbu } },\r\n    ...(activeProjectType ? [{ name: `${activeProjectType} Project Type`, page: `accounts/${activeAccountId}/project-types`, state: { month: activeMonth, year: activeYear, sbu: activeSbu, accId: activeAccountId } }] : []),\r\n    { name: `Projects (${activeAccountName})`, page: `accounts/${activeAccountId}/projects` }\r\n  ].filter(Boolean);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() =>\r\n            navigate('/accounts', { state: { month: activeMonth, year: activeYear, sbu: activeSbu } })\r\n          }\r\n        >\r\n          Go to Account Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif'\"\r\n      }}\r\n    >\r\n      <div className=\"card shadow p-4 p-md-5 w-100\" style={{ maxWidth: '1200px', backgroundColor: '#ffffffdd', borderRadius: '1rem' }}>\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h2 className=\"mb-0 fw-semibold text-dark\">\r\n            📁 Project Level Overview {activeAccountName && `for ${activeAccountName}`}\r\n          </h2>\r\n          {projects.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n              title=\"Download Project Data\"\r\n            >\r\n              <i className=\"bi bi-download me-2\" /> Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"table-responsive rounded\">\r\n          <table\r\n            key={JSON.stringify(columnFilters)}\r\n            ref={tableRef}\r\n            className=\"display table table-hover align-middle table-borderless mb-0\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            <thead className=\"text-white\" style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}>\r\n              <tr>\r\n                {[\r\n                  { label: 'Project ID', key: 'projectId' },\r\n                  { label: 'Project Name', key: 'projectName' },\r\n                  { label: 'Total Associates', key: 'totalAssociatesCount' },\r\n                  { label: 'Company Hours', key: 'totalCompanyHours' },\r\n                  { label: 'Client Hours', key: 'totalClientHours' },\r\n                  { label: 'Variance Hours', key: 'varianceHours' },\r\n                  { label: 'Revenue', key: 'revenue' }\r\n                ].map(col => (\r\n                  <th key={col.key}>\r\n                    {col.label}\r\n                    <select\r\n                      className=\"form-select form-select-sm mt-1\"\r\n                      value={columnFilters[col.key] ?? 'All'}\r\n                      onChange={e => handleFilterChange(col.key, e.target.value)}\r\n                    >\r\n                      {getUniqueOptions(col.key).map(opt => (\r\n                        <option key={opt} value={opt}>{opt}</option>\r\n                      ))}\r\n                    </select>\r\n                  </th>\r\n                ))}\r\n                <th className=\"text-center\">View</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredProjects.map(proj => (\r\n                <tr key={proj.projectId + '-' + proj.totalCompanyHours}>\r\n                  <td>{proj.projectId}</td>\r\n                  <td>{proj.projectName}</td>\r\n                  <td>{proj.totalAssociatesCount}</td>\r\n                  <td>{proj.totalCompanyHours}</td>\r\n                  <td>{proj.totalClientHours}</td>\r\n                  <td>{proj.varianceHours}</td>\r\n                  <td>{formatCurrency(proj.revenue)}</td>\r\n                  <td className=\"text-center\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                      onClick={() =>\r\n                        navigate(`/projects/${proj.projectId}/associates`, {\r\n                          state: {\r\n                            projectId: proj.projectId,\r\n                            projectName: proj.projectName,\r\n                            accountId: proj.accountId,\r\n                            accountName: proj.accountName,\r\n                            month: activeMonth,\r\n                            year: activeYear,\r\n                            sbu: activeSbu,\r\n                            projectType: activeProjectType\r\n                          }\r\n                        })\r\n                      }\r\n                      title=\"View Associates\"\r\n                    >\r\n                      🔍\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLevel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAO,gBAAgB;AACvB,OAAO,qDAAqD;AAC5D,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW,SAAS,EAAEC;EAAa,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC/C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtD,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC8B,eAAe,EAAEC,kBAAkB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACgC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjC,QAAQ,CAAC,YAAY,CAAC;EACxE,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAMsC,WAAW,GAAG,uBAAuB;;EAE3C;EACA,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAG,CAAC,KAC/BA,KAAK,CAACC,cAAc,CAACnC,UAAU,CAACoC,gBAAgB,CAACC,MAAM,EAAE;IACvDC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAEvC,UAAU,CAACoC,gBAAgB,CAACG,QAAQ;IAC9CC,qBAAqB,EAAExC,UAAU,CAACoC,gBAAgB,CAACI,qBAAqB;IACxEC,qBAAqB,EAAEzC,UAAU,CAACoC,gBAAgB,CAACK;EACrD,CAAC,CAAC;;EAEJ;EACA,MAAMC,YAAY,GAAIC,WAAW,IAAK;IACpC,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE;IAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvBD,IAAI,CAACE,QAAQ,CAACH,WAAW,GAAG,CAAC,CAAC;IAC9B,OAAOC,IAAI,CAACT,cAAc,CAAC,OAAO,EAAE;MAAEY,KAAK,EAAE;IAAO,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAI,CAACpC,gBAAgB,CAACqC,MAAM,EAAE;IAE9B,MAAMC,OAAO,GAAG,CACd,YAAY,EACZ,cAAc,EACd,kBAAkB,EAClB,eAAe,EACf,cAAc,EACd,gBAAgB,EAChB,SAAS,CACV;IAED,MAAMC,OAAO,GAAGvC,gBAAgB,CAACwC,GAAG,CAACC,IAAI,IAAI,CAC3C,IAAIA,IAAI,CAACC,SAAS,GAAG,EACrB,IAAID,IAAI,CAACE,WAAW,GAAG,EACvBF,IAAI,CAACG,oBAAoB,EACzBH,IAAI,CAACI,iBAAiB,EACtBJ,IAAI,CAACK,gBAAgB,EACrBL,IAAI,CAACM,aAAa,EAClB,IAAI1B,cAAc,CAACoB,IAAI,CAACO,OAAO,CAAC,GAAG,CACpC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;IAEZ,MAAMC,UAAU,GAAG,CAACZ,OAAO,CAACW,IAAI,CAAC,GAAG,CAAC,EAAE,GAAGV,OAAO,CAAC,CAACU,IAAI,CAAC,IAAI,CAAC;IAC7D,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,UAAU,CAAC,EAAE;MAAEG,IAAI,EAAE;IAA0B,CAAC,CAAC;IAExE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxC,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;IACrC,MAAMS,SAAS,GAAG9B,YAAY,CAACtB,WAAW,CAAC;IAC3C,MAAMqD,QAAQ,GAAG,oBAAoBjD,eAAe,IAAIgD,SAAS,IAAIlD,UAAU,MAAM;IAErF4C,IAAI,CAACQ,YAAY,CAAC,MAAM,EAAEL,GAAG,CAAC;IAC9BH,IAAI,CAACQ,YAAY,CAAC,UAAU,EAAED,QAAQ,CAAC;IACvCN,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC;IAC/BA,IAAI,CAACW,KAAK,CAAC,CAAC;IACZV,QAAQ,CAACQ,IAAI,CAACG,WAAW,CAACZ,IAAI,CAAC;IAC/BI,GAAG,CAACS,eAAe,CAACV,GAAG,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMW,gBAAgB,GAAIC,SAAS,IAAK;IACtC,MAAMC,KAAK,GAAGxE,QAAQ,CAAC0C,GAAG,CAAC+B,CAAC,IAAIA,CAAC,CAACF,SAAS,CAAC,CAAC;IAC7C,MAAMG,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACL,KAAK,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC;IACjD,OAAO,CAAC,KAAK,EAAE,GAAGJ,OAAO,CAAC;EAC5B,CAAC;EAED,MAAMK,kBAAkB,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;IACvC5E,gBAAgB,CAAC6E,IAAI,KAAK;MACxB,GAAGA,IAAI;MACP,CAACF,GAAG,GAAGC,GAAG,KAAK,KAAK,GAAG,IAAI,GAAGA;IAChC,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAME,YAAY,GAAGA,CAACC,IAAI,EAAEC,OAAO,KAAK;IACtC,OAAOD,IAAI,CAACE,MAAM,CAACC,GAAG,IACpBC,MAAM,CAACC,OAAO,CAACJ,OAAO,CAAC,CAACK,KAAK,CAAC,CAAC,CAACV,GAAG,EAAEW,SAAS,CAAC,KAAK;MAClD,IAAIA,SAAS,IAAI,IAAI,EAAE,OAAO,IAAI;MAElC,MAAMC,IAAI,GAAGL,GAAG,CAACP,GAAG,CAAC;MACrB,IAAIY,IAAI,IAAI,IAAI,EAAE,OAAO,KAAK;;MAE9B;MACA,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC,EAAE;QACjD,OAAOC,IAAI,KAAKE,MAAM,CAACH,SAAS,CAAC;MACnC;;MAEA;MACA,OAAOI,MAAM,CAACH,IAAI,CAAC,CAChBI,WAAW,CAAC,CAAC,CACbC,QAAQ,CAACF,MAAM,CAACJ,SAAS,CAAC,CAACK,WAAW,CAAC,CAAC,CAAC;IAC9C,CAAC,CACH,CAAC;EACH,CAAC;;EAED;EACAjH,SAAS,CAAC,MAAM;IACd,MAAMyE,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAC3CF,IAAI,CAAC0C,IAAI,GAAG,gFAAgF;IAC5F1C,IAAI,CAAC2C,GAAG,GAAG,YAAY;IACvB1C,QAAQ,CAAC2C,IAAI,CAAClC,WAAW,CAACV,IAAI,CAAC;IAC/BC,QAAQ,CAACQ,IAAI,CAACrC,KAAK,CAACyE,UAAU,GAAG,uBAAuB;EAC1D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtH,SAAS,CAAC,MAAM;IAAA,IAAAuH,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;IACd,MAAMC,gBAAgB,GAAG,MAAAA,CAAOtE,KAAK,EAAEuE,IAAI,EAAEC,KAAK,EAAEC,WAAW,KAAK;MAClEvG,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QAAA,IAAAsG,MAAA;QACF,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAG3F,WAAW,cAAc,EAAE;UACrD4F,MAAM,EAAE,MAAM;UACd1E,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CyB,IAAI,EAAEkD,IAAI,CAACC,SAAS,CAAC;YAAE/E,KAAK;YAAEuE,IAAI;YAAEC,KAAK;YAAEC;UAAY,CAAC;QAC1D,CAAC,CAAC;QAEF,IAAI,CAACE,IAAI,CAACK,EAAE,EAAE;UACZ,MAAMC,GAAG,GAAG,MAAMN,IAAI,CAACO,IAAI,CAAC,CAAC;UAC7B,MAAM,IAAIC,KAAK,CAAC,UAAUR,IAAI,CAACS,MAAM,KAAKH,GAAG,IAAIN,IAAI,CAACU,UAAU,EAAE,CAAC;QACrE;QAEA,MAAMC,IAAI,GAAG,MAAMX,IAAI,CAACY,IAAI,CAAC,CAAC;QAC9B,MAAMC,IAAI,GAAGlD,KAAK,CAACmD,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC,CAACrC,MAAM,CAACyC,OAAO,CAAC;QAEhEC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,IAAI,CAAC;QACzC5H,WAAW,CAAC4H,IAAI,CAAC;QAEjB,KAAAd,MAAA,GAAIc,IAAI,CAAC,CAAC,CAAC,cAAAd,MAAA,eAAPA,MAAA,CAASmB,WAAW,EAAE;UACxBjH,oBAAoB,CAAC4G,IAAI,CAAC,CAAC,CAAC,CAACK,WAAW,CAAC;QAC3C,CAAC,MAAM;UACLjH,oBAAoB,CAClBkH,cAAc,CAACC,OAAO,CAAC,+BAA+B,CAAC,IAAIvB,KAC7D,CAAC;QACH;MACF,CAAC,CAAC,OAAOwB,CAAC,EAAE;QACVL,OAAO,CAACxH,KAAK,CAAC6H,CAAC,CAAC;QAChB5H,QAAQ,CAAC,gCAAgC4H,CAAC,CAACC,OAAO,EAAE,CAAC;MACvD,CAAC,SAAS;QACR/H,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;;IAED;IACA,IAAIgI,CAAC,GAAG,EAAAjC,eAAA,GAAAxG,QAAQ,CAAC0I,KAAK,cAAAlC,eAAA,uBAAdA,eAAA,CAAgBjE,KAAK,KAAI8F,cAAc,CAACC,OAAO,CAAC,yBAAyB,CAAC;IAClF,IAAIK,CAAC,GAAG,EAAAlC,gBAAA,GAAAzG,QAAQ,CAAC0I,KAAK,cAAAjC,gBAAA,uBAAdA,gBAAA,CAAgBK,IAAI,KAAIuB,cAAc,CAACC,OAAO,CAAC,wBAAwB,CAAC;IAChF,IAAIM,GAAG,GAAG,EAAAlC,gBAAA,GAAA1G,QAAQ,CAAC0I,KAAK,cAAAhC,gBAAA,uBAAdA,gBAAA,CAAgBkC,GAAG,KAAIP,cAAc,CAACC,OAAO,CAAC,uBAAuB,CAAC;IAChF,IAAI7E,IAAI,GAAG,EAAAkD,gBAAA,GAAA3G,QAAQ,CAAC0I,KAAK,cAAA/B,gBAAA,uBAAdA,gBAAA,CAAgBK,WAAW,KAAIqB,cAAc,CAACC,OAAO,CAAC,wBAAwB,CAAC;IAC1F,IAAIO,OAAO,GAAG,EAAAjC,gBAAA,GAAA5G,QAAQ,CAAC0I,KAAK,cAAA9B,gBAAA,uBAAdA,gBAAA,CAAgBwB,WAAW,KAAIC,cAAc,CAACC,OAAO,CAAC,+BAA+B,CAAC;IAEpGG,CAAC,GAAGA,CAAC,GAAGK,QAAQ,CAACL,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;IAC9BE,CAAC,GAAGA,CAAC,GAAGG,QAAQ,CAACH,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;IAE9B,IAAIF,CAAC,IAAIE,CAAC,IAAI5I,YAAY,EAAE;MAC1B;MACA,IACE0I,CAAC,KAAK7H,WAAW,IACjB+H,CAAC,KAAK7H,UAAU,IAChBf,YAAY,KAAKiB,eAAe,IAChC4H,GAAG,KAAKxH,SAAS,IACjBqC,IAAI,KAAKnC,iBAAiB,EAC1B;QACAT,cAAc,CAAC4H,CAAC,CAAC;QACjB1H,aAAa,CAAC4H,CAAC,CAAC;QAChB1H,kBAAkB,CAAClB,YAAY,CAAC;QAChCsB,YAAY,CAACuH,GAAG,CAAC;QACjBrH,oBAAoB,CAACkC,IAAI,CAAC;QAC1B,IAAIoF,OAAO,EAAE1H,oBAAoB,CAAC0H,OAAO,CAAC;QAE1CR,cAAc,CAACU,OAAO,CAAC,yBAAyB,EAAEN,CAAC,CAACO,QAAQ,CAAC,CAAC,CAAC;QAC/DX,cAAc,CAACU,OAAO,CAAC,wBAAwB,EAAEJ,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;QAC9DX,cAAc,CAACU,OAAO,CAAC,6BAA6B,EAAEhJ,YAAY,CAAC;QACnE,IAAI8I,OAAO,EAAER,cAAc,CAACU,OAAO,CAAC,+BAA+B,EAAEF,OAAO,CAAC;QAC7E,IAAID,GAAG,EAAEP,cAAc,CAACU,OAAO,CAAC,uBAAuB,EAAEH,GAAG,CAAC;QAC7D,IAAInF,IAAI,EAAE4E,cAAc,CAACU,OAAO,CAAC,wBAAwB,EAAEtF,IAAI,CAAC;QAEhEoD,gBAAgB,CAAC4B,CAAC,EAAEE,CAAC,EAAE5I,YAAY,EAAE0D,IAAI,CAAC;MAC5C,CAAC,MAAM;QACLhD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC,MAAM;MACLE,QAAQ,CAAC,+EAA+E,CAAC;MACzFF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CACDT,QAAQ,CAAC0I,KAAK,EACd3I,YAAY,EACZa,WAAW,EACXE,UAAU,EACVE,eAAe,EACfI,SAAS,EACTE,iBAAiB,CAClB,CAAC;;EAEF;EACArC,SAAS,CAAC,MAAM;IACdoB,mBAAmB,CAACgF,YAAY,CAACnF,QAAQ,EAAEI,aAAa,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACJ,QAAQ,EAAEI,aAAa,CAAC,CAAC;;EAE7B;EACArB,SAAS,CAAC,MAAM;IACd,IAAI,CAACuB,OAAO,IAAIJ,gBAAgB,CAACqC,MAAM,IAAIxC,QAAQ,CAACgJ,OAAO,EAAE;MAC3D,MAAMC,IAAI,GAAG5J,CAAC,CAACW,QAAQ,CAACgJ,OAAO,CAAC;MAChC,IAAI3J,CAAC,CAAC6J,EAAE,CAACC,SAAS,CAACC,WAAW,CAACH,IAAI,CAAC,EAAE;QACpCA,IAAI,CAACE,SAAS,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;MAC5B;MACAJ,IAAI,CAACE,SAAS,CAAC;QACbG,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAI;QACfC,QAAQ,EAAE,KAAK;QACfC,IAAI,EAAE,IAAI;QACVC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX,IAAI1J,QAAQ,CAACgJ,OAAO,EAAE;QACpB,MAAMC,IAAI,GAAG5J,CAAC,CAACW,QAAQ,CAACgJ,OAAO,CAAC;QAChC,IAAI3J,CAAC,CAAC6J,EAAE,CAACC,SAAS,CAACC,WAAW,CAACH,IAAI,CAAC,EAAE;UACpCA,IAAI,CAACE,SAAS,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;QAC5B;MACF;IACF,CAAC;EACH,CAAC,EAAE,CAAC9I,OAAO,EAAEJ,gBAAgB,CAAC,CAAC;;EAE/B;EACA,MAAMwJ,cAAc,GAAG,CACrB;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,+BAA+B;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzD,IAAI1I,SAAS,GAAG,CAAC;IAAEyI,IAAI,EAAE,GAAGzI,SAAS,YAAY;IAAE0I,IAAI,EAAE,KAAK;IAAEpB,KAAK,EAAE;MAAEnG,KAAK,EAAE3B,WAAW;MAAEkG,IAAI,EAAEhG,UAAU;MAAE8H,GAAG,EAAExH;IAAU;EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EACxI;IAAEyI,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE,UAAU;IAAEpB,KAAK,EAAE;MAAEnG,KAAK,EAAE3B,WAAW;MAAEkG,IAAI,EAAEhG,UAAU;MAAE8H,GAAG,EAAExH;IAAU;EAAE,CAAC,EAC5G,IAAIE,iBAAiB,GAAG,CAAC;IAAEuI,IAAI,EAAE,GAAGvI,iBAAiB,eAAe;IAAEwI,IAAI,EAAE,YAAY9I,eAAe,gBAAgB;IAAE0H,KAAK,EAAE;MAAEnG,KAAK,EAAE3B,WAAW;MAAEkG,IAAI,EAAEhG,UAAU;MAAE8H,GAAG,EAAExH,SAAS;MAAE2F,KAAK,EAAE/F;IAAgB;EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EACzN;IAAE6I,IAAI,EAAE,aAAa3I,iBAAiB,GAAG;IAAE4I,IAAI,EAAE,YAAY9I,eAAe;EAAY,CAAC,CAC1F,CAACwE,MAAM,CAACyC,OAAO,CAAC;EAEjB,IAAIzH,OAAO,EAAE;IACX,oBACEd,OAAA;MAAKqK,SAAS,EAAC,6DAA6D;MAAAC,QAAA,gBAC1EtK,OAAA;QAAKqK,SAAS,EAAC,6BAA6B;QAACE,IAAI,EAAC;MAAQ;QAAAhG,QAAA,EAAAiG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7D1K,OAAA;QAAGqK,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAuB;QAAA/F,QAAA,EAAAiG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAnG,QAAA,EAAAiG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAEV;EAEA,IAAI1J,KAAK,EAAE;IACT,oBACEhB,OAAA;MAAKqK,SAAS,EAAC,qFAAqF;MAAAC,QAAA,gBAClGtK,OAAA;QAAGqK,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAC,SAAO,EAACtJ,KAAK;MAAA;QAAAuD,QAAA,EAAAiG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtC1K,OAAA;QACEqK,SAAS,EAAC,sBAAsB;QAChCM,OAAO,EAAEA,CAAA,KACPxK,QAAQ,CAAC,WAAW,EAAE;UAAE6I,KAAK,EAAE;YAAEnG,KAAK,EAAE3B,WAAW;YAAEkG,IAAI,EAAEhG,UAAU;YAAE8H,GAAG,EAAExH;UAAU;QAAE,CAAC,CAC1F;QAAA4I,QAAA,EACF;MAED;QAAA/F,QAAA,EAAAiG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAnG,QAAA,EAAAiG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,oBACE1K,OAAA;IACEqK,SAAS,EAAC,4DAA4D;IACtEjI,KAAK,EAAE;MACLwI,UAAU,EAAE,oDAAoD;MAChE/D,UAAU,EAAE;IACd,CAAE;IAAAyD,QAAA,eAEFtK,OAAA;MAAKqK,SAAS,EAAC,8BAA8B;MAACjI,KAAK,EAAE;QAAEyI,QAAQ,EAAE,QAAQ;QAAEC,eAAe,EAAE,WAAW;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAT,QAAA,gBAC9HtK,OAAA,CAACH,WAAW;QAACmL,IAAI,EAAEd;MAAe;QAAA3F,QAAA,EAAAiG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAErC1K,OAAA;QAAKqK,SAAS,EAAC,wDAAwD;QAAAC,QAAA,gBACrEtK,OAAA;UAAIqK,SAAS,EAAC,4BAA4B;UAAAC,QAAA,GAAC,sCACf,EAAC9I,iBAAiB,IAAI,OAAOA,iBAAiB,EAAE;QAAA;UAAA+C,QAAA,EAAAiG,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,EACJlK,QAAQ,CAACuC,MAAM,GAAG,CAAC,iBAClB/C,OAAA;UACEqK,SAAS,EAAC,2CAA2C;UACrDM,OAAO,EAAE7H,kBAAmB;UAC5BmI,KAAK,EAAC,uBAAuB;UAAAX,QAAA,gBAE7BtK,OAAA;YAAGqK,SAAS,EAAC;UAAqB;YAAA9F,QAAA,EAAAiG,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,kBACvC;QAAA;UAAAnG,QAAA,EAAAiG,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAnG,QAAA,EAAAiG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN1K,OAAA;QAAKqK,SAAS,EAAC,0BAA0B;QAAAC,QAAA,eACvCtK,OAAA;UAEEkL,GAAG,EAAE3K,QAAS;UACd8J,SAAS,EAAC,8DAA8D;UACxEjI,KAAK,EAAE;YAAE+I,KAAK,EAAE;UAAO,CAAE;UAAAb,QAAA,gBAEzBtK,OAAA;YAAOqK,SAAS,EAAC,YAAY;YAACjI,KAAK,EAAE;cAAEwI,UAAU,EAAE;YAA8C,CAAE;YAAAN,QAAA,eACjGtK,OAAA;cAAAsK,QAAA,GACG,CACC;gBAAEc,KAAK,EAAE,YAAY;gBAAEC,GAAG,EAAE;cAAY,CAAC,EACzC;gBAAED,KAAK,EAAE,cAAc;gBAAEC,GAAG,EAAE;cAAc,CAAC,EAC7C;gBAAED,KAAK,EAAE,kBAAkB;gBAAEC,GAAG,EAAE;cAAuB,CAAC,EAC1D;gBAAED,KAAK,EAAE,eAAe;gBAAEC,GAAG,EAAE;cAAoB,CAAC,EACpD;gBAAED,KAAK,EAAE,cAAc;gBAAEC,GAAG,EAAE;cAAmB,CAAC,EAClD;gBAAED,KAAK,EAAE,gBAAgB;gBAAEC,GAAG,EAAE;cAAgB,CAAC,EACjD;gBAAED,KAAK,EAAE,SAAS;gBAAEC,GAAG,EAAE;cAAU,CAAC,CACrC,CAACnI,GAAG,CAACsC,GAAG;gBAAA,IAAA8F,qBAAA;gBAAA,oBACPtL,OAAA;kBAAAsK,QAAA,GACG9E,GAAG,CAAC4F,KAAK,eACVpL,OAAA;oBACEqK,SAAS,EAAC,iCAAiC;oBAC3CrI,KAAK,GAAAsJ,qBAAA,GAAE1K,aAAa,CAAC4E,GAAG,CAAC6F,GAAG,CAAC,cAAAC,qBAAA,cAAAA,qBAAA,GAAI,KAAM;oBACvCC,QAAQ,EAAE1C,CAAC,IAAItD,kBAAkB,CAACC,GAAG,CAAC6F,GAAG,EAAExC,CAAC,CAAC2C,MAAM,CAACxJ,KAAK,CAAE;oBAAAsI,QAAA,EAE1DxF,gBAAgB,CAACU,GAAG,CAAC6F,GAAG,CAAC,CAACnI,GAAG,CAACuI,GAAG,iBAChCzL,OAAA;sBAAkBgC,KAAK,EAAEyJ,GAAI;sBAAAnB,QAAA,EAAEmB;oBAAG,GAArBA,GAAG;sBAAAlH,QAAA,EAAAiG,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAA2B,CAC5C;kBAAC;oBAAAnG,QAAA,EAAAiG,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACI,CAAC;gBAAA,GAVFlF,GAAG,CAAC6F,GAAG;kBAAA9G,QAAA,EAAAiG,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAWZ,CAAC;cAAA,CACN,CAAC,eACF1K,OAAA;gBAAIqK,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAI;gBAAA/F,QAAA,EAAAiG,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAnG,QAAA,EAAAiG,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAnG,QAAA,EAAAiG,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACR1K,OAAA;YAAAsK,QAAA,EACG5J,gBAAgB,CAACwC,GAAG,CAACC,IAAI,iBACxBnD,OAAA;cAAAsK,QAAA,gBACEtK,OAAA;gBAAAsK,QAAA,EAAKnH,IAAI,CAACC;cAAS;gBAAAmB,QAAA,EAAAiG,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzB1K,OAAA;gBAAAsK,QAAA,EAAKnH,IAAI,CAACE;cAAW;gBAAAkB,QAAA,EAAAiG,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3B1K,OAAA;gBAAAsK,QAAA,EAAKnH,IAAI,CAACG;cAAoB;gBAAAiB,QAAA,EAAAiG,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpC1K,OAAA;gBAAAsK,QAAA,EAAKnH,IAAI,CAACI;cAAiB;gBAAAgB,QAAA,EAAAiG,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjC1K,OAAA;gBAAAsK,QAAA,EAAKnH,IAAI,CAACK;cAAgB;gBAAAe,QAAA,EAAAiG,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChC1K,OAAA;gBAAAsK,QAAA,EAAKnH,IAAI,CAACM;cAAa;gBAAAc,QAAA,EAAAiG,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC7B1K,OAAA;gBAAAsK,QAAA,EAAKvI,cAAc,CAACoB,IAAI,CAACO,OAAO;cAAC;gBAAAa,QAAA,EAAAiG,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvC1K,OAAA;gBAAIqK,SAAS,EAAC,aAAa;gBAAAC,QAAA,eACzBtK,OAAA;kBACEqK,SAAS,EAAC,+CAA+C;kBACzDM,OAAO,EAAEA,CAAA,KACPxK,QAAQ,CAAC,aAAagD,IAAI,CAACC,SAAS,aAAa,EAAE;oBACjD4F,KAAK,EAAE;sBACL5F,SAAS,EAAED,IAAI,CAACC,SAAS;sBACzBC,WAAW,EAAEF,IAAI,CAACE,WAAW;sBAC7BjD,SAAS,EAAE+C,IAAI,CAAC/C,SAAS;sBACzBsI,WAAW,EAAEvF,IAAI,CAACuF,WAAW;sBAC7B7F,KAAK,EAAE3B,WAAW;sBAClBkG,IAAI,EAAEhG,UAAU;sBAChB8H,GAAG,EAAExH,SAAS;sBACd4F,WAAW,EAAE1F;oBACf;kBACF,CAAC,CACF;kBACDqJ,KAAK,EAAC,iBAAiB;kBAAAX,QAAA,EACxB;gBAED;kBAAA/F,QAAA,EAAAiG,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAnG,QAAA,EAAAiG,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GA7BEvH,IAAI,CAACC,SAAS,GAAG,GAAG,GAAGD,IAAI,CAACI,iBAAiB;cAAAgB,QAAA,EAAAiG,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA8BlD,CACL;UAAC;YAAAnG,QAAA,EAAAiG,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA,GAlEH/C,IAAI,CAACC,SAAS,CAAChH,aAAa,CAAC;UAAA2D,QAAA,EAAAiG,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmE7B;MAAC;QAAAnG,QAAA,EAAAiG,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAnG,QAAA,EAAAiG,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAnG,QAAA,EAAAiG,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxK,EAAA,CA5XID,YAAY;EAAA,QACCR,WAAW,EACQC,SAAS,EAC5BC,WAAW;AAAA;AAAA+L,EAAA,GAHxBzL,YAAY;AA8XlB,eAAeA,YAAY;AAAC,IAAAyL,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}