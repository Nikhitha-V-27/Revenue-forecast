{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Details\\\\SbuLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Table, Alert, Spinner, Button } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Breadcrumbs from '../Breadcrumbs'; // Assuming this path is correct\nimport commonData from '../../data/commonData.json'; // Assuming this path is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SbuLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    month,\n    year\n  } = useLocation().state || {};\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Backend URL for API calls\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency settings from commonData\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n\n  // Initialize Intl.NumberFormat for currency formatting\n  const formatter = new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Helper to format values, handling exponent strings and currency\n  const formatValue = val => {\n    if (typeof val === 'string') {\n      const m = val.match(/^e(\\d+)$/i); // Check for \"eX\" format\n      if (m) {\n        val = Math.pow(10, Number(m[1])); // Convert \"eX\" to 10^X\n      } else if (!isNaN(val)) {\n        val = Number(val); // Convert string numbers to actual numbers\n      }\n    }\n\n    // Format as currency if it's a finite number\n    if (typeof val === 'number' && isFinite(val)) {\n      return formatter.format(val);\n    }\n    return val; // Return original value if not a number or not for currency formatting\n  };\n\n  // Helper to get month name from month number\n  const getMonthName = m => new Date(year, m - 1).toLocaleString('en-US', {\n    month: 'long'\n  });\n\n  // Fetch SBU data on component mount or when month/year change\n  useEffect(() => {\n    if (!month || !year) {\n      setError('Month and year missing. Go back and select a period.');\n      setLoading(false);\n      return;\n    }\n    const fetchSbu = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        const payload = {\n          month: Number(month),\n          year: Number(year),\n          monthNameParam: getMonthName(month).toLowerCase() // Pass month name in lowercase\n        };\n        const resp = await axios.post(`${BACKEND_URL}/api/sbu`,\n        // API endpoint for SBU data\n        payload);\n        setData(resp.data); // Set fetched data to state\n      } catch (err) {\n        var _err$response;\n        // Handle API errors\n        console.error(\"Error fetching SBU data:\", err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message || 'Failed to fetch SBU data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSbu(); // Call the fetch function\n  }, [month, year, BACKEND_URL]); // Dependencies for useEffect\n\n  // Dynamically determine table columns based on the first data item\n  // Filters out specific revenue fields if they are not meant for direct display\n  const columns = data.length ? Object.keys(data[0]).filter(col => {\n    const lc = col.toLowerCase();\n    return lc !== 'revenue' && lc !== 'sburevenue' && lc !== 'totalsburevenue' && lc !== 'month' &&\n    // Exclude month from columns if it's in the data\n    lc !== 'year' &&\n    // Exclude year from columns if it's in the data\n    lc !== 'monthnameparam' // Exclude monthNameParam\n    ;\n  }) : [];\n\n  // Append a 'View' column to the headers for navigation\n  const headerCols = [...columns, 'View Accounts']; // Changed to 'View Accounts' for clarity\n\n  // Define breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  },\n  // Root of the dashboard\n  {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  },\n  // Assuming 'upload' is the page where month/year are selected\n  {\n    name: 'SBU Level',\n    page: 'sbu'\n  } // Current page\n  ];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 fw-semibold text-dark\",\n        children: [\"\\uD83D\\uDCCA SBU Summary for\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary\",\n          children: [getMonthName(month), \" \", year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center my-5\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading SBU Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload') // Navigate back to the upload/selection page\n          ,\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this) : data.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-muted py-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-5\",\n          children: [\"No SBU data available for \", getMonthName(month), \" \", year, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please ensure data has been uploaded for this period.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          hover: true,\n          bordered: true,\n          className: \"align-middle mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: headerCols.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatValue(row[col])\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 25\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  variant: \"outline-primary\" // Changed to outline for consistency\n                  ,\n                  className: \"rounded-circle\" // Added rounded-circle for consistency\n                  ,\n                  onClick: () => navigate('/accounts', {\n                    state: {\n                      month,\n                      year,\n                      sbu: row.sbuName // Assuming 'sbuName' is the field holding the SBU's name\n                    }\n                  }),\n                  title: `View Accounts for ${row.sbuName || 'this SBU'}`,\n                  children: \"\\uD83D\\uDD0D \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 23\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(SbuLevel, \"TYwVLPnslVpEk7yPc/h0eOaC6p8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SbuLevel;\nexport default SbuLevel;\nvar _c;\n$RefreshReg$(_c, \"SbuLevel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Table","Alert","Spinner","Button","useLocation","useNavigate","Breadcrumbs","commonData","jsxDEV","_jsxDEV","SbuLevel","_s","navigate","month","year","state","data","setData","loading","setLoading","error","setError","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatter","Intl","NumberFormat","style","formatValue","val","m","match","Math","pow","Number","isNaN","isFinite","format","getMonthName","Date","toLocaleString","fetchSbu","payload","monthNameParam","toLowerCase","resp","post","err","_err$response","console","response","message","columns","length","Object","keys","filter","col","lc","headerCols","breadcrumbPath","name","page","className","background","fontFamily","children","maxWidth","backgroundColor","borderRadius","path","fileName","_jsxFileName","lineNumber","columnNumber","animation","role","onClick","hover","bordered","width","map","row","idx","size","variant","sbu","sbuName","title","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Details/SbuLevel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Table,\r\n  Alert,\r\n  Spinner,\r\n  Button\r\n} from 'react-bootstrap';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Breadcrumbs from '../Breadcrumbs'; // Assuming this path is correct\r\nimport commonData from '../../data/commonData.json'; // Assuming this path is correct\r\n\r\nconst SbuLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { month, year } = useLocation().state || {};\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Backend URL for API calls\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency settings from commonData\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  } = commonData.currencySettings;\r\n\r\n  // Initialize Intl.NumberFormat for currency formatting\r\n  const formatter = new Intl.NumberFormat(locale, {\r\n    style: 'currency',\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  });\r\n\r\n  // Helper to format values, handling exponent strings and currency\r\n  const formatValue = (val) => {\r\n    if (typeof val === 'string') {\r\n      const m = val.match(/^e(\\d+)$/i); // Check for \"eX\" format\r\n      if (m) {\r\n        val = Math.pow(10, Number(m[1])); // Convert \"eX\" to 10^X\r\n      } else if (!isNaN(val)) {\r\n        val = Number(val); // Convert string numbers to actual numbers\r\n      }\r\n    }\r\n\r\n    // Format as currency if it's a finite number\r\n    if (typeof val === 'number' && isFinite(val)) {\r\n      return formatter.format(val);\r\n    }\r\n    return val; // Return original value if not a number or not for currency formatting\r\n  };\r\n\r\n  // Helper to get month name from month number\r\n  const getMonthName = (m) =>\r\n    new Date(year, m - 1).toLocaleString('en-US', { month: 'long' });\r\n\r\n  // Fetch SBU data on component mount or when month/year change\r\n  useEffect(() => {\r\n    if (!month || !year) {\r\n      setError('Month and year missing. Go back and select a period.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchSbu = async () => {\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n        const payload = {\r\n          month: Number(month),\r\n          year: Number(year),\r\n          monthNameParam: getMonthName(month).toLowerCase() // Pass month name in lowercase\r\n        };\r\n        const resp = await axios.post(\r\n          `${BACKEND_URL}/api/sbu`, // API endpoint for SBU data\r\n          payload\r\n        );\r\n        setData(resp.data); // Set fetched data to state\r\n      } catch (err) {\r\n        // Handle API errors\r\n        console.error(\"Error fetching SBU data:\", err);\r\n        setError(err.response?.data || err.message || 'Failed to fetch SBU data.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSbu(); // Call the fetch function\r\n  }, [month, year, BACKEND_URL]); // Dependencies for useEffect\r\n\r\n  // Dynamically determine table columns based on the first data item\r\n  // Filters out specific revenue fields if they are not meant for direct display\r\n  const columns = data.length\r\n    ? Object.keys(data[0]).filter((col) => {\r\n        const lc = col.toLowerCase();\r\n        return (\r\n          lc !== 'revenue' &&\r\n          lc !== 'sburevenue' &&\r\n          lc !== 'totalsburevenue' &&\r\n          lc !== 'month' && // Exclude month from columns if it's in the data\r\n          lc !== 'year' &&  // Exclude year from columns if it's in the data\r\n          lc !== 'monthnameparam' // Exclude monthNameParam\r\n        );\r\n      })\r\n    : [];\r\n\r\n  // Append a 'View' column to the headers for navigation\r\n  const headerCols = [...columns, 'View Accounts']; // Changed to 'View Accounts' for clarity\r\n\r\n  // Define breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' }, // Root of the dashboard\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' }, // Assuming 'upload' is the page where month/year are selected\r\n    { name: 'SBU Level', page: 'sbu' }, // Current page\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        {/* Breadcrumbs component */}\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        {/* Removed Back button here */}\r\n\r\n        {/* Page title */}\r\n        <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n          📊 SBU Summary for{' '}\r\n          <span className=\"text-primary\">\r\n            {getMonthName(month)} {year}\r\n          </span>\r\n        </h2>\r\n\r\n        {/* Conditional rendering for loading, error, or data display */}\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center my-5\">\r\n            <Spinner animation=\"border\" role=\"status\" className=\"me-2\" />\r\n            <p className=\"ms-3 text-primary\">Loading SBU Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')} // Navigate back to the upload/selection page\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          data.length === 0 ? (\r\n            <div className=\"text-center text-muted py-5\">\r\n              <p className=\"fs-5\">No SBU data available for {getMonthName(month)} {year}.</p>\r\n              <p>Please ensure data has been uploaded for this period.</p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"table-responsive rounded\">\r\n              <Table\r\n                hover\r\n                bordered\r\n                className=\"align-middle mb-0\"\r\n                style={{ width: '100%' }}\r\n              >\r\n                <thead\r\n                  className=\"text-white\"\r\n                  style={{\r\n                    background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                  }}\r\n                >\r\n                  <tr>\r\n                    {headerCols.map((col) => (\r\n                      <th key={col}>{col}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {data.map((row, idx) => (\r\n                    <tr key={idx}>\r\n                      {columns.map((col) => (\r\n                        <td key={col}>{formatValue(row[col])}</td>\r\n                      ))}\r\n                      <td className=\"text-center\">\r\n                        {/* Button to navigate to Account Level for the specific SBU */}\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"outline-primary\" // Changed to outline for consistency\r\n                          className=\"rounded-circle\" // Added rounded-circle for consistency\r\n                          onClick={() =>\r\n                            navigate('/accounts', {\r\n                              state: {\r\n                                month,\r\n                                year,\r\n                                sbu: row.sbuName // Assuming 'sbuName' is the field holding the SBU's name\r\n                              }\r\n                            })\r\n                          }\r\n                          title={`View Accounts for ${row.sbuName || 'this SBU'}`}\r\n                        >\r\n                          🔍 {/* Using emoji for consistency */}\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SbuLevel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,iBAAiB;AACxB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,WAAW,MAAM,gBAAgB,CAAC,CAAC;AAC1C,OAAOC,UAAU,MAAM,4BAA4B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ,KAAK;IAAEC;EAAK,CAAC,GAAGV,WAAW,CAAC,CAAC,CAACW,KAAK,IAAI,CAAC,CAAC;EAEjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM0B,WAAW,GAAG,uBAAuB;;EAE3C;EACA,MAAM;IACJC,MAAM;IACNC,QAAQ;IACRC,qBAAqB;IACrBC;EACF,CAAC,GAAGnB,UAAU,CAACoB,gBAAgB;;EAE/B;EACA,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAACP,MAAM,EAAE;IAC9CQ,KAAK,EAAE,UAAU;IACjBP,QAAQ;IACRC,qBAAqB;IACrBC;EACF,CAAC,CAAC;;EAEF;EACA,MAAMM,WAAW,GAAIC,GAAG,IAAK;IAC3B,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAMC,CAAC,GAAGD,GAAG,CAACE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;MAClC,IAAID,CAAC,EAAE;QACLD,GAAG,GAAGG,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEC,MAAM,CAACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,MAAM,IAAI,CAACK,KAAK,CAACN,GAAG,CAAC,EAAE;QACtBA,GAAG,GAAGK,MAAM,CAACL,GAAG,CAAC,CAAC,CAAC;MACrB;IACF;;IAEA;IACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIO,QAAQ,CAACP,GAAG,CAAC,EAAE;MAC5C,OAAOL,SAAS,CAACa,MAAM,CAACR,GAAG,CAAC;IAC9B;IACA,OAAOA,GAAG,CAAC,CAAC;EACd,CAAC;;EAED;EACA,MAAMS,YAAY,GAAIR,CAAC,IACrB,IAAIS,IAAI,CAAC7B,IAAI,EAAEoB,CAAC,GAAG,CAAC,CAAC,CAACU,cAAc,CAAC,OAAO,EAAE;IAAE/B,KAAK,EAAE;EAAO,CAAC,CAAC;;EAElE;EACAhB,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,KAAK,IAAI,CAACC,IAAI,EAAE;MACnBO,QAAQ,CAAC,sDAAsD,CAAC;MAChEF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAM0B,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B1B,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;MACZ,IAAI;QACF,MAAMyB,OAAO,GAAG;UACdjC,KAAK,EAAEyB,MAAM,CAACzB,KAAK,CAAC;UACpBC,IAAI,EAAEwB,MAAM,CAACxB,IAAI,CAAC;UAClBiC,cAAc,EAAEL,YAAY,CAAC7B,KAAK,CAAC,CAACmC,WAAW,CAAC,CAAC,CAAC;QACpD,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMnD,KAAK,CAACoD,IAAI,CAC3B,GAAG5B,WAAW,UAAU;QAAE;QAC1BwB,OACF,CAAC;QACD7B,OAAO,CAACgC,IAAI,CAACjC,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,OAAOmC,GAAG,EAAE;QAAA,IAAAC,aAAA;QACZ;QACAC,OAAO,CAACjC,KAAK,CAAC,0BAA0B,EAAE+B,GAAG,CAAC;QAC9C9B,QAAQ,CAAC,EAAA+B,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,uBAAZA,aAAA,CAAcpC,IAAI,KAAImC,GAAG,CAACI,OAAO,IAAI,2BAA2B,CAAC;MAC5E,CAAC,SAAS;QACRpC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED0B,QAAQ,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,EAAE,CAAChC,KAAK,EAAEC,IAAI,EAAEQ,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA;EACA,MAAMkC,OAAO,GAAGxC,IAAI,CAACyC,MAAM,GACvBC,MAAM,CAACC,IAAI,CAAC3C,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC4C,MAAM,CAAEC,GAAG,IAAK;IACnC,MAAMC,EAAE,GAAGD,GAAG,CAACb,WAAW,CAAC,CAAC;IAC5B,OACEc,EAAE,KAAK,SAAS,IAChBA,EAAE,KAAK,YAAY,IACnBA,EAAE,KAAK,iBAAiB,IACxBA,EAAE,KAAK,OAAO;IAAI;IAClBA,EAAE,KAAK,MAAM;IAAK;IAClBA,EAAE,KAAK,gBAAgB,CAAC;IAAA;EAE5B,CAAC,CAAC,GACF,EAAE;;EAEN;EACA,MAAMC,UAAU,GAAG,CAAC,GAAGP,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;;EAElD;EACA,MAAMQ,cAAc,GAAG,CACrB;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAG,CAAC;EAAE;EACrC;IAAED,IAAI,EAAE,+BAA+B;IAAEC,IAAI,EAAE;EAAS,CAAC;EAAE;EAC3D;IAAED,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAM,CAAC,CAAE;EAAA,CACrC;EAED,oBACEzD,OAAA;IACE0D,SAAS,EAAC,4DAA4D;IACtEpC,KAAK,EAAE;MACLqC,UAAU,EAAE,oDAAoD;MAChEC,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,eAEF7D,OAAA;MACE0D,SAAS,EAAC,8BAA8B;MACxCpC,KAAK,EAAE;QACLwC,QAAQ,EAAE,QAAQ;QAClBC,eAAe,EAAE,WAAW;QAC5BC,YAAY,EAAE;MAChB,CAAE;MAAAH,QAAA,gBAGF7D,OAAA,CAACH,WAAW;QAACoE,IAAI,EAAEV;MAAe;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAKrCrE,OAAA;QAAI0D,SAAS,EAAC,wCAAwC;QAAAG,QAAA,GAAC,8BACnC,EAAC,GAAG,eACtB7D,OAAA;UAAM0D,SAAS,EAAC,cAAc;UAAAG,QAAA,GAC3B5B,YAAY,CAAC7B,KAAK,CAAC,EAAC,GAAC,EAACC,IAAI;QAAA;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAGJ5D,OAAO,gBACNT,OAAA;QAAK0D,SAAS,EAAC,uDAAuD;QAAAG,QAAA,gBACpE7D,OAAA,CAACP,OAAO;UAAC6E,SAAS,EAAC,QAAQ;UAACC,IAAI,EAAC,QAAQ;UAACb,SAAS,EAAC;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7DrE,OAAA;UAAG0D,SAAS,EAAC,mBAAmB;UAAAG,QAAA,EAAC;QAAmB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,GACJ1D,KAAK,gBACPX,OAAA;QAAK0D,SAAS,EAAC,0EAA0E;QAAAG,QAAA,gBACvF7D,OAAA;UAAG0D,SAAS,EAAC,MAAM;UAAAG,QAAA,GAAC,SAAO,EAAClD,KAAK;QAAA;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtCrE,OAAA;UACE0D,SAAS,EAAC,sBAAsB;UAChCc,OAAO,EAAEA,CAAA,KAAMrE,QAAQ,CAAC,SAAS,CAAE,CAAC;UAAA;UAAA0D,QAAA,EACrC;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,GAEN9D,IAAI,CAACyC,MAAM,KAAK,CAAC,gBACfhD,OAAA;QAAK0D,SAAS,EAAC,6BAA6B;QAAAG,QAAA,gBAC1C7D,OAAA;UAAG0D,SAAS,EAAC,MAAM;UAAAG,QAAA,GAAC,4BAA0B,EAAC5B,YAAY,CAAC7B,KAAK,CAAC,EAAC,GAAC,EAACC,IAAI,EAAC,GAAC;QAAA;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/ErE,OAAA;UAAA6D,QAAA,EAAG;QAAqD;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,gBAENrE,OAAA;QAAK0D,SAAS,EAAC,0BAA0B;QAAAG,QAAA,eACvC7D,OAAA,CAACT,KAAK;UACJkF,KAAK;UACLC,QAAQ;UACRhB,SAAS,EAAC,mBAAmB;UAC7BpC,KAAK,EAAE;YAAEqD,KAAK,EAAE;UAAO,CAAE;UAAAd,QAAA,gBAEzB7D,OAAA;YACE0D,SAAS,EAAC,YAAY;YACtBpC,KAAK,EAAE;cACLqC,UAAU,EAAE;YACd,CAAE;YAAAE,QAAA,eAEF7D,OAAA;cAAA6D,QAAA,EACGP,UAAU,CAACsB,GAAG,CAAExB,GAAG,iBAClBpD,OAAA;gBAAA6D,QAAA,EAAeT;cAAG,GAATA,GAAG;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CACxB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRrE,OAAA;YAAA6D,QAAA,EACGtD,IAAI,CAACqE,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACjB9E,OAAA;cAAA6D,QAAA,GACGd,OAAO,CAAC6B,GAAG,CAAExB,GAAG,iBACfpD,OAAA;gBAAA6D,QAAA,EAAetC,WAAW,CAACsD,GAAG,CAACzB,GAAG,CAAC;cAAC,GAA3BA,GAAG;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA6B,CAC1C,CAAC,eACFrE,OAAA;gBAAI0D,SAAS,EAAC,aAAa;gBAAAG,QAAA,eAEzB7D,OAAA,CAACN,MAAM;kBACLqF,IAAI,EAAC,IAAI;kBACTC,OAAO,EAAC,iBAAiB,CAAC;kBAAA;kBAC1BtB,SAAS,EAAC,gBAAgB,CAAC;kBAAA;kBAC3Bc,OAAO,EAAEA,CAAA,KACPrE,QAAQ,CAAC,WAAW,EAAE;oBACpBG,KAAK,EAAE;sBACLF,KAAK;sBACLC,IAAI;sBACJ4E,GAAG,EAAEJ,GAAG,CAACK,OAAO,CAAC;oBACnB;kBACF,CAAC,CACF;kBACDC,KAAK,EAAE,qBAAqBN,GAAG,CAACK,OAAO,IAAI,UAAU,EAAG;kBAAArB,QAAA,EACzD;gBACI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GAvBES,GAAG;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAwBR,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAER;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnE,EAAA,CAxNID,QAAQ;EAAA,QACKL,WAAW,EACJD,WAAW;AAAA;AAAAyF,EAAA,GAF/BnF,QAAQ;AA0Nd,eAAeA,QAAQ;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}