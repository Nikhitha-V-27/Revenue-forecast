{"ast":null,"code":"/*! DataTables 2.3.2\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\nvar DataTable = function (selector, options) {\n  // Check if called with a window or jQuery object for DOM less applications\n  // This is for backwards compatibility\n  if (DataTable.factory(selector, options)) {\n    return DataTable;\n  }\n\n  // When creating with `new`, create a new DataTable, returning the API instance\n  if (this instanceof DataTable) {\n    return $(selector).DataTable(options);\n  } else {\n    // Argument switching\n    options = selector;\n  }\n  var _that = this;\n  var emptyInit = options === undefined;\n  var len = this.length;\n  if (emptyInit) {\n    options = {};\n  }\n\n  // Method to get DT API instance from jQuery object\n  this.api = function () {\n    return new _Api(this);\n  };\n  this.each(function () {\n    // For each initialisation we want to give it a clean initialisation\n    // object that can be bashed around\n    var o = {};\n    var oInit = len > 1 ?\n    // optimisation for single table case\n    _fnExtend(o, options, true) : options;\n    var i = 0,\n      iLen;\n    var sId = this.getAttribute('id');\n    var defaults = DataTable.defaults;\n    var $this = $(this);\n\n    // Sanity check\n    if (this.nodeName.toLowerCase() != 'table') {\n      _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n      return;\n    }\n\n    // Special case for options\n    if (oInit.on && oInit.on.options) {\n      _fnListener($this, 'options', oInit.on.options);\n    }\n    $this.trigger('options.dt', oInit);\n\n    /* Backwards compatibility for the defaults */\n    _fnCompatOpts(defaults);\n    _fnCompatCols(defaults.column);\n\n    /* Convert the camel-case defaults to Hungarian */\n    _fnCamelToHungarian(defaults, defaults, true);\n    _fnCamelToHungarian(defaults.column, defaults.column, true);\n\n    /* Setting up the initialisation object */\n    _fnCamelToHungarian(defaults, $.extend(oInit, _fnEscapeObject($this.data())), true);\n\n    /* Check to see if we are re-initialising a table */\n    var allSettings = DataTable.settings;\n    for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n      var s = allSettings[i];\n\n      /* Base check on table node */\n      if (s.nTable == this || s.nTHead && s.nTHead.parentNode == this || s.nTFoot && s.nTFoot.parentNode == this) {\n        var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n        var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n        if (emptyInit || bRetrieve) {\n          return s.oInstance;\n        } else if (bDestroy) {\n          new DataTable.Api(s).destroy();\n          break;\n        } else {\n          _fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n          return;\n        }\n      }\n\n      /* If the element we are initialising has the same ID as a table which was previously\n       * initialised, but the table nodes don't match (from before) then we destroy the old\n       * instance by simply deleting it. This is under the assumption that the table has been\n       * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n       */\n      if (s.sTableId == this.id) {\n        allSettings.splice(i, 1);\n        break;\n      }\n    }\n\n    /* Ensure the table has an ID - required for accessibility */\n    if (sId === null || sId === \"\") {\n      sId = \"DataTables_Table_\" + DataTable.ext._unique++;\n      this.id = sId;\n    }\n\n    /* Create the settings object for this table and set some of the default parameters */\n    var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n      \"sDestroyWidth\": $this[0].style.width,\n      \"sInstance\": sId,\n      \"sTableId\": sId,\n      colgroup: $('<colgroup>').prependTo(this),\n      fastData: function (row, column, type) {\n        return _fnGetCellData(oSettings, row, column, type);\n      }\n    });\n    oSettings.nTable = this;\n    oSettings.oInit = oInit;\n    allSettings.push(oSettings);\n\n    // Make a single API instance available for internal handling\n    oSettings.api = new _Api(oSettings);\n\n    // Need to add the instance after the instance after the settings object has been added\n    // to the settings array, so we can self reference the table instance if more than one\n    oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable();\n\n    // Backwards compatibility, before we apply all the defaults\n    _fnCompatOpts(oInit);\n\n    // If the length menu is given, but the init display length is not, use the length menu\n    if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n      oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : $.isPlainObject(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0].value : oInit.aLengthMenu[0];\n    }\n\n    // Apply the defaults and init options to make a single init object will all\n    // options defined from defaults and instance options.\n    oInit = _fnExtend($.extend(true, {}, defaults), oInit);\n\n    // Map the initialisation options onto the settings object\n    _fnMap(oSettings.oFeatures, oInit, [\"bPaginate\", \"bLengthChange\", \"bFilter\", \"bSort\", \"bSortMulti\", \"bInfo\", \"bProcessing\", \"bAutoWidth\", \"bSortClasses\", \"bServerSide\", \"bDeferRender\"]);\n    _fnMap(oSettings, oInit, [\"ajax\", \"fnFormatNumber\", \"sServerMethod\", \"aaSorting\", \"aaSortingFixed\", \"aLengthMenu\", \"sPaginationType\", \"iStateDuration\", \"bSortCellsTop\", \"iTabIndex\", \"sDom\", \"fnStateLoadCallback\", \"fnStateSaveCallback\", \"renderer\", \"searchDelay\", \"rowId\", \"caption\", \"layout\", \"orderDescReverse\", \"orderIndicators\", \"orderHandler\", \"titleRow\", \"typeDetect\", [\"iCookieDuration\", \"iStateDuration\"],\n    // backwards compat\n    [\"oSearch\", \"oPreviousSearch\"], [\"aoSearchCols\", \"aoPreSearchCols\"], [\"iDisplayLength\", \"_iDisplayLength\"]]);\n    _fnMap(oSettings.oScroll, oInit, [[\"sScrollX\", \"sX\"], [\"sScrollXInner\", \"sXInner\"], [\"sScrollY\", \"sY\"], [\"bScrollCollapse\", \"bCollapse\"]]);\n    _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n\n    /* Callback functions which are array driven */\n    _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback);\n    _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams);\n    _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams);\n    _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded);\n    _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback);\n    _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow);\n    _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback);\n    _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback);\n    _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete);\n    _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback);\n    oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n\n    // Add event listeners\n    if (oInit.on) {\n      Object.keys(oInit.on).forEach(function (key) {\n        _fnListener($this, key, oInit.on[key]);\n      });\n    }\n\n    /* Browser support detection */\n    _fnBrowserDetect(oSettings);\n    var oClasses = oSettings.oClasses;\n    $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n    $this.addClass(oClasses.table);\n    if (!oSettings.oFeatures.bPaginate) {\n      oInit.iDisplayStart = 0;\n    }\n    if (oSettings.iInitDisplayStart === undefined) {\n      /* Display start point, taking into account the save saving */\n      oSettings.iInitDisplayStart = oInit.iDisplayStart;\n      oSettings._iDisplayStart = oInit.iDisplayStart;\n    }\n    var defer = oInit.iDeferLoading;\n    if (defer !== null) {\n      oSettings.deferLoading = true;\n      var tmp = Array.isArray(defer);\n      oSettings._iRecordsDisplay = tmp ? defer[0] : defer;\n      oSettings._iRecordsTotal = tmp ? defer[1] : defer;\n    }\n\n    /*\n     * Columns\n     * See if we should load columns automatically or use defined ones\n     */\n    var columnsInit = [];\n    var thead = this.getElementsByTagName('thead');\n    var initHeaderLayout = _fnDetectHeader(oSettings, thead[0]);\n\n    // If we don't have a columns array, then generate one with nulls\n    if (oInit.aoColumns) {\n      columnsInit = oInit.aoColumns;\n    } else if (initHeaderLayout.length) {\n      for (i = 0, iLen = initHeaderLayout[0].length; i < iLen; i++) {\n        columnsInit.push(null);\n      }\n    }\n\n    // Add the columns\n    for (i = 0, iLen = columnsInit.length; i < iLen; i++) {\n      _fnAddColumn(oSettings);\n    }\n\n    // Apply the column definitions\n    _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n      _fnColumnOptions(oSettings, iCol, oDef);\n    });\n\n    /* HTML5 attribute detection - build an mData object automatically if the\n     * attributes are found\n     */\n    var rowOne = $this.children('tbody').find('tr:first-child').eq(0);\n    if (rowOne.length) {\n      var a = function (cell, name) {\n        return cell.getAttribute('data-' + name) !== null ? name : null;\n      };\n      $(rowOne[0]).children('th, td').each(function (i, cell) {\n        var col = oSettings.aoColumns[i];\n        if (!col) {\n          _fnLog(oSettings, 0, 'Incorrect column count', 18);\n        }\n        if (col.mData === i) {\n          var sort = a(cell, 'sort') || a(cell, 'order');\n          var filter = a(cell, 'filter') || a(cell, 'search');\n          if (sort !== null || filter !== null) {\n            col.mData = {\n              _: i + '.display',\n              sort: sort !== null ? i + '.@data-' + sort : undefined,\n              type: sort !== null ? i + '.@data-' + sort : undefined,\n              filter: filter !== null ? i + '.@data-' + filter : undefined\n            };\n            col._isArrayHost = true;\n            _fnColumnOptions(oSettings, i);\n          }\n        }\n      });\n    }\n\n    // Must be done after everything which can be overridden by the state saving!\n    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState);\n    var features = oSettings.oFeatures;\n    if (oInit.bStateSave) {\n      features.bStateSave = true;\n    }\n\n    // If aaSorting is not defined, then we use the first indicator in asSorting\n    // in case that has been altered, so the default sort reflects that option\n    if (oInit.aaSorting === undefined) {\n      var sorting = oSettings.aaSorting;\n      for (i = 0, iLen = sorting.length; i < iLen; i++) {\n        sorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n      }\n    }\n\n    // Do a first pass on the sorting classes (allows any size changes to be taken into\n    // account, and also will apply sorting disabled classes if disabled\n    _fnSortingClasses(oSettings);\n    _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n      if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n        _fnSortingClasses(oSettings);\n      }\n    });\n\n    /*\n     * Table HTML init\n     * Cache the header, body and footer as required, creating them if needed\n     */\n    var caption = $this.children('caption');\n    if (oSettings.caption) {\n      if (caption.length === 0) {\n        caption = $('<caption/>').appendTo($this);\n      }\n      caption.html(oSettings.caption);\n    }\n\n    // Store the caption side, so we can remove the element from the document\n    // when creating the element\n    if (caption.length) {\n      caption[0]._captionSide = caption.css('caption-side');\n      oSettings.captionNode = caption[0];\n    }\n    if (thead.length === 0) {\n      thead = $('<thead/>').appendTo($this);\n    }\n    oSettings.nTHead = thead[0];\n    var tbody = $this.children('tbody');\n    if (tbody.length === 0) {\n      tbody = $('<tbody/>').insertAfter(thead);\n    }\n    oSettings.nTBody = tbody[0];\n    var tfoot = $this.children('tfoot');\n    if (tfoot.length === 0) {\n      // If we are a scrolling table, and no footer has been given, then we need to create\n      // a tfoot element for the caption element to be appended to\n      tfoot = $('<tfoot/>').appendTo($this);\n    }\n    oSettings.nTFoot = tfoot[0];\n\n    // Copy the data index array\n    oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n    // Initialisation complete - table can be drawn\n    oSettings.bInitialised = true;\n\n    // Language definitions\n    var oLanguage = oSettings.oLanguage;\n    $.extend(true, oLanguage, oInit.oLanguage);\n    if (oLanguage.sUrl) {\n      // Get the language definitions from a file\n      $.ajax({\n        dataType: 'json',\n        url: oLanguage.sUrl,\n        success: function (json) {\n          _fnCamelToHungarian(defaults.oLanguage, json);\n          $.extend(true, oLanguage, json, oSettings.oInit.oLanguage);\n          _fnCallbackFire(oSettings, null, 'i18n', [oSettings], true);\n          _fnInitialise(oSettings);\n        },\n        error: function () {\n          // Error occurred loading language file\n          _fnLog(oSettings, 0, 'i18n file loading error', 21);\n\n          // Continue on as best we can\n          _fnInitialise(oSettings);\n        }\n      });\n    } else {\n      _fnCallbackFire(oSettings, null, 'i18n', [oSettings], true);\n      _fnInitialise(oSettings);\n    }\n  });\n  _that = null;\n  return this;\n};\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n  /**\n   * DataTables build type (expanded by the download builder)\n   *\n   *  @type string\n   */\n  builder: \"-source-\",\n  /**\n   * Buttons. For use with the Buttons extension for DataTables. This is\n   * defined here so other extensions can define buttons regardless of load\n   * order. It is _not_ used by DataTables core.\n   *\n   *  @type object\n   *  @default {}\n   */\n  buttons: {},\n  /**\n   * ColumnControl buttons and content\n   *\n   *  @type object\n   */\n  ccContent: {},\n  /**\n   * Element class names\n   *\n   *  @type object\n   *  @default {}\n   */\n  classes: {},\n  /**\n   * Error reporting.\n   * \n   * How should DataTables report an error. Can take the value 'alert',\n   * 'throw', 'none' or a function.\n   *\n   *  @type string|function\n   *  @default alert\n   */\n  errMode: \"alert\",\n  /** HTML entity escaping */\n  escape: {\n    /** When reading data-* attributes for initialisation options */\n    attributes: false\n  },\n  /**\n   * Legacy so v1 plug-ins don't throw js errors on load\n   */\n  feature: [],\n  /**\n   * Feature plug-ins.\n   * \n   * This is an object of callbacks which provide the features for DataTables\n   * to be initialised via the `layout` option.\n   */\n  features: {},\n  /**\n   * Row searching.\n   * \n   * This method of searching is complimentary to the default type based\n   * searching, and a lot more comprehensive as it allows you complete control\n   * over the searching logic. Each element in this array is a function\n   * (parameters described below) that is called for every row in the table,\n   * and your logic decides if it should be included in the searching data set\n   * or not.\n   *\n   * Searching functions have the following input parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{array|object}` Data for the row to be processed (same as the\n   *    original format that was passed in as the data source, or an array\n   *    from a DOM data source\n   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n   *    can be useful to retrieve the `TR` element if you need DOM interaction.\n   *\n   * And the following return is expected:\n   *\n   * * {boolean} Include the row in the searched result set (true) or not\n   *   (false)\n   *\n   * Note that as with the main search ability in DataTables, technically this\n   * is \"filtering\", since it is subtractive. However, for consistency in\n   * naming we call it searching here.\n   *\n   *  @type array\n   *  @default []\n   *\n   *  @example\n   *    // The following example shows custom search being applied to the\n   *    // fourth column (i.e. the data[3] index) based on two input values\n   *    // from the end-user, matching the data in a certain range.\n   *    $.fn.dataTable.ext.search.push(\n   *      function( settings, data, dataIndex ) {\n   *        var min = document.getElementById('min').value * 1;\n   *        var max = document.getElementById('max').value * 1;\n   *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n   *\n   *        if ( min == \"\" && max == \"\" ) {\n   *          return true;\n   *        }\n   *        else if ( min == \"\" && version < max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && \"\" == max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && version < max ) {\n   *          return true;\n   *        }\n   *        return false;\n   *      }\n   *    );\n   */\n  search: [],\n  /**\n   * Selector extensions\n   *\n   * The `selector` option can be used to extend the options available for the\n   * selector modifier options (`selector-modifier` object data type) that\n   * each of the three built in selector types offer (row, column and cell +\n   * their plural counterparts). For example the Select extension uses this\n   * mechanism to provide an option to select only rows, columns and cells\n   * that have been marked as selected by the end user (`{selected: true}`),\n   * which can be used in conjunction with the existing built in selector\n   * options.\n   *\n   * Each property is an array to which functions can be pushed. The functions\n   * take three attributes:\n   *\n   * * Settings object for the host table\n   * * Options object (`selector-modifier` object type)\n   * * Array of selected item indexes\n   *\n   * The return is an array of the resulting item indexes after the custom\n   * selector has been applied.\n   *\n   *  @type object\n   */\n  selector: {\n    cell: [],\n    column: [],\n    row: []\n  },\n  /**\n   * Legacy configuration options. Enable and disable legacy options that\n   * are available in DataTables.\n   *\n   *  @type object\n   */\n  legacy: {\n    /**\n     * Enable / disable DataTables 1.9 compatible server-side processing\n     * requests\n     *\n     *  @type boolean\n     *  @default null\n     */\n    ajax: null\n  },\n  /**\n   * Pagination plug-in methods.\n   * \n   * Each entry in this object is a function and defines which buttons should\n   * be shown by the pagination rendering method that is used for the table:\n   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n   * buttons are displayed in the document, while the functions here tell it\n   * what buttons to display. This is done by returning an array of button\n   * descriptions (what each button will do).\n   *\n   * Pagination types (the four built in options and any additional plug-in\n   * options defined here) can be used through the `paginationType`\n   * initialisation parameter.\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{int} page` The current page index\n   * 2. `{int} pages` The number of pages in the table\n   *\n   * Each function is expected to return an array where each element of the\n   * array can be one of:\n   *\n   * * `first` - Jump to first page when activated\n   * * `last` - Jump to last page when activated\n   * * `previous` - Show previous page when activated\n   * * `next` - Show next page when activated\n   * * `{int}` - Show page of the index given\n   * * `{array}` - A nested array containing the above elements to add a\n   *   containing 'DIV' element (might be useful for styling).\n   *\n   * Note that DataTables v1.9- used this object slightly differently whereby\n   * an object with two functions would be defined for each plug-in. That\n   * ability is still supported by DataTables 1.10+ to provide backwards\n   * compatibility, but this option of use is now decremented and no longer\n   * documented in DataTables 1.10+.\n   *\n   *  @type object\n   *  @default {}\n   *\n   *  @example\n   *    // Show previous, next and current page buttons only\n   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n   *      return [ 'previous', page, 'next' ];\n   *    };\n   */\n  pager: {},\n  renderer: {\n    pageButton: {},\n    header: {}\n  },\n  /**\n   * Ordering plug-ins - custom data source\n   * \n   * The extension options for ordering of data available here is complimentary\n   * to the default type based ordering that DataTables typically uses. It\n   * allows much greater control over the the data that is being used to\n   * order a column, but is necessarily therefore more complex.\n   * \n   * This type of ordering is useful if you want to do ordering based on data\n   * live from the DOM (for example the contents of an 'input' element) rather\n   * than just the static string that DataTables knows of.\n   * \n   * The way these plug-ins work is that you create an array of the values you\n   * wish to be ordering for the column in question and then return that\n   * array. The data in the array much be in the index order of the rows in\n   * the table (not the currently ordering order!). Which order data gathering\n   * function is run here depends on the `dt-init columns.orderDataType`\n   * parameter that is used for the column (if any).\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{int}` Target column index\n   *\n   * Each function is expected to return an array:\n   *\n   * * `{array}` Data for the column to be ordering upon\n   *\n   *  @type array\n   *\n   *  @example\n   *    // Ordering using `input` node values\n   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n   *    {\n   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n   *        return $('input', td).val();\n   *      } );\n   *    }\n   */\n  order: {},\n  /**\n   * Type based plug-ins.\n   *\n   * Each column in DataTables has a type assigned to it, either by automatic\n   * detection or by direct assignment using the `type` option for the column.\n   * The type of a column will effect how it is ordering and search (plug-ins\n   * can also make use of the column type if required).\n   *\n   * @namespace\n   */\n  type: {\n    /**\n     * Automatic column class assignment\n     */\n    className: {},\n    /**\n     * Type detection functions.\n     *\n     * The functions defined in this object are used to automatically detect\n     * a column's type, making initialisation of DataTables super easy, even\n     * when complex data is in the table.\n     *\n     * The functions defined take two parameters:\n     *\n        *  1. `{*}` Data from the column cell to be analysed\n        *  2. `{settings}` DataTables settings object. This can be used to\n        *     perform context specific type detection - for example detection\n        *     based on language settings such as using a comma for a decimal\n        *     place. Generally speaking the options from the settings will not\n        *     be required\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Data type detected, or null if unknown (and thus\n     *   pass it on to the other type detection functions.\n     *\n     *  @type array\n     *\n     *  @example\n     *    // Currency type detection plug-in:\n     *    $.fn.dataTable.ext.type.detect.push(\n     *      function ( data, settings ) {\n     *        // Check the numeric part\n     *        if ( ! data.substring(1).match(/[0-9]/) ) {\n     *          return null;\n     *        }\n     *\n     *        // Check prefixed by currency\n     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n     *          return 'currency';\n     *        }\n     *        return null;\n     *      }\n     *    );\n     */\n    detect: [],\n    /**\n     * Automatic renderer assignment\n     */\n    render: {},\n    /**\n     * Type based search formatting.\n     *\n     * The type based searching functions can be used to pre-format the\n     * data to be search on. For example, it can be used to strip HTML\n     * tags or to de-format telephone numbers for numeric only searching.\n     *\n     * Note that is a search is not defined for a column of a given type,\n     * no search formatting will be performed.\n     * \n     * Pre-processing of searching data plug-ins - When you assign the sType\n     * for a column (or have it automatically detected for you by DataTables\n     * or a type detection plug-in), you will typically be using this for\n     * custom sorting, but it can also be used to provide custom searching\n     * by allowing you to pre-processing the data and returning the data in\n     * the format that should be searched upon. This is done by adding\n     * functions this object with a parameter name which matches the sType\n     * for that target column. This is the corollary of <i>afnSortData</i>\n     * for searching data.\n     *\n     * The functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for searching\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Formatted string that will be used for the searching.\n     *\n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n     *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n     *    }\n     */\n    search: {},\n    /**\n     * Type based ordering.\n     *\n     * The column type tells DataTables what ordering to apply to the table\n     * when a column is sorted upon. The order for each type that is defined,\n     * is defined by the functions available in this object.\n     *\n     * Each ordering option can be described by three properties added to\n     * this object:\n     *\n     * * `{type}-pre` - Pre-formatting function\n     * * `{type}-asc` - Ascending order function\n     * * `{type}-desc` - Descending order function\n     *\n     * All three can be used together, only `{type}-pre` or only\n     * `{type}-asc` and `{type}-desc` together. It is generally recommended\n     * that only `{type}-pre` is used, as this provides the optimal\n     * implementation in terms of speed, although the others are provided\n     * for compatibility with existing Javascript sort functions.\n     *\n     * `{type}-pre`: Functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for ordering\n     *\n     * And return:\n     *\n     * * `{*}` Data to be sorted upon\n     *\n     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n     * functions, taking two parameters:\n     *\n        *  1. `{*}` Data to compare to the second parameter\n        *  2. `{*}` Data to compare to the first parameter\n     *\n     * And returning:\n     *\n     * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n     *   than the second parameter, ===0 if the two parameters are equal and\n     *   >0 if the first parameter should be sorted height than the second\n     *   parameter.\n     * \n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    // Numeric ordering of formatted numbers with a pre-formatter\n     *    $.extend( $.fn.dataTable.ext.type.order, {\n     *      \"string-pre\": function(x) {\n     *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n     *        return parseFloat( a );\n     *      }\n     *    } );\n     *\n     *  @example\n     *    // Case-sensitive string ordering, with no pre-formatting method\n     *    $.extend( $.fn.dataTable.ext.order, {\n     *      \"string-case-asc\": function(x,y) {\n     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n     *      },\n     *      \"string-case-desc\": function(x,y) {\n     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n     *      }\n     *    } );\n     */\n    order: {}\n  },\n  /**\n   * Unique DataTables instance counter\n   *\n   * @type int\n   * @private\n   */\n  _unique: 0,\n  //\n  // Depreciated\n  // The following properties are retained for backwards compatibility only.\n  // The should not be used in new projects and will be removed in a future\n  // version\n  //\n\n  /**\n   * Version check function.\n   *  @type function\n   *  @depreciated Since 1.10\n   */\n  fnVersionCheck: DataTable.fnVersionCheck,\n  /**\n   * Index for what 'this' index API functions should use\n   *  @type int\n   *  @deprecated Since v1.10\n   */\n  iApiIndex: 0,\n  /**\n   * Software version\n   *  @type string\n   *  @deprecated Since v1.10\n   */\n  sVersion: DataTable.version\n};\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend(_ext, {\n  afnFiltering: _ext.search,\n  aTypes: _ext.type.detect,\n  ofnSearch: _ext.type.search,\n  oSort: _ext.type.order,\n  afnSortData: _ext.order,\n  aoFeatures: _ext.feature,\n  oStdClasses: _ext.classes,\n  oPagination: _ext.pager\n});\n$.extend(DataTable.ext.classes, {\n  container: 'dt-container',\n  empty: {\n    row: 'dt-empty'\n  },\n  info: {\n    container: 'dt-info'\n  },\n  layout: {\n    row: 'dt-layout-row',\n    cell: 'dt-layout-cell',\n    tableRow: 'dt-layout-table',\n    tableCell: '',\n    start: 'dt-layout-start',\n    end: 'dt-layout-end',\n    full: 'dt-layout-full'\n  },\n  length: {\n    container: 'dt-length',\n    select: 'dt-input'\n  },\n  order: {\n    canAsc: 'dt-orderable-asc',\n    canDesc: 'dt-orderable-desc',\n    isAsc: 'dt-ordering-asc',\n    isDesc: 'dt-ordering-desc',\n    none: 'dt-orderable-none',\n    position: 'sorting_'\n  },\n  processing: {\n    container: 'dt-processing'\n  },\n  scrolling: {\n    body: 'dt-scroll-body',\n    container: 'dt-scroll',\n    footer: {\n      self: 'dt-scroll-foot',\n      inner: 'dt-scroll-footInner'\n    },\n    header: {\n      self: 'dt-scroll-head',\n      inner: 'dt-scroll-headInner'\n    }\n  },\n  search: {\n    container: 'dt-search',\n    input: 'dt-input'\n  },\n  table: 'dataTable',\n  tbody: {\n    cell: '',\n    row: ''\n  },\n  thead: {\n    cell: '',\n    row: ''\n  },\n  tfoot: {\n    cell: '',\n    row: ''\n  },\n  paging: {\n    active: 'current',\n    button: 'dt-paging-button',\n    container: 'dt-paging',\n    disabled: 'disabled',\n    nav: ''\n  }\n});\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<([^>]*>)/g;\nvar _max_str_len = Math.pow(2, 28);\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g');\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\nvar _empty = function (d) {\n  return !d || d === true || d === '-' ? true : false;\n};\nvar _intVal = function (s) {\n  var integer = parseInt(s, 10);\n  return !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function (num, decimalPoint) {\n  // Cache created regular expressions for speed as this function is called often\n  if (!_re_dic[decimalPoint]) {\n    _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n  }\n  return typeof num === 'string' && decimalPoint !== '.' ? num.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') : num;\n};\nvar _isNumber = function (d, decimalPoint, formatted, allowEmpty) {\n  var type = typeof d;\n  var strType = type === 'string';\n  if (type === 'number' || type === 'bigint') {\n    return true;\n  }\n\n  // If empty return immediately so there must be a number if it is a\n  // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n  // as a formatted number for currency\n  if (allowEmpty && _empty(d)) {\n    return true;\n  }\n  if (decimalPoint && strType) {\n    d = _numToDecimal(d, decimalPoint);\n  }\n  if (formatted && strType) {\n    d = d.replace(_re_formatted_numeric, '');\n  }\n  return !isNaN(parseFloat(d)) && isFinite(d);\n};\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function (d) {\n  return _empty(d) || typeof d === 'string';\n};\n\n// Is a string a number surrounded by HTML?\nvar _htmlNumeric = function (d, decimalPoint, formatted, allowEmpty) {\n  if (allowEmpty && _empty(d)) {\n    return true;\n  }\n\n  // input and select strings mean that this isn't just a number\n  if (typeof d === 'string' && d.match(/<(input|select)/i)) {\n    return null;\n  }\n  var html = _isHtml(d);\n  return !html ? null : _isNumber(_stripHtml(d), decimalPoint, formatted, allowEmpty) ? true : null;\n};\nvar _pluck = function (a, prop, prop2) {\n  var out = [];\n  var i = 0,\n    ien = a.length;\n\n  // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[i] && a[i][prop]) {\n        out.push(a[i][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[i]) {\n        out.push(a[i][prop]);\n      }\n    }\n  }\n  return out;\n};\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function (a, order, prop, prop2) {\n  var out = [];\n  var i = 0,\n    ien = order.length;\n\n  // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[order[i]] && a[order[i]][prop]) {\n        out.push(a[order[i]][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[order[i]]) {\n        out.push(a[order[i]][prop]);\n      }\n    }\n  }\n  return out;\n};\nvar _range = function (len, start) {\n  var out = [];\n  var end;\n  if (start === undefined) {\n    start = 0;\n    end = len;\n  } else {\n    end = start;\n    start = len;\n  }\n  for (var i = start; i < end; i++) {\n    out.push(i);\n  }\n  return out;\n};\nvar _removeEmpty = function (a) {\n  var out = [];\n  for (var i = 0, ien = a.length; i < ien; i++) {\n    if (a[i]) {\n      // careful - will remove all falsy values!\n      out.push(a[i]);\n    }\n  }\n  return out;\n};\n\n// Replaceable function in api.util\nvar _stripHtml = function (input) {\n  if (!input || typeof input !== 'string') {\n    return input;\n  }\n\n  // Irrelevant check to workaround CodeQL's false positive on the regex\n  if (input.length > _max_str_len) {\n    throw new Error('Exceeded max str len');\n  }\n  var previous;\n  input = input.replace(_re_html, ''); // Complete tags\n\n  // Safety for incomplete script tag - use do / while to ensure that\n  // we get all instances\n  do {\n    previous = input;\n    input = input.replace(/<script/i, '');\n  } while (input !== previous);\n  return previous;\n};\n\n// Replaceable function in api.util\nvar _escapeHtml = function (d) {\n  if (Array.isArray(d)) {\n    d = d.join(',');\n  }\n  return typeof d === 'string' ? d.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') : d;\n};\n\n// Remove diacritics from a string by decomposing it and then removing\n// non-ascii characters\nvar _normalize = function (str, both) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  // It is faster to just run `normalize` than it is to check if\n  // we need to with a regex! (Check as it isn't available in old\n  // Safari)\n  var res = str.normalize ? str.normalize(\"NFD\") : str;\n\n  // Equally, here we check if a regex is needed or not\n  return res.length !== str.length ? (both === true ? str + ' ' : '') + res.replace(/[\\u0300-\\u036f]/g, \"\") : res;\n};\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function (src) {\n  if (src.length < 2) {\n    return true;\n  }\n  var sorted = src.slice().sort();\n  var last = sorted[0];\n  for (var i = 1, ien = sorted.length; i < ien; i++) {\n    if (sorted[i] === last) {\n      return false;\n    }\n    last = sorted[i];\n  }\n  return true;\n};\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function (src) {\n  if (Array.from && Set) {\n    return Array.from(new Set(src));\n  }\n  if (_areAllUnique(src)) {\n    return src.slice();\n  }\n\n  // A faster unique method is to use object keys to identify used values,\n  // but this doesn't work with arrays or objects, which we must also\n  // consider. See jsperf.app/compare-array-unique-versions/4 for more\n  // information.\n  var out = [],\n    val,\n    i,\n    ien = src.length,\n    j,\n    k = 0;\n  again: for (i = 0; i < ien; i++) {\n    val = src[i];\n    for (j = 0; j < k; j++) {\n      if (out[j] === val) {\n        continue again;\n      }\n    }\n    out.push(val);\n    k++;\n  }\n  return out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n  if (Array.isArray(val)) {\n    for (var i = 0; i < val.length; i++) {\n      _flatten(out, val[i]);\n    }\n  } else {\n    out.push(val);\n  }\n  return out;\n};\n\n// Similar to jQuery's addClass, but use classList.add\nfunction _addClass(el, name) {\n  if (name) {\n    name.split(' ').forEach(function (n) {\n      if (n) {\n        // `add` does deduplication, so no need to check `contains`\n        el.classList.add(n);\n      }\n    });\n  }\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n  /**\n   * Return a string with diacritic characters decomposed\n   * @param {*} mixed Function or string to normalize\n   * @param {*} both Return original string and the normalized string\n   * @returns String or undefined\n   */\n  diacritics: function (mixed, both) {\n    var type = typeof mixed;\n    if (type !== 'function') {\n      return _normalize(mixed, both);\n    }\n    _normalize = mixed;\n  },\n  /**\n   * Debounce a function\n   *\n   * @param {function} fn Function to be called\n   * @param {integer} freq Call frequency in mS\n   * @return {function} Wrapped function\n   */\n  debounce: function (fn, timeout) {\n    var timer;\n    return function () {\n      var that = this;\n      var args = arguments;\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        fn.apply(that, args);\n      }, timeout || 250);\n    };\n  },\n  /**\n   * Throttle the calls to a function. Arguments and context are maintained\n   * for the throttled function.\n   *\n   * @param {function} fn Function to be called\n   * @param {integer} freq Call frequency in mS\n   * @return {function} Wrapped function\n   */\n  throttle: function (fn, freq) {\n    var frequency = freq !== undefined ? freq : 200,\n      last,\n      timer;\n    return function () {\n      var that = this,\n        now = +new Date(),\n        args = arguments;\n      if (last && now < last + frequency) {\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          last = undefined;\n          fn.apply(that, args);\n        }, frequency);\n      } else {\n        last = now;\n        fn.apply(that, args);\n      }\n    };\n  },\n  /**\n   * Escape a string such that it can be used in a regular expression\n   *\n   *  @param {string} val string to escape\n   *  @returns {string} escaped string\n   */\n  escapeRegex: function (val) {\n    return val.replace(_re_escape_regex, '\\\\$1');\n  },\n  /**\n   * Create a function that will write to a nested object or array\n   * @param {*} source JSON notation string\n   * @returns Write function\n   */\n  set: function (source) {\n    if ($.isPlainObject(source)) {\n      /* Unlike get, only the underscore (global) option is used for for\n       * setting data since we don't know the type here. This is why an object\n       * option is not documented for `mData` (which is read/write), but it is\n       * for `mRender` which is read only.\n       */\n      return DataTable.util.set(source._);\n    } else if (source === null) {\n      // Nothing to do when the data source is null\n      return function () {};\n    } else if (typeof source === 'function') {\n      return function (data, val, meta) {\n        source(data, 'set', val, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      // Like the get, we need to get data from a nested object\n      var setData = function (data, val, src) {\n        var a = _fnSplitObjNotation(src),\n          b;\n        var aLast = a[a.length - 1];\n        var arrayNotation, funcNotation, o, innerSrc;\n        for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n          // Protect against prototype pollution\n          if (a[i] === '__proto__' || a[i] === 'constructor') {\n            throw new Error('Cannot set prototype values');\n          }\n\n          // Check if we are dealing with an array notation request\n          arrayNotation = a[i].match(__reArray);\n          funcNotation = a[i].match(__reFn);\n          if (arrayNotation) {\n            a[i] = a[i].replace(__reArray, '');\n            data[a[i]] = [];\n\n            // Get the remainder of the nested object to set so we can recurse\n            b = a.slice();\n            b.splice(0, i + 1);\n            innerSrc = b.join('.');\n\n            // Traverse each entry in the array setting the properties requested\n            if (Array.isArray(val)) {\n              for (var j = 0, jLen = val.length; j < jLen; j++) {\n                o = {};\n                setData(o, val[j], innerSrc);\n                data[a[i]].push(o);\n              }\n            } else {\n              // We've been asked to save data to an array, but it\n              // isn't array data to be saved. Best that can be done\n              // is to just save the value.\n              data[a[i]] = val;\n            }\n\n            // The inner call to setData has already traversed through the remainder\n            // of the source and has set the data, thus we can exit here\n            return;\n          } else if (funcNotation) {\n            // Function call\n            a[i] = a[i].replace(__reFn, '');\n            data = data[a[i]](val);\n          }\n\n          // If the nested object doesn't currently exist - since we are\n          // trying to set the value - create it\n          if (data[a[i]] === null || data[a[i]] === undefined) {\n            data[a[i]] = {};\n          }\n          data = data[a[i]];\n        }\n\n        // Last item in the input - i.e, the actual set\n        if (aLast.match(__reFn)) {\n          // Function call\n          data = data[aLast.replace(__reFn, '')](val);\n        } else {\n          // If array notation is used, we just want to strip it and use the property name\n          // and assign the value. If it isn't used, then we get the result we want anyway\n          data[aLast.replace(__reArray, '')] = val;\n        }\n      };\n      return function (data, val) {\n        // meta is also passed in, but not used\n        return setData(data, val, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data, val) {\n        // meta is also passed in, but not used\n        data[source] = val;\n      };\n    }\n  },\n  /**\n   * Create a function that will read nested objects from arrays, based on JSON notation\n   * @param {*} source JSON notation string\n   * @returns Value read\n   */\n  get: function (source) {\n    if ($.isPlainObject(source)) {\n      // Build an object of get functions, and wrap them in a single call\n      var o = {};\n      $.each(source, function (key, val) {\n        if (val) {\n          o[key] = DataTable.util.get(val);\n        }\n      });\n      return function (data, type, row, meta) {\n        var t = o[type] || o._;\n        return t !== undefined ? t(data, type, row, meta) : data;\n      };\n    } else if (source === null) {\n      // Give an empty string for rendering / sorting etc\n      return function (data) {\n        // type, row and meta also passed, but not used\n        return data;\n      };\n    } else if (typeof source === 'function') {\n      return function (data, type, row, meta) {\n        return source(data, type, row, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      /* If there is a . in the source string then the data source is in a\n       * nested object so we loop over the data for each level to get the next\n       * level down. On each loop we test for undefined, and if found immediately\n       * return. This allows entire objects to be missing and sDefaultContent to\n       * be used if defined, rather than throwing an error\n       */\n      var fetchData = function (data, type, src) {\n        var arrayNotation, funcNotation, out, innerSrc;\n        if (src !== \"\") {\n          var a = _fnSplitObjNotation(src);\n          for (var i = 0, iLen = a.length; i < iLen; i++) {\n            // Check if we are dealing with special notation\n            arrayNotation = a[i].match(__reArray);\n            funcNotation = a[i].match(__reFn);\n            if (arrayNotation) {\n              // Array notation\n              a[i] = a[i].replace(__reArray, '');\n\n              // Condition allows simply [] to be passed in\n              if (a[i] !== \"\") {\n                data = data[a[i]];\n              }\n              out = [];\n\n              // Get the remainder of the nested object to get\n              a.splice(0, i + 1);\n              innerSrc = a.join('.');\n\n              // Traverse each entry in the array getting the properties requested\n              if (Array.isArray(data)) {\n                for (var j = 0, jLen = data.length; j < jLen; j++) {\n                  out.push(fetchData(data[j], type, innerSrc));\n                }\n              }\n\n              // If a string is given in between the array notation indicators, that\n              // is used to join the strings together, otherwise an array is returned\n              var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n              data = join === \"\" ? out : out.join(join);\n\n              // The inner call to fetchData has already traversed through the remainder\n              // of the source requested, so we exit from the loop\n              break;\n            } else if (funcNotation) {\n              // Function call\n              a[i] = a[i].replace(__reFn, '');\n              data = data[a[i]]();\n              continue;\n            }\n            if (data === null || data[a[i]] === null) {\n              return null;\n            } else if (data === undefined || data[a[i]] === undefined) {\n              return undefined;\n            }\n            data = data[a[i]];\n          }\n        }\n        return data;\n      };\n      return function (data, type) {\n        // row and meta also passed, but not used\n        return fetchData(data, type, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data) {\n        // row and meta also passed, but not used\n        return data[source];\n      };\n    }\n  },\n  stripHtml: function (mixed) {\n    var type = typeof mixed;\n    if (type === 'function') {\n      _stripHtml = mixed;\n      return;\n    } else if (type === 'string') {\n      return _stripHtml(mixed);\n    }\n    return mixed;\n  },\n  escapeHtml: function (mixed) {\n    var type = typeof mixed;\n    if (type === 'function') {\n      _escapeHtml = mixed;\n      return;\n    } else if (type === 'string' || Array.isArray(mixed)) {\n      return _escapeHtml(mixed);\n    }\n    return mixed;\n  },\n  unique: _unique\n};\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap(o) {\n  var hungarian = 'a aa ai ao as b fn i m o s ',\n    match,\n    newKey,\n    map = {};\n  $.each(o, function (key) {\n    match = key.match(/^([^A-Z]+?)([A-Z])/);\n    if (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n      newKey = key.replace(match[0], match[2].toLowerCase());\n      map[newKey] = key;\n      if (match[1] === 'o') {\n        _fnHungarianMap(o[key]);\n      }\n    }\n  });\n  o._hungarianMap = map;\n}\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian(src, user, force) {\n  if (!src._hungarianMap) {\n    _fnHungarianMap(src);\n  }\n  var hungarianKey;\n  $.each(user, function (key) {\n    hungarianKey = src._hungarianMap[key];\n    if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n      // For objects, we need to buzz down into the object to copy parameters\n      if (hungarianKey.charAt(0) === 'o') {\n        // Copy the camelCase options over to the hungarian\n        if (!user[hungarianKey]) {\n          user[hungarianKey] = {};\n        }\n        $.extend(true, user[hungarianKey], user[key]);\n        _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n      } else {\n        user[hungarianKey] = user[key];\n      }\n    }\n  });\n}\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function (o, knew, old) {\n  if (o[knew] !== undefined) {\n    o[old] = o[knew];\n  }\n};\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts(init) {\n  _fnCompatMap(init, 'ordering', 'bSort');\n  _fnCompatMap(init, 'orderMulti', 'bSortMulti');\n  _fnCompatMap(init, 'orderClasses', 'bSortClasses');\n  _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n  _fnCompatMap(init, 'order', 'aaSorting');\n  _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n  _fnCompatMap(init, 'paging', 'bPaginate');\n  _fnCompatMap(init, 'pagingType', 'sPaginationType');\n  _fnCompatMap(init, 'pageLength', 'iDisplayLength');\n  _fnCompatMap(init, 'searching', 'bFilter');\n\n  // Boolean initialisation of x-scrolling\n  if (typeof init.sScrollX === 'boolean') {\n    init.sScrollX = init.sScrollX ? '100%' : '';\n  }\n  if (typeof init.scrollX === 'boolean') {\n    init.scrollX = init.scrollX ? '100%' : '';\n  }\n\n  // Objects for ordering\n  if (typeof init.bSort === 'object') {\n    init.orderIndicators = init.bSort.indicators !== undefined ? init.bSort.indicators : true;\n    init.orderHandler = init.bSort.handler !== undefined ? init.bSort.handler : true;\n    init.bSort = true;\n  } else if (init.bSort === false) {\n    init.orderIndicators = false;\n    init.orderHandler = false;\n  } else if (init.bSort === true) {\n    init.orderIndicators = true;\n    init.orderHandler = true;\n  }\n\n  // Which cells are the title cells?\n  if (typeof init.bSortCellsTop === 'boolean') {\n    init.titleRow = init.bSortCellsTop;\n  }\n\n  // Column search objects are in an array, so it needs to be converted\n  // element by element\n  var searchCols = init.aoSearchCols;\n  if (searchCols) {\n    for (var i = 0, ien = searchCols.length; i < ien; i++) {\n      if (searchCols[i]) {\n        _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n      }\n    }\n  }\n\n  // Enable search delay if server-side processing is enabled\n  if (init.serverSide && !init.searchDelay) {\n    init.searchDelay = 400;\n  }\n}\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols(init) {\n  _fnCompatMap(init, 'orderable', 'bSortable');\n  _fnCompatMap(init, 'orderData', 'aDataSort');\n  _fnCompatMap(init, 'orderSequence', 'asSorting');\n  _fnCompatMap(init, 'orderDataType', 'sortDataType');\n\n  // orderData can be given as an integer\n  var dataSort = init.aDataSort;\n  if (typeof dataSort === 'number' && !Array.isArray(dataSort)) {\n    init.aDataSort = [dataSort];\n  }\n}\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect(settings) {\n  // We don't need to do this every time DataTables is constructed, the values\n  // calculated are specific to the browser and OS configuration which we\n  // don't expect to change between initialisations\n  if (!DataTable.__browser) {\n    var browser = {};\n    DataTable.__browser = browser;\n\n    // Scrolling feature / quirks detection\n    var n = $('<div/>').css({\n      position: 'fixed',\n      top: 0,\n      left: -1 * window.pageXOffset,\n      // allow for scrolling\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    }).append($('<div/>').css({\n      position: 'absolute',\n      top: 1,\n      left: 1,\n      width: 100,\n      overflow: 'scroll'\n    }).append($('<div/>').css({\n      width: '100%',\n      height: 10\n    }))).appendTo('body');\n    var outer = n.children();\n    var inner = outer.children();\n\n    // Get scrollbar width\n    browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n    // In rtl text layout, some browsers (most, but not all) will place the\n    // scrollbar on the left, rather than the right.\n    browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;\n    n.remove();\n  }\n  $.extend(settings.oBrowser, DataTable.__browser);\n  settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn(oSettings) {\n  // Add column to aoColumns array\n  var oDefaults = DataTable.defaults.column;\n  var iCol = oSettings.aoColumns.length;\n  var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n    \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n    \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n    idx: iCol,\n    searchFixed: {},\n    colEl: $('<col>').attr('data-dt-column', iCol)\n  });\n  oSettings.aoColumns.push(oCol);\n\n  // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n  // passed into extend can be undefined. This allows the user to give a default\n  // with only some of the parameters defined, and also not give a default\n  var searchCols = oSettings.aoPreSearchCols;\n  searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);\n}\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions(oSettings, iCol, oOptions) {\n  var oCol = oSettings.aoColumns[iCol];\n\n  /* User specified column options */\n  if (oOptions !== undefined && oOptions !== null) {\n    // Backwards compatibility\n    _fnCompatCols(oOptions);\n\n    // Map camel case parameters to their Hungarian counterparts\n    _fnCamelToHungarian(DataTable.defaults.column, oOptions, true);\n\n    /* Backwards compatibility for mDataProp */\n    if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n      oOptions.mData = oOptions.mDataProp;\n    }\n    if (oOptions.sType) {\n      oCol._sManualType = oOptions.sType;\n    }\n\n    // `class` is a reserved word in Javascript, so we need to provide\n    // the ability to use a valid name for the camel case input\n    if (oOptions.className && !oOptions.sClass) {\n      oOptions.sClass = oOptions.className;\n    }\n    var origClass = oCol.sClass;\n    $.extend(oCol, oOptions);\n    _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n\n    // Merge class from previously defined classes with this one, rather than just\n    // overwriting it in the extend above\n    if (origClass !== oCol.sClass) {\n      oCol.sClass = origClass + ' ' + oCol.sClass;\n    }\n\n    /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n     * priority if defined\n     */\n    if (oOptions.iDataSort !== undefined) {\n      oCol.aDataSort = [oOptions.iDataSort];\n    }\n    _fnMap(oCol, oOptions, \"aDataSort\");\n  }\n\n  /* Cache the data get and set functions for speed */\n  var mDataSrc = oCol.mData;\n  var mData = _fnGetObjectDataFn(mDataSrc);\n\n  // The `render` option can be given as an array to access the helper rendering methods.\n  // The first element is the rendering method to use, the rest are the parameters to pass\n  if (oCol.mRender && Array.isArray(oCol.mRender)) {\n    var copy = oCol.mRender.slice();\n    var name = copy.shift();\n    oCol.mRender = DataTable.render[name].apply(window, copy);\n  }\n  oCol._render = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n  var attrTest = function (src) {\n    return typeof src === 'string' && src.indexOf('@') !== -1;\n  };\n  oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter));\n  oCol._setter = null;\n  oCol.fnGetData = function (rowData, type, meta) {\n    var innerData = mData(rowData, type, undefined, meta);\n    return oCol._render && type ? oCol._render(innerData, type, rowData, meta) : innerData;\n  };\n  oCol.fnSetData = function (rowData, val, meta) {\n    return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n  };\n\n  // Indicate if DataTables should read DOM data as an object or array\n  // Used in _fnGetRowElements\n  if (typeof mDataSrc !== 'number' && !oCol._isArrayHost) {\n    oSettings._rowReadObject = true;\n  }\n\n  /* Feature sorting overrides column specific when off */\n  if (!oSettings.oFeatures.bSort) {\n    oCol.bSortable = false;\n  }\n}\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing(settings) {\n  _fnCalculateColumnWidths(settings);\n  _fnColumnSizes(settings);\n  var scroll = settings.oScroll;\n  if (scroll.sY !== '' || scroll.sX !== '') {\n    _fnScrollDraw(settings);\n  }\n  _fnCallbackFire(settings, null, 'column-sizing', [settings]);\n}\n\n/**\n * Apply column sizes\n *\n * @param {*} settings DataTables settings object\n */\nfunction _fnColumnSizes(settings) {\n  var cols = settings.aoColumns;\n  for (var i = 0; i < cols.length; i++) {\n    var width = _fnColumnsSumWidth(settings, [i], false, false);\n    cols[i].colEl.css('width', width);\n    if (settings.oScroll.sX) {\n      cols[i].colEl.css('min-width', width);\n    }\n  }\n}\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n  return typeof aiVis[iMatch] === 'number' ? aiVis[iMatch] : null;\n}\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n  var iPos = aiVis.indexOf(iMatch);\n  return iPos !== -1 ? iPos : null;\n}\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns(settings) {\n  var layout = settings.aoHeader;\n  var columns = settings.aoColumns;\n  var vis = 0;\n  if (layout.length) {\n    for (var i = 0, ien = layout[0].length; i < ien; i++) {\n      if (columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none') {\n        vis++;\n      }\n    }\n  }\n  return vis;\n}\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns(oSettings, sParam) {\n  var a = [];\n  oSettings.aoColumns.map(function (val, i) {\n    if (val[sParam]) {\n      a.push(i);\n    }\n  });\n  return a;\n}\n\n/**\n * Allow the result from a type detection function to be `true` while\n * translating that into a string. Old type detection functions will\n * return the type name if it passes. An obect store would be better,\n * but not backwards compatible.\n *\n * @param {*} typeDetect Object or function for type detection\n * @param {*} res Result from the type detection function\n * @returns Type name or false\n */\nfunction _typeResult(typeDetect, res) {\n  return res === true ? typeDetect._name : res;\n}\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var types = DataTable.ext.type.detect;\n  var i, ien, j, jen, k, ken;\n  var col, detectedType, cache;\n\n  // For each column, spin over the data type detection functions, seeing if one matches\n  for (i = 0, ien = columns.length; i < ien; i++) {\n    col = columns[i];\n    cache = [];\n    if (!col.sType && col._sManualType) {\n      col.sType = col._sManualType;\n    } else if (!col.sType) {\n      // With SSP type detection can be unreliable and error prone, so we provide a way\n      // to turn it off.\n      if (!settings.typeDetect) {\n        return;\n      }\n      for (j = 0, jen = types.length; j < jen; j++) {\n        var typeDetect = types[j];\n\n        // There can be either one, or three type detection functions\n        var oneOf = typeDetect.oneOf;\n        var allOf = typeDetect.allOf || typeDetect;\n        var init = typeDetect.init;\n        var one = false;\n        detectedType = null;\n\n        // Fast detect based on column assignment\n        if (init) {\n          detectedType = _typeResult(typeDetect, init(settings, col, i));\n          if (detectedType) {\n            col.sType = detectedType;\n            break;\n          }\n        }\n        for (k = 0, ken = data.length; k < ken; k++) {\n          if (!data[k]) {\n            continue;\n          }\n\n          // Use a cache array so we only need to get the type data\n          // from the formatter once (when using multiple detectors)\n          if (cache[k] === undefined) {\n            cache[k] = _fnGetCellData(settings, k, i, 'type');\n          }\n\n          // Only one data point in the column needs to match this function\n          if (oneOf && !one) {\n            one = _typeResult(typeDetect, oneOf(cache[k], settings));\n          }\n\n          // All data points need to match this function\n          detectedType = _typeResult(typeDetect, allOf(cache[k], settings));\n\n          // If null, then this type can't apply to this column, so\n          // rather than testing all cells, break out. There is an\n          // exception for the last type which is `html`. We need to\n          // scan all rows since it is possible to mix string and HTML\n          // types\n          if (!detectedType && j !== types.length - 3) {\n            break;\n          }\n\n          // Only a single match is needed for html type since it is\n          // bottom of the pile and very similar to string - but it\n          // must not be empty\n          if (detectedType === 'html' && !_empty(cache[k])) {\n            break;\n          }\n        }\n\n        // Type is valid for all data points in the column - use this\n        // type\n        if (oneOf && one && detectedType || !oneOf && detectedType) {\n          col.sType = detectedType;\n          break;\n        }\n      }\n\n      // Fall back - if no type was detected, always use string\n      if (!col.sType) {\n        col.sType = 'string';\n      }\n    }\n\n    // Set class names for header / footer for auto type classes\n    var autoClass = _ext.type.className[col.sType];\n    if (autoClass) {\n      _columnAutoClass(settings.aoHeader, i, autoClass);\n      _columnAutoClass(settings.aoFooter, i, autoClass);\n    }\n    var renderer = _ext.type.render[col.sType];\n\n    // This can only happen once! There is no way to remove\n    // a renderer. After the first time the renderer has\n    // already been set so createTr will run the renderer itself.\n    if (renderer && !col._render) {\n      col._render = DataTable.util.get(renderer);\n      _columnAutoRender(settings, i);\n    }\n  }\n}\n\n/**\n * Apply an auto detected renderer to data which doesn't yet have\n * a renderer\n */\nfunction _columnAutoRender(settings, colIdx) {\n  var data = settings.aoData;\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].nTr) {\n      // We have to update the display here since there is no\n      // invalidation check for the data\n      var display = _fnGetCellData(settings, i, colIdx, 'display');\n      data[i].displayData[colIdx] = display;\n      _fnWriteCell(data[i].anCells[colIdx], display);\n\n      // No need to update sort / filter data since it has\n      // been invalidated and will be re-read with the\n      // renderer now applied\n    }\n  }\n}\n\n/**\n * Apply a class name to a column's header cells\n */\nfunction _columnAutoClass(container, colIdx, className) {\n  container.forEach(function (row) {\n    if (row[colIdx] && row[colIdx].unique) {\n      _addClass(row[colIdx].cell, className);\n    }\n  });\n}\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {array} headerLayout Layout for header as it was loaded\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, headerLayout, fn) {\n  var i, iLen, j, jLen, k, kLen, def;\n  var columns = oSettings.aoColumns;\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      if (aoCols[i] && aoCols[i].name) {\n        columns[i].sName = aoCols[i].name;\n      }\n    }\n  }\n\n  // Column definitions with aTargets\n  if (aoColDefs) {\n    /* Loop over the definitions array - loop in reverse so first instance has priority */\n    for (i = aoColDefs.length - 1; i >= 0; i--) {\n      def = aoColDefs[i];\n\n      /* Each definition can target multiple columns, as it is an array */\n      var aTargets = def.target !== undefined ? def.target : def.targets !== undefined ? def.targets : def.aTargets;\n      if (!Array.isArray(aTargets)) {\n        aTargets = [aTargets];\n      }\n      for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n        var target = aTargets[j];\n        if (typeof target === 'number' && target >= 0) {\n          /* Add columns that we don't yet know about */\n          while (columns.length <= target) {\n            _fnAddColumn(oSettings);\n          }\n\n          /* Integer, basic index */\n          fn(target, def);\n        } else if (typeof target === 'number' && target < 0) {\n          /* Negative integer, right to left column counting */\n          fn(columns.length + target, def);\n        } else if (typeof target === 'string') {\n          for (k = 0, kLen = columns.length; k < kLen; k++) {\n            if (target === '_all') {\n              // Apply to all columns\n              fn(k, def);\n            } else if (target.indexOf(':name') !== -1) {\n              // Column selector\n              if (columns[k].sName === target.replace(':name', '')) {\n                fn(k, def);\n              }\n            } else {\n              // Cell selector\n              headerLayout.forEach(function (row) {\n                if (row[k]) {\n                  var cell = $(row[k].cell);\n\n                  // Legacy support. Note that it means that we don't support\n                  // an element name selector only, since they are treated as\n                  // class names for 1.x compat.\n                  if (target.match(/^[a-z][\\w-]*$/i)) {\n                    target = '.' + target;\n                  }\n                  if (cell.is(target)) {\n                    fn(k, def);\n                  }\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Statically defined columns array\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      fn(i, aoCols[i]);\n    }\n  }\n}\n\n/**\n * Get the width for a given set of columns\n *\n * @param {*} settings DataTables settings object\n * @param {*} targets Columns - comma separated string or array of numbers\n * @param {*} original Use the original width (true) or calculated (false)\n * @param {*} incVisible Include visible columns (true) or not (false)\n * @returns Combined CSS value\n */\nfunction _fnColumnsSumWidth(settings, targets, original, incVisible) {\n  if (!Array.isArray(targets)) {\n    targets = _fnColumnsFromHeader(targets);\n  }\n  var sum = 0;\n  var unit;\n  var columns = settings.aoColumns;\n  for (var i = 0, ien = targets.length; i < ien; i++) {\n    var column = columns[targets[i]];\n    var definedWidth = original ? column.sWidthOrig : column.sWidth;\n    if (!incVisible && column.bVisible === false) {\n      continue;\n    }\n    if (definedWidth === null || definedWidth === undefined) {\n      return null; // can't determine a defined width - browser defined\n    } else if (typeof definedWidth === 'number') {\n      unit = 'px';\n      sum += definedWidth;\n    } else {\n      var matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n      if (matched) {\n        sum += matched[1] * 1;\n        unit = matched.length === 3 ? matched[2] : 'px';\n      }\n    }\n  }\n  return sum + unit;\n}\nfunction _fnColumnsFromHeader(cell) {\n  var attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n  if (!attr) {\n    return [];\n  }\n  return attr.split(',').map(function (val) {\n    return val * 1;\n  });\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} settings dataTables settings object\n *  @param {array} data data array to be added\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData(settings, dataIn, tr, tds) {\n  /* Create the object for storing information about this new row */\n  var rowIdx = settings.aoData.length;\n  var rowModel = $.extend(true, {}, DataTable.models.oRow, {\n    src: tr ? 'dom' : 'data',\n    idx: rowIdx\n  });\n  rowModel._aData = dataIn;\n  settings.aoData.push(rowModel);\n  var columns = settings.aoColumns;\n  for (var i = 0, iLen = columns.length; i < iLen; i++) {\n    // Invalidate the column types as the new data needs to be revalidated\n    columns[i].sType = null;\n  }\n\n  /* Add to the display array */\n  settings.aiDisplayMaster.push(rowIdx);\n  var id = settings.rowIdFn(dataIn);\n  if (id !== undefined) {\n    settings.aIds[id] = rowModel;\n  }\n\n  /* Create the DOM information, or register it if already present */\n  if (tr || !settings.oFeatures.bDeferRender) {\n    _fnCreateTr(settings, rowIdx, tr, tds);\n  }\n  return rowIdx;\n}\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr(settings, trs) {\n  var row;\n\n  // Allow an individual node to be passed in\n  if (!(trs instanceof $)) {\n    trs = $(trs);\n  }\n  return trs.map(function (i, el) {\n    row = _fnGetRowElements(settings, el);\n    return _fnAddData(settings, row.data, el, row.cells);\n  });\n}\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData(settings, rowIdx, colIdx, type) {\n  if (type === 'search') {\n    type = 'filter';\n  } else if (type === 'order') {\n    type = 'sort';\n  }\n  var row = settings.aoData[rowIdx];\n  if (!row) {\n    return undefined;\n  }\n  var draw = settings.iDraw;\n  var col = settings.aoColumns[colIdx];\n  var rowData = row._aData;\n  var defaultContent = col.sDefaultContent;\n  var cellData = col.fnGetData(rowData, type, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n\n  // Allow for a node being returned for non-display types\n  if (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n    cellData = cellData.innerHTML;\n  }\n  if (cellData === undefined) {\n    if (settings.iDrawError != draw && defaultContent === null) {\n      _fnLog(settings, 0, \"Requested unknown parameter \" + (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") + \" for row \" + rowIdx + \", column \" + colIdx, 4);\n      settings.iDrawError = draw;\n    }\n    return defaultContent;\n  }\n\n  // When the data source is null and a specific data type is requested (i.e.\n  // not the original data), we can use default column data\n  if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n    cellData = defaultContent;\n  } else if (typeof cellData === 'function') {\n    // If the data source is a function, then we run it and use the return,\n    // executing in the scope of the data object (for instances)\n    return cellData.call(rowData);\n  }\n  if (cellData === null && type === 'display') {\n    return '';\n  }\n  if (type === 'filter') {\n    var fomatters = DataTable.ext.type.search;\n    if (fomatters[col.sType]) {\n      cellData = fomatters[col.sType](cellData);\n    }\n  }\n  return cellData;\n}\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData(settings, rowIdx, colIdx, val) {\n  var col = settings.aoColumns[colIdx];\n  var rowData = settings.aoData[rowIdx]._aData;\n  col.fnSetData(rowData, val, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n}\n\n/**\n * Write a value to a cell\n * @param {*} td Cell\n * @param {*} val Value\n */\nfunction _fnWriteCell(td, val) {\n  if (val && typeof val === 'object' && val.nodeName) {\n    $(td).empty().append(val);\n  } else {\n    td.innerHTML = val;\n  }\n}\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation(str) {\n  var parts = str.match(/(\\\\.|[^.])+/g) || [''];\n  return parts.map(function (s) {\n    return s.replace(/\\\\\\./g, '.');\n  });\n}\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster(settings) {\n  return _pluck(settings.aoData, '_aData');\n}\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable(settings) {\n  settings.aoData.length = 0;\n  settings.aiDisplayMaster.length = 0;\n  settings.aiDisplay.length = 0;\n  settings.aIds = {};\n}\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate(settings, rowIdx, src, colIdx) {\n  var row = settings.aoData[rowIdx];\n  var i, ien;\n\n  // Remove the cached data for the row\n  row._aSortData = null;\n  row._aFilterData = null;\n  row.displayData = null;\n\n  // Are we reading last data from DOM or the data object?\n  if (src === 'dom' || (!src || src === 'auto') && row.src === 'dom') {\n    // Read the data from the DOM\n    row._aData = _fnGetRowElements(settings, row, colIdx, colIdx === undefined ? undefined : row._aData).data;\n  } else {\n    // Reading from data object, update the DOM\n    var cells = row.anCells;\n    var display = _fnGetRowDisplay(settings, rowIdx);\n    if (cells) {\n      if (colIdx !== undefined) {\n        _fnWriteCell(cells[colIdx], display[colIdx]);\n      } else {\n        for (i = 0, ien = cells.length; i < ien; i++) {\n          _fnWriteCell(cells[i], display[i]);\n        }\n      }\n    }\n  }\n\n  // Column specific invalidation\n  var cols = settings.aoColumns;\n  if (colIdx !== undefined) {\n    // Type - the data might have changed\n    cols[colIdx].sType = null;\n\n    // Max length string. Its a fairly cheep recalculation, so not worth\n    // something more complicated\n    cols[colIdx].maxLenString = null;\n  } else {\n    for (i = 0, ien = cols.length; i < ien; i++) {\n      cols[i].sType = null;\n      cols[i].maxLenString = null;\n    }\n\n    // Update DataTables special `DT_*` attributes for the row\n    _fnRowAttributes(settings, row);\n  }\n}\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements(settings, row, colIdx, d) {\n  var tds = [],\n    td = row.firstChild,\n    name,\n    col,\n    i = 0,\n    contents,\n    columns = settings.aoColumns,\n    objectRead = settings._rowReadObject;\n\n  // Allow the data object to be passed in, or construct\n  d = d !== undefined ? d : objectRead ? {} : [];\n  var attr = function (str, td) {\n    if (typeof str === 'string') {\n      var idx = str.indexOf('@');\n      if (idx !== -1) {\n        var attr = str.substring(idx + 1);\n        var setter = _fnSetObjectDataFn(str);\n        setter(d, td.getAttribute(attr));\n      }\n    }\n  };\n\n  // Read data from a cell and store into the data object\n  var cellProcess = function (cell) {\n    if (colIdx === undefined || colIdx === i) {\n      col = columns[i];\n      contents = cell.innerHTML.trim();\n      if (col && col._bAttrSrc) {\n        var setter = _fnSetObjectDataFn(col.mData._);\n        setter(d, contents);\n        attr(col.mData.sort, cell);\n        attr(col.mData.type, cell);\n        attr(col.mData.filter, cell);\n      } else {\n        // Depending on the `data` option for the columns the data can\n        // be read to either an object or an array.\n        if (objectRead) {\n          if (!col._setter) {\n            // Cache the setter function\n            col._setter = _fnSetObjectDataFn(col.mData);\n          }\n          col._setter(d, contents);\n        } else {\n          d[i] = contents;\n        }\n      }\n    }\n    i++;\n  };\n  if (td) {\n    // `tr` element was passed in\n    while (td) {\n      name = td.nodeName.toUpperCase();\n      if (name == \"TD\" || name == \"TH\") {\n        cellProcess(td);\n        tds.push(td);\n      }\n      td = td.nextSibling;\n    }\n  } else {\n    // Existing row object passed in\n    tds = row.anCells;\n    for (var j = 0, jen = tds.length; j < jen; j++) {\n      cellProcess(tds[j]);\n    }\n  }\n\n  // Read the ID from the DOM if present\n  var rowNode = row.firstChild ? row : row.nTr;\n  if (rowNode) {\n    var id = rowNode.getAttribute('id');\n    if (id) {\n      _fnSetObjectDataFn(settings.rowId)(d, id);\n    }\n  }\n  return {\n    data: d,\n    cells: tds\n  };\n}\n\n/**\n * Render and cache a row's display data for the columns, if required\n * @returns \n */\nfunction _fnGetRowDisplay(settings, rowIdx) {\n  var rowModal = settings.aoData[rowIdx];\n  var columns = settings.aoColumns;\n  if (!rowModal.displayData) {\n    // Need to render and cache\n    rowModal.displayData = [];\n    for (var colIdx = 0, len = columns.length; colIdx < len; colIdx++) {\n      rowModal.displayData.push(_fnGetCellData(settings, rowIdx, colIdx, 'display'));\n    }\n  }\n  return rowModal.displayData;\n}\n\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n  var row = oSettings.aoData[iRow],\n    rowData = row._aData,\n    cells = [],\n    nTr,\n    nTd,\n    oCol,\n    i,\n    iLen,\n    create,\n    trClass = oSettings.oClasses.tbody.row;\n  if (row.nTr === null) {\n    nTr = nTrIn || document.createElement('tr');\n    row.nTr = nTr;\n    row.anCells = cells;\n    _addClass(nTr, trClass);\n\n    /* Use a private property on the node to allow reserve mapping from the node\n     * to the aoData array for fast look up\n     */\n    nTr._DT_RowIndex = iRow;\n\n    /* Special parameters can be given by the data source to be used on the row */\n    _fnRowAttributes(oSettings, row);\n\n    /* Process each column */\n    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n      oCol = oSettings.aoColumns[i];\n      create = nTrIn && anTds[i] ? false : true;\n      nTd = create ? document.createElement(oCol.sCellType) : anTds[i];\n      if (!nTd) {\n        _fnLog(oSettings, 0, 'Incorrect column count', 18);\n      }\n      nTd._DT_CellIndex = {\n        row: iRow,\n        column: i\n      };\n      cells.push(nTd);\n      var display = _fnGetRowDisplay(oSettings, iRow);\n\n      // Need to create the HTML if new, or if a rendering function is defined\n      if (create || (oCol.mRender || oCol.mData !== i) && (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')) {\n        _fnWriteCell(nTd, display[i]);\n      }\n\n      // column class\n      _addClass(nTd, oCol.sClass);\n\n      // Visibility - add or remove as required\n      if (oCol.bVisible && create) {\n        nTr.appendChild(nTd);\n      } else if (!oCol.bVisible && !create) {\n        nTd.parentNode.removeChild(nTd);\n      }\n      if (oCol.fnCreatedCell) {\n        oCol.fnCreatedCell.call(oSettings.oInstance, nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i);\n      }\n    }\n    _fnCallbackFire(oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells]);\n  } else {\n    _addClass(row.nTr, trClass);\n  }\n}\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes(settings, row) {\n  var tr = row.nTr;\n  var data = row._aData;\n  if (tr) {\n    var id = settings.rowIdFn(data);\n    if (id) {\n      tr.id = id;\n    }\n    if (data.DT_RowClass) {\n      // Remove any classes added by DT_RowClass before\n      var a = data.DT_RowClass.split(' ');\n      row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a;\n      $(tr).removeClass(row.__rowc.join(' ')).addClass(data.DT_RowClass);\n    }\n    if (data.DT_RowAttr) {\n      $(tr).attr(data.DT_RowAttr);\n    }\n    if (data.DT_RowData) {\n      $(tr).data(data.DT_RowData);\n    }\n  }\n}\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead(settings, side) {\n  var classes = settings.oClasses;\n  var columns = settings.aoColumns;\n  var i, ien, row;\n  var target = side === 'header' ? settings.nTHead : settings.nTFoot;\n  var titleProp = side === 'header' ? 'sTitle' : side;\n\n  // Footer might be defined\n  if (!target) {\n    return;\n  }\n\n  // If no cells yet and we have content for them, then create\n  if (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\n    row = $('tr', target);\n\n    // Add a row if needed\n    if (!row.length) {\n      row = $('<tr/>').appendTo(target);\n    }\n\n    // Add the number of cells needed to make up to the number of columns\n    if (row.length === 1) {\n      var cellCount = 0;\n      $('td, th', row).each(function () {\n        cellCount += this.colSpan;\n      });\n      for (i = cellCount, ien = columns.length; i < ien; i++) {\n        $('<th/>').html(columns[i][titleProp] || '').appendTo(row);\n      }\n    }\n  }\n  var detected = _fnDetectHeader(settings, target, true);\n  if (side === 'header') {\n    settings.aoHeader = detected;\n    $('tr', target).addClass(classes.thead.row);\n  } else {\n    settings.aoFooter = detected;\n    $('tr', target).addClass(classes.tfoot.row);\n  }\n\n  // Every cell needs to be passed through the renderer\n  $(target).children('tr').children('th, td').each(function () {\n    _fnRenderer(settings, side)(settings, $(this), classes);\n  });\n}\n\n/**\n * Build a layout structure for a header or footer\n *\n * @param {*} settings DataTables settings\n * @param {*} source Source layout array\n * @param {*} incColumns What columns should be included\n * @returns Layout array in column index order\n */\nfunction _fnHeaderLayout(settings, source, incColumns) {\n  var row, column, cell;\n  var local = [];\n  var structure = [];\n  var columns = settings.aoColumns;\n  var columnCount = columns.length;\n  var rowspan, colspan;\n  if (!source) {\n    return;\n  }\n\n  // Default is to work on only visible columns\n  if (!incColumns) {\n    incColumns = _range(columnCount).filter(function (idx) {\n      return columns[idx].bVisible;\n    });\n  }\n\n  // Make a copy of the master layout array, but with only the columns we want\n  for (row = 0; row < source.length; row++) {\n    // Remove any columns we haven't selected\n    local[row] = source[row].slice().filter(function (cell, i) {\n      return incColumns.includes(i);\n    });\n\n    // Prep the structure array - it needs an element for each row\n    structure.push([]);\n  }\n  for (row = 0; row < local.length; row++) {\n    for (column = 0; column < local[row].length; column++) {\n      rowspan = 1;\n      colspan = 1;\n\n      // Check to see if there is already a cell (row/colspan) covering our target\n      // insert point. If there is, then there is nothing to do.\n      if (structure[row][column] === undefined) {\n        cell = local[row][column].cell;\n\n        // Expand for rowspan\n        while (local[row + rowspan] !== undefined && local[row][column].cell == local[row + rowspan][column].cell) {\n          structure[row + rowspan][column] = null;\n          rowspan++;\n        }\n\n        // And for colspan\n        while (local[row][column + colspan] !== undefined && local[row][column].cell == local[row][column + colspan].cell) {\n          // Which also needs to go over rows\n          for (var k = 0; k < rowspan; k++) {\n            structure[row + k][column + colspan] = null;\n          }\n          colspan++;\n        }\n        var titleSpan = $('span.dt-column-title', cell);\n        structure[row][column] = {\n          cell: cell,\n          colspan: colspan,\n          rowspan: rowspan,\n          title: titleSpan.length ? titleSpan.html() : $(cell).html()\n        };\n      }\n    }\n  }\n  return structure;\n}\n\n/**\n * Draw the header (or footer) element based on the column visibility states.\n *\n *  @param object oSettings dataTables settings object\n *  @param array aoSource Layout array from _fnDetectHeader\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead(settings, source) {\n  var layout = _fnHeaderLayout(settings, source);\n  var tr, n;\n  for (var row = 0; row < source.length; row++) {\n    tr = source[row].row;\n\n    // All cells are going to be replaced, so empty out the row\n    // Can't use $().empty() as that kills event handlers\n    if (tr) {\n      while (n = tr.firstChild) {\n        tr.removeChild(n);\n      }\n    }\n    for (var column = 0; column < layout[row].length; column++) {\n      var point = layout[row][column];\n      if (point) {\n        $(point.cell).appendTo(tr).attr('rowspan', point.rowspan).attr('colspan', point.colspan);\n      }\n    }\n  }\n}\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw(oSettings, ajaxComplete) {\n  // Allow for state saving and a custom start position\n  _fnStart(oSettings);\n\n  /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n  var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n  if (aPreDraw.indexOf(false) !== -1) {\n    _fnProcessingDisplay(oSettings, false);\n    return;\n  }\n  var anRows = [];\n  var iRowCount = 0;\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var aiDisplay = oSettings.aiDisplay;\n  var iDisplayStart = oSettings._iDisplayStart;\n  var iDisplayEnd = oSettings.fnDisplayEnd();\n  var columns = oSettings.aoColumns;\n  var body = $(oSettings.nTBody);\n  oSettings.bDrawing = true;\n\n  /* Server-side processing draw intercept */\n  if (oSettings.deferLoading) {\n    oSettings.deferLoading = false;\n    oSettings.iDraw++;\n    _fnProcessingDisplay(oSettings, false);\n  } else if (!bServerSide) {\n    oSettings.iDraw++;\n  } else if (!oSettings.bDestroying && !ajaxComplete) {\n    // Show loading message for server-side processing\n    if (oSettings.iDraw === 0) {\n      body.empty().append(_emptyRow(oSettings));\n    }\n    _fnAjaxUpdate(oSettings);\n    return;\n  }\n  if (aiDisplay.length !== 0) {\n    var iStart = bServerSide ? 0 : iDisplayStart;\n    var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n    for (var j = iStart; j < iEnd; j++) {\n      var iDataIndex = aiDisplay[j];\n      var aoData = oSettings.aoData[iDataIndex];\n      if (aoData.nTr === null) {\n        _fnCreateTr(oSettings, iDataIndex);\n      }\n      var nRow = aoData.nTr;\n\n      // Add various classes as needed\n      for (var i = 0; i < columns.length; i++) {\n        var col = columns[i];\n        var td = aoData.anCells[i];\n        _addClass(td, _ext.type.className[col.sType]); // auto class\n        _addClass(td, oSettings.oClasses.tbody.cell); // all cells\n      }\n\n      // Row callback functions - might want to manipulate the row\n      // iRowCount and j are not currently documented. Are they at all\n      // useful?\n      _fnCallbackFire(oSettings, 'aoRowCallback', null, [nRow, aoData._aData, iRowCount, j, iDataIndex]);\n      anRows.push(nRow);\n      iRowCount++;\n    }\n  } else {\n    anRows[0] = _emptyRow(oSettings);\n  }\n\n  /* Header and footer callbacks */\n  _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n  _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n  // replaceChildren is faster, but only became widespread in 2020,\n  // so a fall back in jQuery is provided for older browsers.\n  if (body[0].replaceChildren) {\n    body[0].replaceChildren.apply(body[0], anRows);\n  } else {\n    body.children().detach();\n    body.append($(anRows));\n  }\n\n  // Empty table needs a specific class\n  $(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n\n  /* Call all required callback functions for the end of a draw */\n  _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings], true);\n\n  /* Draw is complete, sorting and filtering must be as well */\n  oSettings.bSorted = false;\n  oSettings.bFiltered = false;\n  oSettings.bDrawing = false;\n}\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw(settings, holdPosition, recompute) {\n  var features = settings.oFeatures,\n    sort = features.bSort,\n    filter = features.bFilter;\n  if (recompute === undefined || recompute === true) {\n    // Resolve any column types that are unknown due to addition or invalidation\n    _fnColumnTypes(settings);\n    if (sort) {\n      _fnSort(settings);\n    }\n    if (filter) {\n      _fnFilterComplete(settings, settings.oPreviousSearch);\n    } else {\n      // No filtering, so we want to just use the display master\n      settings.aiDisplay = settings.aiDisplayMaster.slice();\n    }\n  }\n  if (holdPosition !== true) {\n    settings._iDisplayStart = 0;\n  }\n\n  // Let any modules know about the draw hold position state (used by\n  // scrolling internally)\n  settings._drawHold = holdPosition;\n  _fnDraw(settings);\n  settings.api.one('draw', function () {\n    settings._drawHold = false;\n  });\n}\n\n/*\n * Table is empty - create a row with an empty message in it\n */\nfunction _emptyRow(settings) {\n  var oLang = settings.oLanguage;\n  var zero = oLang.sZeroRecords;\n  var dataSrc = _fnDataSource(settings);\n\n  // Make use of the fact that settings.json is only set once the initial data has\n  // been loaded. Show loading when that isn't the case\n  if ((dataSrc === 'ssp' || dataSrc === 'ajax') && !settings.json) {\n    zero = oLang.sLoadingRecords;\n  } else if (oLang.sEmptyTable && settings.fnRecordsTotal() === 0) {\n    zero = oLang.sEmptyTable;\n  }\n  return $('<tr/>').append($('<td />', {\n    'colSpan': _fnVisbleColumns(settings),\n    'class': settings.oClasses.empty.row\n  }).html(zero))[0];\n}\n\n/**\n * Expand the layout items into an object for the rendering function\n */\nfunction _layoutItems(row, align, items) {\n  if (Array.isArray(items)) {\n    for (var i = 0; i < items.length; i++) {\n      _layoutItems(row, align, items[i]);\n    }\n    return;\n  }\n  var rowCell = row[align];\n\n  // If it is an object, then there can be multiple features contained in it\n  if ($.isPlainObject(items)) {\n    // A feature plugin cannot be named \"features\" due to this check\n    if (items.features) {\n      if (items.rowId) {\n        row.id = items.rowId;\n      }\n      if (items.rowClass) {\n        row.className = items.rowClass;\n      }\n      rowCell.id = items.id;\n      rowCell.className = items.className;\n      _layoutItems(row, align, items.features);\n    } else {\n      Object.keys(items).map(function (key) {\n        rowCell.contents.push({\n          feature: key,\n          opts: items[key]\n        });\n      });\n    }\n  } else {\n    rowCell.contents.push(items);\n  }\n}\n\n/**\n * Find, or create a layout row\n */\nfunction _layoutGetRow(rows, rowNum, align) {\n  var row;\n\n  // Find existing rows\n  for (var i = 0; i < rows.length; i++) {\n    row = rows[i];\n    if (row.rowNum === rowNum) {\n      // full is on its own, but start and end share a row\n      if (align === 'full' && row.full || (align === 'start' || align === 'end') && (row.start || row.end)) {\n        if (!row[align]) {\n          row[align] = {\n            contents: []\n          };\n        }\n        return row;\n      }\n    }\n  }\n\n  // If we get this far, then there was no match, create a new row\n  row = {\n    rowNum: rowNum\n  };\n  row[align] = {\n    contents: []\n  };\n  rows.push(row);\n  return row;\n}\n\n/**\n * Convert a `layout` object given by a user to the object structure needed\n * for the renderer. This is done twice, once for above and once for below\n * the table. Ordering must also be considered.\n *\n * @param {*} settings DataTables settings object\n * @param {*} layout Layout object to convert\n * @param {string} side `top` or `bottom`\n * @returns Converted array structure - one item for each row.\n */\nfunction _layoutArray(settings, layout, side) {\n  var rows = [];\n\n  // Split out into an array\n  $.each(layout, function (pos, items) {\n    if (items === null) {\n      return;\n    }\n    var parts = pos.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/);\n    var rowNum = parts[2] ? parts[2] * 1 : 0;\n    var align = parts[3] ? parts[3].toLowerCase() : 'full';\n\n    // Filter out the side we aren't interested in\n    if (parts[1] !== side) {\n      return;\n    }\n\n    // Get or create the row we should attach to\n    var row = _layoutGetRow(rows, rowNum, align);\n    _layoutItems(row, align, items);\n  });\n\n  // Order by item identifier\n  rows.sort(function (a, b) {\n    var order1 = a.rowNum;\n    var order2 = b.rowNum;\n\n    // If both in the same row, then the row with `full` comes first\n    if (order1 === order2) {\n      var ret = a.full && !b.full ? -1 : 1;\n      return side === 'bottom' ? ret * -1 : ret;\n    }\n    return order2 - order1;\n  });\n\n  // Invert for below the table\n  if (side === 'bottom') {\n    rows.reverse();\n  }\n  for (var row = 0; row < rows.length; row++) {\n    delete rows[row].rowNum;\n    _layoutResolve(settings, rows[row]);\n  }\n  return rows;\n}\n\n/**\n * Convert the contents of a row's layout object to nodes that can be inserted\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\n *\n * @param {*} settings DataTables settings object\n * @param {*} row Layout object for this row\n */\nfunction _layoutResolve(settings, row) {\n  var getFeature = function (feature, opts) {\n    if (!_ext.features[feature]) {\n      _fnLog(settings, 0, 'Unknown feature: ' + feature);\n    }\n    return _ext.features[feature].apply(this, [settings, opts]);\n  };\n  var resolve = function (item) {\n    if (!row[item]) {\n      return;\n    }\n    var line = row[item].contents;\n    for (var i = 0, ien = line.length; i < ien; i++) {\n      if (!line[i]) {\n        continue;\n      } else if (typeof line[i] === 'string') {\n        line[i] = getFeature(line[i], null);\n      } else if ($.isPlainObject(line[i])) {\n        // If it's an object, it just has feature and opts properties from\n        // the transform in _layoutArray\n        line[i] = getFeature(line[i].feature, line[i].opts);\n      } else if (typeof line[i].node === 'function') {\n        line[i] = line[i].node(settings);\n      } else if (typeof line[i] === 'function') {\n        var inst = line[i](settings);\n        line[i] = typeof inst.node === 'function' ? inst.node() : inst;\n      }\n    }\n  };\n  resolve('start');\n  resolve('end');\n  resolve('full');\n}\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} settings DataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml(settings) {\n  var classes = settings.oClasses;\n  var table = $(settings.nTable);\n\n  // Wrapper div around everything DataTables controls\n  var insert = $('<div/>').attr({\n    id: settings.sTableId + '_wrapper',\n    'class': classes.container\n  }).insertBefore(table);\n  settings.nTableWrapper = insert[0];\n  if (settings.sDom) {\n    // Legacy\n    _fnLayoutDom(settings, settings.sDom, insert);\n  } else {\n    var top = _layoutArray(settings, settings.layout, 'top');\n    var bottom = _layoutArray(settings, settings.layout, 'bottom');\n    var renderer = _fnRenderer(settings, 'layout');\n\n    // Everything above - the renderer will actually insert the contents into the document\n    top.forEach(function (item) {\n      renderer(settings, insert, item);\n    });\n\n    // The table - always the center of attention\n    renderer(settings, insert, {\n      full: {\n        table: true,\n        contents: [_fnFeatureHtmlTable(settings)]\n      }\n    });\n\n    // Everything below\n    bottom.forEach(function (item) {\n      renderer(settings, insert, item);\n    });\n  }\n\n  // Processing floats on top, so it isn't an inserted feature\n  _processingHtml(settings);\n}\n\n/**\n * Draw the table with the legacy DOM property\n * @param {*} settings DT settings object\n * @param {*} dom DOM string\n * @param {*} insert Insert point\n */\nfunction _fnLayoutDom(settings, dom, insert) {\n  var parts = dom.match(/(\".*?\")|('.*?')|./g);\n  var featureNode, option, newNode, next, attr;\n  for (var i = 0; i < parts.length; i++) {\n    featureNode = null;\n    option = parts[i];\n    if (option == '<') {\n      // New container div\n      newNode = $('<div/>');\n\n      // Check to see if we should append an id and/or a class name to the container\n      next = parts[i + 1];\n      if (next[0] == \"'\" || next[0] == '\"') {\n        attr = next.replace(/['\"]/g, '');\n        var id = '',\n          className;\n\n        /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n         * breaks the string into parts and applies them as needed\n         */\n        if (attr.indexOf('.') != -1) {\n          var split = attr.split('.');\n          id = split[0];\n          className = split[1];\n        } else if (attr[0] == \"#\") {\n          id = attr;\n        } else {\n          className = attr;\n        }\n        newNode.attr('id', id.substring(1)).addClass(className);\n        i++; // Move along the position array\n      }\n      insert.append(newNode);\n      insert = newNode;\n    } else if (option == '>') {\n      // End container div\n      insert = insert.parent();\n    } else if (option == 't') {\n      // Table\n      featureNode = _fnFeatureHtmlTable(settings);\n    } else {\n      DataTable.ext.feature.forEach(function (feature) {\n        if (option == feature.cFeature) {\n          featureNode = feature.fnInit(settings);\n        }\n      });\n    }\n\n    // Add to the display\n    if (featureNode) {\n      insert.append(featureNode);\n    }\n  }\n}\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param {node} thead The header/footer element for the table\n *  @returns {array} Calculated layout array\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader(settings, thead, write) {\n  var columns = settings.aoColumns;\n  var rows = $(thead).children('tr');\n  var row, cell;\n  var i, k, l, iLen, shifted, column, colspan, rowspan;\n  var titleRow = settings.titleRow;\n  var isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n  var layout = [];\n  var unique;\n  var shift = function (a, i, j) {\n    var k = a[i];\n    while (k[j]) {\n      j++;\n    }\n    return j;\n  };\n\n  // We know how many rows there are in the layout - so prep it\n  for (i = 0, iLen = rows.length; i < iLen; i++) {\n    layout.push([]);\n  }\n  for (i = 0, iLen = rows.length; i < iLen; i++) {\n    row = rows[i];\n    column = 0;\n\n    // For every cell in the row..\n    cell = row.firstChild;\n    while (cell) {\n      if (cell.nodeName.toUpperCase() == 'TD' || cell.nodeName.toUpperCase() == 'TH') {\n        var cols = [];\n        var jqCell = $(cell);\n\n        // Get the col and rowspan attributes from the DOM and sanitise them\n        colspan = cell.getAttribute('colspan') * 1;\n        rowspan = cell.getAttribute('rowspan') * 1;\n        colspan = !colspan || colspan === 0 || colspan === 1 ? 1 : colspan;\n        rowspan = !rowspan || rowspan === 0 || rowspan === 1 ? 1 : rowspan;\n\n        // There might be colspan cells already in this row, so shift our target\n        // accordingly\n        shifted = shift(layout, i, column);\n\n        // Cache calculation for unique columns\n        unique = colspan === 1 ? true : false;\n\n        // Perform header setup\n        if (write) {\n          if (unique) {\n            // Allow column options to be set from HTML attributes\n            _fnColumnOptions(settings, shifted, _fnEscapeObject(jqCell.data()));\n\n            // Get the width for the column. This can be defined from the\n            // width attribute, style attribute or `columns.width` option\n            var columnDef = columns[shifted];\n            var width = cell.getAttribute('width') || null;\n            var t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n            if (t) {\n              width = t[1];\n            }\n            columnDef.sWidthOrig = columnDef.sWidth || width;\n            if (isHeader) {\n              // Column title handling - can be user set, or read from the DOM\n              // This happens before the render, so the original is still in place\n              if (columnDef.sTitle !== null && !columnDef.autoTitle) {\n                if (titleRow === true && i === 0 ||\n                // top row\n                titleRow === false && i === rows.length - 1 ||\n                // bottom row\n                titleRow === i ||\n                // specific row\n                titleRow === null) {\n                  cell.innerHTML = columnDef.sTitle;\n                }\n              }\n              if (!columnDef.sTitle && unique) {\n                columnDef.sTitle = _stripHtml(cell.innerHTML);\n                columnDef.autoTitle = true;\n              }\n            } else {\n              // Footer specific operations\n              if (columnDef.footer) {\n                cell.innerHTML = columnDef.footer;\n              }\n            }\n\n            // Fall back to the aria-label attribute on the table header if no ariaTitle is\n            // provided.\n            if (!columnDef.ariaTitle) {\n              columnDef.ariaTitle = jqCell.attr(\"aria-label\") || columnDef.sTitle;\n            }\n\n            // Column specific class names\n            if (columnDef.className) {\n              jqCell.addClass(columnDef.className);\n            }\n          }\n\n          // Wrap the column title so we can write to it in future\n          if ($('span.dt-column-title', cell).length === 0) {\n            $('<span>').addClass('dt-column-title').append(cell.childNodes).appendTo(cell);\n          }\n          if (settings.orderIndicators && isHeader && jqCell.filter(':not([data-dt-order=disable])').length !== 0 && jqCell.parent(':not([data-dt-order=disable])').length !== 0 && $('span.dt-column-order', cell).length === 0) {\n            $('<span>').addClass('dt-column-order').appendTo(cell);\n          }\n\n          // We need to wrap the elements in the header in another element to use flexbox\n          // layout for those elements\n          var headerFooter = isHeader ? 'header' : 'footer';\n          if ($('span.dt-column-' + headerFooter, cell).length === 0) {\n            $('<div>').addClass('dt-column-' + headerFooter).append(cell.childNodes).appendTo(cell);\n          }\n        }\n\n        // If there is col / rowspan, copy the information into the layout grid\n        for (l = 0; l < colspan; l++) {\n          for (k = 0; k < rowspan; k++) {\n            layout[i + k][shifted + l] = {\n              cell: cell,\n              unique: unique\n            };\n            layout[i + k].row = row;\n          }\n          cols.push(shifted + l);\n        }\n\n        // Assign an attribute so spanning cells can still be identified\n        // as belonging to a column\n        cell.setAttribute('data-dt-column', _unique(cols).join(','));\n      }\n      cell = cell.nextSibling;\n    }\n  }\n  return layout;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart(oSettings) {\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var iInitDisplayStart = oSettings.iInitDisplayStart;\n\n  // Check and see if we have an initial draw position from state saving\n  if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n    oSettings._iDisplayStart = bServerSide ? iInitDisplayStart : iInitDisplayStart >= oSettings.fnRecordsDisplay() ? 0 : iInitDisplayStart;\n    oSettings.iInitDisplayStart = -1;\n  }\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax(oSettings, data, fn) {\n  var ajaxData;\n  var ajax = oSettings.ajax;\n  var instance = oSettings.oInstance;\n  var callback = function (json) {\n    var status = oSettings.jqXHR ? oSettings.jqXHR.status : null;\n    if (json === null || typeof status === 'number' && status == 204) {\n      json = {};\n      _fnAjaxDataSrc(oSettings, json, []);\n    }\n    var error = json.error || json.sError;\n    if (error) {\n      _fnLog(oSettings, 0, error);\n    }\n\n    // Microsoft often wrap JSON as a string in another JSON object\n    // Let's handle that automatically\n    if (json.d && typeof json.d === 'string') {\n      try {\n        json = JSON.parse(json.d);\n      } catch (e) {\n        // noop\n      }\n    }\n    oSettings.json = json;\n    _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true);\n    fn(json);\n  };\n  if ($.isPlainObject(ajax) && ajax.data) {\n    ajaxData = ajax.data;\n    var newData = typeof ajaxData === 'function' ? ajaxData(data, oSettings) :\n    // fn can manipulate data or return\n    ajaxData; // an object object or array to merge\n\n    // If the function returned something, use that alone\n    data = typeof ajaxData === 'function' && newData ? newData : $.extend(true, data, newData);\n\n    // Remove the data property as we've resolved it already and don't want\n    // jQuery to do it again (it is restored at the end of the function)\n    delete ajax.data;\n  }\n  var baseAjax = {\n    \"url\": typeof ajax === 'string' ? ajax : '',\n    \"data\": data,\n    \"success\": callback,\n    \"dataType\": \"json\",\n    \"cache\": false,\n    \"type\": oSettings.sServerMethod,\n    \"error\": function (xhr, error) {\n      var ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true);\n      if (ret.indexOf(true) === -1) {\n        if (error == \"parsererror\") {\n          _fnLog(oSettings, 0, 'Invalid JSON response', 1);\n        } else if (xhr.readyState === 4) {\n          _fnLog(oSettings, 0, 'Ajax error', 7);\n        }\n      }\n      _fnProcessingDisplay(oSettings, false);\n    }\n  };\n\n  // If `ajax` option is an object, extend and override our default base\n  if ($.isPlainObject(ajax)) {\n    $.extend(baseAjax, ajax);\n  }\n\n  // Store the data submitted for the API\n  oSettings.oAjaxData = data;\n\n  // Allow plug-ins and external processes to modify the data\n  _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data, baseAjax], true);\n\n  // Custom Ajax option to submit the parameters as a JSON string\n  if (baseAjax.submitAs === 'json' && typeof data === 'object') {\n    baseAjax.data = JSON.stringify(data);\n  }\n  if (typeof ajax === 'function') {\n    // Is a function - let the caller define what needs to be done\n    oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n  } else if (ajax.url === '') {\n    // No url, so don't load any data. Just apply an empty data array\n    // to the object for the callback.\n    var empty = {};\n    _fnAjaxDataSrc(oSettings, empty, []);\n    callback(empty);\n  } else {\n    // Object to extend the base settings\n    oSettings.jqXHR = $.ajax(baseAjax);\n  }\n\n  // Restore for next time around\n  if (ajaxData) {\n    ajax.data = ajaxData;\n  }\n}\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate(settings) {\n  settings.iDraw++;\n  _fnProcessingDisplay(settings, true);\n  _fnBuildAjax(settings, _fnAjaxParameters(settings), function (json) {\n    _fnAjaxUpdateDraw(settings, json);\n  });\n}\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters(settings) {\n  var columns = settings.aoColumns,\n    features = settings.oFeatures,\n    preSearch = settings.oPreviousSearch,\n    preColSearch = settings.aoPreSearchCols,\n    colData = function (idx, prop) {\n      return typeof columns[idx][prop] === 'function' ? 'function' : columns[idx][prop];\n    };\n  return {\n    draw: settings.iDraw,\n    columns: columns.map(function (column, i) {\n      return {\n        data: colData(i, 'mData'),\n        name: column.sName,\n        searchable: column.bSearchable,\n        orderable: column.bSortable,\n        search: {\n          value: preColSearch[i].search,\n          regex: preColSearch[i].regex,\n          fixed: Object.keys(column.searchFixed).map(function (name) {\n            return {\n              name: name,\n              term: column.searchFixed[name].toString()\n            };\n          })\n        }\n      };\n    }),\n    order: _fnSortFlatten(settings).map(function (val) {\n      return {\n        column: val.col,\n        dir: val.dir,\n        name: colData(val.col, 'sName')\n      };\n    }),\n    start: settings._iDisplayStart,\n    length: features.bPaginate ? settings._iDisplayLength : -1,\n    search: {\n      value: preSearch.search,\n      regex: preSearch.regex,\n      fixed: Object.keys(settings.searchFixed).map(function (name) {\n        return {\n          name: name,\n          term: settings.searchFixed[name].toString()\n        };\n      })\n    }\n  };\n}\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw(settings, json) {\n  var data = _fnAjaxDataSrc(settings, json);\n  var draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n  var recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n  var recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n  if (draw !== undefined) {\n    // Protect against out of sequence returns\n    if (draw * 1 < settings.iDraw) {\n      return;\n    }\n    settings.iDraw = draw * 1;\n  }\n\n  // No data in returned object, so rather than an array, we show an empty table\n  if (!data) {\n    data = [];\n  }\n  _fnClearTable(settings);\n  settings._iRecordsTotal = parseInt(recordsTotal, 10);\n  settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n  for (var i = 0, ien = data.length; i < ien; i++) {\n    _fnAddData(settings, data[i]);\n  }\n  settings.aiDisplay = settings.aiDisplayMaster.slice();\n  _fnColumnTypes(settings);\n  _fnDraw(settings, true);\n  _fnInitComplete(settings);\n  _fnProcessingDisplay(settings, false);\n}\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} settings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\nfunction _fnAjaxDataSrc(settings, json, write) {\n  var dataProp = 'data';\n  if ($.isPlainObject(settings.ajax) && settings.ajax.dataSrc !== undefined) {\n    // Could in inside a `dataSrc` object, or not!\n    var dataSrc = settings.ajax.dataSrc;\n\n    // string, function and object are valid types\n    if (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n      dataProp = dataSrc;\n    } else if (dataSrc.data !== undefined) {\n      dataProp = dataSrc.data;\n    }\n  }\n  if (!write) {\n    if (dataProp === 'data') {\n      // If the default, then we still want to support the old style, and safely ignore\n      // it if possible\n      return json.aaData || json[dataProp];\n    }\n    return dataProp !== \"\" ? _fnGetObjectDataFn(dataProp)(json) : json;\n  }\n\n  // set\n  _fnSetObjectDataFn(dataProp)(json, write);\n}\n\n/**\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n * @param {*} settings DataTables settings object\n * @param {*} param Target parameter\n * @param {*} json JSON data\n * @returns Resolved value\n */\nfunction _fnAjaxDataSrcParam(settings, param, json) {\n  var dataSrc = $.isPlainObject(settings.ajax) ? settings.ajax.dataSrc : null;\n  if (dataSrc && dataSrc[param]) {\n    // Get from custom location\n    return _fnGetObjectDataFn(dataSrc[param])(json);\n  }\n\n  // else - Default behaviour\n  var old = '';\n\n  // Legacy support\n  if (param === 'draw') {\n    old = 'sEcho';\n  } else if (param === 'recordsTotal') {\n    old = 'iTotalRecords';\n  } else if (param === 'recordsFiltered') {\n    old = 'iTotalDisplayRecords';\n  }\n  return json[old] !== undefined ? json[old] : json[param];\n}\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} settings dataTables settings object\n *  @param {object} input search information\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete(settings, input) {\n  var columnsSearch = settings.aoPreSearchCols;\n\n  // In server-side processing all filtering is done by the server, so no point hanging around here\n  if (_fnDataSource(settings) != 'ssp') {\n    // Check if any of the rows were invalidated\n    _fnFilterData(settings);\n\n    // Start from the full data set\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n    // Global filter first\n    _fnFilter(settings.aiDisplay, settings, input.search, input);\n    $.each(settings.searchFixed, function (name, term) {\n      _fnFilter(settings.aiDisplay, settings, term, {});\n    });\n\n    // Then individual column filters\n    for (var i = 0; i < columnsSearch.length; i++) {\n      var col = columnsSearch[i];\n      _fnFilter(settings.aiDisplay, settings, col.search, col, i);\n      $.each(settings.aoColumns[i].searchFixed, function (name, term) {\n        _fnFilter(settings.aiDisplay, settings, term, {}, i);\n      });\n    }\n\n    // And finally global filtering\n    _fnFilterCustom(settings);\n  }\n\n  // Tell the draw function we have been filtering\n  settings.bFiltered = true;\n  _fnCallbackFire(settings, null, 'search', [settings]);\n}\n\n/**\n * Apply custom filtering functions\n * \n * This is legacy now that we have named functions, but it is widely used\n * from 1.x, so it is not yet deprecated.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom(settings) {\n  var filters = DataTable.ext.search;\n  var displayRows = settings.aiDisplay;\n  var row, rowIdx;\n  for (var i = 0, ien = filters.length; i < ien; i++) {\n    var rows = [];\n\n    // Loop over each row and see if it should be included\n    for (var j = 0, jen = displayRows.length; j < jen; j++) {\n      rowIdx = displayRows[j];\n      row = settings.aoData[rowIdx];\n      if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n        rows.push(rowIdx);\n      }\n    }\n\n    // So the array reference doesn't break set the results into the\n    // existing array\n    displayRows.length = 0;\n    _fnArrayApply(displayRows, rows);\n  }\n}\n\n/**\n * Filter the data table based on user input and draw the table\n */\nfunction _fnFilter(searchRows, settings, input, options, column) {\n  if (input === '') {\n    return;\n  }\n  var i = 0;\n  var matched = [];\n\n  // Search term can be a function, regex or string - if a string we apply our\n  // smart filtering regex (assuming the options require that)\n  var searchFunc = typeof input === 'function' ? input : null;\n  var rpSearch = input instanceof RegExp ? input : searchFunc ? null : _fnFilterCreateSearch(input, options);\n\n  // Then for each row, does the test pass. If not, lop the row from the array\n  for (i = 0; i < searchRows.length; i++) {\n    var row = settings.aoData[searchRows[i]];\n    var data = column === undefined ? row._sFilterRow : row._aFilterData[column];\n    if (searchFunc && searchFunc(data, row._aData, searchRows[i], column) || rpSearch && rpSearch.test(data)) {\n      matched.push(searchRows[i]);\n    }\n  }\n\n  // Mutate the searchRows array\n  searchRows.length = matched.length;\n  for (i = 0; i < matched.length; i++) {\n    searchRows[i] = matched[i];\n  }\n}\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch(search, inOpts) {\n  var not = [];\n  var options = $.extend({}, {\n    boundary: false,\n    caseInsensitive: true,\n    exact: false,\n    regex: false,\n    smart: true\n  }, inOpts);\n  if (typeof search !== 'string') {\n    search = search.toString();\n  }\n\n  // Remove diacritics if normalize is set up to do so\n  search = _normalize(search);\n  if (options.exact) {\n    return new RegExp('^' + _fnEscapeRegex(search) + '$', options.caseInsensitive ? 'i' : '');\n  }\n  search = options.regex ? search : _fnEscapeRegex(search);\n  if (options.smart) {\n    /* For smart filtering we want to allow the search to work regardless of\n     * word order. We also want double quoted text to be preserved, so word\n     * order is important - a la google. And a negative look around for\n     * finding rows which don't contain a given string.\n     * \n     * So this is the sort of thing we want to generate:\n     * \n     * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n     */\n    var parts = search.match(/!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g) || [''];\n    var a = parts.map(function (word) {\n      var negative = false;\n      var m;\n\n      // Determine if it is a \"does not include\"\n      if (word.charAt(0) === '!') {\n        negative = true;\n        word = word.substring(1);\n      }\n\n      // Strip the quotes from around matched phrases\n      if (word.charAt(0) === '\"') {\n        m = word.match(/^\"(.*)\"$/);\n        word = m ? m[1] : word;\n      } else if (word.charAt(0) === '\\u201C') {\n        // Smart quote match (iPhone users)\n        m = word.match(/^\\u201C(.*)\\u201D$/);\n        word = m ? m[1] : word;\n      }\n\n      // For our \"not\" case, we need to modify the string that is\n      // allowed to match at the end of the expression.\n      if (negative) {\n        if (word.length > 1) {\n          not.push('(?!' + word + ')');\n        }\n        word = '';\n      }\n      return word.replace(/\"/g, '');\n    });\n    var match = not.length ? not.join('') : '';\n    var boundary = options.boundary ? '\\\\b' : '';\n    search = '^(?=.*?' + boundary + a.join(')(?=.*?' + boundary) + ')(' + match + '.)*$';\n  }\n  return new RegExp(search, options.caseInsensitive ? 'i' : '');\n}\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var column;\n  var j, jen, filterData, cellData, row;\n  var wasInvalidated = false;\n  for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n    if (!data[rowIdx]) {\n      continue;\n    }\n    row = data[rowIdx];\n    if (!row._aFilterData) {\n      filterData = [];\n      for (j = 0, jen = columns.length; j < jen; j++) {\n        column = columns[j];\n        if (column.bSearchable) {\n          cellData = _fnGetCellData(settings, rowIdx, j, 'filter');\n\n          // Search in DataTables is string based\n          if (cellData === null) {\n            cellData = '';\n          }\n          if (typeof cellData !== 'string' && cellData.toString) {\n            cellData = cellData.toString();\n          }\n        } else {\n          cellData = '';\n        }\n\n        // If it looks like there is an HTML entity in the string,\n        // attempt to decode it so sorting works as expected. Note that\n        // we could use a single line of jQuery to do this, but the DOM\n        // method used here is much faster https://jsperf.com/html-decode\n        if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n          __filter_div.innerHTML = cellData;\n          cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText;\n        }\n        if (cellData.replace) {\n          cellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n        }\n        filterData.push(cellData);\n      }\n      row._aFilterData = filterData;\n      row._sFilterRow = filterData.join('  ');\n      wasInvalidated = true;\n    }\n  }\n  return wasInvalidated;\n}\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise(settings) {\n  var i;\n  var init = settings.oInit;\n  var deferLoading = settings.deferLoading;\n  var dataSrc = _fnDataSource(settings);\n\n  // Ensure that the table data is fully initialised\n  if (!settings.bInitialised) {\n    setTimeout(function () {\n      _fnInitialise(settings);\n    }, 200);\n    return;\n  }\n\n  // Build the header / footer for the table\n  _fnBuildHead(settings, 'header');\n  _fnBuildHead(settings, 'footer');\n\n  // Load the table's state (if needed) and then render around it and draw\n  _fnLoadState(settings, init, function () {\n    // Then draw the header / footer\n    _fnDrawHead(settings, settings.aoHeader);\n    _fnDrawHead(settings, settings.aoFooter);\n\n    // Cache the paging start point, as the first redraw will reset it\n    var iAjaxStart = settings.iInitDisplayStart;\n\n    // Local data load\n    // Check if there is data passing into the constructor\n    if (init.aaData) {\n      for (i = 0; i < init.aaData.length; i++) {\n        _fnAddData(settings, init.aaData[i]);\n      }\n    } else if (deferLoading || dataSrc == 'dom') {\n      // Grab the data from the page\n      _fnAddTr(settings, $(settings.nTBody).children('tr'));\n    }\n\n    // Filter not yet applied - copy the display master\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n    // Enable features\n    _fnAddOptionsHtml(settings);\n    _fnSortInit(settings);\n    _colGroup(settings);\n\n    /* Okay to show that something is going on now */\n    _fnProcessingDisplay(settings, true);\n    _fnCallbackFire(settings, null, 'preInit', [settings], true);\n\n    // If there is default sorting required - let's do it. The sort function\n    // will do the drawing for us. Otherwise we draw the table regardless of the\n    // Ajax source - this allows the table to look initialised for Ajax sourcing\n    // data (show 'loading' message possibly)\n    _fnReDraw(settings);\n\n    // Server-side processing init complete is done by _fnAjaxUpdateDraw\n    if (dataSrc != 'ssp' || deferLoading) {\n      // if there is an ajax source load the data\n      if (dataSrc == 'ajax') {\n        _fnBuildAjax(settings, {}, function (json) {\n          var aData = _fnAjaxDataSrc(settings, json);\n\n          // Got the data - add it to the table\n          for (i = 0; i < aData.length; i++) {\n            _fnAddData(settings, aData[i]);\n          }\n\n          // Reset the init display for cookie saving. We've already done\n          // a filter, and therefore cleared it before. So we need to make\n          // it appear 'fresh'\n          settings.iInitDisplayStart = iAjaxStart;\n          _fnReDraw(settings);\n          _fnProcessingDisplay(settings, false);\n          _fnInitComplete(settings);\n        }, settings);\n      } else {\n        _fnInitComplete(settings);\n        _fnProcessingDisplay(settings, false);\n      }\n    }\n  });\n}\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete(settings) {\n  if (settings._bInitComplete) {\n    return;\n  }\n  var args = [settings, settings.json];\n  settings._bInitComplete = true;\n\n  // Table is fully set up and we have data, so calculate the\n  // column widths\n  _fnAdjustColumnSizing(settings);\n  _fnCallbackFire(settings, null, 'plugin-init', args, true);\n  _fnCallbackFire(settings, 'aoInitComplete', 'init', args, true);\n}\nfunction _fnLengthChange(settings, val) {\n  var len = parseInt(val, 10);\n  settings._iDisplayLength = len;\n  _fnLengthOverflow(settings);\n\n  // Fire length change event\n  _fnCallbackFire(settings, null, 'length', [settings, len]);\n}\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange(settings, action, redraw) {\n  var start = settings._iDisplayStart,\n    len = settings._iDisplayLength,\n    records = settings.fnRecordsDisplay();\n  if (records === 0 || len === -1) {\n    start = 0;\n  } else if (typeof action === \"number\") {\n    start = action * len;\n    if (start > records) {\n      start = 0;\n    }\n  } else if (action == \"first\") {\n    start = 0;\n  } else if (action == \"previous\") {\n    start = len >= 0 ? start - len : 0;\n    if (start < 0) {\n      start = 0;\n    }\n  } else if (action == \"next\") {\n    if (start + len < records) {\n      start += len;\n    }\n  } else if (action == \"last\") {\n    start = Math.floor((records - 1) / len) * len;\n  } else if (action === 'ellipsis') {\n    return;\n  } else {\n    _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n  }\n  var changed = settings._iDisplayStart !== start;\n  settings._iDisplayStart = start;\n  _fnCallbackFire(settings, null, changed ? 'page' : 'page-nc', [settings]);\n  if (changed && redraw) {\n    _fnDraw(settings);\n  }\n  return changed;\n}\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings DataTables settings object\n */\nfunction _processingHtml(settings) {\n  var table = settings.nTable;\n  var scrolling = settings.oScroll.sX !== '' || settings.oScroll.sY !== '';\n  if (settings.oFeatures.bProcessing) {\n    var n = $('<div/>', {\n      'id': settings.sTableId + '_processing',\n      'class': settings.oClasses.processing.container,\n      'role': 'status'\n    }).html(settings.oLanguage.sProcessing).append('<div><div></div><div></div><div></div><div></div></div>');\n\n    // Different positioning depending on if scrolling is enabled or not\n    if (scrolling) {\n      n.prependTo($('div.dt-scroll', settings.nTableWrapper));\n    } else {\n      n.insertBefore(table);\n    }\n    $(table).on('processing.dt.DT', function (e, s, show) {\n      n.css('display', show ? 'block' : 'none');\n    });\n  }\n}\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings DataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n */\nfunction _fnProcessingDisplay(settings, show) {\n  // Ignore cases when we are still redrawing\n  if (settings.bDrawing && show === false) {\n    return;\n  }\n  _fnCallbackFire(settings, null, 'processing', [settings, show]);\n}\n\n/**\n * Show the processing element if an action takes longer than a given time\n *\n * @param {*} settings DataTables settings object\n * @param {*} enable Do (true) or not (false) async processing (local feature enablement)\n * @param {*} run Function to run\n */\nfunction _fnProcessingRun(settings, enable, run) {\n  if (!enable) {\n    // Immediate execution, synchronous\n    run();\n  } else {\n    _fnProcessingDisplay(settings, true);\n\n    // Allow the processing display to show if needed\n    setTimeout(function () {\n      run();\n      _fnProcessingDisplay(settings, false);\n    }, 0);\n  }\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable(settings) {\n  var table = $(settings.nTable);\n\n  // Scrolling from here on in\n  var scroll = settings.oScroll;\n  if (scroll.sX === '' && scroll.sY === '') {\n    return settings.nTable;\n  }\n  var scrollX = scroll.sX;\n  var scrollY = scroll.sY;\n  var classes = settings.oClasses.scrolling;\n  var caption = settings.captionNode;\n  var captionSide = caption ? caption._captionSide : null;\n  var headerClone = $(table[0].cloneNode(false));\n  var footerClone = $(table[0].cloneNode(false));\n  var footer = table.children('tfoot');\n  var _div = '<div/>';\n  var size = function (s) {\n    return !s ? null : _fnStringToCss(s);\n  };\n  if (!footer.length) {\n    footer = null;\n  }\n\n  /*\n   * The HTML structure that we want to generate in this function is:\n   *  div - scroller\n   *    div - scroll head\n   *      div - scroll head inner\n   *        table - scroll head table\n   *          thead - thead\n   *    div - scroll body\n   *      table - table (master table)\n   *        thead - thead clone for sizing\n   *        tbody - tbody\n   *    div - scroll foot\n   *      div - scroll foot inner\n   *        table - scroll foot table\n   *          tfoot - tfoot\n   */\n  var scroller = $(_div, {\n    'class': classes.container\n  }).append($(_div, {\n    'class': classes.header.self\n  }).css({\n    overflow: 'hidden',\n    position: 'relative',\n    border: 0,\n    width: scrollX ? size(scrollX) : '100%'\n  }).append($(_div, {\n    'class': classes.header.inner\n  }).css({\n    'box-sizing': 'content-box',\n    width: scroll.sXInner || '100%'\n  }).append(headerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'top' ? caption : null).append(table.children('thead'))))).append($(_div, {\n    'class': classes.body\n  }).css({\n    position: 'relative',\n    overflow: 'auto',\n    width: size(scrollX)\n  }).append(table));\n  if (footer) {\n    scroller.append($(_div, {\n      'class': classes.footer.self\n    }).css({\n      overflow: 'hidden',\n      border: 0,\n      width: scrollX ? size(scrollX) : '100%'\n    }).append($(_div, {\n      'class': classes.footer.inner\n    }).append(footerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'bottom' ? caption : null).append(table.children('tfoot')))));\n  }\n  var children = scroller.children();\n  var scrollHead = children[0];\n  var scrollBody = children[1];\n  var scrollFoot = footer ? children[2] : null;\n\n  // When the body is scrolled, then we also want to scroll the headers\n  $(scrollBody).on('scroll.DT', function () {\n    var scrollLeft = this.scrollLeft;\n    scrollHead.scrollLeft = scrollLeft;\n    if (footer) {\n      scrollFoot.scrollLeft = scrollLeft;\n    }\n  });\n\n  // When focus is put on the header cells, we might need to scroll the body\n  $('th, td', scrollHead).on('focus', function () {\n    var scrollLeft = scrollHead.scrollLeft;\n    scrollBody.scrollLeft = scrollLeft;\n    if (footer) {\n      scrollBody.scrollLeft = scrollLeft;\n    }\n  });\n  $(scrollBody).css('max-height', scrollY);\n  if (!scroll.bCollapse) {\n    $(scrollBody).css('height', scrollY);\n  }\n  settings.nScrollHead = scrollHead;\n  settings.nScrollBody = scrollBody;\n  settings.nScrollFoot = scrollFoot;\n\n  // On redraw - align columns\n  settings.aoDrawCallback.push(_fnScrollDraw);\n  return scroller[0];\n}\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Correct colgroup > col values if needed\n *   3. Copy colgroup > col over to header and footer\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw(settings) {\n  // Given that this is such a monster function, a lot of variables are use\n  // to try and keep the minimised size as small as possible\n  var scroll = settings.oScroll,\n    barWidth = scroll.iBarWidth,\n    divHeader = $(settings.nScrollHead),\n    divHeaderInner = divHeader.children('div'),\n    divHeaderTable = divHeaderInner.children('table'),\n    divBodyEl = settings.nScrollBody,\n    divBody = $(divBodyEl),\n    divFooter = $(settings.nScrollFoot),\n    divFooterInner = divFooter.children('div'),\n    divFooterTable = divFooterInner.children('table'),\n    header = $(settings.nTHead),\n    table = $(settings.nTable),\n    footer = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n    browser = settings.oBrowser,\n    headerCopy,\n    footerCopy;\n\n  // If the scrollbar visibility has changed from the last draw, we need to\n  // adjust the column sizes as the table width will have changed to account\n  // for the scrollbar\n  var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n  if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n    settings.scrollBarVis = scrollBarVis;\n    _fnAdjustColumnSizing(settings);\n    return; // adjust column sizing will call this function again\n  } else {\n    settings.scrollBarVis = scrollBarVis;\n  }\n\n  // 1. Re-create the table inside the scrolling div\n  // Remove the old minimised thead and tfoot elements in the inner table\n  table.children('thead, tfoot').remove();\n\n  // Clone the current header and footer elements and then place it into the inner table\n  headerCopy = header.clone().prependTo(table);\n  headerCopy.find('th, td').removeAttr('tabindex');\n  headerCopy.find('[id]').removeAttr('id');\n  if (footer) {\n    footerCopy = footer.clone().prependTo(table);\n    footerCopy.find('[id]').removeAttr('id');\n  }\n\n  // 2. Correct colgroup > col values if needed\n  // It is possible that the cell sizes are smaller than the content, so we need to\n  // correct colgroup>col for such cases. This can happen if the auto width detection\n  // uses a cell which has a longer string, but isn't the widest! For example \n  // \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n  // \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n  // Note the use of translating into a column index to get the `col` element. This\n  // is because of Responsive which might remove `col` elements, knocking the alignment\n  // of the indexes out.\n  if (settings.aiDisplay.length) {\n    // Get the column sizes from the first row in the table. This should really be a\n    // [].find, but it wasn't supported in Chrome until Sept 2015, and DT has 10 year\n    // browser support\n    var firstTr = null;\n    var start = _fnDataSource(settings) !== 'ssp' ? settings._iDisplayStart : 0;\n    for (i = start; i < start + settings.aiDisplay.length; i++) {\n      var idx = settings.aiDisplay[i];\n      var tr = settings.aoData[idx].nTr;\n      if (tr) {\n        firstTr = tr;\n        break;\n      }\n    }\n    if (firstTr) {\n      var colSizes = $(firstTr).children('th, td').map(function (vis) {\n        return {\n          idx: _fnVisibleToColumnIndex(settings, vis),\n          width: $(this).outerWidth()\n        };\n      });\n\n      // Check against what the colgroup > col is set to and correct if needed\n      for (var i = 0; i < colSizes.length; i++) {\n        var colEl = settings.aoColumns[colSizes[i].idx].colEl[0];\n        var colWidth = colEl.style.width.replace('px', '');\n        if (colWidth !== colSizes[i].width) {\n          colEl.style.width = colSizes[i].width + 'px';\n          if (scroll.sX) {\n            colEl.style.minWidth = colSizes[i].width + 'px';\n          }\n        }\n      }\n    }\n  }\n\n  // 3. Copy the colgroup over to the header and footer\n  divHeaderTable.find('colgroup').remove();\n  divHeaderTable.append(settings.colgroup.clone());\n  if (footer) {\n    divFooterTable.find('colgroup').remove();\n    divFooterTable.append(settings.colgroup.clone());\n  }\n\n  // \"Hide\" the header and footer that we used for the sizing. We need to keep\n  // the content of the cell so that the width applied to the header and body\n  // both match, but we want to hide it completely.\n  $('th, td', headerCopy).each(function () {\n    $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n  });\n  if (footer) {\n    $('th, td', footerCopy).each(function () {\n      $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n    });\n  }\n\n  // 4. Clean up\n  // Figure out if there are scrollbar present - if so then we need a the header and footer to\n  // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n  var isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n  var paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right');\n\n  // Set the width's of the header and footer tables\n  var outerWidth = table.outerWidth();\n  divHeaderTable.css('width', _fnStringToCss(outerWidth));\n  divHeaderInner.css('width', _fnStringToCss(outerWidth)).css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n  if (footer) {\n    divFooterTable.css('width', _fnStringToCss(outerWidth));\n    divFooterInner.css('width', _fnStringToCss(outerWidth)).css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n  }\n\n  // Correct DOM ordering for colgroup - comes before the thead\n  table.children('colgroup').prependTo(table);\n\n  // Adjust the position of the header in case we loose the y-scrollbar\n  divBody.trigger('scroll');\n\n  // If sorting or filtering has occurred, jump the scrolling back to the top\n  // only if we aren't holding the position\n  if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n    divBodyEl.scrollTop = 0;\n  }\n}\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths(settings) {\n  // Not interested in doing column width calculation if auto-width is disabled\n  if (!settings.oFeatures.bAutoWidth) {\n    return;\n  }\n  var table = settings.nTable,\n    columns = settings.aoColumns,\n    scroll = settings.oScroll,\n    scrollY = scroll.sY,\n    scrollX = scroll.sX,\n    scrollXInner = scroll.sXInner,\n    visibleColumns = _fnGetColumns(settings, 'bVisible'),\n    tableWidthAttr = table.getAttribute('width'),\n    // from DOM element\n    tableContainer = table.parentNode,\n    i,\n    column,\n    columnIdx;\n  var styleWidth = table.style.width;\n  var containerWidth = _fnWrapperWidth(settings);\n\n  // Don't re-run for the same width as the last time\n  if (containerWidth === settings.containerWidth) {\n    return false;\n  }\n  settings.containerWidth = containerWidth;\n\n  // If there is no width applied as a CSS style or as an attribute, we assume that\n  // the width is intended to be 100%, which is usually is in CSS, but it is very\n  // difficult to correctly parse the rules to get the final result.\n  if (!styleWidth && !tableWidthAttr) {\n    table.style.width = '100%';\n    styleWidth = '100%';\n  }\n  if (styleWidth && styleWidth.indexOf('%') !== -1) {\n    tableWidthAttr = styleWidth;\n  }\n\n  // Let plug-ins know that we are doing a recalc, in case they have changed any of the\n  // visible columns their own way (e.g. Responsive uses display:none).\n  _fnCallbackFire(settings, null, 'column-calc', {\n    visible: visibleColumns\n  }, false);\n\n  // Construct a single row, worst case, table with the widest\n  // node in the data, assign any user defined widths, then insert it into\n  // the DOM and allow the browser to do all the hard work of calculating\n  // table widths\n  var tmpTable = $(table.cloneNode()).css('visibility', 'hidden').removeAttr('id');\n\n  // Clean up the table body\n  tmpTable.append('<tbody>');\n  var tr = $('<tr/>').appendTo(tmpTable.find('tbody'));\n\n  // Clone the table header and footer - we can't use the header / footer\n  // from the cloned table, since if scrolling is active, the table's\n  // real header and footer are contained in different table tags\n  tmpTable.append($(settings.nTHead).clone()).append($(settings.nTFoot).clone());\n\n  // Remove any assigned widths from the footer (from scrolling)\n  tmpTable.find('tfoot th, tfoot td').css('width', '');\n\n  // Apply custom sizing to the cloned header\n  tmpTable.find('thead th, thead td').each(function () {\n    // Get the `width` from the header layout\n    var width = _fnColumnsSumWidth(settings, this, true, false);\n    if (width) {\n      this.style.width = width;\n\n      // For scrollX we need to force the column width otherwise the\n      // browser will collapse it. If this width is smaller than the\n      // width the column requires, then it will have no effect\n      if (scrollX) {\n        this.style.minWidth = width;\n        $(this).append($('<div/>').css({\n          width: width,\n          margin: 0,\n          padding: 0,\n          border: 0,\n          height: 1\n        }));\n      }\n    } else {\n      this.style.width = '';\n    }\n  });\n\n  // Find the widest piece of data for each column and put it into the table\n  for (i = 0; i < visibleColumns.length; i++) {\n    columnIdx = visibleColumns[i];\n    column = columns[columnIdx];\n    var longest = _fnGetMaxLenString(settings, columnIdx);\n    var autoClass = _ext.type.className[column.sType];\n    var text = longest + column.sContentPadding;\n    var insert = longest.indexOf('<') === -1 ? document.createTextNode(text) : text;\n    $('<td/>').addClass(autoClass).addClass(column.sClass).append(insert).appendTo(tr);\n  }\n\n  // Tidy the temporary table - remove name attributes so there aren't\n  // duplicated in the dom (radio elements for example)\n  $('[name]', tmpTable).removeAttr('name');\n\n  // Table has been built, attach to the document so we can work with it.\n  // A holding element is used, positioned at the top of the container\n  // with minimal height, so it has no effect on if the container scrolls\n  // or not. Otherwise it might trigger scrolling when it actually isn't\n  // needed\n  var holder = $('<div/>').css(scrollX || scrollY ? {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: 1,\n    right: 0,\n    overflow: 'hidden'\n  } : {}).append(tmpTable).appendTo(tableContainer);\n\n  // When scrolling (X or Y) we want to set the width of the table as \n  // appropriate. However, when not scrolling leave the table width as it\n  // is. This results in slightly different, but I think correct behaviour\n  if (scrollX && scrollXInner) {\n    tmpTable.width(scrollXInner);\n  } else if (scrollX) {\n    tmpTable.css('width', 'auto');\n    tmpTable.removeAttr('width');\n\n    // If there is no width attribute or style, then allow the table to\n    // collapse\n    if (tmpTable.outerWidth() < tableContainer.clientWidth && tableWidthAttr) {\n      tmpTable.outerWidth(tableContainer.clientWidth);\n    }\n  } else if (scrollY) {\n    tmpTable.outerWidth(tableContainer.clientWidth);\n  } else if (tableWidthAttr) {\n    tmpTable.outerWidth(tableWidthAttr);\n  }\n\n  // Get the width of each column in the constructed table\n  var total = 0;\n  var bodyCells = tmpTable.find('tbody tr').eq(0).children();\n  for (i = 0; i < visibleColumns.length; i++) {\n    // Use getBounding for sub-pixel accuracy, which we then want to round up!\n    var bounding = bodyCells[i].getBoundingClientRect().width;\n\n    // Total is tracked to remove any sub-pixel errors as the outerWidth\n    // of the table might not equal the total given here\n    total += bounding;\n\n    // Width for each column to use\n    columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding);\n  }\n  table.style.width = _fnStringToCss(total);\n\n  // Finished with the table - ditch it\n  holder.remove();\n\n  // If there is a width attr, we want to attach an event listener which\n  // allows the table sizing to automatically adjust when the window is\n  // resized. Use the width attr rather than CSS, since we can't know if the\n  // CSS is a relative value or absolute - DOM read is always px.\n  if (tableWidthAttr) {\n    table.style.width = _fnStringToCss(tableWidthAttr);\n  }\n  if ((tableWidthAttr || scrollX) && !settings._reszEvt) {\n    var resize = DataTable.util.throttle(function () {\n      var newWidth = _fnWrapperWidth(settings);\n\n      // Don't do it if destroying or the container width is 0\n      if (!settings.bDestroying && newWidth !== 0) {\n        _fnAdjustColumnSizing(settings);\n      }\n    });\n\n    // For browsers that support it (~2020 onwards for wide support) we can watch for the\n    // container changing width.\n    if (window.ResizeObserver) {\n      // This is a tricky beast - if the element is visible when `.observe()` is called,\n      // then the callback is immediately run. Which we don't want. If the element isn't\n      // visible, then it isn't run, but we want it to run when it is then made visible.\n      // This flag allows the above to be satisfied.\n      var first = $(settings.nTableWrapper).is(':visible');\n\n      // Use an empty div to attach the observer so it isn't impacted by height changes\n      var resizer = $('<div>').css({\n        width: '100%',\n        height: 0\n      }).addClass('dt-autosize').appendTo(settings.nTableWrapper);\n      settings.resizeObserver = new ResizeObserver(function (e) {\n        if (first) {\n          first = false;\n        } else {\n          resize();\n        }\n      });\n      settings.resizeObserver.observe(resizer[0]);\n    } else {\n      // For old browsers, the best we can do is listen for a window resize\n      $(window).on('resize.DT-' + settings.sInstance, resize);\n    }\n    settings._reszEvt = true;\n  }\n}\n\n/**\n * Get the width of the DataTables wrapper element\n *\n * @param {*} settings DataTables settings object\n * @returns Width\n */\nfunction _fnWrapperWidth(settings) {\n  return $(settings.nTableWrapper).is(':visible') ? $(settings.nTableWrapper).width() : 0;\n}\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} string of the max length\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString(settings, colIdx) {\n  var column = settings.aoColumns[colIdx];\n  if (!column.maxLenString) {\n    var s,\n      max = '',\n      maxLen = -1;\n    for (var i = 0, ien = settings.aiDisplayMaster.length; i < ien; i++) {\n      var rowIdx = settings.aiDisplayMaster[i];\n      var data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n      var cellString = data && typeof data === 'object' && data.nodeType ? data.innerHTML : data + '';\n\n      // Remove id / name attributes from elements so they\n      // don't interfere with existing elements\n      cellString = cellString.replace(/id=\".*?\"/g, '').replace(/name=\".*?\"/g, '');\n      s = _stripHtml(cellString).replace(/&nbsp;/g, ' ');\n      if (s.length > maxLen) {\n        // We want the HTML in the string, but the length that\n        // is important is the stripped string\n        max = cellString;\n        maxLen = s.length;\n      }\n    }\n    column.maxLenString = max;\n  }\n  return column.maxLenString;\n}\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss(s) {\n  if (s === null) {\n    return '0px';\n  }\n  if (typeof s == 'number') {\n    return s < 0 ? '0px' : s + 'px';\n  }\n\n  // Check it has a unit character already\n  return s.match(/\\d$/) ? s + 'px' : s;\n}\n\n/**\n * Re-insert the `col` elements for current visibility\n *\n * @param {*} settings DT settings\n */\nfunction _colGroup(settings) {\n  var cols = settings.aoColumns;\n  settings.colgroup.empty();\n  for (i = 0; i < cols.length; i++) {\n    if (cols[i].bVisible) {\n      settings.colgroup.append(cols[i].colEl);\n    }\n  }\n}\nfunction _fnSortInit(settings) {\n  var target = settings.nTHead;\n  var headerRows = target.querySelectorAll('tr');\n  var titleRow = settings.titleRow;\n  var notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\n  // Legacy support for `orderCellsTop`\n  if (titleRow === true) {\n    target = headerRows[0];\n  } else if (titleRow === false) {\n    target = headerRows[headerRows.length - 1];\n  } else if (titleRow !== null) {\n    target = headerRows[titleRow];\n  }\n  // else - all rows\n\n  if (settings.orderHandler) {\n    _fnSortAttachListener(settings, target, target === settings.nTHead ? 'tr' + notSelector + ' th' + notSelector + ', tr' + notSelector + ' td' + notSelector : 'th' + notSelector + ', td' + notSelector);\n  }\n\n  // Need to resolve the user input array into our internal structure\n  var order = [];\n  _fnSortResolve(settings, order, settings.aaSorting);\n  settings.aaSorting = order;\n}\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n  _fnBindAction(node, selector, function (e) {\n    var run = false;\n    var columns = column === undefined ? _fnColumnsFromHeader(e.target) : typeof column === 'function' ? column() : Array.isArray(column) ? column : [column];\n    if (columns.length) {\n      for (var i = 0, ien = columns.length; i < ien; i++) {\n        var ret = _fnSortAdd(settings, columns[i], i, e.shiftKey);\n        if (ret !== false) {\n          run = true;\n        }\n\n        // If the first entry is no sort, then subsequent\n        // sort columns are ignored\n        if (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\n          break;\n        }\n      }\n      if (run) {\n        _fnProcessingRun(settings, true, function () {\n          _fnSort(settings);\n          _fnSortDisplay(settings, settings.aiDisplay);\n          _fnReDraw(settings, false, false);\n          if (callback) {\n            callback();\n          }\n        });\n      }\n    }\n  });\n}\n\n/**\n * Sort the display array to match the master's order\n * @param {*} settings\n */\nfunction _fnSortDisplay(settings, display) {\n  if (display.length < 2) {\n    return;\n  }\n  var master = settings.aiDisplayMaster;\n  var masterMap = {};\n  var map = {};\n  var i;\n\n  // Rather than needing an `indexOf` on master array, we can create a map\n  for (i = 0; i < master.length; i++) {\n    masterMap[master[i]] = i;\n  }\n\n  // And then cache what would be the indexOf fom the display\n  for (i = 0; i < display.length; i++) {\n    map[display[i]] = masterMap[display[i]];\n  }\n  display.sort(function (a, b) {\n    // Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n    return map[a] - map[b];\n  });\n}\nfunction _fnSortResolve(settings, nestedSort, sort) {\n  var push = function (a) {\n    if ($.isPlainObject(a)) {\n      if (a.idx !== undefined) {\n        // Index based ordering\n        nestedSort.push([a.idx, a.dir]);\n      } else if (a.name) {\n        // Name based ordering\n        var cols = _pluck(settings.aoColumns, 'sName');\n        var idx = cols.indexOf(a.name);\n        if (idx !== -1) {\n          nestedSort.push([idx, a.dir]);\n        }\n      }\n    } else {\n      // Plain column index and direction pair\n      nestedSort.push(a);\n    }\n  };\n  if ($.isPlainObject(sort)) {\n    // Object\n    push(sort);\n  } else if (sort.length && typeof sort[0] === 'number') {\n    // 1D array\n    push(sort);\n  } else if (sort.length) {\n    // 2D array\n    for (var z = 0; z < sort.length; z++) {\n      push(sort[z]); // Object or array\n    }\n  }\n}\nfunction _fnSortFlatten(settings) {\n  var i,\n    k,\n    kLen,\n    aSort = [],\n    extSort = DataTable.ext.type.order,\n    aoColumns = settings.aoColumns,\n    aDataSort,\n    iCol,\n    sType,\n    srcCol,\n    fixed = settings.aaSortingFixed,\n    fixedObj = $.isPlainObject(fixed),\n    nestedSort = [];\n  if (!settings.oFeatures.bSort) {\n    return aSort;\n  }\n\n  // Build the sort array, with pre-fix and post-fix options if they have been\n  // specified\n  if (Array.isArray(fixed)) {\n    _fnSortResolve(settings, nestedSort, fixed);\n  }\n  if (fixedObj && fixed.pre) {\n    _fnSortResolve(settings, nestedSort, fixed.pre);\n  }\n  _fnSortResolve(settings, nestedSort, settings.aaSorting);\n  if (fixedObj && fixed.post) {\n    _fnSortResolve(settings, nestedSort, fixed.post);\n  }\n  for (i = 0; i < nestedSort.length; i++) {\n    srcCol = nestedSort[i][0];\n    if (aoColumns[srcCol]) {\n      aDataSort = aoColumns[srcCol].aDataSort;\n      for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n        iCol = aDataSort[k];\n        sType = aoColumns[iCol].sType || 'string';\n        if (nestedSort[i]._idx === undefined) {\n          nestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n        }\n        if (nestedSort[i][1]) {\n          aSort.push({\n            src: srcCol,\n            col: iCol,\n            dir: nestedSort[i][1],\n            index: nestedSort[i]._idx,\n            type: sType,\n            formatter: extSort[sType + \"-pre\"],\n            sorter: extSort[sType + \"-\" + nestedSort[i][1]]\n          });\n        }\n      }\n    }\n  }\n  return aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSort(oSettings, col, dir) {\n  var i,\n    ien,\n    iLen,\n    aiOrig = [],\n    extSort = DataTable.ext.type.order,\n    aoData = oSettings.aoData,\n    sortCol,\n    displayMaster = oSettings.aiDisplayMaster,\n    aSort;\n\n  // Make sure the columns all have types defined\n  _fnColumnTypes(oSettings);\n\n  // Allow a specific column to be sorted, which will _not_ alter the display\n  // master\n  if (col !== undefined) {\n    var srcCol = oSettings.aoColumns[col];\n    aSort = [{\n      src: col,\n      col: col,\n      dir: dir,\n      index: 0,\n      type: srcCol.sType,\n      formatter: extSort[srcCol.sType + \"-pre\"],\n      sorter: extSort[srcCol.sType + \"-\" + dir]\n    }];\n    displayMaster = displayMaster.slice();\n  } else {\n    aSort = _fnSortFlatten(oSettings);\n  }\n  for (i = 0, ien = aSort.length; i < ien; i++) {\n    sortCol = aSort[i];\n\n    // Load the data needed for the sort, for each cell\n    _fnSortData(oSettings, sortCol.col);\n  }\n\n  /* No sorting required if server-side or no sorting array */\n  if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n    // Reset the initial positions on each pass so we get a stable sort\n    for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n      aiOrig[i] = i;\n    }\n\n    // If the first sort is desc, then reverse the array to preserve original\n    // order, just in reverse\n    if (aSort.length && aSort[0].dir === 'desc' && oSettings.orderDescReverse) {\n      aiOrig.reverse();\n    }\n\n    /* Do the sort - here we want multi-column sorting based on a given data source (column)\n     * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n     * follow on it's own, but this is what we want (example two column sorting):\n     *  fnLocalSorting = function(a,b){\n     *    var test;\n     *    test = oSort['string-asc']('data11', 'data12');\n     *      if (test !== 0)\n     *        return test;\n     *    test = oSort['numeric-desc']('data21', 'data22');\n     *    if (test !== 0)\n     *      return test;\n     *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n     *  }\n     * Basically we have a test for each sorting column, if the data in that column is equal,\n     * test the next column. If all columns match, then we use a numeric sort on the row\n     * positions in the original data array to provide a stable sort.\n     */\n    displayMaster.sort(function (a, b) {\n      var x,\n        y,\n        k,\n        test,\n        sort,\n        len = aSort.length,\n        dataA = aoData[a]._aSortData,\n        dataB = aoData[b]._aSortData;\n      for (k = 0; k < len; k++) {\n        sort = aSort[k];\n\n        // Data, which may have already been through a `-pre` function\n        x = dataA[sort.col];\n        y = dataB[sort.col];\n        if (sort.sorter) {\n          // If there is a custom sorter (`-asc` or `-desc`) for this\n          // data type, use it\n          test = sort.sorter(x, y);\n          if (test !== 0) {\n            return test;\n          }\n        } else {\n          // Otherwise, use generic sorting\n          test = x < y ? -1 : x > y ? 1 : 0;\n          if (test !== 0) {\n            return sort.dir === 'asc' ? test : -test;\n          }\n        }\n      }\n      x = aiOrig[a];\n      y = aiOrig[b];\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n  } else if (aSort.length === 0) {\n    // Apply index order\n    displayMaster.sort(function (x, y) {\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n  }\n  if (col === undefined) {\n    // Tell the draw function that we have sorted the data\n    oSettings.bSorted = true;\n    oSettings.sortDetails = aSort;\n    _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort]);\n  }\n  return displayMaster;\n}\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {int} addIndex Counter\n *  @param {boolean} [shift=false] Shift click add\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAdd(settings, colIdx, addIndex, shift) {\n  var col = settings.aoColumns[colIdx];\n  var sorting = settings.aaSorting;\n  var asSorting = col.asSorting;\n  var nextSortIdx;\n  var next = function (a, overflow) {\n    var idx = a._idx;\n    if (idx === undefined) {\n      idx = asSorting.indexOf(a[1]);\n    }\n    return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0;\n  };\n  if (!col.bSortable) {\n    return false;\n  }\n\n  // Convert to 2D array if needed\n  if (typeof sorting[0] === 'number') {\n    sorting = settings.aaSorting = [sorting];\n  }\n\n  // If appending the sort then we are multi-column sorting\n  if ((shift || addIndex) && settings.oFeatures.bSortMulti) {\n    // Are we already doing some kind of sort on this column?\n    var sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n    if (sortIdx !== -1) {\n      // Yes, modify the sort\n      nextSortIdx = next(sorting[sortIdx], true);\n      if (nextSortIdx === null && sorting.length === 1) {\n        nextSortIdx = 0; // can't remove sorting completely\n      }\n      if (nextSortIdx === null) {\n        sorting.splice(sortIdx, 1);\n      } else {\n        sorting[sortIdx][1] = asSorting[nextSortIdx];\n        sorting[sortIdx]._idx = nextSortIdx;\n      }\n    } else if (shift) {\n      // No sort on this column yet, being added by shift click\n      // add it as itself\n      sorting.push([colIdx, asSorting[0], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    } else {\n      // No sort on this column yet, being added from a colspan\n      // so add with same direction as first column\n      sorting.push([colIdx, sorting[0][1], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    }\n  } else if (sorting.length && sorting[0][0] == colIdx) {\n    // Single column - already sorting on this column, modify the sort\n    nextSortIdx = next(sorting[0]);\n    sorting.length = 1;\n    sorting[0][1] = asSorting[nextSortIdx];\n    sorting[0]._idx = nextSortIdx;\n  } else {\n    // Single column - sort only on this column\n    sorting.length = 0;\n    sorting.push([colIdx, asSorting[0]]);\n    sorting[0]._idx = 0;\n  }\n}\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses(settings) {\n  var oldSort = settings.aLastSort;\n  var sortClass = settings.oClasses.order.position;\n  var sort = _fnSortFlatten(settings);\n  var features = settings.oFeatures;\n  var i, ien, colIdx;\n  if (features.bSort && features.bSortClasses) {\n    // Remove old sorting classes\n    for (i = 0, ien = oldSort.length; i < ien; i++) {\n      colIdx = oldSort[i].src;\n\n      // Remove column sorting\n      $(_pluck(settings.aoData, 'anCells', colIdx)).removeClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n\n    // Add new column sorting\n    for (i = 0, ien = sort.length; i < ien; i++) {\n      colIdx = sort[i].src;\n      $(_pluck(settings.aoData, 'anCells', colIdx)).addClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n  }\n  settings.aLastSort = sort;\n}\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData(settings, colIdx) {\n  // Custom sorting function - provided by the sort data type\n  var column = settings.aoColumns[colIdx];\n  var customSort = DataTable.ext.order[column.sSortDataType];\n  var customData;\n  if (customSort) {\n    customData = customSort.call(settings.oInstance, settings, colIdx, _fnColumnIndexToVisible(settings, colIdx));\n  }\n\n  // Use / populate cache\n  var row, cellData;\n  var formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n  var data = settings.aoData;\n  for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n    // Sparse array\n    if (!data[rowIdx]) {\n      continue;\n    }\n    row = data[rowIdx];\n    if (!row._aSortData) {\n      row._aSortData = [];\n    }\n    if (!row._aSortData[colIdx] || customSort) {\n      cellData = customSort ? customData[rowIdx] :\n      // If there was a custom sort function, use data from there\n      _fnGetCellData(settings, rowIdx, colIdx, 'sort');\n      row._aSortData[colIdx] = formatter ? formatter(cellData, settings) : cellData;\n    }\n  }\n}\n\n/**\n * State information for a table\n *\n * @param {*} settings\n * @returns State object\n */\nfunction _fnSaveState(settings) {\n  if (settings._bLoadingState) {\n    return;\n  }\n\n  // Sort state saving uses [[idx, order]] structure.\n  var sorting = [];\n  _fnSortResolve(settings, sorting, settings.aaSorting);\n\n  /* Store the interesting variables */\n  var columns = settings.aoColumns;\n  var state = {\n    time: +new Date(),\n    start: settings._iDisplayStart,\n    length: settings._iDisplayLength,\n    order: sorting.map(function (sort) {\n      // If a column name is available, use it\n      return columns[sort[0]] && columns[sort[0]].sName ? [columns[sort[0]].sName, sort[1]] : sort.slice();\n    }),\n    search: $.extend({}, settings.oPreviousSearch),\n    columns: settings.aoColumns.map(function (col, i) {\n      return {\n        name: col.sName,\n        visible: col.bVisible,\n        search: $.extend({}, settings.aoPreSearchCols[i])\n      };\n    })\n  };\n  settings.oSavedState = state;\n  _fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n  if (settings.oFeatures.bStateSave && !settings.bDestroying) {\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n  }\n}\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState(settings, init, callback) {\n  if (!settings.oFeatures.bStateSave) {\n    callback();\n    return;\n  }\n  var loaded = function (state) {\n    _fnImplementState(settings, state, callback);\n  };\n  var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n  if (state !== undefined) {\n    _fnImplementState(settings, state, callback);\n  }\n  // otherwise, wait for the loaded callback to be executed\n\n  return true;\n}\nfunction _fnImplementState(settings, s, callback) {\n  var i, ien;\n  var columns = settings.aoColumns;\n  var currentNames = _pluck(settings.aoColumns, 'sName');\n  settings._bLoadingState = true;\n\n  // When StateRestore was introduced the state could now be implemented at any time\n  // Not just initialisation. To do this an api instance is required in some places\n  var api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n  if (!s || !s.time) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Reject old data\n  var duration = settings.iStateDuration;\n  if (duration > 0 && s.time < +new Date() - duration * 1000) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Allow custom and plug-in manipulation functions to alter the saved data set and\n  // cancelling of loading by returning false\n  var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);\n  if (abStateLoad.indexOf(false) !== -1) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Store the saved state so it might be accessed at any time\n  settings.oLoadedState = $.extend(true, {}, s);\n\n  // This is needed for ColReorder, which has to happen first to allow all\n  // the stored indexes to be usable. It is not publicly documented.\n  _fnCallbackFire(settings, null, 'stateLoadInit', [settings, s], true);\n\n  // Page Length\n  if (s.length !== undefined) {\n    // If already initialised just set the value directly so that the select element is also updated\n    if (api) {\n      api.page.len(s.length);\n    } else {\n      settings._iDisplayLength = s.length;\n    }\n  }\n\n  // Restore key features\n  if (s.start !== undefined) {\n    if (api === null) {\n      settings._iDisplayStart = s.start;\n      settings.iInitDisplayStart = s.start;\n    } else {\n      _fnPageChange(settings, s.start / settings._iDisplayLength);\n    }\n  }\n\n  // Order\n  if (s.order !== undefined) {\n    settings.aaSorting = [];\n    $.each(s.order, function (i, col) {\n      var set = [col[0], col[1]];\n\n      // A column name was stored and should be used for restore\n      if (typeof col[0] === 'string') {\n        // Find the name from the current list of column names\n        var idx = currentNames.indexOf(col[0]);\n        if (idx < 0) {\n          // If the column was not found ignore it and continue\n          return;\n        }\n        set[0] = idx;\n      } else if (set[0] >= columns.length) {\n        // If the column index is out of bounds ignore it and continue\n        return;\n      }\n      settings.aaSorting.push(set);\n    });\n  }\n\n  // Search\n  if (s.search !== undefined) {\n    $.extend(settings.oPreviousSearch, s.search);\n  }\n\n  // Columns\n  if (s.columns) {\n    var set = s.columns;\n    var incoming = _pluck(s.columns, 'name');\n\n    // Check if it is a 2.2 style state object with a `name` property for the columns, and if\n    // the name was defined. If so, then create a new array that will map the state object\n    // given, to the current columns (don't bother if they are already matching tho).\n    if (incoming.join('').length && incoming.join('') !== currentNames.join('')) {\n      set = [];\n\n      // For each column, try to find the name in the incoming array\n      for (i = 0; i < currentNames.length; i++) {\n        if (currentNames[i] != '') {\n          var idx = incoming.indexOf(currentNames[i]);\n          if (idx >= 0) {\n            set.push(s.columns[idx]);\n          } else {\n            // No matching column name in the state's columns, so this might be a new\n            // column and thus can't have a state already.\n            set.push({});\n          }\n        } else {\n          // If no name, but other columns did have a name, then there is no knowing\n          // where this one came from originally so it can't be restored.\n          set.push({});\n        }\n      }\n    }\n\n    // If the number of columns to restore is different from current, then all bets are off.\n    if (set.length === columns.length) {\n      for (i = 0, ien = set.length; i < ien; i++) {\n        var col = set[i];\n\n        // Visibility\n        if (col.visible !== undefined) {\n          // If the api is defined, the table has been initialised so we need to use it rather than internal settings\n          if (api) {\n            // Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n            api.column(i).visible(col.visible, false);\n          } else {\n            columns[i].bVisible = col.visible;\n          }\n        }\n\n        // Search\n        if (col.search !== undefined) {\n          $.extend(settings.aoPreSearchCols[i], col.search);\n        }\n      }\n\n      // If the api is defined then we need to adjust the columns once the visibility has been changed\n      if (api) {\n        api.columns.adjust();\n      }\n    }\n  }\n  settings._bLoadingState = false;\n  _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);\n  callback();\n}\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog(settings, level, msg, tn) {\n  msg = 'DataTables warning: ' + (settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n  if (tn) {\n    msg += '. For more information about this error, please see ' + 'https://datatables.net/tn/' + tn;\n  }\n  if (!level) {\n    // Backwards compatibility pre 1.10\n    var ext = DataTable.ext;\n    var type = ext.sErrMode || ext.errMode;\n    if (settings) {\n      _fnCallbackFire(settings, null, 'dt-error', [settings, tn, msg], true);\n    }\n    if (type == 'alert') {\n      alert(msg);\n    } else if (type == 'throw') {\n      throw new Error(msg);\n    } else if (typeof type == 'function') {\n      type(settings, tn, msg);\n    }\n  } else if (window.console && console.log) {\n    console.log(msg);\n  }\n}\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap(ret, src, name, mappedName) {\n  if (Array.isArray(name)) {\n    $.each(name, function (i, val) {\n      if (Array.isArray(val)) {\n        _fnMap(ret, src, val[0], val[1]);\n      } else {\n        _fnMap(ret, src, val);\n      }\n    });\n    return;\n  }\n  if (mappedName === undefined) {\n    mappedName = name;\n  }\n  if (src[name] !== undefined) {\n    ret[mappedName] = src[name];\n  }\n}\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend(out, extender, breakRefs) {\n  var val;\n  for (var prop in extender) {\n    if (Object.prototype.hasOwnProperty.call(extender, prop)) {\n      val = extender[prop];\n      if ($.isPlainObject(val)) {\n        if (!$.isPlainObject(out[prop])) {\n          out[prop] = {};\n        }\n        $.extend(true, out[prop], val);\n      } else if (breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val)) {\n        out[prop] = val.slice();\n      } else {\n        out[prop] = val;\n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object|string} selector Selector (for delegated events) or data object\n *   to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction(n, selector, fn) {\n  $(n).on('click.DT', selector, function (e) {\n    fn(e);\n  }).on('keypress.DT', selector, function (e) {\n    if (e.which === 13) {\n      e.preventDefault();\n      fn(e);\n    }\n  }).on('selectstart.DT', selector, function () {\n    // Don't want a double click resulting in text selection\n    return false;\n  });\n}\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} settings dataTables settings object\n *  @param {string} store Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg(settings, store, fn) {\n  if (fn) {\n    settings[store].push(fn);\n  }\n}\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @param {boolean} [bubbles] True if the event should bubble\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire(settings, callbackArr, eventName, args, bubbles) {\n  var ret = [];\n  if (callbackArr) {\n    ret = settings[callbackArr].slice().reverse().map(function (val) {\n      return val.apply(settings.oInstance, args);\n    });\n  }\n  if (eventName !== null) {\n    var e = $.Event(eventName + '.dt');\n    var table = $(settings.nTable);\n\n    // Expose the DataTables API on the event object for easy access\n    e.dt = settings.api;\n    table[bubbles ? 'trigger' : 'triggerHandler'](e, args);\n\n    // If not yet attached to the document, trigger the event\n    // on the body directly to sort of simulate the bubble\n    if (bubbles && table.parents('body').length === 0) {\n      $('body').trigger(e, args);\n    }\n    ret.push(e.result);\n  }\n  return ret;\n}\nfunction _fnLengthOverflow(settings) {\n  var start = settings._iDisplayStart,\n    end = settings.fnDisplayEnd(),\n    len = settings._iDisplayLength;\n\n  /* If we have space to show extra rows (backing up from the end point - then do so */\n  if (start >= end) {\n    start = end - len;\n  }\n\n  // Keep the start record on the current page\n  start -= start % len;\n  if (len === -1 || start < 0) {\n    start = 0;\n  }\n  settings._iDisplayStart = start;\n}\nfunction _fnRenderer(settings, type) {\n  var renderer = settings.renderer;\n  var host = DataTable.ext.renderer[type];\n  if ($.isPlainObject(renderer) && renderer[type]) {\n    // Specific renderer for this type. If available use it, otherwise use\n    // the default.\n    return host[renderer[type]] || host._;\n  } else if (typeof renderer === 'string') {\n    // Common renderer - if there is one available for this type use it,\n    // otherwise use the default\n    return host[renderer] || host._;\n  }\n\n  // Use the default\n  return host._;\n}\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource(settings) {\n  if (settings.oFeatures.bServerSide) {\n    return 'ssp';\n  } else if (settings.ajax) {\n    return 'ajax';\n  }\n  return 'dom';\n}\n\n/**\n * Common replacement for language strings\n *\n * @param {*} settings DT settings object\n * @param {*} str String with values to replace\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n * @returns String\n */\nfunction _fnMacros(settings, str, entries) {\n  // When infinite scrolling, we are always starting at 1. _iDisplayStart is\n  // used only internally\n  var formatter = settings.fnFormatNumber,\n    start = settings._iDisplayStart + 1,\n    len = settings._iDisplayLength,\n    vis = settings.fnRecordsDisplay(),\n    max = settings.fnRecordsTotal(),\n    all = len === -1;\n  return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, max)).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len))).replace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries)).replace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max)).replace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis));\n}\n\n/**\n * Add elements to an array as quickly as possible, but stack stafe.\n *\n * @param {*} arr Array to add the data to\n * @param {*} data Data array that is to be added\n * @returns \n */\nfunction _fnArrayApply(arr, data) {\n  if (!data) {\n    return;\n  }\n\n  // Chrome can throw a max stack error if apply is called with\n  // too large an array, but apply is faster.\n  if (data.length < 10000) {\n    arr.push.apply(arr, data);\n  } else {\n    for (i = 0; i < data.length; i++) {\n      arr.push(data[i]);\n    }\n  }\n}\n\n/**\n * Add one or more listeners to the table\n *\n * @param {*} that JQ for the table\n * @param {*} name Event name\n * @param {*} src Listener(s)\n */\nfunction _fnListener(that, name, src) {\n  if (!Array.isArray(src)) {\n    src = [src];\n  }\n  for (i = 0; i < src.length; i++) {\n    that.on(name + '.dt', src[i]);\n  }\n}\n\n/**\n * Escape HTML entities in strings, in an object\n */\nfunction _fnEscapeObject(obj) {\n  if (DataTable.ext.escape.attributes) {\n    $.each(obj, function (key, val) {\n      obj[key] = _escapeHtml(val);\n    });\n  }\n  return obj;\n}\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function (mixed) {\n  var idx, jq;\n  var settings = DataTable.settings;\n  var tables = _pluck(settings, 'nTable');\n  if (!mixed) {\n    return [];\n  } else if (mixed.nTable && mixed.oFeatures) {\n    // DataTables settings object\n    return [mixed];\n  } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n    // Table node\n    idx = tables.indexOf(mixed);\n    return idx !== -1 ? [settings[idx]] : null;\n  } else if (mixed && typeof mixed.settings === 'function') {\n    return mixed.settings().toArray();\n  } else if (typeof mixed === 'string') {\n    // jQuery selector\n    jq = $(mixed).get();\n  } else if (mixed instanceof $) {\n    // jQuery object (also DataTables instance)\n    jq = mixed.get();\n  }\n  if (jq) {\n    return settings.filter(function (v, idx) {\n      return jq.includes(tables[idx]);\n    });\n  }\n};\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new DataTable.Api( 'table.dataTable' );\n */\n_Api = function (context, data) {\n  if (!(this instanceof _Api)) {\n    return new _Api(context, data);\n  }\n  var i;\n  var settings = [];\n  var ctxSettings = function (o) {\n    var a = _toSettings(o);\n    if (a) {\n      settings.push.apply(settings, a);\n    }\n  };\n  if (Array.isArray(context)) {\n    for (i = 0; i < context.length; i++) {\n      ctxSettings(context[i]);\n    }\n  } else {\n    ctxSettings(context);\n  }\n\n  // Remove duplicates\n  this.context = settings.length > 1 ? _unique(settings) : settings;\n\n  // Initial data\n  _fnArrayApply(this, data);\n\n  // selector\n  this.selector = {\n    rows: null,\n    cols: null,\n    opts: null\n  };\n  _Api.extend(this, this, __apiStruct);\n};\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend(_Api.prototype, {\n  any: function () {\n    return this.count() !== 0;\n  },\n  context: [],\n  // array of table settings objects\n\n  count: function () {\n    return this.flatten().length;\n  },\n  each: function (fn) {\n    for (var i = 0, ien = this.length; i < ien; i++) {\n      fn.call(this, this[i], i, this);\n    }\n    return this;\n  },\n  eq: function (idx) {\n    var ctx = this.context;\n    return ctx.length > idx ? new _Api(ctx[idx], this[idx]) : null;\n  },\n  filter: function (fn) {\n    var a = __arrayProto.filter.call(this, fn, this);\n    return new _Api(this.context, a);\n  },\n  flatten: function () {\n    var a = [];\n    return new _Api(this.context, a.concat.apply(a, this.toArray()));\n  },\n  get: function (idx) {\n    return this[idx];\n  },\n  join: __arrayProto.join,\n  includes: function (find) {\n    return this.indexOf(find) === -1 ? false : true;\n  },\n  indexOf: __arrayProto.indexOf,\n  iterator: function (flatten, type, fn, alwaysNew) {\n    var a = [],\n      ret,\n      i,\n      ien,\n      j,\n      jen,\n      context = this.context,\n      rows,\n      items,\n      item,\n      selector = this.selector;\n\n    // Argument shifting\n    if (typeof flatten === 'string') {\n      alwaysNew = fn;\n      fn = type;\n      type = flatten;\n      flatten = false;\n    }\n    for (i = 0, ien = context.length; i < ien; i++) {\n      var apiInst = new _Api(context[i]);\n      if (type === 'table') {\n        ret = fn.call(apiInst, context[i], i);\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'columns' || type === 'rows') {\n        // this has same length as context - one entry for each table\n        ret = fn.call(apiInst, context[i], this[i], i);\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n        // columns and rows share the same structure.\n        // 'this' is an array of column indexes for each context\n        items = this[i];\n        if (type === 'column-rows') {\n          rows = _selector_row_indexes(context[i], selector.opts);\n        }\n        for (j = 0, jen = items.length; j < jen; j++) {\n          item = items[j];\n          if (type === 'cell') {\n            ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n          } else {\n            ret = fn.call(apiInst, context[i], item, i, j, rows);\n          }\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        }\n      }\n    }\n    if (a.length || alwaysNew) {\n      var api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n      var apiSelector = api.selector;\n      apiSelector.rows = selector.rows;\n      apiSelector.cols = selector.cols;\n      apiSelector.opts = selector.opts;\n      return api;\n    }\n    return this;\n  },\n  lastIndexOf: __arrayProto.lastIndexOf,\n  length: 0,\n  map: function (fn) {\n    var a = __arrayProto.map.call(this, fn, this);\n    return new _Api(this.context, a);\n  },\n  pluck: function (prop) {\n    var fn = DataTable.util.get(prop);\n    return this.map(function (el) {\n      return fn(el);\n    });\n  },\n  pop: __arrayProto.pop,\n  push: __arrayProto.push,\n  reduce: __arrayProto.reduce,\n  reduceRight: __arrayProto.reduceRight,\n  reverse: __arrayProto.reverse,\n  // Object with rows, columns and opts\n  selector: null,\n  shift: __arrayProto.shift,\n  slice: function () {\n    return new _Api(this.context, this);\n  },\n  sort: __arrayProto.sort,\n  splice: __arrayProto.splice,\n  toArray: function () {\n    return __arrayProto.slice.call(this);\n  },\n  to$: function () {\n    return $(this);\n  },\n  toJQuery: function () {\n    return $(this);\n  },\n  unique: function () {\n    return new _Api(this.context, _unique(this.toArray()));\n  },\n  unshift: __arrayProto.unshift\n});\nfunction _api_scope(scope, fn, struc) {\n  return function () {\n    var ret = fn.apply(scope || this, arguments);\n\n    // Method extension\n    _Api.extend(ret, ret, struc.methodExt);\n    return ret;\n  };\n}\nfunction _api_find(src, name) {\n  for (var i = 0, ien = src.length; i < ien; i++) {\n    if (src[i].name === name) {\n      return src[i];\n    }\n  }\n  return null;\n}\nwindow.__apiStruct = __apiStruct;\n_Api.extend = function (scope, obj, ext) {\n  // Only extend API instances and static properties of the API\n  if (!ext.length || !obj || !(obj instanceof _Api) && !obj.__dt_wrapper) {\n    return;\n  }\n  var i, ien, struct;\n  for (i = 0, ien = ext.length; i < ien; i++) {\n    struct = ext[i];\n    if (struct.name === '__proto__') {\n      continue;\n    }\n\n    // Value\n    obj[struct.name] = struct.type === 'function' ? _api_scope(scope, struct.val, struct) : struct.type === 'object' ? {} : struct.val;\n    obj[struct.name].__dt_wrapper = true;\n\n    // Property extension\n    _Api.extend(scope, obj[struct.name], struct.propExt);\n  }\n};\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n_Api.register = _api_register = function (name, val) {\n  if (Array.isArray(name)) {\n    for (var j = 0, jen = name.length; j < jen; j++) {\n      _Api.register(name[j], val);\n    }\n    return;\n  }\n  var i,\n    ien,\n    heir = name.split('.'),\n    struct = __apiStruct,\n    key,\n    method;\n  for (i = 0, ien = heir.length; i < ien; i++) {\n    method = heir[i].indexOf('()') !== -1;\n    key = method ? heir[i].replace('()', '') : heir[i];\n    var src = _api_find(struct, key);\n    if (!src) {\n      src = {\n        name: key,\n        val: {},\n        methodExt: [],\n        propExt: [],\n        type: 'object'\n      };\n      struct.push(src);\n    }\n    if (i === ien - 1) {\n      src.val = val;\n      src.type = typeof val === 'function' ? 'function' : $.isPlainObject(val) ? 'object' : 'other';\n    } else {\n      struct = method ? src.methodExt : src.propExt;\n    }\n  }\n};\n_Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n  _Api.register(pluralName, val);\n  _Api.register(singularName, function () {\n    var ret = val.apply(this, arguments);\n    if (ret === this) {\n      // Returned item is the API instance that was passed in, return it\n      return this;\n    } else if (ret instanceof _Api) {\n      // New API instance returned, want the value from the first item\n      // in the returned array for the singular result.\n      return ret.length ? Array.isArray(ret[0]) ? new _Api(ret.context, ret[0]) :\n      // Array results are 'enhanced'\n      ret[0] : undefined;\n    }\n\n    // Non-API return - just fire it back\n    return ret;\n  });\n};\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function (selector, a) {\n  if (Array.isArray(selector)) {\n    var result = [];\n    selector.forEach(function (sel) {\n      var inner = __table_selector(sel, a);\n      _fnArrayApply(result, inner);\n    });\n    return result.filter(function (item) {\n      return item;\n    });\n  }\n\n  // Integer is used to pick out a table by index\n  if (typeof selector === 'number') {\n    return [a[selector]];\n  }\n\n  // Perform a jQuery selector on the table nodes\n  var nodes = a.map(function (el) {\n    return el.nTable;\n  });\n  return $(nodes).filter(selector).map(function () {\n    // Need to translate back from the table node to the settings\n    var idx = nodes.indexOf(this);\n    return a[idx];\n  }).toArray();\n};\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register('tables()', function (selector) {\n  // A new instance is created if there was a selector specified\n  return selector !== undefined && selector !== null ? new _Api(__table_selector(selector, this.context)) : this;\n});\n_api_register('table()', function (selector) {\n  var tables = this.tables(selector);\n  var ctx = tables.context;\n\n  // Truncate to the first matched table\n  return ctx.length ? new _Api(ctx[0]) : tables;\n});\n\n// Common methods, combined to reduce size\n[['nodes', 'node', 'nTable'], ['body', 'body', 'nTBody'], ['header', 'header', 'nTHead'], ['footer', 'footer', 'nTFoot']].forEach(function (item) {\n  _api_registerPlural('tables().' + item[0] + '()', 'table().' + item[1] + '()', function () {\n    return this.iterator('table', function (ctx) {\n      return ctx[item[2]];\n    }, 1);\n  });\n});\n\n// Structure methods\n[['header', 'aoHeader'], ['footer', 'aoFooter']].forEach(function (item) {\n  _api_register('table().' + item[0] + '.structure()', function (selector) {\n    var indexes = this.columns(selector).indexes().flatten().toArray();\n    var ctx = this.context[0];\n    var structure = _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n\n    // The structure is in column index order - but from this method we want the return to be\n    // in the columns() selector API order. In order to do that we need to map from one form\n    // to the other\n    var orderedIndexes = indexes.slice().sort(function (a, b) {\n      return a - b;\n    });\n    return structure.map(function (row) {\n      return indexes.map(function (colIdx) {\n        return row[orderedIndexes.indexOf(colIdx)];\n      });\n    });\n  });\n});\n_api_registerPlural('tables().containers()', 'table().container()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTableWrapper;\n  }, 1);\n});\n_api_register('tables().every()', function (fn) {\n  var that = this;\n  return this.iterator('table', function (s, i) {\n    fn.call(that.table(i), i);\n  });\n});\n_api_register('caption()', function (value, side) {\n  var context = this.context;\n\n  // Getter - return existing node's content\n  if (value === undefined) {\n    var caption = context[0].captionNode;\n    return caption && context.length ? caption.innerHTML : null;\n  }\n  return this.iterator('table', function (ctx) {\n    var table = $(ctx.nTable);\n    var caption = $(ctx.captionNode);\n    var container = $(ctx.nTableWrapper);\n\n    // Create the node if it doesn't exist yet\n    if (!caption.length) {\n      caption = $('<caption/>').html(value);\n      ctx.captionNode = caption[0];\n\n      // If side isn't set, we need to insert into the document to let the\n      // CSS decide so we can read it back, otherwise there is no way to\n      // know if the CSS would put it top or bottom for scrolling\n      if (!side) {\n        table.prepend(caption);\n        side = caption.css('caption-side');\n      }\n    }\n    caption.html(value);\n    if (side) {\n      caption.css('caption-side', side);\n      caption[0]._captionSide = side;\n    }\n    if (container.find('div.dataTables_scroll').length) {\n      var selector = side === 'top' ? 'Head' : 'Foot';\n      container.find('div.dataTables_scroll' + selector + ' table').prepend(caption);\n    } else {\n      table.prepend(caption);\n    }\n  }, 1);\n});\n_api_register('caption.node()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].captionNode : null;\n});\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register('draw()', function (paging) {\n  return this.iterator('table', function (settings) {\n    if (paging === 'page') {\n      _fnDraw(settings);\n    } else {\n      if (typeof paging === 'string') {\n        paging = paging === 'full-hold' ? false : true;\n      }\n      _fnReDraw(settings, paging === false);\n    }\n  });\n});\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n */ /**\n    * Set the current page.\n    *\n    * Note that if you attempt to show a page which does not exist, DataTables will\n    * not throw an error, but rather reset the paging.\n    *\n    * @param {integer|string} action The paging action to take. This can be one of:\n    *  * `integer` - The page index to jump to\n    *  * `string` - An action to take:\n    *    * `first` - Jump to first page.\n    *    * `next` - Jump to the next page\n    *    * `previous` - Jump to previous page\n    *    * `last` - Jump to the last page.\n    * @returns {DataTables.Api} this\n    */\n_api_register('page()', function (action) {\n  if (action === undefined) {\n    return this.page.info().page; // not an expensive call\n  }\n\n  // else, have an action to take on all tables\n  return this.iterator('table', function (settings) {\n    _fnPageChange(settings, action);\n  });\n});\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register('page.info()', function () {\n  if (this.context.length === 0) {\n    return undefined;\n  }\n  var settings = this.context[0],\n    start = settings._iDisplayStart,\n    len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n    visRecords = settings.fnRecordsDisplay(),\n    all = len === -1;\n  return {\n    \"page\": all ? 0 : Math.floor(start / len),\n    \"pages\": all ? 1 : Math.ceil(visRecords / len),\n    \"start\": start,\n    \"end\": settings.fnDisplayEnd(),\n    \"length\": len,\n    \"recordsTotal\": settings.fnRecordsTotal(),\n    \"recordsDisplay\": visRecords,\n    \"serverSide\": _fnDataSource(settings) === 'ssp'\n  };\n});\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n */ /**\n    * Set the current page length.\n    *\n    * @param {integer} Page length to set. Use `-1` to show all records.\n    * @returns {DataTables.Api} this\n    */\n_api_register('page.len()', function (len) {\n  // Note that we can't call this function 'length()' because `length`\n  // is a Javascript property of functions which defines how many arguments\n  // the function expects.\n  if (len === undefined) {\n    return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined;\n  }\n\n  // else, set the page length\n  return this.iterator('table', function (settings) {\n    _fnLengthChange(settings, len);\n  });\n});\nvar __reload = function (settings, holdPosition, callback) {\n  // Use the draw event to trigger a callback\n  if (callback) {\n    var api = new _Api(settings);\n    api.one('draw', function () {\n      callback(api.ajax.json());\n    });\n  }\n  if (_fnDataSource(settings) == 'ssp') {\n    _fnReDraw(settings, holdPosition);\n  } else {\n    _fnProcessingDisplay(settings, true);\n\n    // Cancel an existing request\n    var xhr = settings.jqXHR;\n    if (xhr && xhr.readyState !== 4) {\n      xhr.abort();\n    }\n\n    // Trigger xhr\n    _fnBuildAjax(settings, {}, function (json) {\n      _fnClearTable(settings);\n      var data = _fnAjaxDataSrc(settings, json);\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        _fnAddData(settings, data[i]);\n      }\n      _fnReDraw(settings, holdPosition);\n      _fnInitComplete(settings);\n      _fnProcessingDisplay(settings, false);\n    });\n  }\n};\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register('ajax.json()', function () {\n  var ctx = this.context;\n  if (ctx.length > 0) {\n    return ctx[0].json;\n  }\n\n  // else return undefined;\n});\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register('ajax.params()', function () {\n  var ctx = this.context;\n  if (ctx.length > 0) {\n    return ctx[0].oAjaxData;\n  }\n\n  // else return undefined;\n});\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register('ajax.reload()', function (callback, resetPaging) {\n  return this.iterator('table', function (settings) {\n    __reload(settings, resetPaging === false, callback);\n  });\n});\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n */ /**\n    * Set the Ajax URL. Note that this will set the URL for all tables in the\n    * current context.\n    *\n    * @param {string} url URL to set.\n    * @returns {DataTables.Api} this\n    */\n_api_register('ajax.url()', function (url) {\n  var ctx = this.context;\n  if (url === undefined) {\n    // get\n    if (ctx.length === 0) {\n      return undefined;\n    }\n    ctx = ctx[0];\n    return $.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax;\n  }\n\n  // set\n  return this.iterator('table', function (settings) {\n    if ($.isPlainObject(settings.ajax)) {\n      settings.ajax.url = url;\n    } else {\n      settings.ajax = url;\n    }\n  });\n});\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register('ajax.url().load()', function (callback, resetPaging) {\n  // Same as a reload, but makes sense to present it for easy access after a\n  // url change\n  return this.iterator('table', function (ctx) {\n    __reload(ctx, resetPaging === false, callback);\n  });\n});\nvar _selector_run = function (type, selector, selectFn, settings, opts) {\n  var out = [],\n    res,\n    i,\n    ien,\n    selectorType = typeof selector;\n\n  // Can't just check for isArray here, as an API or jQuery instance might be\n  // given with their array like look\n  if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n    selector = [selector];\n  }\n  for (i = 0, ien = selector.length; i < ien; i++) {\n    res = selectFn(typeof selector[i] === 'string' ? selector[i].trim() : selector[i]);\n\n    // Remove empty items\n    res = res.filter(function (item) {\n      return item !== null && item !== undefined;\n    });\n    if (res && res.length) {\n      out = out.concat(res);\n    }\n  }\n\n  // selector extensions\n  var ext = _ext.selector[type];\n  if (ext.length) {\n    for (i = 0, ien = ext.length; i < ien; i++) {\n      out = ext[i](settings, opts, out);\n    }\n  }\n  return _unique(out);\n};\nvar _selector_opts = function (opts) {\n  if (!opts) {\n    opts = {};\n  }\n\n  // Backwards compatibility for 1.9- which used the terminology filter rather\n  // than search\n  if (opts.filter && opts.search === undefined) {\n    opts.search = opts.filter;\n  }\n  return $.extend({\n    columnOrder: 'implied',\n    search: 'none',\n    order: 'current',\n    page: 'all'\n  }, opts);\n};\n\n// Reduce the API instance to the first item found\nvar _selector_first = function (old) {\n  var inst = new _Api(old.context[0]);\n\n  // Use a push rather than passing to the constructor, since it will\n  // merge arrays down automatically, which isn't what is wanted here\n  if (old.length) {\n    inst.push(old[0]);\n  }\n  inst.selector = old.selector;\n\n  // Limit to a single row / column / cell\n  if (inst.length && inst[0].length > 1) {\n    inst[0].splice(1);\n  }\n  return inst;\n};\nvar _selector_row_indexes = function (settings, opts) {\n  var i,\n    ien,\n    tmp,\n    a = [],\n    displayFiltered = settings.aiDisplay,\n    displayMaster = settings.aiDisplayMaster;\n  var search = opts.search,\n    // none, applied, removed\n    order = opts.order,\n    // applied, current, index (original - compatibility with 1.9)\n    page = opts.page; // all, current\n\n  if (_fnDataSource(settings) == 'ssp') {\n    // In server-side processing mode, most options are irrelevant since\n    // rows not shown don't exist and the index order is the applied order\n    // Removed is a special case - for consistency just return an empty\n    // array\n    return search === 'removed' ? [] : _range(0, displayMaster.length);\n  }\n  if (page == 'current') {\n    // Current page implies that order=current and filter=applied, since it is\n    // fairly senseless otherwise, regardless of what order and search actually\n    // are\n    for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n      a.push(displayFiltered[i]);\n    }\n  } else if (order == 'current' || order == 'applied') {\n    if (search == 'none') {\n      a = displayMaster.slice();\n    } else if (search == 'applied') {\n      a = displayFiltered.slice();\n    } else if (search == 'removed') {\n      // O(n+m) solution by creating a hash map\n      var displayFilteredMap = {};\n      for (i = 0, ien = displayFiltered.length; i < ien; i++) {\n        displayFilteredMap[displayFiltered[i]] = null;\n      }\n      displayMaster.forEach(function (item) {\n        if (!Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n          a.push(item);\n        }\n      });\n    }\n  } else if (order == 'index' || order == 'original') {\n    for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n      if (!settings.aoData[i]) {\n        continue;\n      }\n      if (search == 'none') {\n        a.push(i);\n      } else {\n        // applied | removed\n        tmp = displayFiltered.indexOf(i);\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(i);\n        }\n      }\n    }\n  } else if (typeof order === 'number') {\n    // Order the rows by the given column\n    var ordered = _fnSort(settings, order, 'asc');\n    if (search === 'none') {\n      a = ordered;\n    } else {\n      // applied | removed\n      for (i = 0; i < ordered.length; i++) {\n        tmp = displayFiltered.indexOf(ordered[i]);\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(ordered[i]);\n        }\n      }\n    }\n  }\n  return a;\n};\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function (settings, selector, opts) {\n  var rows;\n  var run = function (sel) {\n    var selInt = _intVal(sel);\n    var aoData = settings.aoData;\n\n    // Short cut - selector is a number and no options provided (default is\n    // all records, so no need to check if the index is in there, since it\n    // must be - dev error if the index doesn't exist).\n    if (selInt !== null && !opts) {\n      return [selInt];\n    }\n    if (!rows) {\n      rows = _selector_row_indexes(settings, opts);\n    }\n    if (selInt !== null && rows.indexOf(selInt) !== -1) {\n      // Selector - integer\n      return [selInt];\n    } else if (sel === null || sel === undefined || sel === '') {\n      // Selector - none\n      return rows;\n    }\n\n    // Selector - function\n    if (typeof sel === 'function') {\n      return rows.map(function (idx) {\n        var row = aoData[idx];\n        return sel(idx, row._aData, row.nTr) ? idx : null;\n      });\n    }\n\n    // Selector - node\n    if (sel.nodeName) {\n      var rowIdx = sel._DT_RowIndex; // Property added by DT for fast lookup\n      var cellIdx = sel._DT_CellIndex;\n      if (rowIdx !== undefined) {\n        // Make sure that the row is actually still present in the table\n        return aoData[rowIdx] && aoData[rowIdx].nTr === sel ? [rowIdx] : [];\n      } else if (cellIdx) {\n        return aoData[cellIdx.row] && aoData[cellIdx.row].nTr === sel.parentNode ? [cellIdx.row] : [];\n      } else {\n        var host = $(sel).closest('*[data-dt-row]');\n        return host.length ? [host.data('dt-row')] : [];\n      }\n    }\n\n    // ID selector. Want to always be able to select rows by id, regardless\n    // of if the tr element has been created or not, so can't rely upon\n    // jQuery here - hence a custom implementation. This does not match\n    // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n    // but to select it using a CSS selector engine (like Sizzle or\n    // querySelect) it would need to need to be escaped for some characters.\n    // DataTables simplifies this for row selectors since you can select\n    // only a row. A # indicates an id any anything that follows is the id -\n    // unescaped.\n    if (typeof sel === 'string' && sel.charAt(0) === '#') {\n      // get row index from id\n      var rowObj = settings.aIds[sel.replace(/^#/, '')];\n      if (rowObj !== undefined) {\n        return [rowObj.idx];\n      }\n\n      // need to fall through to jQuery in case there is DOM id that\n      // matches\n    }\n\n    // Get nodes in the order from the `rows` array with null values removed\n    var nodes = _removeEmpty(_pluck_order(settings.aoData, rows, 'nTr'));\n\n    // Selector - jQuery selector string, array of nodes or jQuery object/\n    // As jQuery's .filter() allows jQuery objects to be passed in filter,\n    // it also allows arrays, so this will cope with all three options\n    return $(nodes).filter(sel).map(function () {\n      return this._DT_RowIndex;\n    }).toArray();\n  };\n  var matched = _selector_run('row', selector, run, settings, opts);\n  if (opts.order === 'current' || opts.order === 'applied') {\n    _fnSortDisplay(settings, matched);\n  }\n  return matched;\n};\n_api_register('rows()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __row_selector(settings, selector, opts);\n  }, 1);\n\n  // Want argument shifting here and in __row_selector?\n  inst.selector.rows = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n_api_register('rows().nodes()', function () {\n  return this.iterator('row', function (settings, row) {\n    return settings.aoData[row].nTr || undefined;\n  }, 1);\n});\n_api_register('rows().data()', function () {\n  return this.iterator(true, 'rows', function (settings, rows) {\n    return _pluck_order(settings.aoData, rows, '_aData');\n  }, 1);\n});\n_api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n  return this.iterator('row', function (settings, row) {\n    var r = settings.aoData[row];\n    return type === 'search' ? r._aFilterData : r._aSortData;\n  }, 1);\n});\n_api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n  return this.iterator('row', function (settings, row) {\n    _fnInvalidate(settings, row, src);\n  });\n});\n_api_registerPlural('rows().indexes()', 'row().index()', function () {\n  return this.iterator('row', function (settings, row) {\n    return row;\n  }, 1);\n});\n_api_registerPlural('rows().ids()', 'row().id()', function (hash) {\n  var a = [];\n  var context = this.context;\n\n  // `iterator` will drop undefined values, but in this case we want them\n  for (var i = 0, ien = context.length; i < ien; i++) {\n    for (var j = 0, jen = this[i].length; j < jen; j++) {\n      var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);\n      a.push((hash === true ? '#' : '') + id);\n    }\n  }\n  return new _Api(context, a);\n});\n_api_registerPlural('rows().remove()', 'row().remove()', function () {\n  this.iterator('row', function (settings, row) {\n    var data = settings.aoData;\n    var rowData = data[row];\n\n    // Delete from the display arrays\n    var idx = settings.aiDisplayMaster.indexOf(row);\n    if (idx !== -1) {\n      settings.aiDisplayMaster.splice(idx, 1);\n    }\n\n    // For server-side processing tables - subtract the deleted row from the count\n    if (settings._iRecordsDisplay > 0) {\n      settings._iRecordsDisplay--;\n    }\n\n    // Check for an 'overflow' they case for displaying the table\n    _fnLengthOverflow(settings);\n\n    // Remove the row's ID reference if there is one\n    var id = settings.rowIdFn(rowData._aData);\n    if (id !== undefined) {\n      delete settings.aIds[id];\n    }\n    data[row] = null;\n  });\n  return this;\n});\n_api_register('rows.add()', function (rows) {\n  var newRows = this.iterator('table', function (settings) {\n    var row, i, ien;\n    var out = [];\n    for (i = 0, ien = rows.length; i < ien; i++) {\n      row = rows[i];\n      if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n        out.push(_fnAddTr(settings, row)[0]);\n      } else {\n        out.push(_fnAddData(settings, row));\n      }\n    }\n    return out;\n  }, 1);\n\n  // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n  var modRows = this.rows(-1);\n  modRows.pop();\n  _fnArrayApply(modRows, newRows);\n  return modRows;\n});\n\n/**\n *\n */\n_api_register('row()', function (selector, opts) {\n  return _selector_first(this.rows(selector, opts));\n});\n_api_register('row().data()', function (data) {\n  var ctx = this.context;\n  if (data === undefined) {\n    // Get\n    return ctx.length && this.length && this[0].length ? ctx[0].aoData[this[0]]._aData : undefined;\n  }\n\n  // Set\n  var row = ctx[0].aoData[this[0]];\n  row._aData = data;\n\n  // If the DOM has an id, and the data source is an array\n  if (Array.isArray(data) && row.nTr && row.nTr.id) {\n    _fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);\n  }\n\n  // Automatically invalidate\n  _fnInvalidate(ctx[0], this[0], 'data');\n  return this;\n});\n_api_register('row().node()', function () {\n  var ctx = this.context;\n  if (ctx.length && this.length && this[0].length) {\n    var row = ctx[0].aoData[this[0]];\n    if (row && row.nTr) {\n      return row.nTr;\n    }\n  }\n  return null;\n});\n_api_register('row.add()', function (row) {\n  // Allow a jQuery object to be passed in - only a single row is added from\n  // it though - the first element in the set\n  if (row instanceof $ && row.length) {\n    row = row[0];\n  }\n  var rows = this.iterator('table', function (settings) {\n    if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n      return _fnAddTr(settings, row)[0];\n    }\n    return _fnAddData(settings, row);\n  });\n\n  // Return an Api.rows() extended instance, with the newly added row selected\n  return this.row(rows[0]);\n});\n$(document).on('plugin-init.dt', function (e, context) {\n  var api = new _Api(context);\n  api.on('stateSaveParams.DT', function (e, settings, d) {\n    // This could be more compact with the API, but it is a lot faster as a simple\n    // internal loop\n    var idFn = settings.rowIdFn;\n    var rows = settings.aiDisplayMaster;\n    var ids = [];\n    for (var i = 0; i < rows.length; i++) {\n      var rowIdx = rows[i];\n      var data = settings.aoData[rowIdx];\n      if (data._detailsShow) {\n        ids.push('#' + idFn(data._aData));\n      }\n    }\n    d.childRows = ids;\n  });\n\n  // For future state loads (e.g. with StateRestore)\n  api.on('stateLoaded.DT', function (e, settings, state) {\n    __details_state_load(api, state);\n  });\n\n  // And the initial load state\n  __details_state_load(api, api.state.loaded());\n});\nvar __details_state_load = function (api, state) {\n  if (state && state.childRows) {\n    api.rows(state.childRows.map(function (id) {\n      // Escape any `:` characters from the row id. Accounts for\n      // already escaped characters.\n      return id.replace(/([^:\\\\]*(?:\\\\.[^:\\\\]*)*):/g, \"$1\\\\:\");\n    })).every(function () {\n      _fnCallbackFire(api.settings()[0], null, 'requestChild', [this]);\n    });\n  }\n};\nvar __details_add = function (ctx, row, data, klass) {\n  // Convert to array of TR elements\n  var rows = [];\n  var addRow = function (r, k) {\n    // Recursion to allow for arrays of jQuery objects\n    if (Array.isArray(r) || r instanceof $) {\n      for (var i = 0, ien = r.length; i < ien; i++) {\n        addRow(r[i], k);\n      }\n      return;\n    }\n\n    // If we get a TR element, then just add it directly - up to the dev\n    // to add the correct number of columns etc\n    if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n      r.setAttribute('data-dt-row', row.idx);\n      rows.push(r);\n    } else {\n      // Otherwise create a row with a wrapper\n      var created = $('<tr><td></td></tr>').attr('data-dt-row', row.idx).addClass(k);\n      $('td', created).addClass(k).html(r)[0].colSpan = _fnVisbleColumns(ctx);\n      rows.push(created[0]);\n    }\n  };\n  addRow(data, klass);\n  if (row._details) {\n    row._details.detach();\n  }\n  row._details = $(rows);\n\n  // If the children were already shown, that state should be retained\n  if (row._detailsShow) {\n    row._details.insertAfter(row.nTr);\n  }\n};\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(function (ctx) {\n  _fnSaveState(ctx[0]);\n}, 500);\nvar __details_remove = function (api, idx) {\n  var ctx = api.context;\n  if (ctx.length) {\n    var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n    if (row && row._details) {\n      row._details.remove();\n      row._detailsShow = undefined;\n      row._details = undefined;\n      $(row.nTr).removeClass('dt-hasChild');\n      __details_state(ctx);\n    }\n  }\n};\nvar __details_display = function (api, show) {\n  var ctx = api.context;\n  if (ctx.length && api.length) {\n    var row = ctx[0].aoData[api[0]];\n    if (row._details) {\n      row._detailsShow = show;\n      if (show) {\n        row._details.insertAfter(row.nTr);\n        $(row.nTr).addClass('dt-hasChild');\n      } else {\n        row._details.detach();\n        $(row.nTr).removeClass('dt-hasChild');\n      }\n      _fnCallbackFire(ctx[0], null, 'childRow', [show, api.row(api[0])]);\n      __details_events(ctx[0]);\n      __details_state(ctx);\n    }\n  }\n};\nvar __details_events = function (settings) {\n  var api = new _Api(settings);\n  var namespace = '.dt.DT_details';\n  var drawEvent = 'draw' + namespace;\n  var colvisEvent = 'column-sizing' + namespace;\n  var destroyEvent = 'destroy' + namespace;\n  var data = settings.aoData;\n  api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n  if (_pluck(data, '_details').length > 0) {\n    // On each draw, insert the required elements into the document\n    api.on(drawEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n      api.rows({\n        page: 'current'\n      }).eq(0).each(function (idx) {\n        // Internal data grab\n        var row = data[idx];\n        if (row._detailsShow) {\n          row._details.insertAfter(row.nTr);\n        }\n      });\n    });\n\n    // Column visibility change - update the colspan\n    api.on(colvisEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n\n      // Update the colspan for the details rows (note, only if it already has\n      // a colspan)\n      var row,\n        visible = _fnVisbleColumns(ctx);\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        row = data[i];\n        if (row && row._details) {\n          row._details.each(function () {\n            var el = $(this).children('td');\n            if (el.length == 1) {\n              el.attr('colspan', visible);\n            }\n          });\n        }\n      }\n    });\n\n    // Table destroyed - nuke any child rows\n    api.on(destroyEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        if (data[i] && data[i]._details) {\n          __details_remove(api, i);\n        }\n      }\n    });\n  }\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp + 'row().child';\nvar _child_mth = _child_obj + '()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register(_child_mth, function (data, klass) {\n  var ctx = this.context;\n  if (data === undefined) {\n    // get\n    return ctx.length && this.length && ctx[0].aoData[this[0]] ? ctx[0].aoData[this[0]]._details : undefined;\n  } else if (data === true) {\n    // show\n    this.child.show();\n  } else if (data === false) {\n    // remove\n    __details_remove(this);\n  } else if (ctx.length && this.length) {\n    // set\n    __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n  }\n  return this;\n});\n_api_register([_child_obj + '.show()', _child_mth + '.show()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, true);\n  return this;\n});\n_api_register([_child_obj + '.hide()', _child_mth + '.hide()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, false);\n  return this;\n});\n_api_register([_child_obj + '.remove()', _child_mth + '.remove()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_remove(this);\n  return this;\n});\n_api_register(_child_obj + '.isShown()', function () {\n  var ctx = this.context;\n  if (ctx.length && this.length && ctx[0].aoData[this[0]]) {\n    // _detailsShown as false or undefined will fall through to return false\n    return ctx[0].aoData[this[0]]._detailsShow || false;\n  }\n  return false;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+)?:(name|title|visIdx|visible)$/;\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function (settings, column, r1, r2, rows, type) {\n  var a = [];\n  for (var row = 0, ien = rows.length; row < ien; row++) {\n    a.push(_fnGetCellData(settings, rows[row], column, type));\n  }\n  return a;\n};\nvar __column_header = function (settings, column, row) {\n  var header = settings.aoHeader;\n  var titleRow = settings.titleRow;\n  var target = null;\n  if (row !== undefined) {\n    target = row;\n  } else if (titleRow === true) {\n    // legacy orderCellsTop support\n    target = 0;\n  } else if (titleRow === false) {\n    target = header.length - 1;\n  } else if (titleRow !== null) {\n    target = titleRow;\n  } else {\n    // Automatic - find the _last_ unique cell from the top that is not empty (last for\n    // backwards compatibility)\n    for (var i = 0; i < header.length; i++) {\n      if (header[i][column].unique && $('span.dt-column-title', header[i][column].cell).text()) {\n        target = i;\n      }\n    }\n    if (target === null) {\n      target = 0;\n    }\n  }\n  return header[target][column].cell;\n};\nvar __column_header_cells = function (header) {\n  var out = [];\n  for (var i = 0; i < header.length; i++) {\n    for (var j = 0; j < header[i].length; j++) {\n      var cell = header[i][j].cell;\n      if (!out.includes(cell)) {\n        out.push(cell);\n      }\n    }\n  }\n  return out;\n};\nvar __column_selector = function (settings, selector, opts) {\n  var columns = settings.aoColumns,\n    names,\n    titles,\n    nodes = __column_header_cells(settings.aoHeader);\n  var run = function (s) {\n    var selInt = _intVal(s);\n\n    // Selector - all\n    if (s === '') {\n      return _range(columns.length);\n    }\n\n    // Selector - index\n    if (selInt !== null) {\n      return [selInt >= 0 ? selInt :\n      // Count from left\n      columns.length + selInt // Count from right (+ because its a negative value)\n      ];\n    }\n\n    // Selector = function\n    if (typeof s === 'function') {\n      var rows = _selector_row_indexes(settings, opts);\n      return columns.map(function (col, idx) {\n        return s(idx, __columnData(settings, idx, 0, 0, rows), __column_header(settings, idx)) ? idx : null;\n      });\n    }\n\n    // jQuery or string selector\n    var match = typeof s === 'string' ? s.match(__re_column_selector) : '';\n    if (match) {\n      switch (match[2]) {\n        case 'visIdx':\n        case 'visible':\n          // Selector is a column index\n          if (match[1] && match[1].match(/^\\d+$/)) {\n            var idx = parseInt(match[1], 10);\n\n            // Visible index given, convert to column index\n            if (idx < 0) {\n              // Counting from the right\n              var visColumns = columns.map(function (col, i) {\n                return col.bVisible ? i : null;\n              });\n              return [visColumns[visColumns.length + idx]];\n            }\n            // Counting from the left\n            return [_fnVisibleToColumnIndex(settings, idx)];\n          }\n          return columns.map(function (col, idx) {\n            // Not visible, can't match\n            if (!col.bVisible) {\n              return null;\n            }\n\n            // Selector\n            if (match[1]) {\n              return $(nodes[idx]).filter(match[1]).length > 0 ? idx : null;\n            }\n\n            // `:visible` on its own\n            return idx;\n          });\n        case 'name':\n          // Don't get names, unless needed, and only get once if it is\n          if (!names) {\n            names = _pluck(columns, 'sName');\n          }\n\n          // match by name. `names` is column index complete and in order\n          return names.map(function (name, i) {\n            return name === match[1] ? i : null;\n          });\n        case 'title':\n          if (!titles) {\n            titles = _pluck(columns, 'sTitle');\n          }\n\n          // match by column title\n          return titles.map(function (title, i) {\n            return title === match[1] ? i : null;\n          });\n        default:\n          return [];\n      }\n    }\n\n    // Cell in the table body\n    if (s.nodeName && s._DT_CellIndex) {\n      return [s._DT_CellIndex.column];\n    }\n\n    // jQuery selector on the TH elements for the columns\n    var jqResult = $(nodes).filter(s).map(function () {\n      return _fnColumnsFromHeader(this); // `nodes` is column index complete and in order\n    }).toArray().sort(function (a, b) {\n      return a - b;\n    });\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    }\n\n    // Otherwise a node which might have a `dt-column` data attribute, or be\n    // a child or such an element\n    var host = $(s).closest('*[data-dt-column]');\n    return host.length ? [host.data('dt-column')] : [];\n  };\n  var selected = _selector_run('column', selector, run, settings, opts);\n  return opts.columnOrder && opts.columnOrder === 'index' ? selected.sort(function (a, b) {\n    return a - b;\n  }) : selected; // implied\n};\nvar __setColumnVis = function (settings, column, vis) {\n  var cols = settings.aoColumns,\n    col = cols[column],\n    data = settings.aoData,\n    cells,\n    i,\n    ien,\n    tr;\n\n  // Get\n  if (vis === undefined) {\n    return col.bVisible;\n  }\n\n  // Set\n  // No change\n  if (col.bVisible === vis) {\n    return false;\n  }\n  if (vis) {\n    // Insert column\n    // Need to decide if we should use appendChild or insertBefore\n    var insertBefore = _pluck(cols, 'bVisible').indexOf(true, column + 1);\n    for (i = 0, ien = data.length; i < ien; i++) {\n      if (data[i]) {\n        tr = data[i].nTr;\n        cells = data[i].anCells;\n        if (tr) {\n          // insertBefore can act like appendChild if 2nd arg is null\n          tr.insertBefore(cells[column], cells[insertBefore] || null);\n        }\n      }\n    }\n  } else {\n    // Remove column\n    $(_pluck(settings.aoData, 'anCells', column)).detach();\n  }\n\n  // Common actions\n  col.bVisible = vis;\n  _colGroup(settings);\n  return true;\n};\n_api_register('columns()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __column_selector(settings, selector, opts);\n  }, 1);\n\n  // Want argument shifting here and in _row_selector?\n  inst.selector.cols = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n_api_registerPlural('columns().header()', 'column().header()', function (row) {\n  return this.iterator('column', function (settings, column) {\n    return __column_header(settings, column, row);\n  }, 1);\n});\n_api_registerPlural('columns().footer()', 'column().footer()', function (row) {\n  return this.iterator('column', function (settings, column) {\n    var footer = settings.aoFooter;\n    if (!footer.length) {\n      return null;\n    }\n    return settings.aoFooter[row !== undefined ? row : 0][column].cell;\n  }, 1);\n});\n_api_registerPlural('columns().data()', 'column().data()', function () {\n  return this.iterator('column-rows', __columnData, 1);\n});\n_api_registerPlural('columns().render()', 'column().render()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return __columnData(settings, column, i, j, rows, type);\n  }, 1);\n});\n_api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].mData;\n  }, 1);\n});\n_api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, type === 'search' ? '_aFilterData' : '_aSortData', column);\n  }, 1);\n});\n_api_registerPlural('columns().init()', 'column().init()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column];\n  }, 1);\n});\n_api_registerPlural('columns().names()', 'column().name()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].sName;\n  }, 1);\n});\n_api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, 'anCells', column);\n  }, 1);\n});\n_api_registerPlural('columns().titles()', 'column().title()', function (title, row) {\n  return this.iterator('column', function (settings, column) {\n    // Argument shifting\n    if (typeof title === 'number') {\n      row = title;\n      title = undefined;\n    }\n    var span = $('span.dt-column-title', this.column(column).header(row));\n    if (title !== undefined) {\n      span.html(title);\n      return this;\n    }\n    return span.html();\n  }, 1);\n});\n_api_registerPlural('columns().types()', 'column().type()', function () {\n  return this.iterator('column', function (settings, column) {\n    var type = settings.aoColumns[column].sType;\n\n    // If the type was invalidated, then resolve it. This actually does\n    // all columns at the moment. Would only happen once if getting all\n    // column's data types.\n    if (!type) {\n      _fnColumnTypes(settings);\n    }\n    return type;\n  }, 1);\n});\n_api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n  var that = this;\n  var changed = [];\n  var ret = this.iterator('column', function (settings, column) {\n    if (vis === undefined) {\n      return settings.aoColumns[column].bVisible;\n    } // else\n\n    if (__setColumnVis(settings, column, vis)) {\n      changed.push(column);\n    }\n  });\n\n  // Group the column visibility changes\n  if (vis !== undefined) {\n    this.iterator('table', function (settings) {\n      // Redraw the header after changes\n      _fnDrawHead(settings, settings.aoHeader);\n      _fnDrawHead(settings, settings.aoFooter);\n\n      // Update colspan for no records display. Child rows and extensions will use their own\n      // listeners to do this - only need to update the empty table item here\n      if (!settings.aiDisplay.length) {\n        $(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n      }\n      _fnSaveState(settings);\n\n      // Second loop once the first is done for events\n      that.iterator('column', function (settings, column) {\n        if (changed.includes(column)) {\n          _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n        }\n      });\n      if (changed.length && (calc === undefined || calc)) {\n        that.columns.adjust();\n      }\n    });\n  }\n  return ret;\n});\n_api_registerPlural('columns().widths()', 'column().width()', function () {\n  // Injects a fake row into the table for just a moment so the widths can\n  // be read, regardless of colspan in the header and rows being present in\n  // the body\n  var columns = this.columns(':visible').count();\n  var row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n  $(this.table().body()).append(row);\n  var widths = row.children().map(function () {\n    return $(this).outerWidth();\n  });\n  row.remove();\n  return this.iterator('column', function (settings, column) {\n    var visIdx = _fnColumnIndexToVisible(settings, column);\n    return visIdx !== null ? widths[visIdx] : 0;\n  }, 1);\n});\n_api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n  return this.iterator('column', function (settings, column) {\n    return type === 'visible' ? _fnColumnIndexToVisible(settings, column) : column;\n  }, 1);\n});\n_api_register('columns.adjust()', function () {\n  return this.iterator('table', function (settings) {\n    // Force a column sizing to happen with a manual call - otherwise it can skip\n    // if the size hasn't changed\n    settings.containerWidth = -1;\n    _fnAdjustColumnSizing(settings);\n  }, 1);\n});\n_api_register('column.index()', function (type, idx) {\n  if (this.context.length !== 0) {\n    var ctx = this.context[0];\n    if (type === 'fromVisible' || type === 'toData') {\n      return _fnVisibleToColumnIndex(ctx, idx);\n    } else if (type === 'fromData' || type === 'toVisible') {\n      return _fnColumnIndexToVisible(ctx, idx);\n    }\n  }\n});\n_api_register('column()', function (selector, opts) {\n  return _selector_first(this.columns(selector, opts));\n});\nvar __cell_selector = function (settings, selector, opts) {\n  var data = settings.aoData;\n  var rows = _selector_row_indexes(settings, opts);\n  var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n  var allCells = $(_flatten([], cells));\n  var row;\n  var columns = settings.aoColumns.length;\n  var a, i, ien, j, o, host;\n  var run = function (s) {\n    var fnSelector = typeof s === 'function';\n    if (s === null || s === undefined || fnSelector) {\n      // All cells and function selectors\n      a = [];\n      for (i = 0, ien = rows.length; i < ien; i++) {\n        row = rows[i];\n        for (j = 0; j < columns; j++) {\n          o = {\n            row: row,\n            column: j\n          };\n          if (fnSelector) {\n            // Selector - function\n            host = data[row];\n            if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n              a.push(o);\n            }\n          } else {\n            // Selector - all\n            a.push(o);\n          }\n        }\n      }\n      return a;\n    }\n\n    // Selector - index\n    if ($.isPlainObject(s)) {\n      // Valid cell index and its in the array of selectable rows\n      return s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ? [s] : [];\n    }\n\n    // Selector - jQuery filtered cells\n    var jqResult = allCells.filter(s).map(function (i, el) {\n      return {\n        // use a new object, in case someone changes the values\n        row: el._DT_CellIndex.row,\n        column: el._DT_CellIndex.column\n      };\n    }).toArray();\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    }\n\n    // Otherwise the selector is a node, and there is one last option - the\n    // element might be a child of an element which has dt-row and dt-column\n    // data attributes\n    host = $(s).closest('*[data-dt-row]');\n    return host.length ? [{\n      row: host.data('dt-row'),\n      column: host.data('dt-column')\n    }] : [];\n  };\n  return _selector_run('cell', selector, run, settings, opts);\n};\n_api_register('cells()', function (rowSelector, columnSelector, opts) {\n  // Argument shifting\n  if ($.isPlainObject(rowSelector)) {\n    // Indexes\n    if (rowSelector.row === undefined) {\n      // Selector options in first parameter\n      opts = rowSelector;\n      rowSelector = null;\n    } else {\n      // Cell index objects in first parameter\n      opts = columnSelector;\n      columnSelector = null;\n    }\n  }\n  if ($.isPlainObject(columnSelector)) {\n    opts = columnSelector;\n    columnSelector = null;\n  }\n\n  // Cell selector\n  if (columnSelector === null || columnSelector === undefined) {\n    return this.iterator('table', function (settings) {\n      return __cell_selector(settings, rowSelector, _selector_opts(opts));\n    });\n  }\n\n  // The default built in options need to apply to row and columns\n  var internalOpts = opts ? {\n    page: opts.page,\n    order: opts.order,\n    search: opts.search\n  } : {};\n\n  // Row + column selector\n  var columns = this.columns(columnSelector, internalOpts);\n  var rows = this.rows(rowSelector, internalOpts);\n  var i, ien, j, jen;\n  var cellsNoOpts = this.iterator('table', function (settings, idx) {\n    var a = [];\n    for (i = 0, ien = rows[idx].length; i < ien; i++) {\n      for (j = 0, jen = columns[idx].length; j < jen; j++) {\n        a.push({\n          row: rows[idx][i],\n          column: columns[idx][j]\n        });\n      }\n    }\n    return a;\n  }, 1);\n\n  // There is currently only one extension which uses a cell selector extension\n  // It is a _major_ performance drag to run this if it isn't needed, so this is\n  // an extension specific check at the moment\n  var cells = opts && opts.selected ? this.cells(cellsNoOpts, opts) : cellsNoOpts;\n  $.extend(cells.selector, {\n    cols: columnSelector,\n    rows: rowSelector,\n    opts: opts\n  });\n  return cells;\n});\n_api_registerPlural('cells().nodes()', 'cell().node()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    var data = settings.aoData[row];\n    return data && data.anCells ? data.anCells[column] : undefined;\n  }, 1);\n});\n_api_register('cells().data()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column);\n  }, 1);\n});\n_api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n  type = type === 'search' ? '_aFilterData' : '_aSortData';\n  return this.iterator('cell', function (settings, row, column) {\n    return settings.aoData[row][type][column];\n  }, 1);\n});\n_api_registerPlural('cells().render()', 'cell().render()', function (type) {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column, type);\n  }, 1);\n});\n_api_registerPlural('cells().indexes()', 'cell().index()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return {\n      row: row,\n      column: column,\n      columnVisible: _fnColumnIndexToVisible(settings, column)\n    };\n  }, 1);\n});\n_api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n  return this.iterator('cell', function (settings, row, column) {\n    _fnInvalidate(settings, row, src, column);\n  });\n});\n_api_register('cell()', function (rowSelector, columnSelector, opts) {\n  return _selector_first(this.cells(rowSelector, columnSelector, opts));\n});\n_api_register('cell().data()', function (data) {\n  var ctx = this.context;\n  var cell = this[0];\n  if (data === undefined) {\n    // Get\n    return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined;\n  }\n\n  // Set\n  _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n  _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n  return this;\n});\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n */ /**\n    * Set the ordering for the table.\n    *\n    * @param {integer} order Column index to sort upon.\n    * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n    * @returns {DataTables.Api} this\n    */ /**\n       * Set the ordering for the table.\n       *\n       * @param {array} order 1D array of sorting information to be applied.\n       * @param {array} [...] Optional additional sorting conditions\n       * @returns {DataTables.Api} this\n       */ /**\n          * Set the ordering for the table.\n          *\n          * @param {array} order 2D array of sorting information to be applied.\n          * @returns {DataTables.Api} this\n          */\n_api_register('order()', function (order, dir) {\n  var ctx = this.context;\n  var args = Array.prototype.slice.call(arguments);\n  if (order === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].aaSorting : undefined;\n  }\n\n  // set\n  if (typeof order === 'number') {\n    // Simple column / direction passed in\n    order = [[order, dir]];\n  } else if (args.length > 1) {\n    // Arguments passed in (list of 1D arrays)\n    order = args;\n  }\n  // otherwise a 2D array was passed in\n\n  return this.iterator('table', function (settings) {\n    var resolved = [];\n    _fnSortResolve(settings, resolved, order);\n    settings.aaSorting = resolved;\n  });\n});\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register('order.listener()', function (node, column, callback) {\n  return this.iterator('table', function (settings) {\n    _fnSortAttachListener(settings, node, {}, column, callback);\n  });\n});\n_api_register('order.fixed()', function (set) {\n  if (!set) {\n    var ctx = this.context;\n    var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined;\n    return Array.isArray(fixed) ? {\n      pre: fixed\n    } : fixed;\n  }\n  return this.iterator('table', function (settings) {\n    settings.aaSortingFixed = $.extend(true, {}, set);\n  });\n});\n\n// Order by the selected column(s)\n_api_register(['columns().order()', 'column().order()'], function (dir) {\n  var that = this;\n  if (!dir) {\n    return this.iterator('column', function (settings, idx) {\n      var sort = _fnSortFlatten(settings);\n      for (var i = 0, ien = sort.length; i < ien; i++) {\n        if (sort[i].col === idx) {\n          return sort[i].dir;\n        }\n      }\n      return null;\n    }, 1);\n  } else {\n    return this.iterator('table', function (settings, i) {\n      settings.aaSorting = that[i].map(function (col) {\n        return [col, dir];\n      });\n    });\n  }\n});\n_api_registerPlural('columns().orderable()', 'column().orderable()', function (directions) {\n  return this.iterator('column', function (settings, idx) {\n    var col = settings.aoColumns[idx];\n    return directions ? col.asSorting : col.bSortable;\n  }, 1);\n});\n_api_register('processing()', function (show) {\n  return this.iterator('table', function (ctx) {\n    _fnProcessingDisplay(ctx, show);\n  });\n});\n_api_register('search()', function (input, regex, smart, caseInsen) {\n  var ctx = this.context;\n  if (input === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].oPreviousSearch.search : undefined;\n  }\n\n  // set\n  return this.iterator('table', function (settings) {\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n    if (typeof regex === 'object') {\n      // New style options to pass to the search builder\n      _fnFilterComplete(settings, $.extend(settings.oPreviousSearch, regex, {\n        search: input\n      }));\n    } else {\n      // Compat for the old options\n      _fnFilterComplete(settings, $.extend(settings.oPreviousSearch, {\n        search: input,\n        regex: regex === null ? false : regex,\n        smart: smart === null ? true : smart,\n        caseInsensitive: caseInsen === null ? true : caseInsen\n      }));\n    }\n  });\n});\n_api_register('search.fixed()', function (name, search) {\n  var ret = this.iterator(true, 'table', function (settings) {\n    var fixed = settings.searchFixed;\n    if (!name) {\n      return Object.keys(fixed);\n    } else if (search === undefined) {\n      return fixed[name];\n    } else if (search === null) {\n      delete fixed[name];\n    } else {\n      fixed[name] = search;\n    }\n    return this;\n  });\n  return name !== undefined && search === undefined ? ret[0] : ret;\n});\n_api_registerPlural('columns().search()', 'column().search()', function (input, regex, smart, caseInsen) {\n  return this.iterator('column', function (settings, column) {\n    var preSearch = settings.aoPreSearchCols;\n    if (input === undefined) {\n      // get\n      return preSearch[column].search;\n    }\n\n    // set\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n    if (typeof regex === 'object') {\n      // New style options to pass to the search builder\n      $.extend(preSearch[column], regex, {\n        search: input\n      });\n    } else {\n      // Old style (with not all options available)\n      $.extend(preSearch[column], {\n        search: input,\n        regex: regex === null ? false : regex,\n        smart: smart === null ? true : smart,\n        caseInsensitive: caseInsen === null ? true : caseInsen\n      });\n    }\n    _fnFilterComplete(settings, settings.oPreviousSearch);\n  });\n});\n_api_register(['columns().search.fixed()', 'column().search.fixed()'], function (name, search) {\n  var ret = this.iterator(true, 'column', function (settings, colIdx) {\n    var fixed = settings.aoColumns[colIdx].searchFixed;\n    if (!name) {\n      return Object.keys(fixed);\n    } else if (search === undefined) {\n      return fixed[name] || null;\n    } else if (search === null) {\n      delete fixed[name];\n    } else {\n      fixed[name] = search;\n    }\n    return this;\n  });\n  return name !== undefined && search === undefined ? ret[0] : ret;\n});\n/*\n * State API methods\n */\n\n_api_register('state()', function (set, ignoreTime) {\n  // getter\n  if (!set) {\n    return this.context.length ? this.context[0].oSavedState : null;\n  }\n  var setMutate = $.extend(true, {}, set);\n\n  // setter\n  return this.iterator('table', function (settings) {\n    if (ignoreTime !== false) {\n      setMutate.time = +new Date() + 100;\n    }\n    _fnImplementState(settings, setMutate, function () {});\n  });\n});\n_api_register('state.clear()', function () {\n  return this.iterator('table', function (settings) {\n    // Save an empty object\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n  });\n});\n_api_register('state.loaded()', function () {\n  return this.context.length ? this.context[0].oLoadedState : null;\n});\n_api_register('state.save()', function () {\n  return this.iterator('table', function (settings) {\n    _fnSaveState(settings);\n  });\n});\n\n// Can be assigned in DateTable.use() - note luxon and moment vars are in helpers.js\nvar __bootstrap;\nvar __foundation;\n\n/**\n * Set the libraries that DataTables uses, or the global objects.\n * Note that the arguments can be either way around (legacy support)\n * and the second is optional. See docs.\n */\nDataTable.use = function (arg1, arg2) {\n  // Reverse arguments for legacy support\n  var module = typeof arg1 === 'string' ? arg2 : arg1;\n  var type = typeof arg2 === 'string' ? arg2 : arg1;\n\n  // Getter\n  if (module === undefined && typeof type === 'string') {\n    switch (type) {\n      case 'lib':\n      case 'jq':\n        return $;\n      case 'win':\n        return window;\n      case 'datetime':\n        return DataTable.DateTime;\n      case 'luxon':\n        return __luxon;\n      case 'moment':\n        return __moment;\n      case 'bootstrap':\n        // Use local if set, otherwise try window, which could be undefined\n        return __bootstrap || window.bootstrap;\n      case 'foundation':\n        // Ditto\n        return __foundation || window.Foundation;\n      default:\n        return null;\n    }\n  }\n\n  // Setter\n  if (type === 'lib' || type === 'jq' || module && module.fn && module.fn.jquery) {\n    $ = module;\n  } else if (type === 'win' || module && module.document) {\n    window = module;\n    document = module.document;\n  } else if (type === 'datetime' || module && module.type === 'DateTime') {\n    DataTable.DateTime = module;\n  } else if (type === 'luxon' || module && module.FixedOffsetZone) {\n    __luxon = module;\n  } else if (type === 'moment' || module && module.isMoment) {\n    __moment = module;\n  } else if (type === 'bootstrap' || module && module.Modal && module.Modal.NAME === 'modal') {\n    // This is currently for BS5 only. BS3/4 attach to jQuery, so no need to use `.use()`\n    __bootstrap = module;\n  } else if (type === 'foundation' || module && module.Reveal) {\n    __foundation = module;\n  }\n};\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n  var is = false;\n\n  // Test if the first parameter is a window object\n  if (root && root.document) {\n    window = root;\n    document = root.document;\n  }\n\n  // Test if the second parameter is a jQuery object\n  if (jq && jq.fn && jq.fn.jquery) {\n    $ = jq;\n    is = true;\n  }\n  return is;\n};\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @param {string} [version2=current DataTables version] As above, but optional.\n *   If not given the current DataTables version will be used.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = function (version, version2) {\n  var aThis = version2 ? version2.split('.') : DataTable.version.split('.');\n  var aThat = version.split('.');\n  var iThis, iThat;\n  for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n    iThis = parseInt(aThis[i], 10) || 0;\n    iThat = parseInt(aThat[i], 10) || 0;\n\n    // Parts are the same, keep comparing\n    if (iThis === iThat) {\n      continue;\n    }\n\n    // Parts are different, return immediately\n    return iThis > iThat;\n  }\n  return true;\n};\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = function (table) {\n  var t = $(table).get(0);\n  var is = false;\n  if (table instanceof DataTable.Api) {\n    return true;\n  }\n  $.each(DataTable.settings, function (i, o) {\n    var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n    var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n    if (o.nTable === t || head === t || foot === t) {\n      is = true;\n    }\n  });\n  return is;\n};\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = function (visible) {\n  var api = false;\n  if ($.isPlainObject(visible)) {\n    api = visible.api;\n    visible = visible.visible;\n  }\n  var a = DataTable.settings.filter(function (o) {\n    return !visible || visible && $(o.nTable).is(':visible') ? true : false;\n  }).map(function (o) {\n    return o.nTable;\n  });\n  return api ? new _Api(a) : a;\n};\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n/**\n *\n */\n_api_register('$()', function (selector, opts) {\n  var rows = this.rows(opts).nodes(),\n    // Get all rows\n    jqRows = $(rows);\n  return $([].concat(jqRows.filter(selector).toArray(), jqRows.find(selector).toArray()));\n});\n\n// jQuery functions to operate on the tables\n$.each(['on', 'one', 'off'], function (i, key) {\n  _api_register(key + '()', function /* event, handler */\n  () {\n    var args = Array.prototype.slice.call(arguments);\n\n    // Add the `dt` namespace automatically if it isn't already present\n    args[0] = args[0].split(/\\s/).map(function (e) {\n      return !e.match(/\\.dt\\b/) ? e + '.dt' : e;\n    }).join(' ');\n    var inst = $(this.tables().nodes());\n    inst[key].apply(inst, args);\n    return this;\n  });\n});\n_api_register('clear()', function () {\n  return this.iterator('table', function (settings) {\n    _fnClearTable(settings);\n  });\n});\n_api_register('error()', function (msg) {\n  return this.iterator('table', function (settings) {\n    _fnLog(settings, 0, msg);\n  });\n});\n_api_register('settings()', function () {\n  return new _Api(this.context, this.context);\n});\n_api_register('init()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].oInit : null;\n});\n_api_register('data()', function () {\n  return this.iterator('table', function (settings) {\n    return _pluck(settings.aoData, '_aData');\n  }).flatten();\n});\n_api_register('trigger()', function (name, args, bubbles) {\n  return this.iterator('table', function (settings) {\n    return _fnCallbackFire(settings, null, name, args, bubbles);\n  }).flatten();\n});\n_api_register('ready()', function (fn) {\n  var ctx = this.context;\n\n  // Get status of first table\n  if (!fn) {\n    return ctx.length ? ctx[0]._bInitComplete || false : null;\n  }\n\n  // Function to run either once the table becomes ready or\n  // immediately if it is already ready.\n  return this.tables().every(function () {\n    var api = this;\n    if (this.context[0]._bInitComplete) {\n      fn.call(api);\n    } else {\n      this.on('init.dt.DT', function () {\n        fn.call(api);\n      });\n    }\n  });\n});\n_api_register('destroy()', function (remove) {\n  remove = remove || false;\n  return this.iterator('table', function (settings) {\n    var classes = settings.oClasses;\n    var table = settings.nTable;\n    var tbody = settings.nTBody;\n    var thead = settings.nTHead;\n    var tfoot = settings.nTFoot;\n    var jqTable = $(table);\n    var jqTbody = $(tbody);\n    var jqWrapper = $(settings.nTableWrapper);\n    var rows = settings.aoData.map(function (r) {\n      return r ? r.nTr : null;\n    });\n    var orderClasses = classes.order;\n\n    // Flag to note that the table is currently being destroyed - no action\n    // should be taken\n    settings.bDestroying = true;\n\n    // Fire off the destroy callbacks for plug-ins etc\n    _fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings], true);\n\n    // If not being removed from the document, make all columns visible\n    if (!remove) {\n      new _Api(settings).columns().visible(true);\n    }\n\n    // Container width change listener\n    if (settings.resizeObserver) {\n      settings.resizeObserver.disconnect();\n    }\n\n    // Blitz all `DT` namespaced events (these are internal events, the\n    // lowercase, `dt` events are user subscribed and they are responsible\n    // for removing them\n    jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n    $(window).off('.DT-' + settings.sInstance);\n\n    // When scrolling we had to break the table up - restore it\n    if (table != thead.parentNode) {\n      jqTable.children('thead').detach();\n      jqTable.append(thead);\n    }\n    if (tfoot && table != tfoot.parentNode) {\n      jqTable.children('tfoot').detach();\n      jqTable.append(tfoot);\n    }\n\n    // Clean up the header / footer\n    cleanHeader(thead, 'header');\n    cleanHeader(tfoot, 'footer');\n    settings.colgroup.remove();\n    settings.aaSorting = [];\n    settings.aaSortingFixed = [];\n    _fnSortingClasses(settings);\n    $(jqTable).find('th, td').removeClass($.map(DataTable.ext.type.className, function (v) {\n      return v;\n    }).join(' '));\n    $('th, td', thead).removeClass(orderClasses.none + ' ' + orderClasses.canAsc + ' ' + orderClasses.canDesc + ' ' + orderClasses.isAsc + ' ' + orderClasses.isDesc).css('width', '').removeAttr('aria-sort');\n\n    // Add the TR elements back into the table in their original order\n    jqTbody.children().detach();\n    jqTbody.append(rows);\n    var orig = settings.nTableWrapper.parentNode;\n    var insertBefore = settings.nTableWrapper.nextSibling;\n\n    // Remove the DataTables generated nodes, events and classes\n    var removedMethod = remove ? 'remove' : 'detach';\n    jqTable[removedMethod]();\n    jqWrapper[removedMethod]();\n\n    // If we need to reattach the table to the document\n    if (!remove && orig) {\n      // insertBefore acts like appendChild if !arg[1]\n      orig.insertBefore(table, insertBefore);\n\n      // Restore the width of the original table - was read from the style property,\n      // so we can restore directly to that\n      jqTable.css('width', settings.sDestroyWidth).removeClass(classes.table);\n    }\n\n    /* Remove the settings object from the settings array */\n    var idx = DataTable.settings.indexOf(settings);\n    if (idx !== -1) {\n      DataTable.settings.splice(idx, 1);\n    }\n  });\n});\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each(['column', 'row', 'cell'], function (i, type) {\n  _api_register(type + 's().every()', function (fn) {\n    var opts = this.selector.opts;\n    var api = this;\n    var inst;\n    var counter = 0;\n    return this.iterator('every', function (settings, selectedIdx, tableIdx) {\n      inst = api[type](selectedIdx, opts);\n      if (type === 'cell') {\n        fn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n      } else {\n        fn.call(inst, selectedIdx, tableIdx, counter);\n      }\n      counter++;\n    });\n  });\n});\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register('i18n()', function (token, def, plural) {\n  var ctx = this.context[0];\n  var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n  if (resolved === undefined) {\n    resolved = def;\n  }\n  if ($.isPlainObject(resolved)) {\n    resolved = plural !== undefined && resolved[plural] !== undefined ? resolved[plural] : resolved._;\n  }\n  return typeof resolved === 'string' ? resolved.replace('%d', plural) // nb: plural might be undefined,\n  : resolved;\n});\n\n// Needed for header and footer, so pulled into its own function\nfunction cleanHeader(node, className) {\n  $(node).find('span.dt-column-order').remove();\n  $(node).find('span.dt-column-title').each(function () {\n    var title = $(this).html();\n    $(this).parent().parent().append(title);\n    $(this).remove();\n  });\n  $(node).find('div.dt-column-' + className).remove();\n  $('th, td', node).removeAttr('data-dt-column');\n}\n\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"2.3.2\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n  /**\n   * Flag to indicate if the filtering should be case insensitive or not\n   */\n  \"caseInsensitive\": true,\n  /**\n   * Applied search term\n   */\n  \"search\": \"\",\n  /**\n   * Flag to indicate if the search term should be interpreted as a\n   * regular expression (true) or not (false) and therefore and special\n   * regex characters escaped.\n   */\n  \"regex\": false,\n  /**\n   * Flag to indicate if DataTables is to use its smart filtering or not.\n   */\n  \"smart\": true,\n  /**\n   * Flag to indicate if DataTables should only trigger a search when\n   * the return key is pressed.\n   */\n  \"return\": false\n};\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n  /**\n   * TR element for the row\n   */\n  \"nTr\": null,\n  /**\n   * Array of TD elements for each row. This is null until the row has been\n   * created.\n   */\n  \"anCells\": null,\n  /**\n   * Data object from the original data source for the row. This is either\n   * an array if using the traditional form of DataTables, or an object if\n   * using mData options. The exact type will depend on the passed in\n   * data from the data source, or will be an array if using DOM a data\n   * source.\n   */\n  \"_aData\": [],\n  /**\n   * Sorting data cache - this array is ostensibly the same length as the\n   * number of columns (although each index is generated only as it is\n   * needed), and holds the data that is used for sorting each column in the\n   * row. We do this cache generation at the start of the sort in order that\n   * the formatting of the sort data need be done only once for each cell\n   * per sort. This array should not be read from or written to by anything\n   * other than the master sorting methods.\n   */\n  \"_aSortData\": null,\n  /**\n   * Per cell filtering data cache. As per the sort data cache, used to\n   * increase the performance of the filtering in DataTables\n   */\n  \"_aFilterData\": null,\n  /**\n   * Filtering data cache. This is the same as the cell filtering cache, but\n   * in this case a string rather than an array. This is easily computed with\n   * a join on `_aFilterData`, but is provided as a cache so the join isn't\n   * needed on every search (memory traded for performance)\n   */\n  \"_sFilterRow\": null,\n  /**\n   * Denote if the original data source was from the DOM, or the data source\n   * object. This is used for invalidating data, so DataTables can\n   * automatically read data from the original source, unless uninstructed\n   * otherwise.\n   */\n  \"src\": null,\n  /**\n   * Index in the aoData array. This saves an indexOf lookup when we have the\n   * object, but want to know the index\n   */\n  \"idx\": -1,\n  /**\n   * Cached display value\n   */\n  displayData: null\n};\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n  /**\n   * Column index.\n   */\n  \"idx\": null,\n  /**\n   * A list of the columns that sorting should occur on when this column\n   * is sorted. That this property is an array allows multi-column sorting\n   * to be defined for a column (for example first name / last name columns\n   * would benefit from this). The values are integers pointing to the\n   * columns to be sorted on (typically it will be a single integer pointing\n   * at itself, but that doesn't need to be the case).\n   */\n  \"aDataSort\": null,\n  /**\n   * Define the sorting directions that are applied to the column, in sequence\n   * as the column is repeatedly sorted upon - i.e. the first value is used\n   * as the sorting direction when the column if first sorted (clicked on).\n   * Sort it again (click again) and it will move on to the next index.\n   * Repeat until loop.\n   */\n  \"asSorting\": null,\n  /**\n   * Flag to indicate if the column is searchable, and thus should be included\n   * in the filtering or not.\n   */\n  \"bSearchable\": null,\n  /**\n   * Flag to indicate if the column is sortable or not.\n   */\n  \"bSortable\": null,\n  /**\n   * Flag to indicate if the column is currently visible in the table or not\n   */\n  \"bVisible\": null,\n  /**\n   * Store for manual type assignment using the `column.type` option. This\n   * is held in store so we can manipulate the column's `sType` property.\n   */\n  \"_sManualType\": null,\n  /**\n   * Flag to indicate if HTML5 data attributes should be used as the data\n   * source for filtering or sorting. True is either are.\n   */\n  \"_bAttrSrc\": false,\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   */\n  \"fnCreatedCell\": null,\n  /**\n   * Function to get data from a cell in a column. You should <b>never</b>\n   * access data directly through _aData internally in DataTables - always use\n   * the method attached to this property. It allows mData to function as\n   * required. This function is automatically assigned by the column\n   * initialisation method\n   */\n  \"fnGetData\": null,\n  /**\n   * Function to set data for a cell in the column. You should <b>never</b>\n   * set the data directly to _aData internally in DataTables - always use\n   * this method. It allows mData to function as required. This function\n   * is automatically assigned by the column initialisation method\n   */\n  \"fnSetData\": null,\n  /**\n   * Property to read the value for the cells in the column from the data\n   * source array / object. If null, then the default content is used, if a\n   * function is given then the return from the function is used.\n   */\n  \"mData\": null,\n  /**\n   * Partner property to mData which is used (only when defined) to get\n   * the data - i.e. it is basically the same as mData, but without the\n   * 'set' option, and also the data fed to it is the result from mData.\n   * This is the rendering method to match the data method of mData.\n   */\n  \"mRender\": null,\n  /**\n   * The class to apply to all TD elements in the table's TBODY for the column\n   */\n  \"sClass\": null,\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   */\n  \"sContentPadding\": null,\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because mData\n   * is set to null, or because the data source itself is null).\n   */\n  \"sDefaultContent\": null,\n  /**\n   * Name for the column, allowing reference to the column by name as well as\n   * by index (needs a lookup to work by name).\n   */\n  \"sName\": null,\n  /**\n   * Custom sorting data type - defines which of the available plug-ins in\n   * afnSortData the custom sorting will use - if any is defined.\n   */\n  \"sSortDataType\": 'std',\n  /**\n   * Class to be applied to the header element when sorting on this column\n   */\n  \"sSortingClass\": null,\n  /**\n   * Title of the column - what is seen in the TH element (nTh).\n   */\n  \"sTitle\": null,\n  /**\n   * Column sorting and filtering type\n   */\n  \"sType\": null,\n  /**\n   * Width of the column\n   */\n  \"sWidth\": null,\n  /**\n   * Width of the column when it was first \"encountered\"\n   */\n  \"sWidthOrig\": null,\n  /** Cached string which is the longest in the column */\n  maxLenString: null,\n  /**\n   * Store for named searches\n   */\n  searchFixed: null\n};\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n  /**\n   * An array of data to use for the table, passed in at initialisation which\n   * will be used in preference to any data which is already in the DOM. This is\n   * particularly useful for constructing tables purely in Javascript, for\n   * example with a custom Ajax call.\n   */\n  \"aaData\": null,\n  /**\n   * If ordering is enabled, then DataTables will perform a first pass sort on\n   * initialisation. You can define which column(s) the sort is performed\n   * upon, and the sorting direction, with this variable. The `sorting` array\n   * should contain an array for each column to be sorted initially containing\n   * the column's index and a direction string ('asc' or 'desc').\n   */\n  \"aaSorting\": [[0, 'asc']],\n  /**\n   * This parameter is basically identical to the `sorting` parameter, but\n   * cannot be overridden by user interaction with the table. What this means\n   * is that you could have a column (visible or hidden) which the sorting\n   * will always be forced on first - any sorting after that (from the user)\n   * will then be performed as required. This can be useful for grouping rows\n   * together.\n   */\n  \"aaSortingFixed\": [],\n  /**\n   * DataTables can be instructed to load data to display in the table from a\n   * Ajax source. This option defines how that Ajax call is made and where to.\n   *\n   * The `ajax` property has three different modes of operation, depending on\n   * how it is defined. These are:\n   *\n   * * `string` - Set the URL from where the data should be loaded from.\n   * * `object` - Define properties for `jQuery.ajax`.\n   * * `function` - Custom data get function\n   *\n   * `string`\n   * --------\n   *\n   * As a string, the `ajax` property simply defines the URL from which\n   * DataTables will load data.\n   *\n   * `object`\n   * --------\n   *\n   * As an object, the parameters in the object are passed to\n   * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n   * of the Ajax request. DataTables has a number of default parameters which\n   * you can override using this option. Please refer to the jQuery\n   * documentation for a full description of the options available, although\n   * the following parameters provide additional options in DataTables or\n   * require special consideration:\n   *\n   * * `data` - As with jQuery, `data` can be provided as an object, but it\n   *   can also be used as a function to manipulate the data DataTables sends\n   *   to the server. The function takes a single parameter, an object of\n   *   parameters with the values that DataTables has readied for sending. An\n   *   object may be returned which will be merged into the DataTables\n   *   defaults, or you can add the items to the object that was passed in and\n   *   not return anything from the function. This supersedes `fnServerParams`\n   *   from DataTables 1.9-.\n   *\n   * * `dataSrc` - By default DataTables will look for the property `data` (or\n   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n   *   from an Ajax source or for server-side processing - this parameter\n   *   allows that property to be changed. You can use Javascript dotted\n   *   object notation to get a data source for multiple levels of nesting, or\n   *   it my be used as a function. As a function it takes a single parameter,\n   *   the JSON returned from the server, which can be manipulated as\n   *   required, with the returned value being that used by DataTables as the\n   *   data source for the table.\n   *\n   * * `success` - Should not be overridden it is used internally in\n   *   DataTables. To manipulate / transform the data returned by the server\n   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n   *\n   * `function`\n   * ----------\n   *\n   * As a function, making the Ajax call is left up to yourself allowing\n   * complete control of the Ajax request. Indeed, if desired, a method other\n   * than Ajax could be used to obtain the required data, such as Web storage\n   * or an AIR database.\n   *\n   * The function is given four parameters and no return is required. The\n   * parameters are:\n   *\n   * 1. _object_ - Data to send to the server\n   * 2. _function_ - Callback function that must be executed when the required\n   *    data has been obtained. That data should be passed into the callback\n   *    as the only parameter\n   * 3. _object_ - DataTables settings object for the table\n   */\n  \"ajax\": null,\n  /**\n   * This parameter allows you to readily specify the entries in the length drop\n   * down menu that DataTables shows when pagination is enabled. It can be\n   * either a 1D array of options which will be used for both the displayed\n   * option and the value, or a 2D array which will use the array in the first\n   * position as the value, and the array in the second position as the\n   * displayed options (useful for language strings such as 'All').\n   *\n   * Note that the `pageLength` property will be automatically set to the\n   * first value given in this array, unless `pageLength` is also provided.\n   */\n  \"aLengthMenu\": [10, 25, 50, 100],\n  /**\n   * The `columns` option in the initialisation parameter allows you to define\n   * details about the way individual columns behave. For a full list of\n   * column options that can be set, please see\n   * {@link DataTable.defaults.column}. Note that if you use `columns` to\n   * define your columns, you must have an entry in the array for every single\n   * column that you have in your table (these can be null if you don't which\n   * to specify any options).\n   */\n  \"aoColumns\": null,\n  /**\n   * Very similar to `columns`, `columnDefs` allows you to target a specific\n   * column, multiple columns, or all columns, using the `targets` property of\n   * each object in the array. This allows great flexibility when creating\n   * tables, as the `columnDefs` arrays can be of any length, targeting the\n   * columns you specifically want. `columnDefs` may use any of the column\n   * options available: {@link DataTable.defaults.column}, but it _must_\n   * have `targets` defined in each object in the array. Values in the `targets`\n   * array may be:\n   *   <ul>\n   *     <li>a string - class name will be matched on the TH for the column</li>\n   *     <li>0 or a positive integer - column index counting from the left</li>\n   *     <li>a negative integer - column index counting from the right</li>\n   *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n   *   </ul>\n   */\n  \"aoColumnDefs\": null,\n  /**\n   * Basically the same as `search`, this parameter defines the individual column\n   * filtering state at initialisation time. The array must be of the same size\n   * as the number of columns, and each element be an object with the parameters\n   * `search` and `escapeRegex` (the latter is optional). 'null' is also\n   * accepted and the default will be used.\n   */\n  \"aoSearchCols\": [],\n  /**\n   * Enable or disable automatic column width calculation. This can be disabled\n   * as an optimisation (it takes some time to calculate the widths) if the\n   * tables widths are passed in using `columns`.\n   */\n  \"bAutoWidth\": true,\n  /**\n   * Deferred rendering can provide DataTables with a huge speed boost when you\n   * are using an Ajax or JS data source for the table. This option, when set to\n   * true, will cause DataTables to defer the creation of the table elements for\n   * each row until they are needed for a draw - saving a significant amount of\n   * time.\n   */\n  \"bDeferRender\": true,\n  /**\n   * Replace a DataTable which matches the given selector and replace it with\n   * one which has the properties of the new initialisation object passed. If no\n   * table matches the selector, then the new DataTable will be constructed as\n   * per normal.\n   */\n  \"bDestroy\": false,\n  /**\n   * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n   * that it allows the end user to input multiple words (space separated) and\n   * will match a row containing those words, even if not in the order that was\n   * specified (this allow matching across multiple columns). Note that if you\n   * wish to use filtering in DataTables this must remain 'true' - to remove the\n   * default filtering input box and retain filtering abilities, please use\n   * {@link DataTable.defaults.dom}.\n   */\n  \"bFilter\": true,\n  /**\n   * Used only for compatiblity with DT1\n   * @deprecated\n   */\n  \"bInfo\": true,\n  /**\n   * Used only for compatiblity with DT1\n   * @deprecated\n   */\n  \"bLengthChange\": true,\n  /**\n   * Enable or disable pagination.\n   */\n  \"bPaginate\": true,\n  /**\n   * Enable or disable the display of a 'processing' indicator when the table is\n   * being processed (e.g. a sort). This is particularly useful for tables with\n   * large amounts of data where it can take a noticeable amount of time to sort\n   * the entries.\n   */\n  \"bProcessing\": false,\n  /**\n   * Retrieve the DataTables object for the given selector. Note that if the\n   * table has already been initialised, this parameter will cause DataTables\n   * to simply return the object that has already been set up - it will not take\n   * account of any changes you might have made to the initialisation object\n   * passed to DataTables (setting this parameter to true is an acknowledgement\n   * that you understand this). `destroy` can be used to reinitialise a table if\n   * you need.\n   */\n  \"bRetrieve\": false,\n  /**\n   * When vertical (y) scrolling is enabled, DataTables will force the height of\n   * the table's viewport to the given height at all times (useful for layout).\n   * However, this can look odd when filtering data down to a small data set,\n   * and the footer is left \"floating\" further down. This parameter (when\n   * enabled) will cause DataTables to collapse the table's viewport down when\n   * the result set will fit within the given Y height.\n   */\n  \"bScrollCollapse\": false,\n  /**\n   * Configure DataTables to use server-side processing. Note that the\n   * `ajax` parameter must also be given in order to give DataTables a\n   * source to obtain the required data for each draw.\n   */\n  \"bServerSide\": false,\n  /**\n   * Enable or disable sorting of columns. Sorting of individual columns can be\n   * disabled by the `sortable` option for each column.\n   */\n  \"bSort\": true,\n  /**\n   * Enable or display DataTables' ability to sort multiple columns at the\n   * same time (activated by shift-click by the user).\n   */\n  \"bSortMulti\": true,\n  /**\n   * Allows control over whether DataTables should use the top (true) unique\n   * cell that is found for a single column, or the bottom (false - default).\n   * This is useful when using complex headers.\n   */\n  \"bSortCellsTop\": null,\n  /** Specify which row is the title row in the header. Replacement for bSortCellsTop */\n  titleRow: null,\n  /**\n   * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n   * `sorting\\_3` to the columns which are currently being sorted on. This is\n   * presented as a feature switch as it can increase processing time (while\n   * classes are removed and added) so for large data sets you might want to\n   * turn this off.\n   */\n  \"bSortClasses\": true,\n  /**\n   * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n   * used to save table display information such as pagination information,\n   * display length, filtering and sorting. As such when the end user reloads\n   * the page the display display will match what thy had previously set up.\n   */\n  \"bStateSave\": false,\n  /**\n   * This function is called when a TR element is created (and all TD child\n   * elements have been inserted), or registered if using a DOM source, allowing\n   * manipulation of the TR element (adding classes etc).\n   */\n  \"fnCreatedRow\": null,\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify any aspect you want about the created DOM.\n   */\n  \"fnDrawCallback\": null,\n  /**\n   * Identical to fnHeaderCallback() but for the table footer this function\n   * allows you to modify the table footer on every 'draw' event.\n   */\n  \"fnFooterCallback\": null,\n  /**\n   * When rendering large numbers in the information element for the table\n   * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n   * to have a comma separator for the 'thousands' units (e.g. 1 million is\n   * rendered as \"1,000,000\") to help readability for the end user. This\n   * function will override the default method DataTables uses.\n   */\n  \"fnFormatNumber\": function (toFormat) {\n    return toFormat.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.oLanguage.sThousands);\n  },\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify the header row. This can be used to calculate and\n   * display useful information about the table.\n   */\n  \"fnHeaderCallback\": null,\n  /**\n   * The information element can be used to convey information about the current\n   * state of the table. Although the internationalisation options presented by\n   * DataTables are quite capable of dealing with most customisations, there may\n   * be times where you wish to customise the string further. This callback\n   * allows you to do exactly that.\n   */\n  \"fnInfoCallback\": null,\n  /**\n   * Called when the table has been initialised. Normally DataTables will\n   * initialise sequentially and there will be no need for this function,\n   * however, this does not hold true when using external language information\n   * since that is obtained using an async XHR call.\n   */\n  \"fnInitComplete\": null,\n  /**\n   * Called at the very start of each table draw and can be used to cancel the\n   * draw by returning false, any other return (including undefined) results in\n   * the full draw occurring).\n   */\n  \"fnPreDrawCallback\": null,\n  /**\n   * This function allows you to 'post process' each row after it have been\n   * generated for each table draw, but before it is rendered on screen. This\n   * function might be used for setting the row class name etc.\n   */\n  \"fnRowCallback\": null,\n  /**\n   * Load the table state. With this function you can define from where, and how, the\n   * state of a table is loaded. By default DataTables will load from `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   */\n  \"fnStateLoadCallback\": function (settings) {\n    try {\n      return JSON.parse((settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem('DataTables_' + settings.sInstance + '_' + location.pathname));\n    } catch (e) {\n      return {};\n    }\n  },\n  /**\n   * Callback which allows modification of the saved state prior to loading that state.\n   * This callback is called when the table is loading state from the stored data, but\n   * prior to the settings object being modified by the saved state. Note that for\n   * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n   * a plug-in.\n   */\n  \"fnStateLoadParams\": null,\n  /**\n   * Callback that is called when the state has been loaded from the state saving method\n   * and the DataTables settings object has been modified as a result of the loaded state.\n   */\n  \"fnStateLoaded\": null,\n  /**\n   * Save the table state. This function allows you to define where and how the state\n   * information for the table is stored By default DataTables will use `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   */\n  \"fnStateSaveCallback\": function (settings, data) {\n    try {\n      (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem('DataTables_' + settings.sInstance + '_' + location.pathname, JSON.stringify(data));\n    } catch (e) {\n      // noop\n    }\n  },\n  /**\n   * Callback which allows modification of the state to be saved. Called when the table\n   * has changed state a new state save is required. This method allows modification of\n   * the state saving object prior to actually doing the save, including addition or\n   * other state properties or modification. Note that for plug-in authors, you should\n   * use the `stateSaveParams` event to save parameters for a plug-in.\n   */\n  \"fnStateSaveParams\": null,\n  /**\n   * Duration for which the saved state information is considered valid. After this period\n   * has elapsed the state will be returned to the default.\n   * Value is given in seconds.\n   */\n  \"iStateDuration\": 7200,\n  /**\n   * Number of rows to display on a single page when using pagination. If\n   * feature enabled (`lengthChange`) then the end user will be able to override\n   * this to a custom setting using a pop-up menu.\n   */\n  \"iDisplayLength\": 10,\n  /**\n   * Define the starting point for data display when using DataTables with\n   * pagination. Note that this parameter is the number of records, rather than\n   * the page number, so if you have 10 records per page and want to start on\n   * the third page, it should be \"20\".\n   */\n  \"iDisplayStart\": 0,\n  /**\n   * By default DataTables allows keyboard navigation of the table (sorting, paging,\n   * and filtering) by adding a `tabindex` attribute to the required elements. This\n   * allows you to tab through the controls and press the enter key to activate them.\n   * The tabindex is default 0, meaning that the tab follows the flow of the document.\n   * You can overrule this using this parameter if you wish. Use a value of -1 to\n   * disable built-in keyboard navigation.\n   */\n  \"iTabIndex\": 0,\n  /**\n   * Classes that DataTables assigns to the various components and features\n   * that it adds to the HTML table. This allows classes to be configured\n   * during initialisation in addition to through the static\n   * {@link DataTable.ext.oStdClasses} object).\n   */\n  \"oClasses\": {},\n  /**\n   * All strings that DataTables uses in the user interface that it creates\n   * are defined in this object, allowing you to modified them individually or\n   * completely replace them all as required.\n   */\n  \"oLanguage\": {\n    /**\n     * Strings that are used for WAI-ARIA labels and controls only (these are not\n     * actually visible on the page, but will be read by screenreaders, and thus\n     * must be internationalised as well).\n     */\n    \"oAria\": {\n      /**\n       * ARIA label that is added to the table headers when the column may be sorted\n       */\n      \"orderable\": \": Activate to sort\",\n      /**\n       * ARIA label that is added to the table headers when the column is currently being sorted\n       */\n      \"orderableReverse\": \": Activate to invert sorting\",\n      /**\n       * ARIA label that is added to the table headers when the column is currently being \n       * sorted and next step is to remove sorting\n       */\n      \"orderableRemove\": \": Activate to remove sorting\",\n      paginate: {\n        first: 'First',\n        last: 'Last',\n        next: 'Next',\n        previous: 'Previous',\n        number: ''\n      }\n    },\n    /**\n     * Pagination string used by DataTables for the built-in pagination\n     * control types.\n     */\n    \"oPaginate\": {\n      /**\n       * Label and character for first page button (Â«)\n       */\n      \"sFirst\": \"\\u00AB\",\n      /**\n       * Last page button (Â»)\n       */\n      \"sLast\": \"\\u00BB\",\n      /**\n       * Next page button (âº)\n       */\n      \"sNext\": \"\\u203A\",\n      /**\n       * Previous page button (â¹)\n       */\n      \"sPrevious\": \"\\u2039\"\n    },\n    /**\n     * Plural object for the data type the table is showing\n     */\n    entries: {\n      _: \"entries\",\n      1: \"entry\"\n    },\n    /**\n     * Page length options\n     */\n    lengthLabels: {\n      '-1': 'All'\n    },\n    /**\n     * This string is shown in preference to `zeroRecords` when the table is\n     * empty of data (regardless of filtering). Note that this is an optional\n     * parameter - if it is not given, the value of `zeroRecords` will be used\n     * instead (either the default or given value).\n     */\n    \"sEmptyTable\": \"No data available in table\",\n    /**\n     * This string gives information to the end user about the information\n     * that is current on display on the page. The following tokens can be\n     * used in the string and will be dynamically replaced as the table\n     * display updates. This tokens can be placed anywhere in the string, or\n     * removed as needed by the language requires:\n     *\n     * * `\\_START\\_` - Display index of the first record on the current page\n     * * `\\_END\\_` - Display index of the last record on the current page\n     * * `\\_TOTAL\\_` - Number of records in the table after filtering\n     * * `\\_MAX\\_` - Number of records in the table without filtering\n     * * `\\_PAGE\\_` - Current page number\n     * * `\\_PAGES\\_` - Total number of pages of data in the table\n     */\n    \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n    /**\n     * Display information string for when the table is empty. Typically the\n     * format of this string should match `info`.\n     */\n    \"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n    /**\n     * When a user filters the information in a table, this string is appended\n     * to the information (`info`) to give an idea of how strong the filtering\n     * is. The variable _MAX_ is dynamically updated.\n     */\n    \"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n    /**\n     * If can be useful to append extra information to the info string at times,\n     * and this variable does exactly that. This information will be appended to\n     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n     * being used) at all times.\n     */\n    \"sInfoPostFix\": \"\",\n    /**\n     * This decimal place operator is a little different from the other\n     * language options since DataTables doesn't output floating point\n     * numbers, so it won't ever use this for display of a number. Rather,\n     * what this parameter does is modify the sort methods of the table so\n     * that numbers which are in a format which has a character other than\n     * a period (`.`) as a decimal place will be sorted numerically.\n     *\n     * Note that numbers with different decimal places cannot be shown in\n     * the same table and still be sortable, the table must be consistent.\n     * However, multiple different tables on the page can use different\n     * decimal place characters.\n     */\n    \"sDecimal\": \"\",\n    /**\n     * DataTables has a build in number formatter (`formatNumber`) which is\n     * used to format large numbers that are used in the table information.\n     * By default a comma is used, but this can be trivially changed to any\n     * character you wish with this parameter.\n     */\n    \"sThousands\": \",\",\n    /**\n     * Detail the action that will be taken when the drop down menu for the\n     * pagination length option is changed. The '_MENU_' variable is replaced\n     * with a default select list of 10, 25, 50 and 100, and can be replaced\n     * with a custom select box if required.\n     */\n    \"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n    /**\n     * When using Ajax sourced data and during the first draw when DataTables is\n     * gathering the data, this message is shown in an empty row in the table to\n     * indicate to the end user the the data is being loaded. Note that this\n     * parameter is not used when loading data by server-side processing, just\n     * Ajax sourced data with client-side processing.\n     */\n    \"sLoadingRecords\": \"Loading...\",\n    /**\n     * Text which is displayed when the table is processing a user action\n     * (usually a sort command or similar).\n     */\n    \"sProcessing\": \"\",\n    /**\n     * Details the actions that will be taken when the user types into the\n     * filtering input text box. The variable \"_INPUT_\", if used in the string,\n     * is replaced with the HTML text box for the filtering input allowing\n     * control over where it appears in the string. If \"_INPUT_\" is not given\n     * then the input box is appended to the string automatically.\n     */\n    \"sSearch\": \"Search:\",\n    /**\n     * Assign a `placeholder` attribute to the search `input` element\n     *  @type string\n     *  @default \n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.searchPlaceholder\n     */\n    \"sSearchPlaceholder\": \"\",\n    /**\n     * All of the language information can be stored in a file on the\n     * server-side, which DataTables will look up if this parameter is passed.\n     * It must store the URL of the language file, which is in a JSON format,\n     * and the object has the same properties as the oLanguage object in the\n     * initialiser object (i.e. the above parameters). Please refer to one of\n     * the example language files to see how this works in action.\n     */\n    \"sUrl\": \"\",\n    /**\n     * Text shown inside the table records when the is no information to be\n     * displayed after filtering. `emptyTable` is shown when there is simply no\n     * information in the table at all (regardless of filtering).\n     */\n    \"sZeroRecords\": \"No matching records found\"\n  },\n  /** The initial data order is reversed when `desc` ordering */\n  orderDescReverse: true,\n  /**\n   * This parameter allows you to have define the global filtering state at\n   * initialisation time. As an object the `search` parameter must be\n   * defined, but all other parameters are optional. When `regex` is true,\n   * the search string will be treated as a regular expression, when false\n   * (default) it will be treated as a straight string. When `smart`\n   * DataTables will use it's smart filtering methods (to word match at\n   * any point in the data), when false this will not be done.\n   */\n  \"oSearch\": $.extend({}, DataTable.models.oSearch),\n  /**\n   * Table and control layout. This replaces the legacy `dom` option.\n   */\n  layout: {\n    topStart: 'pageLength',\n    topEnd: 'search',\n    bottomStart: 'info',\n    bottomEnd: 'paging'\n  },\n  /**\n   * Legacy DOM layout option\n   */\n  \"sDom\": null,\n  /**\n   * Search delay option. This will throttle full table searches that use the\n   * DataTables provided search input element (it does not effect calls to\n   * `dt-api search()`, providing a delay before the search is made.\n   */\n  \"searchDelay\": null,\n  /**\n   * DataTables features six different built-in options for the buttons to\n   * display for pagination control:\n   *\n   * * `numbers` - Page number buttons only\n   * * `simple` - 'Previous' and 'Next' buttons only\n   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n   */\n  \"sPaginationType\": \"\",\n  /**\n   * Enable horizontal scrolling. When a table is too wide to fit into a\n   * certain layout, or you have a large number of columns in the table, you\n   * can enable x-scrolling to show the table in a viewport, which can be\n   * scrolled. This property can be `true` which will allow the table to\n   * scroll horizontally when needed, or any CSS unit, or a number (in which\n   * case it will be treated as a pixel measurement). Setting as simply `true`\n   * is recommended.\n   */\n  \"sScrollX\": \"\",\n  /**\n   * This property can be used to force a DataTable to use more width than it\n   * might otherwise do when x-scrolling is enabled. For example if you have a\n   * table which requires to be well spaced, this parameter is useful for\n   * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n   * any CSS unit, or a number (in which case it will be treated as a pixel\n   * measurement).\n   */\n  \"sScrollXInner\": \"\",\n  /**\n   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n   * to the given height, and enable scrolling for any data which overflows the\n   * current viewport. This can be used as an alternative to paging to display\n   * a lot of data in a small area (although paging and scrolling can both be\n   * enabled at the same time). This property can be any CSS unit, or a number\n   * (in which case it will be treated as a pixel measurement).\n   */\n  \"sScrollY\": \"\",\n  /**\n   * __Deprecated__ The functionality provided by this parameter has now been\n   * superseded by that provided through `ajax`, which should be used instead.\n   *\n   * Set the HTTP method that is used to make the Ajax call for server-side\n   * processing or Ajax sourced data.\n   */\n  \"sServerMethod\": \"GET\",\n  /**\n   * DataTables makes use of renderers when displaying HTML elements for\n   * a table. These renderers can be added or modified by plug-ins to\n   * generate suitable mark-up for a site. For example the Bootstrap\n   * integration plug-in for DataTables uses a paging button renderer to\n   * display pagination buttons in the mark-up required by Bootstrap.\n   *\n   * For further information about the renderers available see\n   * DataTable.ext.renderer\n   */\n  \"renderer\": null,\n  /**\n   * Set the data property name that DataTables should use to get a row's id\n   * to set as the `id` property in the node.\n   */\n  \"rowId\": \"DT_RowId\",\n  /**\n   * Caption value\n   */\n  \"caption\": null,\n  /**\n   * For server-side processing - use the data from the DOM for the first draw\n   */\n  iDeferLoading: null,\n  /** Event listeners */\n  on: null\n};\n_fnHungarianMap(DataTable.defaults);\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n  /**\n   * Define which column(s) an order will occur on for this column. This\n   * allows a column's ordering to take multiple columns into account when\n   * doing a sort or use the data from a different column. For example first\n   * name / last name columns make sense to do a multi-column sort over the\n   * two columns.\n   */\n  \"aDataSort\": null,\n  \"iDataSort\": -1,\n  ariaTitle: '',\n  /**\n   * You can control the default ordering direction, and even alter the\n   * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n   * using this parameter.\n   */\n  \"asSorting\": ['asc', 'desc', ''],\n  /**\n   * Enable or disable filtering on the data in this column.\n   */\n  \"bSearchable\": true,\n  /**\n   * Enable or disable ordering on this column.\n   */\n  \"bSortable\": true,\n  /**\n   * Enable or disable the display of this column.\n   */\n  \"bVisible\": true,\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   */\n  \"fnCreatedCell\": null,\n  /**\n   * This property can be used to read data from any data source property,\n   * including deeply nested objects / properties. `data` can be given in a\n   * number of different ways which effect its behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object. Note that\n   *      function notation is recommended for use in `render` rather than\n   *      `data` as it is much simpler to use as a renderer.\n   * * `null` - use the original data source for the row rather than plucking\n   *   data directly from it. This action has effects on two other\n   *   initialisation options:\n   *    * `defaultContent` - When null is given as the `data` option and\n   *      `defaultContent` is specified for the column, the value defined by\n   *      `defaultContent` will be used for the cell.\n   *    * `render` - When null is used for the `data` option and the `render`\n   *      option is specified for the column, the whole data source for the\n   *      row is used for the renderer.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * `{array|object}` The data source for the row\n   *      * `{string}` The type call data requested - this will be 'set' when\n   *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n   *        when gathering data. Note that when `undefined` is given for the\n   *        type DataTables expects to get the raw data for the object back<\n   *      * `{*}` Data to set when the second parameter is 'set'.\n   *    * Return:\n   *      * The return value from the function is not required when 'set' is\n   *        the type of call, but otherwise the return is what will be used\n   *        for the data requested.\n   *\n   * Note that `data` is a getter and setter option. If you just require\n   * formatting of data for output, you will likely want to use `render` which\n   * is simply a getter and thus simpler to use.\n   *\n   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n   * name change reflects the flexibility of this property and is consistent\n   * with the naming of mRender. If 'mDataProp' is given, then it will still\n   * be used by DataTables, as it automatically maps the old name to the new\n   * if required.\n   */\n  \"mData\": null,\n  /**\n   * This property is the rendering partner to `data` and it is suggested that\n   * when you want to manipulate data for display (including filtering,\n   * sorting etc) without altering the underlying data for the table, use this\n   * property. `render` can be considered to be the the read only companion to\n   * `data` which is read / write (then as such more complex). Like `data`\n   * this option can be given in a number of different ways to effect its\n   * behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object.\n   * * `object` - use different data for the different data types requested by\n   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n   *   of the object is the data type the property refers to and the value can\n   *   defined using an integer, string or function using the same rules as\n   *   `render` normally does. Note that an `_` option _must_ be specified.\n   *   This is the default value to use if you haven't specified a value for\n   *   the data type requested by DataTables.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * {array|object} The data source for the row (based on `data`)\n   *      * {string} The type call data requested - this will be 'filter',\n   *        'display', 'type' or 'sort'.\n   *      * {array|object} The full data source for the row (not based on\n   *        `data`)\n   *    * Return:\n   *      * The return value from the function is what will be used for the\n   *        data requested.\n   */\n  \"mRender\": null,\n  /**\n   * Change the cell type created for the column - either TD cells or TH cells. This\n   * can be useful as TH cells have semantic meaning in the table body, allowing them\n   * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n   */\n  \"sCellType\": \"td\",\n  /**\n   * Class to give to each cell in this column.\n   */\n  \"sClass\": \"\",\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   * Generally you shouldn't need this!\n   */\n  \"sContentPadding\": \"\",\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because `data`\n   * is set to null, or because the data source itself is null).\n   */\n  \"sDefaultContent\": null,\n  /**\n   * This parameter is only used in DataTables' server-side processing. It can\n   * be exceptionally useful to know what columns are being displayed on the\n   * client side, and to map these to database fields. When defined, the names\n   * also allow DataTables to reorder information from the server if it comes\n   * back in an unexpected order (i.e. if you switch your columns around on the\n   * client-side, your server-side code does not also need updating).\n   */\n  \"sName\": \"\",\n  /**\n   * Defines a data source type for the ordering which can be used to read\n   * real-time information from the table (updating the internally cached\n   * version) prior to ordering. This allows ordering to occur on user\n   * editable elements such as form inputs.\n   */\n  \"sSortDataType\": \"std\",\n  /**\n   * The title of this column.\n   */\n  \"sTitle\": null,\n  /**\n   * The type allows you to specify how the data for this column will be\n   * ordered. Four types (string, numeric, date and html (which will strip\n   * HTML tags before ordering)) are currently available. Note that only date\n   * formats understood by Javascript's Date() object will be accepted as type\n   * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n   * 'numeric', 'date' or 'html' (by default). Further types can be adding\n   * through plug-ins.\n   */\n  \"sType\": null,\n  /**\n   * Defining the width of the column, this parameter may take any CSS value\n   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n   * been given a specific width through this interface ensuring that the table\n   * remains readable.\n   */\n  \"sWidth\": null\n};\n_fnHungarianMap(DataTable.defaults.column);\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n */\nDataTable.models.oSettings = {\n  /**\n   * Primary features of DataTables and their enablement state.\n   */\n  \"oFeatures\": {\n    /**\n     * Flag to say if DataTables should automatically try to calculate the\n     * optimum table and columns widths (true) or not (false).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bAutoWidth\": null,\n    /**\n     * Delay the creation of TR and TD elements until they are actually\n     * needed by a driven page draw. This can give a significant speed\n     * increase for Ajax source and Javascript source data, but makes no\n     * difference at all for DOM and server-side processing tables.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bDeferRender\": null,\n    /**\n     * Enable filtering on the table or not. Note that if this is disabled\n     * then there is no filtering at all on the table, including fnFilter.\n     * To just remove the filtering input use sDom and remove the 'f' option.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bFilter\": null,\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    \"bInfo\": true,\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    \"bLengthChange\": true,\n    /**\n     * Pagination enabled or not. Note that if this is disabled then length\n     * changing must also be disabled.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bPaginate\": null,\n    /**\n     * Processing indicator enable flag whenever DataTables is enacting a\n     * user request - typically an Ajax request for server-side processing.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bProcessing\": null,\n    /**\n     * Server-side processing enabled flag - when enabled DataTables will\n     * get all data from the server for every draw - there is no filtering,\n     * sorting or paging done on the client-side.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bServerSide\": null,\n    /**\n     * Sorting enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSort\": null,\n    /**\n     * Multi-column sorting\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSortMulti\": null,\n    /**\n     * Apply a class to the columns which are being sorted to provide a\n     * visual highlight or not. This can slow things down when enabled since\n     * there is a lot of DOM interaction.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSortClasses\": null,\n    /**\n     * State saving enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bStateSave\": null\n  },\n  /**\n   * Scrolling settings for a table.\n   */\n  \"oScroll\": {\n    /**\n     * When the table is shorter in height than sScrollY, collapse the\n     * table container down to the height of the table (when true).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bCollapse\": null,\n    /**\n     * Width of the scrollbar for the web-browser's platform. Calculated\n     * during table initialisation.\n     */\n    \"iBarWidth\": 0,\n    /**\n     * Viewport width for horizontal scrolling. Horizontal scrolling is\n     * disabled if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"sX\": null,\n    /**\n     * Width to expand the table to when using x-scrolling. Typically you\n     * should not need to use this.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @deprecated\n     */\n    \"sXInner\": null,\n    /**\n     * Viewport height for vertical scrolling. Vertical scrolling is disabled\n     * if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"sY\": null\n  },\n  /**\n   * Language information for the table.\n   */\n  \"oLanguage\": {\n    /**\n     * Information callback function. See\n     * {@link DataTable.defaults.fnInfoCallback}\n     */\n    \"fnInfoCallback\": null\n  },\n  /**\n   * Browser support parameters\n   */\n  \"oBrowser\": {\n    /**\n     * Determine if the vertical scrollbar is on the right or left of the\n     * scrolling container - needed for rtl language layout, although not\n     * all browsers move the scrollbar (Safari).\n     */\n    \"bScrollbarLeft\": false,\n    /**\n     * Browser scrollbar width\n     */\n    \"barWidth\": 0\n  },\n  \"ajax\": null,\n  /**\n   * Array referencing the nodes which are used for the features. The\n   * parameters of this object match what is allowed by sDom - i.e.\n   *   <ul>\n   *     <li>'l' - Length changing</li>\n   *     <li>'f' - Filtering input</li>\n   *     <li>'t' - The table!</li>\n   *     <li>'i' - Information</li>\n   *     <li>'p' - Pagination</li>\n   *     <li>'r' - pRocessing</li>\n   *   </ul>\n   */\n  \"aanFeatures\": [],\n  /**\n   * Store data information - see {@link DataTable.models.oRow} for detailed\n   * information.\n   */\n  \"aoData\": [],\n  /**\n   * Array of indexes which are in the current display (after filtering etc)\n   */\n  \"aiDisplay\": [],\n  /**\n   * Array of indexes for display - no filtering\n   */\n  \"aiDisplayMaster\": [],\n  /**\n   * Map of row ids to data indexes\n   */\n  \"aIds\": {},\n  /**\n   * Store information about each column that is in use\n   */\n  \"aoColumns\": [],\n  /**\n   * Store information about the table's header\n   */\n  \"aoHeader\": [],\n  /**\n   * Store information about the table's footer\n   */\n  \"aoFooter\": [],\n  /**\n   * Store the applied global search information in case we want to force a\n   * research or compare the old search to a new one.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"oPreviousSearch\": {},\n  /**\n   * Store for named searches\n   */\n  searchFixed: {},\n  /**\n   * Store the applied search for each column - see\n   * {@link DataTable.models.oSearch} for the format that is used for the\n   * filtering information for each column.\n   */\n  \"aoPreSearchCols\": [],\n  /**\n   * Sorting that is applied to the table. Note that the inner arrays are\n   * used in the following manner:\n   * <ul>\n   *   <li>Index 0 - column number</li>\n   *   <li>Index 1 - current sorting direction</li>\n   * </ul>\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aaSorting\": null,\n  /**\n   * Sorting that is always applied to the table (i.e. prefixed in front of\n   * aaSorting).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aaSortingFixed\": [],\n  /**\n   * If restoring a table - we should restore its width\n   */\n  \"sDestroyWidth\": 0,\n  /**\n   * Callback functions array for every time a row is inserted (i.e. on a draw).\n   */\n  \"aoRowCallback\": [],\n  /**\n   * Callback functions for the header on each draw.\n   */\n  \"aoHeaderCallback\": [],\n  /**\n   * Callback function for the footer on each draw.\n   */\n  \"aoFooterCallback\": [],\n  /**\n   * Array of callback functions for draw callback functions\n   */\n  \"aoDrawCallback\": [],\n  /**\n   * Array of callback functions for row created function\n   */\n  \"aoRowCreatedCallback\": [],\n  /**\n   * Callback functions for just before the table is redrawn. A return of\n   * false will be used to cancel the draw.\n   */\n  \"aoPreDrawCallback\": [],\n  /**\n   * Callback functions for when the table has been initialised.\n   */\n  \"aoInitComplete\": [],\n  /**\n   * Callbacks for modifying the settings to be stored for state saving, prior to\n   * saving state.\n   */\n  \"aoStateSaveParams\": [],\n  /**\n   * Callbacks for modifying the settings that have been stored for state saving\n   * prior to using the stored values to restore the state.\n   */\n  \"aoStateLoadParams\": [],\n  /**\n   * Callbacks for operating on the settings object once the saved state has been\n   * loaded\n   */\n  \"aoStateLoaded\": [],\n  /**\n   * Cache the table ID for quick access\n   */\n  \"sTableId\": \"\",\n  /**\n   * The TABLE node for the main table\n   */\n  \"nTable\": null,\n  /**\n   * Permanent ref to the thead element\n   */\n  \"nTHead\": null,\n  /**\n   * Permanent ref to the tfoot element - if it exists\n   */\n  \"nTFoot\": null,\n  /**\n   * Permanent ref to the tbody element\n   */\n  \"nTBody\": null,\n  /**\n   * Cache the wrapper node (contains all DataTables controlled elements)\n   */\n  \"nTableWrapper\": null,\n  /**\n   * Indicate if all required information has been read in\n   */\n  \"bInitialised\": false,\n  /**\n   * Information about open rows. Each object in the array has the parameters\n   * 'nTr' and 'nParent'\n   */\n  \"aoOpenRows\": [],\n  /**\n   * Dictate the positioning of DataTables' control elements - see\n   * {@link DataTable.model.oInit.sDom}.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sDom\": null,\n  /**\n   * Search delay (in mS)\n   */\n  \"searchDelay\": null,\n  /**\n   * Which type of pagination should be used.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sPaginationType\": \"two_button\",\n  /**\n   * Number of paging controls on the page. Only used for backwards compatibility\n   */\n  pagingControls: 0,\n  /**\n   * The state duration (for `stateSave`) in seconds.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"iStateDuration\": 0,\n  /**\n   * Array of callback functions for state saving. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the JSON string to save that has been thus far created. Returns\n   *       a JSON string to be inserted into a json object\n   *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   */\n  \"aoStateSave\": [],\n  /**\n   * Array of callback functions for state loading. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the object stored. May return false to cancel state loading</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   */\n  \"aoStateLoad\": [],\n  /**\n   * State that was saved. Useful for back reference\n   */\n  \"oSavedState\": null,\n  /**\n   * State that was loaded. Useful for back reference\n   */\n  \"oLoadedState\": null,\n  /**\n   * Note if draw should be blocked while getting data\n   */\n  \"bAjaxDataGet\": true,\n  /**\n   * The last jQuery XHR object that was used for server-side data gathering.\n   * This can be used for working with the XHR information in one of the\n   * callbacks\n   */\n  \"jqXHR\": null,\n  /**\n   * JSON returned from the server in the last Ajax request\n   */\n  \"json\": undefined,\n  /**\n   * Data submitted as part of the last Ajax request\n   */\n  \"oAjaxData\": undefined,\n  /**\n   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n   * required).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sServerMethod\": null,\n  /**\n   * Format numbers for display.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"fnFormatNumber\": null,\n  /**\n   * List of options that can be used for the user selectable length menu.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aLengthMenu\": null,\n  /**\n   * Counter for the draws that the table does. Also used as a tracker for\n   * server-side processing\n   */\n  \"iDraw\": 0,\n  /**\n   * Indicate if a redraw is being done - useful for Ajax\n   */\n  \"bDrawing\": false,\n  /**\n   * Draw index (iDraw) of the last error when parsing the returned data\n   */\n  \"iDrawError\": -1,\n  /**\n   * Paging display length\n   */\n  \"_iDisplayLength\": 10,\n  /**\n   * Paging start point - aiDisplay index\n   */\n  \"_iDisplayStart\": 0,\n  /**\n   * Server-side processing - number of records in the result set\n   * (i.e. before filtering), Use fnRecordsTotal rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   */\n  \"_iRecordsTotal\": 0,\n  /**\n   * Server-side processing - number of records in the current display set\n   * (i.e. after filtering). Use fnRecordsDisplay rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   */\n  \"_iRecordsDisplay\": 0,\n  /**\n   * The classes to use for the table\n   */\n  \"oClasses\": {},\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if filtering has been done in the draw. Deprecated in favour of\n   * events.\n   *  @deprecated\n   */\n  \"bFiltered\": false,\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if sorting has been done in the draw. Deprecated in favour of\n   * events.\n   *  @deprecated\n   */\n  \"bSorted\": false,\n  /**\n   * Indicate that if multiple rows are in the header and there is more than\n   * one unique cell per column. Replaced by titleRow\n   */\n  \"bSortCellsTop\": null,\n  /**\n   * Initialisation object that is used for the table\n   */\n  \"oInit\": null,\n  /**\n   * Destroy callback functions - for plug-ins to attach themselves to the\n   * destroy so they can clean up markup and events.\n   */\n  \"aoDestroyCallback\": [],\n  /**\n   * Get the number of records in the current record set, before filtering\n   */\n  \"fnRecordsTotal\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;\n  },\n  /**\n   * Get the number of records in the current record set, after filtering\n   */\n  \"fnRecordsDisplay\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsDisplay * 1 : this.aiDisplay.length;\n  },\n  /**\n   * Get the display end point - aiDisplay index\n   */\n  \"fnDisplayEnd\": function () {\n    var len = this._iDisplayLength,\n      start = this._iDisplayStart,\n      calc = start + len,\n      records = this.aiDisplay.length,\n      features = this.oFeatures,\n      paginate = features.bPaginate;\n    if (features.bServerSide) {\n      return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay);\n    } else {\n      return !paginate || calc > records || len === -1 ? records : calc;\n    }\n  },\n  /**\n   * The DataTables object for this table\n   */\n  \"oInstance\": null,\n  /**\n   * Unique identifier for each instance of the DataTables object. If there\n   * is an ID on the table node, then it takes that value, otherwise an\n   * incrementing internal counter is used.\n   */\n  \"sInstance\": null,\n  /**\n   * tabindex attribute value that is added to DataTables control elements, allowing\n   * keyboard navigation of the table and its controls.\n   */\n  \"iTabIndex\": 0,\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollHead\": null,\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollFoot\": null,\n  /**\n   * Last applied sort\n   */\n  \"aLastSort\": [],\n  /**\n   * Stored plug-in instances\n   */\n  \"oPlugins\": {},\n  /**\n   * Function used to get a row's id from the row's data\n   */\n  \"rowIdFn\": null,\n  /**\n   * Data location where to store a row's id\n   */\n  \"rowId\": null,\n  caption: '',\n  captionNode: null,\n  colgroup: null,\n  /** Delay loading of data */\n  deferLoading: null,\n  /** Allow auto type detection */\n  typeDetect: true,\n  /** ResizeObserver for the container div */\n  resizeObserver: null,\n  /** Keep a record of the last size of the container, so we can skip duplicates */\n  containerWidth: -1,\n  /** Reverse the initial order of the data set on desc ordering */\n  orderDescReverse: null,\n  /** Show / hide ordering indicators in headers */\n  orderIndicators: true,\n  /** Default ordering listener */\n  orderHandler: true,\n  /** Title row indicator */\n  titleRow: null\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\nvar extPagination = DataTable.ext.pager;\n\n// Paging buttons configuration\n$.extend(extPagination, {\n  simple: function () {\n    return ['previous', 'next'];\n  },\n  full: function () {\n    return ['first', 'previous', 'next', 'last'];\n  },\n  numbers: function () {\n    return ['numbers'];\n  },\n  simple_numbers: function () {\n    return ['previous', 'numbers', 'next'];\n  },\n  full_numbers: function () {\n    return ['first', 'previous', 'numbers', 'next', 'last'];\n  },\n  first_last: function () {\n    return ['first', 'last'];\n  },\n  first_last_numbers: function () {\n    return ['first', 'numbers', 'last'];\n  },\n  // For testing and plug-ins to use\n  _numbers: _pagingNumbers,\n  // Number of number buttons - legacy, use `numbers` option for paging feature\n  numbers_length: 7\n});\n$.extend(true, DataTable.ext.renderer, {\n  pagingButton: {\n    _: function (settings, buttonType, content, active, disabled) {\n      var classes = settings.oClasses.paging;\n      var btnClasses = [classes.button];\n      var btn;\n      if (active) {\n        btnClasses.push(classes.active);\n      }\n      if (disabled) {\n        btnClasses.push(classes.disabled);\n      }\n      if (buttonType === 'ellipsis') {\n        btn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n      } else {\n        btn = $('<button>', {\n          class: btnClasses.join(' '),\n          role: 'link',\n          type: 'button'\n        }).html(content);\n      }\n      return {\n        display: btn,\n        clicker: btn\n      };\n    }\n  },\n  pagingContainer: {\n    _: function (settings, buttons) {\n      // No wrapping element - just append directly to the host\n      return buttons;\n    }\n  }\n});\n\n// Common function to remove new lines, strip HTML and diacritic control\nvar _filterString = function (stripHtml, normalize) {\n  return function (str) {\n    if (_empty(str) || typeof str !== 'string') {\n      return str;\n    }\n    str = str.replace(_re_new_lines, \" \");\n    if (stripHtml) {\n      str = _stripHtml(str);\n    }\n    if (normalize) {\n      str = _normalize(str, false);\n    }\n    return str;\n  };\n};\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\n/**\n * Common logic for moment, luxon or a date action.\n *\n * Happens after __mldObj, so don't need to call `resolveWindowsLibs` again\n */\nfunction __mld(dtLib, momentFn, luxonFn, dateFn, arg1) {\n  if (__moment) {\n    return dtLib[momentFn](arg1);\n  } else if (__luxon) {\n    return dtLib[luxonFn](arg1);\n  }\n  return dateFn ? dtLib[dateFn](arg1) : dtLib;\n}\nvar __mlWarning = false;\nvar __luxon; // Can be assigned in DateTable.use()\nvar __moment; // Can be assigned in DateTable.use()\n\n/**\n * \n */\nfunction resolveWindowLibs() {\n  if (window.luxon && !__luxon) {\n    __luxon = window.luxon;\n  }\n  if (window.moment && !__moment) {\n    __moment = window.moment;\n  }\n}\nfunction __mldObj(d, format, locale) {\n  var dt;\n  resolveWindowLibs();\n  if (__moment) {\n    dt = __moment.utc(d, format, locale, true);\n    if (!dt.isValid()) {\n      return null;\n    }\n  } else if (__luxon) {\n    dt = format && typeof d === 'string' ? __luxon.DateTime.fromFormat(d, format) : __luxon.DateTime.fromISO(d);\n    if (!dt.isValid) {\n      return null;\n    }\n    dt = dt.setLocale(locale);\n  } else if (!format) {\n    // No format given, must be ISO\n    dt = new Date(d);\n  } else {\n    if (!__mlWarning) {\n      alert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n    }\n    __mlWarning = true;\n  }\n  return dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper(localeString) {\n  return function (from, to, locale, def) {\n    // Luxon and Moment support\n    // Argument shifting\n    if (arguments.length === 0) {\n      locale = 'en';\n      to = null; // means toLocaleString\n      from = null; // means iso8601\n    } else if (arguments.length === 1) {\n      locale = 'en';\n      to = from;\n      from = null;\n    } else if (arguments.length === 2) {\n      locale = to;\n      to = from;\n      from = null;\n    }\n    var typeName = 'datetime' + (to ? '-' + to : '');\n\n    // Add type detection and sorting specific to this date format - we need to be able to identify\n    // date type columns as such, rather than as numbers in extensions. Hence the need for this.\n    if (!DataTable.ext.type.order[typeName + '-pre']) {\n      DataTable.type(typeName, {\n        detect: function (d) {\n          // The renderer will give the value to type detect as the type!\n          return d === typeName ? typeName : false;\n        },\n        order: {\n          pre: function (d) {\n            // The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n            // `valueOf` which gives milliseconds epoch\n            return d.valueOf();\n          }\n        },\n        className: 'dt-right'\n      });\n    }\n    return function (d, type) {\n      // Allow for a default value\n      if (d === null || d === undefined) {\n        if (def === '--now') {\n          // We treat everything as UTC further down, so no changes are\n          // made, as such need to get the local date / time as if it were\n          // UTC\n          var local = new Date();\n          d = new Date(Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds()));\n        } else {\n          d = '';\n        }\n      }\n      if (type === 'type') {\n        // Typing uses the type name for fast matching\n        return typeName;\n      }\n      if (d === '') {\n        return type !== 'sort' ? '' : __mldObj('0000-01-01 00:00:00', null, locale);\n      }\n\n      // Shortcut. If `from` and `to` are the same, we are using the renderer to\n      // format for ordering, not display - its already in the display format.\n      if (to !== null && from === to && type !== 'sort' && type !== 'type' && !(d instanceof Date)) {\n        return d;\n      }\n      var dt = __mldObj(d, from, locale);\n      if (dt === null) {\n        return d;\n      }\n      if (type === 'sort') {\n        return dt;\n      }\n      var formatted = to === null ? __mld(dt, 'toDate', 'toJSDate', '')[localeString]() : __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n      // XSS protection\n      return type === 'display' ? _escapeHtml(formatted) : formatted;\n    };\n  };\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\nif (window.Intl !== undefined) {\n  try {\n    var num = new Intl.NumberFormat().formatToParts(100000.1);\n    for (var i = 0; i < num.length; i++) {\n      if (num[i].type === 'group') {\n        __thousands = num[i].value;\n      } else if (num[i].type === 'decimal') {\n        __decimal = num[i].value;\n      }\n    }\n  } catch (e) {\n    // noop\n  }\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function (format, locale) {\n  var typeName = 'datetime-' + format;\n  if (!locale) {\n    locale = 'en';\n  }\n  if (!DataTable.ext.type.order[typeName]) {\n    DataTable.type(typeName, {\n      detect: function (d) {\n        var dt = __mldObj(d, format, locale);\n        return d === '' || dt ? typeName : false;\n      },\n      order: {\n        pre: function (d) {\n          return __mldObj(d, format, locale) || 0;\n        }\n      },\n      className: 'dt-right'\n    });\n  }\n};\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\n * This renderer has three overloads:\n *   * 1 parameter:\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n *   * 2 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to. Assumes `en` locale\n *   * 3 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to\n *     * `string` - Locale\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n  date: __mlHelper('toLocaleDateString'),\n  datetime: __mlHelper('toLocaleString'),\n  time: __mlHelper('toLocaleTimeString'),\n  number: function (thousands, decimal, precision, prefix, postfix) {\n    // Auto locale detection\n    if (thousands === null || thousands === undefined) {\n      thousands = __thousands;\n    }\n    if (decimal === null || decimal === undefined) {\n      decimal = __decimal;\n    }\n    return {\n      display: function (d) {\n        if (typeof d !== 'number' && typeof d !== 'string') {\n          return d;\n        }\n        if (d === '' || d === null) {\n          return d;\n        }\n        var negative = d < 0 ? '-' : '';\n        var flo = parseFloat(d);\n        var abs = Math.abs(flo);\n\n        // Scientific notation for large and small numbers\n        if (abs >= 100000000000 || abs < 0.0001 && abs !== 0) {\n          var exp = flo.toExponential(precision).split(/e\\+?/);\n          return exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n        }\n\n        // If NaN then there isn't much formatting that we can do - just\n        // return immediately, escaping any HTML (this was supposed to\n        // be a number after all)\n        if (isNaN(flo)) {\n          return _escapeHtml(d);\n        }\n        flo = flo.toFixed(precision);\n        d = Math.abs(flo);\n        var intPart = parseInt(d, 10);\n        var floatPart = precision ? decimal + (d - intPart).toFixed(precision).substring(2) : '';\n\n        // If zero, then can't have a negative prefix\n        if (intPart === 0 && parseFloat(floatPart) === 0) {\n          negative = '';\n        }\n        return negative + (prefix || '') + intPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands) + floatPart + (postfix || '');\n      }\n    };\n  },\n  text: function () {\n    return {\n      display: _escapeHtml,\n      filter: _escapeHtml\n    };\n  }\n};\nvar _extTypes = DataTable.ext.type;\n\n// Get / set type\nDataTable.type = function (name, prop, val) {\n  if (!prop) {\n    return {\n      className: _extTypes.className[name],\n      detect: _extTypes.detect.find(function (fn) {\n        return fn._name === name;\n      }),\n      order: {\n        pre: _extTypes.order[name + '-pre'],\n        asc: _extTypes.order[name + '-asc'],\n        desc: _extTypes.order[name + '-desc']\n      },\n      render: _extTypes.render[name],\n      search: _extTypes.search[name]\n    };\n  }\n  var setProp = function (prop, propVal) {\n    _extTypes[prop][name] = propVal;\n  };\n  var setDetect = function (detect) {\n    // `detect` can be a function or an object - we set a name\n    // property for either - that is used for the detection\n    Object.defineProperty(detect, \"_name\", {\n      value: name\n    });\n    var idx = _extTypes.detect.findIndex(function (item) {\n      return item._name === name;\n    });\n    if (idx === -1) {\n      _extTypes.detect.unshift(detect);\n    } else {\n      _extTypes.detect.splice(idx, 1, detect);\n    }\n  };\n  var setOrder = function (obj) {\n    _extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n    _extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n    _extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n  };\n\n  // prop is optional\n  if (val === undefined) {\n    val = prop;\n    prop = null;\n  }\n  if (prop === 'className') {\n    setProp('className', val);\n  } else if (prop === 'detect') {\n    setDetect(val);\n  } else if (prop === 'order') {\n    setOrder(val);\n  } else if (prop === 'render') {\n    setProp('render', val);\n  } else if (prop === 'search') {\n    setProp('search', val);\n  } else if (!prop) {\n    if (val.className) {\n      setProp('className', val.className);\n    }\n    if (val.detect !== undefined) {\n      setDetect(val.detect);\n    }\n    if (val.order) {\n      setOrder(val.order);\n    }\n    if (val.render !== undefined) {\n      setProp('render', val.render);\n    }\n    if (val.search !== undefined) {\n      setProp('search', val.search);\n    }\n  }\n};\n\n// Get a list of types\nDataTable.types = function () {\n  return _extTypes.detect.map(function (fn) {\n    return fn._name;\n  });\n};\nvar __diacriticSort = function (a, b) {\n  a = a !== null && a !== undefined ? a.toString().toLowerCase() : '';\n  b = b !== null && b !== undefined ? b.toString().toLowerCase() : '';\n\n  // Checked for `navigator.languages` support in `oneOf` so this code can't execute in old\n  // Safari and thus can disable this check\n  // eslint-disable-next-line compat/compat\n  return a.localeCompare(b, navigator.languages[0] || navigator.language, {\n    numeric: true,\n    ignorePunctuation: true\n  });\n};\nvar __diacriticHtmlSort = function (a, b) {\n  a = _stripHtml(a);\n  b = _stripHtml(b);\n  return __diacriticSort(a, b);\n};\n\n//\n// Built in data types\n//\n\nDataTable.type('string', {\n  detect: function () {\n    return 'string';\n  },\n  order: {\n    pre: function (a) {\n      // This is a little complex, but faster than always calling toString,\n      // http://jsperf.com/tostring-v-check\n      return _empty(a) && typeof a !== 'boolean' ? '' : typeof a === 'string' ? a.toLowerCase() : !a.toString ? '' : a.toString();\n    }\n  },\n  search: _filterString(false, true)\n});\nDataTable.type('string-utf8', {\n  detect: {\n    allOf: function (d) {\n      return true;\n    },\n    oneOf: function (d) {\n      // At least one data point must contain a non-ASCII character\n      // This line will also check if navigator.languages is supported or not. If not (Safari 10.0-)\n      // this data type won't be supported.\n      // eslint-disable-next-line compat/compat\n      return !_empty(d) && navigator.languages && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n    }\n  },\n  order: {\n    asc: __diacriticSort,\n    desc: function (a, b) {\n      return __diacriticSort(a, b) * -1;\n    }\n  },\n  search: _filterString(false, true)\n});\nDataTable.type('html', {\n  detect: {\n    allOf: function (d) {\n      return _empty(d) || typeof d === 'string' && d.indexOf('<') !== -1;\n    },\n    oneOf: function (d) {\n      // At least one data point must contain a `<`\n      return !_empty(d) && typeof d === 'string' && d.indexOf('<') !== -1;\n    }\n  },\n  order: {\n    pre: function (a) {\n      return _empty(a) ? '' : a.replace ? _stripHtml(a).trim().toLowerCase() : a + '';\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('html-utf8', {\n  detect: {\n    allOf: function (d) {\n      return _empty(d) || typeof d === 'string' && d.indexOf('<') !== -1;\n    },\n    oneOf: function (d) {\n      // At least one data point must contain a `<` and a non-ASCII character\n      // eslint-disable-next-line compat/compat\n      return navigator.languages && !_empty(d) && typeof d === 'string' && d.indexOf('<') !== -1 && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n    }\n  },\n  order: {\n    asc: __diacriticHtmlSort,\n    desc: function (a, b) {\n      return __diacriticHtmlSort(a, b) * -1;\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('date', {\n  className: 'dt-type-date',\n  detect: {\n    allOf: function (d) {\n      // V8 tries _very_ hard to make a string passed into `Date.parse()`\n      // valid, so we need to use a regex to restrict date formats. Use a\n      // plug-in for anything other than ISO8601 style strings\n      if (d && !(d instanceof Date) && !_re_date.test(d)) {\n        return null;\n      }\n      var parsed = Date.parse(d);\n      return parsed !== null && !isNaN(parsed) || _empty(d);\n    },\n    oneOf: function (d) {\n      // At least one entry must be a date or a string with a date\n      return d instanceof Date || typeof d === 'string' && _re_date.test(d);\n    }\n  },\n  order: {\n    pre: function (d) {\n      var ts = Date.parse(d);\n      return isNaN(ts) ? -Infinity : ts;\n    }\n  }\n});\nDataTable.type('html-num-fmt', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, true, false);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, true, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_html, _re_formatted_numeric);\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('html-num', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, false, true);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, false, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_html);\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('num-fmt', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, true, true);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, true, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_formatted_numeric);\n    }\n  }\n});\nDataTable.type('num', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, false, true);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, false, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp);\n    }\n  }\n});\nvar __numericReplace = function (d, decimalPlace, re1, re2) {\n  if (d !== 0 && (!d || d === '-')) {\n    return -Infinity;\n  }\n  var type = typeof d;\n  if (type === 'number' || type === 'bigint') {\n    return d;\n  }\n\n  // If a decimal place other than `.` is used, it needs to be given to the\n  // function so we can detect it and replace with a `.` which is the only\n  // decimal place Javascript recognises - it is not locale aware.\n  if (decimalPlace) {\n    d = _numToDecimal(d, decimalPlace);\n  }\n  if (d.replace) {\n    if (re1) {\n      d = d.replace(re1, '');\n    }\n    if (re2) {\n      d = d.replace(re2, '');\n    }\n  }\n  return d * 1;\n};\n$.extend(true, DataTable.ext.renderer, {\n  footer: {\n    _: function (settings, cell, classes) {\n      cell.addClass(classes.tfoot.cell);\n    }\n  },\n  header: {\n    _: function (settings, cell, classes) {\n      cell.addClass(classes.thead.cell);\n      if (!settings.oFeatures.bSort) {\n        cell.addClass(classes.order.none);\n      }\n      var titleRow = settings.titleRow;\n      var headerRows = cell.closest('thead').find('tr');\n      var rowIdx = cell.parent().index();\n\n      // Conditions to not apply the ordering icons\n      if (\n      // Cells and rows which have the attribute to disable the icons\n      cell.attr('data-dt-order') === 'disable' || cell.parent().attr('data-dt-order') === 'disable' ||\n      // titleRow support, for defining a specific row in the header\n      titleRow === true && rowIdx !== 0 || titleRow === false && rowIdx !== headerRows.length - 1 || typeof titleRow === 'number' && rowIdx !== titleRow) {\n        return;\n      }\n\n      // No additional mark-up required\n      // Attach a sort listener to update on sort - note that using the\n      // `DT` namespace will allow the event to be removed automatically\n      // on destroy, while the `dt` namespaced event is the one we are\n      // listening for\n      $(settings.nTable).on('order.dt.DT column-visibility.dt.DT', function (e, ctx, column) {\n        if (settings !== ctx) {\n          // need to check this this is the host\n          return; // table, not a nested one\n        }\n        var sorting = ctx.sortDetails;\n        if (!sorting) {\n          return;\n        }\n        var orderedColumns = _pluck(sorting, 'col');\n\n        // This handler is only needed on column visibility if the column is part of the\n        // ordering. If it isn't, then we can bail out to save performance. It could be a\n        // separate event handler, but this is a balance between code reuse / size and performance\n        // console.log(e, e.name, column, orderedColumns, orderedColumns.includes(column))\n        if (e.type === 'column-visibility' && !orderedColumns.includes(column)) {\n          return;\n        }\n        var i;\n        var orderClasses = classes.order;\n        var columns = ctx.api.columns(cell);\n        var col = settings.aoColumns[columns.flatten()[0]];\n        var orderable = columns.orderable().includes(true);\n        var ariaType = '';\n        var indexes = columns.indexes();\n        var sortDirs = columns.orderable(true).flatten();\n        var tabIndex = settings.iTabIndex;\n        var canOrder = ctx.orderHandler && orderable;\n        cell.removeClass(orderClasses.isAsc + ' ' + orderClasses.isDesc).toggleClass(orderClasses.none, !orderable).toggleClass(orderClasses.canAsc, canOrder && sortDirs.includes('asc')).toggleClass(orderClasses.canDesc, canOrder && sortDirs.includes('desc'));\n\n        // Determine if all of the columns that this cell covers are included in the\n        // current ordering\n        var isOrdering = true;\n        for (i = 0; i < indexes.length; i++) {\n          if (!orderedColumns.includes(indexes[i])) {\n            isOrdering = false;\n          }\n        }\n        if (isOrdering) {\n          // Get the ordering direction for the columns under this cell\n          // Note that it is possible for a cell to be asc and desc sorting\n          // (column spanning cells)\n          var orderDirs = columns.order();\n          cell.addClass(orderDirs.includes('asc') ? orderClasses.isAsc : '' + orderDirs.includes('desc') ? orderClasses.isDesc : '');\n        }\n\n        // Find the first visible column that has ordering applied to it - it get's\n        // the aria information, as the ARIA spec says that only one column should\n        // be marked with aria-sort\n        var firstVis = -1; // column index\n\n        for (i = 0; i < orderedColumns.length; i++) {\n          if (settings.aoColumns[orderedColumns[i]].bVisible) {\n            firstVis = orderedColumns[i];\n            break;\n          }\n        }\n        if (indexes[0] == firstVis) {\n          var firstSort = sorting[0];\n          var sortOrder = col.asSorting;\n          cell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\n\n          // Determine if the next click will remove sorting or change the sort\n          ariaType = !sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n        } else {\n          cell.removeAttr('aria-sort');\n        }\n\n        // Make the headers tab-able for keyboard navigation\n        if (orderable) {\n          var orderSpan = cell.find('.dt-column-order');\n          orderSpan.attr('role', 'button').attr('aria-label', orderable ? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType) : col.ariaTitle);\n          if (tabIndex !== -1) {\n            orderSpan.attr('tabindex', tabIndex);\n          }\n        }\n      });\n    }\n  },\n  layout: {\n    _: function (settings, container, items) {\n      var classes = settings.oClasses.layout;\n      var row = $('<div/>').attr('id', items.id || null).addClass(items.className || classes.row).appendTo(container);\n      DataTable.ext.renderer.layout._forLayoutRow(items, function (key, val) {\n        if (key === 'id' || key === 'className') {\n          return;\n        }\n        var klass = '';\n        if (val.table) {\n          row.addClass(classes.tableRow);\n          klass += classes.tableCell + ' ';\n        }\n        if (key === 'start') {\n          klass += classes.start;\n        } else if (key === 'end') {\n          klass += classes.end;\n        } else {\n          klass += classes.full;\n        }\n        $('<div/>').attr({\n          id: val.id || null,\n          \"class\": val.className ? val.className : classes.cell + ' ' + klass\n        }).append(val.contents).appendTo(row);\n      });\n    },\n    // Shared for use by the styling frameworks\n    _forLayoutRow: function (items, fn) {\n      // As we are inserting dom elements, we need start / end in a\n      // specific order, this function is used for sorting the layout\n      // keys.\n      var layoutEnum = function (x) {\n        switch (x) {\n          case '':\n            return 0;\n          case 'start':\n            return 1;\n          case 'end':\n            return 2;\n          default:\n            return 3;\n        }\n      };\n      Object.keys(items).sort(function (a, b) {\n        return layoutEnum(a) - layoutEnum(b);\n      }).forEach(function (key) {\n        fn(key, items[key]);\n      });\n    }\n  }\n});\nDataTable.feature = {};\n\n// Third parameter is internal only!\nDataTable.feature.register = function (name, cb, legacy) {\n  DataTable.ext.features[name] = cb;\n  if (legacy) {\n    _ext.feature.push({\n      cFeature: legacy,\n      fnInit: cb\n    });\n  }\n};\nfunction _divProp(el, prop, val) {\n  if (val) {\n    el[prop] = val;\n  }\n}\nDataTable.feature.register('div', function (settings, opts) {\n  var n = $('<div>')[0];\n  if (opts) {\n    _divProp(n, 'className', opts.className);\n    _divProp(n, 'id', opts.id);\n    _divProp(n, 'innerHTML', opts.html);\n    _divProp(n, 'textContent', opts.text);\n  }\n  return n;\n});\nDataTable.feature.register('info', function (settings, opts) {\n  // For compatibility with the legacy `info` top level option\n  if (!settings.oFeatures.bInfo) {\n    return null;\n  }\n  var lang = settings.oLanguage,\n    tid = settings.sTableId,\n    n = $('<div/>', {\n      'class': settings.oClasses.info.container\n    });\n  opts = $.extend({\n    callback: lang.fnInfoCallback,\n    empty: lang.sInfoEmpty,\n    postfix: lang.sInfoPostFix,\n    search: lang.sInfoFiltered,\n    text: lang.sInfo\n  }, opts);\n\n  // Update display on each draw\n  settings.aoDrawCallback.push(function (s) {\n    _fnUpdateInfo(s, opts, n);\n  });\n\n  // For the first info display in the table, we add a callback and aria information.\n  if (!settings._infoEl) {\n    n.attr({\n      'aria-live': 'polite',\n      id: tid + '_info',\n      role: 'status'\n    });\n\n    // Table is described by our info div\n    $(settings.nTable).attr('aria-describedby', tid + '_info');\n    settings._infoEl = n;\n  }\n  return n;\n}, 'i');\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo(settings, opts, node) {\n  var start = settings._iDisplayStart + 1,\n    end = settings.fnDisplayEnd(),\n    max = settings.fnRecordsTotal(),\n    total = settings.fnRecordsDisplay(),\n    out = total ? opts.text : opts.empty;\n  if (total !== max) {\n    // Record set after filtering\n    out += ' ' + opts.search;\n  }\n\n  // Convert the macros\n  out += opts.postfix;\n  out = _fnMacros(settings, out);\n  if (opts.callback) {\n    out = opts.callback.call(settings.oInstance, settings, start, end, max, total, out);\n  }\n  node.html(out);\n  _fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n}\nvar __searchCounter = 0;\n\n// opts\n// - text\n// - placeholder\nDataTable.feature.register('search', function (settings, opts) {\n  // Don't show the input if filtering isn't available on the table\n  if (!settings.oFeatures.bFilter) {\n    return null;\n  }\n  var classes = settings.oClasses.search;\n  var tableId = settings.sTableId;\n  var language = settings.oLanguage;\n  var previousSearch = settings.oPreviousSearch;\n  var input = '<input type=\"search\" class=\"' + classes.input + '\"/>';\n  opts = $.extend({\n    placeholder: language.sSearchPlaceholder,\n    processing: false,\n    text: language.sSearch\n  }, opts);\n\n  // The _INPUT_ is optional - is appended if not present\n  if (opts.text.indexOf('_INPUT_') === -1) {\n    opts.text += '_INPUT_';\n  }\n  opts.text = _fnMacros(settings, opts.text);\n\n  // We can put the <input> outside of the label if it is at the start or end\n  // which helps improve accessability (not all screen readers like implicit\n  // for elements).\n  var end = opts.text.match(/_INPUT_$/);\n  var start = opts.text.match(/^_INPUT_/);\n  var removed = opts.text.replace(/_INPUT_/, '');\n  var str = '<label>' + opts.text + '</label>';\n  if (start) {\n    str = '_INPUT_<label>' + removed + '</label>';\n  } else if (end) {\n    str = '<label>' + removed + '</label>_INPUT_';\n  }\n  var filter = $('<div>').addClass(classes.container).append(str.replace(/_INPUT_/, input));\n\n  // add for and id to label and input\n  filter.find('label').attr('for', 'dt-search-' + __searchCounter);\n  filter.find('input').attr('id', 'dt-search-' + __searchCounter);\n  __searchCounter++;\n  var searchFn = function (event) {\n    var val = this.value;\n    if (previousSearch.return && event.key !== \"Enter\") {\n      return;\n    }\n\n    /* Now do the filter */\n    if (val != previousSearch.search) {\n      _fnProcessingRun(settings, opts.processing, function () {\n        previousSearch.search = val;\n        _fnFilterComplete(settings, previousSearch);\n\n        // Need to redraw, without resorting\n        settings._iDisplayStart = 0;\n        _fnDraw(settings);\n      });\n    }\n  };\n  var searchDelay = settings.searchDelay !== null ? settings.searchDelay : 0;\n  var jqFilter = $('input', filter).val(previousSearch.search).attr('placeholder', opts.placeholder).on('keyup.DT search.DT input.DT paste.DT cut.DT', searchDelay ? DataTable.util.debounce(searchFn, searchDelay) : searchFn).on('mouseup.DT', function (e) {\n    // Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n    // on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n    // checks the value to see if it has changed. In other browsers it won't have.\n    setTimeout(function () {\n      searchFn.call(jqFilter[0], e);\n    }, 10);\n  }).on('keypress.DT', function (e) {\n    /* Prevent form submission */\n    if (e.keyCode == 13) {\n      return false;\n    }\n  }).attr('aria-controls', tableId);\n\n  // Update the input elements whenever the table is filtered\n  $(settings.nTable).on('search.dt.DT', function (ev, s) {\n    if (settings === s && jqFilter[0] !== document.activeElement) {\n      jqFilter.val(typeof previousSearch.search !== 'function' ? previousSearch.search : '');\n    }\n  });\n  return filter;\n}, 'f');\n\n// opts\n// - type - button configuration\n// - buttons - number of buttons to show - must be odd\nDataTable.feature.register('paging', function (settings, opts) {\n  // Don't show the paging input if the table doesn't have paging enabled\n  if (!settings.oFeatures.bPaginate) {\n    return null;\n  }\n  opts = $.extend({\n    buttons: DataTable.ext.pager.numbers_length,\n    type: settings.sPaginationType,\n    boundaryNumbers: true,\n    firstLast: true,\n    previousNext: true,\n    numbers: true\n  }, opts);\n  var host = $('<div/>').addClass(settings.oClasses.paging.container + (opts.type ? ' paging_' + opts.type : '')).append($('<nav>').attr('aria-label', 'pagination').addClass(settings.oClasses.paging.nav));\n  var draw = function () {\n    _pagingDraw(settings, host.children(), opts);\n  };\n  settings.aoDrawCallback.push(draw);\n\n  // Responsive redraw of paging control\n  $(settings.nTable).on('column-sizing.dt.DT', draw);\n  return host;\n}, 'p');\n\n/**\n * Dynamically create the button type array based on the configuration options.\n * This will only happen if the paging type is not defined.\n */\nfunction _pagingDynamic(opts) {\n  var out = [];\n  if (opts.numbers) {\n    out.push('numbers');\n  }\n  if (opts.previousNext) {\n    out.unshift('previous');\n    out.push('next');\n  }\n  if (opts.firstLast) {\n    out.unshift('first');\n    out.push('last');\n  }\n  return out;\n}\nfunction _pagingDraw(settings, host, opts) {\n  if (!settings._bInitComplete) {\n    return;\n  }\n  var plugin = opts.type ? DataTable.ext.pager[opts.type] : _pagingDynamic,\n    aria = settings.oLanguage.oAria.paginate || {},\n    start = settings._iDisplayStart,\n    len = settings._iDisplayLength,\n    visRecords = settings.fnRecordsDisplay(),\n    all = len === -1,\n    page = all ? 0 : Math.ceil(start / len),\n    pages = all ? 1 : Math.ceil(visRecords / len),\n    buttons = [],\n    buttonEls = [],\n    buttonsNested = plugin(opts).map(function (val) {\n      return val === 'numbers' ? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers) : val;\n    });\n\n  // .flat() would be better, but not supported in old Safari\n  buttons = buttons.concat.apply(buttons, buttonsNested);\n  for (var i = 0; i < buttons.length; i++) {\n    var button = buttons[i];\n    var btnInfo = _pagingButtonInfo(settings, button, page, pages);\n    var btn = _fnRenderer(settings, 'pagingButton')(settings, button, btnInfo.display, btnInfo.active, btnInfo.disabled);\n    var ariaLabel = typeof button === 'string' ? aria[button] : aria.number ? aria.number + (button + 1) : null;\n\n    // Common attributes\n    $(btn.clicker).attr({\n      'aria-controls': settings.sTableId,\n      'aria-disabled': btnInfo.disabled ? 'true' : null,\n      'aria-current': btnInfo.active ? 'page' : null,\n      'aria-label': ariaLabel,\n      'data-dt-idx': button,\n      'tabIndex': btnInfo.disabled ? -1 : settings.iTabIndex && btn.clicker[0].nodeName.toLowerCase() !== 'span' ? settings.iTabIndex : null // `0` doesn't need a tabIndex since it is the default\n    });\n    if (typeof button !== 'number') {\n      $(btn.clicker).addClass(button);\n    }\n    _fnBindAction(btn.clicker, {\n      action: button\n    }, function (e) {\n      e.preventDefault();\n      _fnPageChange(settings, e.data.action, true);\n    });\n    buttonEls.push(btn.display);\n  }\n  var wrapped = _fnRenderer(settings, 'pagingContainer')(settings, buttonEls);\n  var activeEl = host.find(document.activeElement).data('dt-idx');\n  host.empty().append(wrapped);\n  if (activeEl !== undefined) {\n    host.find('[data-dt-idx=' + activeEl + ']').trigger('focus');\n  }\n\n  // Responsive - check if the buttons are over two lines based on the\n  // height of the buttons and the container.\n  if (buttonEls.length) {\n    var outerHeight = $(buttonEls[0]).outerHeight();\n    if (opts.buttons > 1 &&\n    // prevent infinite\n    outerHeight > 0 &&\n    // will be 0 if hidden\n    $(host).height() >= outerHeight * 2 - 10) {\n      _pagingDraw(settings, host, $.extend({}, opts, {\n        buttons: opts.buttons - 2\n      }));\n    }\n  }\n}\n\n/**\n * Get properties for a button based on the current paging state of the table\n *\n * @param {*} settings DT settings object\n * @param {*} button The button type in question\n * @param {*} page Table's current page\n * @param {*} pages Number of pages\n * @returns Info object\n */\nfunction _pagingButtonInfo(settings, button, page, pages) {\n  var lang = settings.oLanguage.oPaginate;\n  var o = {\n    display: '',\n    active: false,\n    disabled: false\n  };\n  switch (button) {\n    case 'ellipsis':\n      o.display = '&#x2026;';\n      break;\n    case 'first':\n      o.display = lang.sFirst;\n      if (page === 0) {\n        o.disabled = true;\n      }\n      break;\n    case 'previous':\n      o.display = lang.sPrevious;\n      if (page === 0) {\n        o.disabled = true;\n      }\n      break;\n    case 'next':\n      o.display = lang.sNext;\n      if (pages === 0 || page === pages - 1) {\n        o.disabled = true;\n      }\n      break;\n    case 'last':\n      o.display = lang.sLast;\n      if (pages === 0 || page === pages - 1) {\n        o.disabled = true;\n      }\n      break;\n    default:\n      if (typeof button === 'number') {\n        o.display = settings.fnFormatNumber(button + 1);\n        if (page === button) {\n          o.active = true;\n        }\n      }\n      break;\n  }\n  return o;\n}\n\n/**\n * Compute what number buttons to show in the paging control\n *\n * @param {*} page Current page\n * @param {*} pages Total number of pages\n * @param {*} buttons Target number of number buttons\n * @param {boolean} addFirstLast Indicate if page 1 and end should be included\n * @returns Buttons to show\n */\nfunction _pagingNumbers(page, pages, buttons, addFirstLast) {\n  var numbers = [],\n    half = Math.floor(buttons / 2),\n    before = addFirstLast ? 2 : 1,\n    after = addFirstLast ? 1 : 0;\n  if (pages <= buttons) {\n    numbers = _range(0, pages);\n  } else if (buttons === 1) {\n    // Single button - current page only\n    numbers = [page];\n  } else if (buttons === 3) {\n    // Special logic for just three buttons\n    if (page <= 1) {\n      numbers = [0, 1, 'ellipsis'];\n    } else if (page >= pages - 2) {\n      numbers = _range(pages - 2, pages);\n      numbers.unshift('ellipsis');\n    } else {\n      numbers = ['ellipsis', page, 'ellipsis'];\n    }\n  } else if (page <= half) {\n    numbers = _range(0, buttons - before);\n    numbers.push('ellipsis');\n    if (addFirstLast) {\n      numbers.push(pages - 1);\n    }\n  } else if (page >= pages - 1 - half) {\n    numbers = _range(pages - (buttons - before), pages);\n    numbers.unshift('ellipsis');\n    if (addFirstLast) {\n      numbers.unshift(0);\n    }\n  } else {\n    numbers = _range(page - half + before, page + half - after);\n    numbers.push('ellipsis');\n    numbers.unshift('ellipsis');\n    if (addFirstLast) {\n      numbers.push(pages - 1);\n      numbers.unshift(0);\n    }\n  }\n  return numbers;\n}\nvar __lengthCounter = 0;\n\n// opts\n// - menu\n// - text\nDataTable.feature.register('pageLength', function (settings, opts) {\n  var features = settings.oFeatures;\n\n  // For compatibility with the legacy `pageLength` top level option\n  if (!features.bPaginate || !features.bLengthChange) {\n    return null;\n  }\n  opts = $.extend({\n    menu: settings.aLengthMenu,\n    text: settings.oLanguage.sLengthMenu\n  }, opts);\n  var classes = settings.oClasses.length,\n    tableId = settings.sTableId,\n    menu = opts.menu,\n    lengths = [],\n    language = [],\n    i;\n\n  // Options can be given in a number of ways\n  if (Array.isArray(menu[0])) {\n    // Old 1.x style - 2D array\n    lengths = menu[0];\n    language = menu[1];\n  } else {\n    for (i = 0; i < menu.length; i++) {\n      // An object with different label and value\n      if ($.isPlainObject(menu[i])) {\n        lengths.push(menu[i].value);\n        language.push(menu[i].label);\n      } else {\n        // Or just a number to display and use\n        lengths.push(menu[i]);\n        language.push(menu[i]);\n      }\n    }\n  }\n\n  // We can put the <select> outside of the label if it is at the start or\n  // end which helps improve accessability (not all screen readers like\n  // implicit for elements).\n  var end = opts.text.match(/_MENU_$/);\n  var start = opts.text.match(/^_MENU_/);\n  var removed = opts.text.replace(/_MENU_/, '');\n  var str = '<label>' + opts.text + '</label>';\n  if (start) {\n    str = '_MENU_<label>' + removed + '</label>';\n  } else if (end) {\n    str = '<label>' + removed + '</label>_MENU_';\n  }\n\n  // Wrapper element - use a span as a holder for where the select will go\n  var tmpId = 'tmp-' + +new Date();\n  var div = $('<div/>').addClass(classes.container).append(str.replace('_MENU_', '<span id=\"' + tmpId + '\"></span>'));\n\n  // Save text node content for macro updating\n  var textNodes = [];\n  Array.prototype.slice.call(div.find('label')[0].childNodes).forEach(function (el) {\n    if (el.nodeType === Node.TEXT_NODE) {\n      textNodes.push({\n        el: el,\n        text: el.textContent\n      });\n    }\n  });\n\n  // Update the label text in case it has an entries value\n  var updateEntries = function (len) {\n    textNodes.forEach(function (node) {\n      node.el.textContent = _fnMacros(settings, node.text, len);\n    });\n  };\n\n  // Next, the select itself, along with the options\n  var select = $('<select/>', {\n    'aria-controls': tableId,\n    'class': classes.select\n  });\n  for (i = 0; i < lengths.length; i++) {\n    // Attempt to look up the length from the i18n options\n    var label = settings.api.i18n('lengthLabels.' + lengths[i], null);\n    if (label === null) {\n      // If not present, fallback to old style\n      label = typeof language[i] === 'number' ? settings.fnFormatNumber(language[i]) : language[i];\n    }\n    select[0][i] = new Option(label, lengths[i]);\n  }\n\n  // add for and id to label and input\n  div.find('label').attr('for', 'dt-length-' + __lengthCounter);\n  select.attr('id', 'dt-length-' + __lengthCounter);\n  __lengthCounter++;\n\n  // Swap in the select list\n  div.find('#' + tmpId).replaceWith(select);\n\n  // Can't use `select` variable as user might provide their own and the\n  // reference is broken by the use of outerHTML\n  $('select', div).val(settings._iDisplayLength).on('change.DT', function () {\n    _fnLengthChange(settings, $(this).val());\n    _fnDraw(settings);\n  });\n\n  // Update node value whenever anything changes the table's length\n  $(settings.nTable).on('length.dt.DT', function (e, s, len) {\n    if (settings === s) {\n      $('select', div).val(len);\n\n      // Resolve plurals in the text for the new length\n      updateEntries(len);\n    }\n  });\n  updateEntries(settings._iDisplayLength);\n  return div;\n}, 'l');\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function (opts) {\n  return $(this).dataTable(opts).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each(DataTable, function (prop, val) {\n  $.fn.DataTable[prop] = val;\n});\nexport default DataTable;","map":{"version":3,"names":["jQuery","$","DataTable","selector","options","factory","_that","emptyInit","undefined","len","length","api","_Api","each","o","oInit","_fnExtend","i","iLen","sId","getAttribute","defaults","$this","nodeName","toLowerCase","_fnLog","on","_fnListener","trigger","_fnCompatOpts","_fnCompatCols","column","_fnCamelToHungarian","extend","_fnEscapeObject","data","allSettings","settings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","Api","destroy","sTableId","id","splice","ext","_unique","oSettings","models","style","width","colgroup","prependTo","fastData","row","type","_fnGetCellData","push","dataTable","aLengthMenu","iDisplayLength","Array","isArray","isPlainObject","value","_fnMap","oFeatures","oScroll","oLanguage","_fnCallbackReg","fnDrawCallback","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","Object","keys","forEach","key","_fnBrowserDetect","oClasses","classes","addClass","table","bPaginate","iDisplayStart","iInitDisplayStart","_iDisplayStart","defer","iDeferLoading","deferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","columnsInit","thead","getElementsByTagName","initHeaderLayout","_fnDetectHeader","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","iCol","oDef","_fnColumnOptions","rowOne","children","find","eq","a","cell","name","col","mData","sort","filter","_","_isArrayHost","_fnSaveState","features","bStateSave","aaSorting","sorting","asSorting","_fnSortingClasses","bSorted","_fnDataSource","bDeferRender","caption","appendTo","html","_captionSide","css","captionNode","tbody","insertAfter","nTBody","tfoot","aiDisplay","aiDisplayMaster","slice","bInitialised","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","_ext","builder","buttons","ccContent","errMode","escape","attributes","feature","search","legacy","pager","renderer","pageButton","header","order","className","detect","render","fnVersionCheck","iApiIndex","sVersion","version","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","aoFeatures","oStdClasses","oPagination","container","empty","info","layout","tableRow","tableCell","start","end","full","select","canAsc","canDesc","isAsc","isDesc","none","position","processing","scrolling","body","footer","self","inner","input","paging","active","button","disabled","nav","_api_register","_api_registerPlural","_re_dic","_re_new_lines","_re_html","_max_str_len","Math","pow","_re_date","_re_escape_regex","RegExp","join","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","allowEmpty","strType","parseFloat","_isHtml","_htmlNumeric","match","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","_removeEmpty","Error","previous","_escapeHtml","_normalize","str","both","res","normalize","_areAllUnique","src","sorted","last","from","Set","val","j","k","again","_flatten","_addClass","el","split","n","classList","add","util","diacritics","mixed","debounce","fn","timeout","timer","that","args","arguments","clearTimeout","setTimeout","apply","throttle","freq","frequency","now","Date","escapeRegex","set","source","meta","indexOf","setData","_fnSplitObjNotation","b","aLast","arrayNotation","funcNotation","innerSrc","__reArray","__reFn","jLen","get","t","fetchData","substring","stripHtml","escapeHtml","unique","_fnHungarianMap","hungarian","newKey","map","_hungarianMap","user","force","hungarianKey","charAt","_fnCompatMap","knew","old","init","sScrollX","scrollX","bSort","orderIndicators","indicators","orderHandler","handler","bSortCellsTop","titleRow","searchCols","aoSearchCols","oSearch","serverSide","searchDelay","dataSort","aDataSort","__browser","browser","top","left","window","pageXOffset","height","overflow","append","outer","barWidth","offsetWidth","clientWidth","bScrollbarLeft","round","offset","remove","oBrowser","iBarWidth","oDefaults","oCol","oColumn","idx","searchFixed","colEl","attr","aoPreSearchCols","oOptions","mDataProp","sType","_sManualType","sClass","origClass","iDataSort","mDataSrc","mRender","copy","shift","_render","attrTest","_bAttrSrc","_setter","fnGetData","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSortable","_fnAdjustColumnSizing","_fnCalculateColumnWidths","_fnColumnSizes","scroll","sY","sX","_fnScrollDraw","cols","_fnColumnsSumWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","aoHeader","columns","vis","bVisible","sParam","_typeResult","typeDetect","_name","_fnColumnTypes","aoData","types","jen","ken","detectedType","cache","oneOf","allOf","one","autoClass","_columnAutoClass","aoFooter","_columnAutoRender","colIdx","nTr","display","displayData","_fnWriteCell","anCells","aoColDefs","aoCols","headerLayout","kLen","def","sName","aTargets","target","targets","is","original","incVisible","_fnColumnsFromHeader","sum","unit","definedWidth","sWidthOrig","sWidth","matched","closest","_fnAddData","dataIn","tr","tds","rowIdx","rowModel","oRow","_aData","aIds","_fnCreateTr","_fnAddTr","trs","_fnGetRowElements","cells","draw","iDraw","defaultContent","sDefaultContent","cellData","innerHTML","iDrawError","call","fomatters","_fnSetCellData","td","parts","_fnGetDataMaster","_fnClearTable","_fnInvalidate","_aSortData","_aFilterData","_fnGetRowDisplay","maxLenString","_fnRowAttributes","firstChild","contents","objectRead","setter","cellProcess","trim","toUpperCase","nextSibling","rowNode","rowModal","iRow","nTrIn","anTds","nTd","create","trClass","document","createElement","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","removeChild","fnCreatedCell","DT_RowClass","__rowc","concat","removeClass","DT_RowAttr","DT_RowData","_fnBuildHead","side","titleProp","cellCount","colSpan","detected","_fnRenderer","_fnHeaderLayout","incColumns","local","structure","columnCount","rowspan","colspan","includes","titleSpan","title","_fnDrawHead","point","_fnDraw","ajaxComplete","_fnStart","aPreDraw","_fnProcessingDisplay","anRows","iRowCount","bServerSide","iDisplayEnd","fnDisplayEnd","bDrawing","bDestroying","_emptyRow","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","replaceChildren","detach","nTableWrapper","toggleClass","bFiltered","_fnReDraw","holdPosition","recompute","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","oLang","zero","sZeroRecords","dataSrc","sLoadingRecords","sEmptyTable","fnRecordsTotal","_layoutItems","align","items","rowCell","rowClass","opts","_layoutGetRow","rows","rowNum","_layoutArray","pos","order1","order2","ret","reverse","_layoutResolve","getFeature","resolve","item","line","node","inst","_fnAddOptionsHtml","insert","insertBefore","sDom","_fnLayoutDom","bottom","_fnFeatureHtmlTable","_processingHtml","dom","featureNode","option","newNode","next","parent","cFeature","fnInit","write","l","shifted","isHeader","jqCell","columnDef","sTitle","autoTitle","ariaTitle","childNodes","headerFooter","setAttribute","fnRecordsDisplay","_fnBuildAjax","ajaxData","instance","callback","status","jqXHR","_fnAjaxDataSrc","sError","JSON","parse","e","newData","baseAjax","sServerMethod","xhr","readyState","oAjaxData","submitAs","stringify","_fnAjaxParameters","_fnAjaxUpdateDraw","preSearch","preColSearch","colData","searchable","bSearchable","orderable","regex","fixed","term","toString","_fnSortFlatten","dir","_iDisplayLength","_fnAjaxDataSrcParam","recordsTotal","recordsFiltered","_fnInitComplete","dataProp","aaData","param","columnsSearch","_fnFilterData","_fnFilter","_fnFilterCustom","filters","displayRows","_fnArrayApply","searchRows","searchFunc","rpSearch","_fnFilterCreateSearch","_sFilterRow","test","inOpts","not","boundary","caseInsensitive","exact","smart","word","negative","m","__filter_div","__filter_div_textContent","textContent","filterData","wasInvalidated","innerText","_fnLoadState","iAjaxStart","_fnSortInit","_colGroup","aData","_bInitComplete","_fnLengthChange","_fnLengthOverflow","_fnPageChange","action","redraw","records","floor","changed","bProcessing","sProcessing","show","_fnProcessingRun","enable","run","scrollY","captionSide","headerClone","cloneNode","footerClone","_div","size","_fnStringToCss","scroller","border","sXInner","removeAttr","scrollHead","scrollBody","scrollFoot","scrollLeft","bCollapse","nScrollHead","nScrollBody","nScrollFoot","aoDrawCallback","divHeader","divHeaderInner","divHeaderTable","divBodyEl","divBody","divFooter","divFooterInner","divFooterTable","headerCopy","footerCopy","scrollBarVis","scrollHeight","clientHeight","clone","firstTr","colSizes","outerWidth","colWidth","minWidth","wrapAll","isScrolling","paddingSide","scrollTop","bAutoWidth","scrollXInner","visibleColumns","tableWidthAttr","tableContainer","columnIdx","styleWidth","containerWidth","_fnWrapperWidth","visible","tmpTable","margin","padding","longest","_fnGetMaxLenString","text","sContentPadding","createTextNode","holder","right","total","bodyCells","bounding","getBoundingClientRect","_reszEvt","resize","newWidth","ResizeObserver","first","resizer","resizeObserver","observe","sInstance","max","maxLen","cellString","nodeType","headerRows","querySelectorAll","notSelector","_fnSortAttachListener","_fnSortResolve","_fnBindAction","_fnSortAdd","shiftKey","_fnSortDisplay","master","masterMap","nestedSort","z","aSort","extSort","srcCol","aaSortingFixed","fixedObj","pre","post","_idx","index","formatter","sorter","aiOrig","sortCol","displayMaster","_fnSortData","orderDescReverse","x","y","dataA","dataB","sortDetails","addIndex","nextSortIdx","bSortMulti","sortIdx","oldSort","aLastSort","sortClass","bSortClasses","customSort","sSortDataType","customData","_bLoadingState","state","time","oSavedState","fnStateSaveCallback","loaded","_fnImplementState","fnStateLoadCallback","currentNames","duration","iStateDuration","abStateLoad","oLoadedState","page","incoming","adjust","level","msg","tn","sErrMode","alert","console","log","mappedName","extender","breakRefs","prototype","hasOwnProperty","which","preventDefault","store","callbackArr","eventName","bubbles","Event","dt","parents","result","host","_fnMacros","entries","fnFormatNumber","all","ceil","i18n","arr","obj","__apiStruct","__arrayProto","_toSettings","jq","tables","toArray","v","context","ctxSettings","any","count","flatten","ctx","iterator","alwaysNew","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","to$","toJQuery","unshift","_api_scope","scope","struc","methodExt","_api_find","__dt_wrapper","struct","propExt","register","heir","method","registerPlural","pluralName","singularName","__table_selector","sel","nodes","indexes","orderedIndexes","prepend","visRecords","__reload","abort","resetPaging","_selector_run","selectFn","selectorType","_selector_opts","columnOrder","_selector_first","displayFiltered","displayFilteredMap","ordered","__row_selector","selInt","cellIdx","rowObj","r","hash","newRows","modRows","idFn","ids","_detailsShow","childRows","__details_state_load","every","__details_add","klass","addRow","created","_details","__details_state","__details_remove","__details_display","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","off","_emp","_child_obj","_child_mth","child","__re_column_selector","__columnData","r1","r2","__column_header","__column_header_cells","__column_selector","names","titles","visColumns","jqResult","selected","__setColumnVis","span","calc","widths","visIdx","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","internalOpts","cellsNoOpts","columnVisible","resolved","directions","caseInsen","ignoreTime","setMutate","__bootstrap","__foundation","use","arg1","arg2","module","DateTime","__luxon","__moment","bootstrap","Foundation","jquery","FixedOffsetZone","isMoment","Modal","NAME","Reveal","root","versionCheck","version2","aThis","aThat","iThis","iThat","isDataTable","head","foot","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orderClasses","disconnect","cleanHeader","orig","removedMethod","sDestroyWidth","counter","selectedIdx","tableIdx","token","plural","toFormat","sThousands","sessionStorage","localStorage","getItem","location","pathname","setItem","paginate","number","lengthLabels","topStart","topEnd","bottomStart","bottomEnd","pagingControls","min","extPagination","simple","numbers","simple_numbers","full_numbers","first_last","first_last_numbers","_numbers","_pagingNumbers","numbers_length","pagingButton","buttonType","content","btnClasses","btn","class","role","clicker","pagingContainer","_filterString","__mld","dtLib","momentFn","luxonFn","dateFn","__mlWarning","resolveWindowLibs","luxon","moment","__mldObj","format","locale","utc","isValid","fromFormat","fromISO","setLocale","__mlHelper","localeString","to","typeName","valueOf","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","date","thousands","decimal","precision","prefix","postfix","flo","abs","exp","toExponential","toFixed","intPart","floatPart","_extTypes","asc","desc","setProp","propVal","setDetect","defineProperty","findIndex","setOrder","__diacriticSort","localeCompare","navigator","languages","language","numeric","ignorePunctuation","__diacriticHtmlSort","parsed","ts","Infinity","sDecimal","dp","__numericReplace","decimalPlace","re1","re2","orderedColumns","ariaType","sortDirs","tabIndex","iTabIndex","canOrder","isOrdering","orderDirs","firstVis","firstSort","sortOrder","orderSpan","_forLayoutRow","layoutEnum","cb","_divProp","bInfo","lang","tid","fnInfoCallback","sInfoEmpty","sInfoPostFix","sInfoFiltered","sInfo","_fnUpdateInfo","_infoEl","__searchCounter","tableId","previousSearch","placeholder","sSearchPlaceholder","sSearch","removed","searchFn","event","return","jqFilter","keyCode","ev","activeElement","sPaginationType","boundaryNumbers","firstLast","previousNext","_pagingDraw","_pagingDynamic","plugin","aria","oAria","pages","buttonEls","buttonsNested","btnInfo","_pagingButtonInfo","ariaLabel","wrapped","activeEl","outerHeight","oPaginate","sFirst","sPrevious","sNext","sLast","addFirstLast","half","before","after","__lengthCounter","bLengthChange","menu","sLengthMenu","lengths","label","tmpId","div","textNodes","Node","TEXT_NODE","updateEntries","Option","replaceWith","dataTableSettings","dataTableExt"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/node_modules/datatables.net/js/dataTables.mjs"],"sourcesContent":["/*! DataTables 2.3.2\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\n\n\nvar DataTable = function ( selector, options )\n{\n\t// Check if called with a window or jQuery object for DOM less applications\n\t// This is for backwards compatibility\n\tif (DataTable.factory(selector, options)) {\n\t\treturn DataTable;\n\t}\n\n\t// When creating with `new`, create a new DataTable, returning the API instance\n\tif (this instanceof DataTable) {\n\t\treturn $(selector).DataTable(options);\n\t}\n\telse {\n\t\t// Argument switching\n\t\toptions = selector;\n\t}\n\n\tvar _that = this;\n\tvar emptyInit = options === undefined;\n\tvar len = this.length;\n\n\tif ( emptyInit ) {\n\t\toptions = {};\n\t}\n\n\t// Method to get DT API instance from jQuery object\n\tthis.api = function ()\n\t{\n\t\treturn new _Api( this );\n\t};\n\n\tthis.each(function() {\n\t\t// For each initialisation we want to give it a clean initialisation\n\t\t// object that can be bashed around\n\t\tvar o = {};\n\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t_fnExtend( o, options, true ) :\n\t\t\toptions;\n\n\t\t\n\t\tvar i=0, iLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar defaults = DataTable.defaults;\n\t\tvar $this = $(this);\n\t\t\n\t\t// Sanity check\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// Special case for options\n\t\tif (oInit.on && oInit.on.options) {\n\t\t\t_fnListener($this, 'options', oInit.on.options);\t\n\t\t}\n\t\t\n\t\t$this.trigger( 'options.dt', oInit );\n\t\t\n\t\t/* Backwards compatibility for the defaults */\n\t\t_fnCompatOpts( defaults );\n\t\t_fnCompatCols( defaults.column );\n\t\t\n\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, _fnEscapeObject($this.data()) ), true );\n\t\t\n\t\t\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tvar allSettings = DataTable.settings;\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar s = allSettings[i];\n\t\t\n\t\t\t/* Base check on table node */\n\t\t\tif (\n\t\t\t\ts.nTable == this ||\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t) {\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\n\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn s.oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( bDestroy )\n\t\t\t\t{\n\t\t\t\t\tnew DataTable.Api(s).destroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( s.sTableId == this.id )\n\t\t\t{\n\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId,\n\t\t\tcolgroup: $('<colgroup>').prependTo(this),\n\t\t\tfastData: function (row, column, type) {\n\t\t\t\treturn _fnGetCellData(oSettings, row, column, type);\n\t\t\t}\n\t\t} );\n\t\toSettings.nTable = this;\n\t\toSettings.oInit  = oInit;\n\t\t\n\t\tallSettings.push( oSettings );\n\t\t\n\t\t// Make a single API instance available for internal handling\n\t\toSettings.api = new _Api( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\t_fnCompatOpts( oInit );\n\t\t\n\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t{\n\t\t\toInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0])\n\t\t\t\t? oInit.aLengthMenu[0][0]\n\t\t\t\t: $.isPlainObject( oInit.aLengthMenu[0] )\n\t\t\t\t\t? oInit.aLengthMenu[0].value\n\t\t\t\t\t: oInit.aLengthMenu[0];\n\t\t}\n\t\t\n\t\t// Apply the defaults and init options to make a single init object will all\n\t\t// options defined from defaults and instance options.\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\"bPaginate\",\n\t\t\t\"bLengthChange\",\n\t\t\t\"bFilter\",\n\t\t\t\"bSort\",\n\t\t\t\"bSortMulti\",\n\t\t\t\"bInfo\",\n\t\t\t\"bProcessing\",\n\t\t\t\"bAutoWidth\",\n\t\t\t\"bSortClasses\",\n\t\t\t\"bServerSide\",\n\t\t\t\"bDeferRender\"\n\t\t] );\n\t\t_fnMap( oSettings, oInit, [\n\t\t\t\"ajax\",\n\t\t\t\"fnFormatNumber\",\n\t\t\t\"sServerMethod\",\n\t\t\t\"aaSorting\",\n\t\t\t\"aaSortingFixed\",\n\t\t\t\"aLengthMenu\",\n\t\t\t\"sPaginationType\",\n\t\t\t\"iStateDuration\",\n\t\t\t\"bSortCellsTop\",\n\t\t\t\"iTabIndex\",\n\t\t\t\"sDom\",\n\t\t\t\"fnStateLoadCallback\",\n\t\t\t\"fnStateSaveCallback\",\n\t\t\t\"renderer\",\n\t\t\t\"searchDelay\",\n\t\t\t\"rowId\",\n\t\t\t\"caption\",\n\t\t\t\"layout\",\n\t\t\t\"orderDescReverse\",\n\t\t\t\"orderIndicators\",\n\t\t\t\"orderHandler\",\n\t\t\t\"titleRow\",\n\t\t\t\"typeDetect\",\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback );\n\t\t\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\n\t\t// Add event listeners\n\t\tif (oInit.on) {\n\t\t\tObject.keys(oInit.on).forEach(function (key) {\n\t\t\t\t_fnListener($this, key, oInit.on[key]);\n\t\t\t});\n\t\t}\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t$this.addClass( oClasses.table );\n\t\t\n\t\tif (! oSettings.oFeatures.bPaginate) {\n\t\t\toInit.iDisplayStart = 0;\n\t\t}\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\tvar defer = oInit.iDeferLoading;\n\t\tif ( defer !== null )\n\t\t{\n\t\t\toSettings.deferLoading = true;\n\t\t\n\t\t\tvar tmp = Array.isArray(defer);\n\t\t\toSettings._iRecordsDisplay = tmp ? defer[0] : defer;\n\t\t\toSettings._iRecordsTotal = tmp ? defer[1] : defer;\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar columnsInit = [];\n\t\tvar thead = this.getElementsByTagName('thead');\n\t\tvar initHeaderLayout = _fnDetectHeader( oSettings, thead[0] );\n\t\t\n\t\t// If we don't have a columns array, then generate one with nulls\n\t\tif ( oInit.aoColumns ) {\n\t\t\tcolumnsInit = oInit.aoColumns;\n\t\t}\n\t\telse if ( initHeaderLayout.length ) {\n\t\t\tfor ( i=0, iLen=initHeaderLayout[0].length ; i<iLen ; i++ ) {\n\t\t\t\tcolumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Add the columns\n\t\tfor ( i=0, iLen=columnsInit.length ; i<iLen ; i++ ) {\n\t\t\t_fnAddColumn( oSettings );\n\t\t}\n\t\t\n\t\t// Apply the column definitions\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t * attributes are found\n\t\t */\n\t\tvar rowOne = $this.children('tbody').find('tr:first-child').eq(0);\n\t\t\n\t\tif ( rowOne.length ) {\n\t\t\tvar a = function ( cell, name ) {\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t};\n\t\t\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\n\t\t\t\tif (! col) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\t// Must be done after everything which can be overridden by the state saving!\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState );\n\t\t\n\t\tvar features = oSettings.oFeatures;\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\tfeatures.bStateSave = true;\n\t\t}\n\t\t\n\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t// in case that has been altered, so the default sort reflects that option\n\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t// account, and also will apply sorting disabled classes if disabled\n\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t}\n\t\t} );\n\t\t\n\t\t\n\t\t/*\n\t\t * Table HTML init\n\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t */\n\t\tvar caption = $this.children('caption');\n\t\t\n\t\tif ( oSettings.caption ) {\n\t\t\tif ( caption.length === 0 ) {\n\t\t\t\tcaption = $('<caption/>').appendTo( $this );\n\t\t\t}\n\t\t\n\t\t\tcaption.html( oSettings.caption );\n\t\t}\n\t\t\n\t\t// Store the caption side, so we can remove the element from the document\n\t\t// when creating the element\n\t\tif (caption.length) {\n\t\t\tcaption[0]._captionSide = caption.css('caption-side');\n\t\t\toSettings.captionNode = caption[0];\n\t\t}\n\t\t\n\t\tif ( thead.length === 0 ) {\n\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t}\n\t\toSettings.nTHead = thead[0];\n\t\t\n\t\tvar tbody = $this.children('tbody');\n\t\tif ( tbody.length === 0 ) {\n\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t}\n\t\toSettings.nTBody = tbody[0];\n\t\t\n\t\tvar tfoot = $this.children('tfoot');\n\t\tif ( tfoot.length === 0 ) {\n\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t}\n\t\toSettings.nTFoot = tfoot[0];\n\t\t\n\t\t// Copy the data index array\n\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t// Initialisation complete - table can be drawn\n\t\toSettings.bInitialised = true;\n\t\t\n\t\t// Language definitions\n\t\tvar oLanguage = oSettings.oLanguage;\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\n\t\tif ( oLanguage.sUrl ) {\n\t\t\t// Get the language definitions from a file\n\t\t\t$.ajax( {\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\t// Error occurred loading language file\n\t\t\t\t\t_fnLog( oSettings, 0, 'i18n file loading error', 21 );\n\t\t\n\t\t\t\t\t// Continue on as best we can\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\n\t\t\t_fnInitialise( oSettings );\n\t\t}\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * ColumnControl buttons and content\n\t *\n\t *  @type object\n\t */\n\tccContent: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\t/** HTML entity escaping */\n\tescape: {\n\t\t/** When reading data-* attributes for initialisation options */\n\t\tattributes: false\n\t},\n\n\t/**\n\t * Legacy so v1 plug-ins don't throw js errors on load\n\t */\n\tfeature: [],\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an object of callbacks which provide the features for DataTables\n\t * to be initialised via the `layout` option.\n\t */\n\tfeatures: {},\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Automatic column class assignment\n\t\t */\n\t\tclassName: {},\n\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\t\t/**\n\t\t * Automatic renderer assignment\n\t\t */\n\t\trender: {},\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\tcontainer: 'dt-container',\n\tempty: {\n\t\trow: 'dt-empty'\n\t},\n\tinfo: {\n\t\tcontainer: 'dt-info'\n\t},\n\tlayout: {\n\t\trow: 'dt-layout-row',\n\t\tcell: 'dt-layout-cell',\n\t\ttableRow: 'dt-layout-table',\n\t\ttableCell: '',\n\t\tstart: 'dt-layout-start',\n\t\tend: 'dt-layout-end',\n\t\tfull: 'dt-layout-full'\n\t},\n\tlength: {\n\t\tcontainer: 'dt-length',\n\t\tselect: 'dt-input'\n\t},\n\torder: {\n\t\tcanAsc: 'dt-orderable-asc',\n\t\tcanDesc: 'dt-orderable-desc',\n\t\tisAsc: 'dt-ordering-asc',\n\t\tisDesc: 'dt-ordering-desc',\n\t\tnone: 'dt-orderable-none',\n\t\tposition: 'sorting_'\n\t},\n\tprocessing: {\n\t\tcontainer: 'dt-processing'\n\t},\n\tscrolling: {\n\t\tbody: 'dt-scroll-body',\n\t\tcontainer: 'dt-scroll',\n\t\tfooter: {\n\t\t\tself: 'dt-scroll-foot',\n\t\t\tinner: 'dt-scroll-footInner'\n\t\t},\n\t\theader: {\n\t\t\tself: 'dt-scroll-head',\n\t\t\tinner: 'dt-scroll-headInner'\n\t\t}\n\t},\n\tsearch: {\n\t\tcontainer: 'dt-search',\n\t\tinput: 'dt-input'\n\t},\n\ttable: 'dataTable',\t\n\ttbody: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tthead: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\ttfoot: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tpaging: {\n\t\tactive: 'current',\n\t\tbutton: 'dt-paging-button',\n\t\tcontainer: 'dt-paging',\n\t\tdisabled: 'disabled',\n\t\tnav: ''\n\t}\n} );\n\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<([^>]*>)/g;\nvar _max_str_len = Math.pow(2, 28);\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\n\nvar _empty = function ( d ) {\n\treturn !d || d === true || d === '-' ? true : false;\n};\n\n\nvar _intVal = function ( s ) {\n\tvar integer = parseInt( s, 10 );\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function ( num, decimalPoint ) {\n\t// Cache created regular expressions for speed as this function is called often\n\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t}\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\tnum;\n};\n\n\nvar _isNumber = function ( d, decimalPoint, formatted, allowEmpty ) {\n\tvar type = typeof d;\n\tvar strType = type === 'string';\n\n\tif ( type === 'number' || type === 'bigint') {\n\t\treturn true;\n\t}\n\n\t// If empty return immediately so there must be a number if it is a\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t// as a formatted number for currency\n\tif ( allowEmpty && _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tif ( decimalPoint && strType ) {\n\t\td = _numToDecimal( d, decimalPoint );\n\t}\n\n\tif ( formatted && strType ) {\n\t\td = d.replace( _re_formatted_numeric, '' );\n\t}\n\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n};\n\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function ( d ) {\n\treturn _empty( d ) || typeof d === 'string';\n};\n\n// Is a string a number surrounded by HTML?\nvar _htmlNumeric = function ( d, decimalPoint, formatted, allowEmpty ) {\n\tif ( allowEmpty && _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\t// input and select strings mean that this isn't just a number\n\tif (typeof d === 'string' && d.match(/<(input|select)/i)) {\n\t\treturn null;\n\t}\n\n\tvar html = _isHtml( d );\n\treturn ! html ?\n\t\tnull :\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted, allowEmpty ) ?\n\t\t\ttrue :\n\t\t\tnull;\n};\n\n\nvar _pluck = function ( a, prop, prop2 ) {\n\tvar out = [];\n\tvar i=0, ien=a.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) {\n\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function ( a, order, prop, prop2 )\n{\n\tvar out = [];\n\tvar i=0, ien=order.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ] && a[ order[i] ][ prop ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _range = function ( len, start )\n{\n\tvar out = [];\n\tvar end;\n\n\tif ( start === undefined ) {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\telse {\n\t\tend = start;\n\t\tstart = len;\n\t}\n\n\tfor ( var i=start ; i<end ; i++ ) {\n\t\tout.push( i );\n\t}\n\n\treturn out;\n};\n\n\nvar _removeEmpty = function ( a )\n{\n\tvar out = [];\n\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\tout.push( a[i] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n// Replaceable function in api.util\nvar _stripHtml = function (input) {\n\tif (! input || typeof input !== 'string') {\n\t\treturn input;\n\t}\n\n\t// Irrelevant check to workaround CodeQL's false positive on the regex\n\tif (input.length > _max_str_len) {\n\t\tthrow new Error('Exceeded max str len');\n\t}\n\n\tvar previous;\n\n\tinput = input.replace(_re_html, ''); // Complete tags\n\n\t// Safety for incomplete script tag - use do / while to ensure that\n\t// we get all instances\n\tdo {\n\t\tprevious = input;\n\t\tinput = input.replace(/<script/i, '');\n\t} while (input !== previous);\n\n\treturn previous;\n};\n\n// Replaceable function in api.util\nvar _escapeHtml = function ( d ) {\n\tif (Array.isArray(d)) {\n\t\td = d.join(',');\n\t}\n\n\treturn typeof d === 'string' ?\n\t\td\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;') :\n\t\td;\n};\n\n// Remove diacritics from a string by decomposing it and then removing\n// non-ascii characters\nvar _normalize = function (str, both) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\n\t// It is faster to just run `normalize` than it is to check if\n\t// we need to with a regex! (Check as it isn't available in old\n\t// Safari)\n\tvar res = str.normalize\n\t\t? str.normalize(\"NFD\")\n\t\t: str;\n\n\t// Equally, here we check if a regex is needed or not\n\treturn res.length !== str.length\n\t\t? (both === true ? str + ' ' : '' ) + res.replace(/[\\u0300-\\u036f]/g, \"\")\n\t\t: res;\n}\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function ( src ) {\n\tif ( src.length < 2 ) {\n\t\treturn true;\n\t}\n\n\tvar sorted = src.slice().sort();\n\tvar last = sorted[0];\n\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\tif ( sorted[i] === last ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlast = sorted[i];\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function ( src )\n{\n\tif (Array.from && Set) {\n\t\treturn Array.from(new Set(src));\n\t}\n\n\tif ( _areAllUnique( src ) ) {\n\t\treturn src.slice();\n\t}\n\n\t// A faster unique method is to use object keys to identify used values,\n\t// but this doesn't work with arrays or objects, which we must also\n\t// consider. See jsperf.app/compare-array-unique-versions/4 for more\n\t// information.\n\tvar\n\t\tout = [],\n\t\tval,\n\t\ti, ien=src.length,\n\t\tj, k=0;\n\n\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\tval = src[i];\n\n\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\tif ( out[j] === val ) {\n\t\t\t\tcontinue again;\n\t\t\t}\n\t\t}\n\n\t\tout.push( val );\n\t\tk++;\n\t}\n\n\treturn out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n\tif (Array.isArray(val)) {\n\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t_flatten(out, val[i]);\n\t\t}\n\t}\n\telse {\n\t\tout.push(val);\n\t}\n\n\treturn out;\n}\n\n// Similar to jQuery's addClass, but use classList.add\nfunction _addClass(el, name) {\n\tif (name) {\n\t\tname.split(' ').forEach(function (n) {\n\t\t\tif (n) {\n\t\t\t\t// `add` does deduplication, so no need to check `contains`\n\t\t\t\tel.classList.add(n);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n\t/**\n\t * Return a string with diacritic characters decomposed\n\t * @param {*} mixed Function or string to normalize\n\t * @param {*} both Return original string and the normalized string\n\t * @returns String or undefined\n\t */\n\tdiacritics: function (mixed, both) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type !== 'function') {\n\t\t\treturn _normalize(mixed, both);\n\t\t}\n\t\t_normalize = mixed;\n\t},\n\n\t/**\n\t * Debounce a function\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tdebounce: function ( fn, timeout ) {\n\t\tvar timer;\n\n\t\treturn function () {\n\t\t\tvar that = this;\n\t\t\tvar args = arguments;\n\n\t\t\tclearTimeout(timer);\n\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tfn.apply(that, args);\n\t\t\t}, timeout || 250 );\n\t\t};\n\t},\n\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained\n\t * for the throttled function.\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tthrottle: function ( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *\n\t *  @param {string} val string to escape\n\t *  @returns {string} escaped string\n\t */\n\tescapeRegex: function ( val ) {\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t},\n\n\t/**\n\t * Create a function that will write to a nested object or array\n\t * @param {*} source JSON notation string\n\t * @returns Write function\n\t */\n\tset: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn DataTable.util.set( source._ );\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Nothing to do when the data source is null\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t// Like the get, we need to get data from a nested object\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[source] = val;\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t * @param {*} source JSON notation string\n\t * @returns Value read\n\t */\n\tget: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\tvar o = {};\n\t\t\t$.each( source, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn source( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data) { // row and meta also passed, but not used\n\t\t\t\treturn data[source];\n\t\t\t};\n\t\t}\n\t},\n\n\tstripHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_stripHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string') {\n\t\t\treturn _stripHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tescapeHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_escapeHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string' || Array.isArray(mixed)) {\n\t\t\treturn _escapeHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tunique: _unique\n};\n\n\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap ( o )\n{\n\tvar\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\tmatch,\n\t\tnewKey,\n\t\tmap = {};\n\n\t$.each( o, function (key) {\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t{\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\tmap[ newKey ] = key;\n\n\t\t\tif ( match[1] === 'o' )\n\t\t\t{\n\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t}\n\t\t}\n\t} );\n\n\to._hungarianMap = map;\n}\n\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian ( src, user, force )\n{\n\tif ( ! src._hungarianMap ) {\n\t\t_fnHungarianMap( src );\n\t}\n\n\tvar hungarianKey;\n\n\t$.each( user, function (key) {\n\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t{\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t{\n\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function ( o, knew, old ) {\n\tif ( o[ knew ] !== undefined ) {\n\t\to[ old ] = o[ knew ];\n\t}\n};\n\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts ( init )\n{\n\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t// Boolean initialisation of x-scrolling\n\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t}\n\tif ( typeof init.scrollX === 'boolean' ) {\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t}\n\n\t// Objects for ordering\n\tif ( typeof init.bSort === 'object' ) {\n\t\tinit.orderIndicators = init.bSort.indicators !== undefined ? init.bSort.indicators : true;\n\t\tinit.orderHandler = init.bSort.handler !== undefined ? init.bSort.handler : true;\n\t\tinit.bSort = true;\n\t}\n\telse if (init.bSort === false) {\n\t\tinit.orderIndicators = false;\n\t\tinit.orderHandler = false;\n\t}\n\telse if (init.bSort === true) {\n\t\tinit.orderIndicators = true;\n\t\tinit.orderHandler = true;\n\t}\n\n\t// Which cells are the title cells?\n\tif (typeof init.bSortCellsTop === 'boolean') {\n\t\tinit.titleRow = init.bSortCellsTop;\n\t}\n\n\t// Column search objects are in an array, so it needs to be converted\n\t// element by element\n\tvar searchCols = init.aoSearchCols;\n\n\tif ( searchCols ) {\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\tif ( searchCols[i] ) {\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enable search delay if server-side processing is enabled\n\tif (init.serverSide && ! init.searchDelay) {\n\t\tinit.searchDelay = 400;\n\t}\n}\n\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols ( init )\n{\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t// orderData can be given as an integer\n\tvar dataSort = init.aDataSort;\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\tinit.aDataSort = [ dataSort ];\n\t}\n}\n\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect( settings )\n{\n\t// We don't need to do this every time DataTables is constructed, the values\n\t// calculated are specific to the browser and OS configuration which we\n\t// don't expect to change between initialisations\n\tif ( ! DataTable.__browser ) {\n\t\tvar browser = {};\n\t\tDataTable.__browser = browser;\n\n\t\t// Scrolling feature / quirks detection\n\t\tvar n = $('<div/>')\n\t\t\t.css( {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: -1 * window.pageXOffset, // allow for scrolling\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.appendTo( 'body' );\n\n\t\tvar outer = n.children();\n\t\tvar inner = outer.children();\n\n\t\t// Get scrollbar width\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t// scrollbar on the left, rather than the right.\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\tn.remove();\n\t}\n\n\t$.extend( settings.oBrowser, DataTable.__browser );\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn( oSettings )\n{\n\t// Add column to aoColumns array\n\tvar oDefaults = DataTable.defaults.column;\n\tvar iCol = oSettings.aoColumns.length;\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\tidx: iCol,\n\t\tsearchFixed: {},\n\t\tcolEl: $('<col>').attr('data-dt-column', iCol)\n\t} );\n\toSettings.aoColumns.push( oCol );\n\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t// passed into extend can be undefined. This allows the user to give a default\n\t// with only some of the parameters defined, and also not give a default\n\tvar searchCols = oSettings.aoPreSearchCols;\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n}\n\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\n{\n\tvar oCol = oSettings.aoColumns[ iCol ];\n\n\t/* User specified column options */\n\tif ( oOptions !== undefined && oOptions !== null )\n\t{\n\t\t// Backwards compatibility\n\t\t_fnCompatCols( oOptions );\n\n\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\n\t\t/* Backwards compatibility for mDataProp */\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t{\n\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t}\n\n\t\tif ( oOptions.sType )\n\t\t{\n\t\t\toCol._sManualType = oOptions.sType;\n\t\t}\n\t\n\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t// the ability to use a valid name for the camel case input\n\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t{\n\t\t\toOptions.sClass = oOptions.className;\n\t\t}\n\n\t\tvar origClass = oCol.sClass;\n\n\t\t$.extend( oCol, oOptions );\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t// overwriting it in the extend above\n\t\tif (origClass !== oCol.sClass) {\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t}\n\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t * priority if defined\n\t\t */\n\t\tif ( oOptions.iDataSort !== undefined )\n\t\t{\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t}\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t}\n\n\t/* Cache the data get and set functions for speed */\n\tvar mDataSrc = oCol.mData;\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\n\t// The `render` option can be given as an array to access the helper rendering methods.\n\t// The first element is the rendering method to use, the rest are the parameters to pass\n\tif ( oCol.mRender && Array.isArray( oCol.mRender ) ) {\n\t\tvar copy = oCol.mRender.slice();\n\t\tvar name = copy.shift();\n\n\t\toCol.mRender = DataTable.render[name].apply(window, copy);\n\t}\n\n\toCol._render = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\tvar attrTest = function( src ) {\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t};\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t);\n\toCol._setter = null;\n\n\toCol.fnGetData = function (rowData, type, meta) {\n\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\treturn oCol._render && type ?\n\t\t\toCol._render( innerData, type, rowData, meta ) :\n\t\t\tinnerData;\n\t};\n\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t};\n\n\t// Indicate if DataTables should read DOM data as an object or array\n\t// Used in _fnGetRowElements\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\toSettings._rowReadObject = true;\n\t}\n\n\t/* Feature sorting overrides column specific when off */\n\tif ( !oSettings.oFeatures.bSort )\n\t{\n\t\toCol.bSortable = false;\n\t}\n}\n\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing ( settings )\n{\n\t_fnCalculateColumnWidths( settings );\n\t_fnColumnSizes( settings );\n\n\tvar scroll = settings.oScroll;\n\tif ( scroll.sY !== '' || scroll.sX !== '') {\n\t\t_fnScrollDraw( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n}\n\n/**\n * Apply column sizes\n *\n * @param {*} settings DataTables settings object\n */\nfunction _fnColumnSizes ( settings )\n{\n\tvar cols = settings.aoColumns;\n\n\tfor (var i=0 ; i<cols.length ; i++) {\n\t\tvar width = _fnColumnsSumWidth(settings, [i], false, false);\n\n\t\tcols[i].colEl.css('width', width);\n\n\t\tif (settings.oScroll.sX) {\n\t\t\tcols[i].colEl.css('min-width', width);\n\t\t}\n\t}\n}\n\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\treturn typeof aiVis[iMatch] === 'number' ?\n\t\taiVis[iMatch] :\n\t\tnull;\n}\n\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\tvar iPos = aiVis.indexOf(iMatch);\n\n\treturn iPos !== -1 ? iPos : null;\n}\n\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns( settings )\n{\n\tvar layout = settings.aoHeader;\n\tvar columns = settings.aoColumns;\n\tvar vis = 0;\n\n\tif ( layout.length ) {\n\t\tfor ( var i=0, ien=layout[0].length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vis;\n}\n\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns( oSettings, sParam )\n{\n\tvar a = [];\n\n\toSettings.aoColumns.map( function(val, i) {\n\t\tif ( val[sParam] ) {\n\t\t\ta.push( i );\n\t\t}\n\t} );\n\n\treturn a;\n}\n\n/**\n * Allow the result from a type detection function to be `true` while\n * translating that into a string. Old type detection functions will\n * return the type name if it passes. An obect store would be better,\n * but not backwards compatible.\n *\n * @param {*} typeDetect Object or function for type detection\n * @param {*} res Result from the type detection function\n * @returns Type name or false\n */\nfunction _typeResult (typeDetect, res) {\n\treturn res === true\n\t\t? typeDetect._name\n\t\t: res;\n}\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar types = DataTable.ext.type.detect;\n\tvar i, ien, j, jen, k, ken;\n\tvar col, detectedType, cache;\n\n\t// For each column, spin over the data type detection functions, seeing if one matches\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcol = columns[i];\n\t\tcache = [];\n\n\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\tcol.sType = col._sManualType;\n\t\t}\n\t\telse if ( ! col.sType ) {\n\t\t\t// With SSP type detection can be unreliable and error prone, so we provide a way\n\t\t\t// to turn it off.\n\t\t\tif (! settings.typeDetect) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\tvar typeDetect = types[j];\n\n\t\t\t\t// There can be either one, or three type detection functions\n\t\t\t\tvar oneOf = typeDetect.oneOf;\n\t\t\t\tvar allOf = typeDetect.allOf || typeDetect;\n\t\t\t\tvar init = typeDetect.init;\n\t\t\t\tvar one = false;\n\n\t\t\t\tdetectedType = null;\n\n\t\t\t\t// Fast detect based on column assignment\n\t\t\t\tif (init) {\n\t\t\t\t\tdetectedType = _typeResult(typeDetect, init(settings, col, i));\n\n\t\t\t\t\tif (detectedType) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\tif (! data[k]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only one data point in the column needs to match this function\n\t\t\t\t\tif (oneOf && ! one) {\n\t\t\t\t\t\tone = _typeResult(typeDetect, oneOf( cache[k], settings ));\n\t\t\t\t\t}\n\n\t\t\t\t\t// All data points need to match this function\n\t\t\t\t\tdetectedType = _typeResult(typeDetect, allOf( cache[k], settings ));\n\n\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t// types\n\t\t\t\t\tif ( ! detectedType && j !== types.length-3 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t// must not be empty\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t// type\n\t\t\t\tif ( (oneOf && one && detectedType) || (!oneOf && detectedType) ) {\n\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back - if no type was detected, always use string\n\t\t\tif ( ! col.sType ) {\n\t\t\t\tcol.sType = 'string';\n\t\t\t}\n\t\t}\n\n\t\t// Set class names for header / footer for auto type classes\n\t\tvar autoClass = _ext.type.className[col.sType];\n\n\t\tif (autoClass) {\n\t\t\t_columnAutoClass(settings.aoHeader, i, autoClass);\n\t\t\t_columnAutoClass(settings.aoFooter, i, autoClass);\n\t\t}\n\n\t\tvar renderer = _ext.type.render[col.sType];\n\n\t\t// This can only happen once! There is no way to remove\n\t\t// a renderer. After the first time the renderer has\n\t\t// already been set so createTr will run the renderer itself.\n\t\tif (renderer && ! col._render) {\n\t\t\tcol._render = DataTable.util.get(renderer);\n\n\t\t\t_columnAutoRender(settings, i);\n\t\t}\n\t}\n}\n\n/**\n * Apply an auto detected renderer to data which doesn't yet have\n * a renderer\n */\nfunction _columnAutoRender(settings, colIdx) {\n\tvar data = settings.aoData;\n\n\tfor (var i=0 ; i<data.length ; i++) {\n\t\tif (data[i].nTr) {\n\t\t\t// We have to update the display here since there is no\n\t\t\t// invalidation check for the data\n\t\t\tvar display = _fnGetCellData( settings, i, colIdx, 'display' );\n\n\t\t\tdata[i].displayData[colIdx] = display;\n\t\t\t_fnWriteCell(data[i].anCells[colIdx], display);\n\n\t\t\t// No need to update sort / filter data since it has\n\t\t\t// been invalidated and will be re-read with the\n\t\t\t// renderer now applied\n\t\t}\n\t}\n}\n\n/**\n * Apply a class name to a column's header cells\n */\nfunction _columnAutoClass(container, colIdx, className) {\n\tcontainer.forEach(function (row) {\n\t\tif (row[colIdx] && row[colIdx].unique) {\n\t\t\t_addClass(row[colIdx].cell, className);\n\t\t}\n\t});\n}\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {array} headerLayout Layout for header as it was loaded\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, headerLayout, fn )\n{\n\tvar i, iLen, j, jLen, k, kLen, def;\n\tvar columns = oSettings.aoColumns;\n\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tif (aoCols[i] && aoCols[i].name) {\n\t\t\t\tcolumns[i].sName = aoCols[i].name;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column definitions with aTargets\n\tif ( aoColDefs )\n\t{\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tdef = aoColDefs[i];\n\n\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t? def.target\n\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t? def.targets\n\t\t\t\t\t: def.aTargets;\n\n\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t{\n\t\t\t\taTargets = [ aTargets ];\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tvar target = aTargets[j];\n\n\t\t\t\tif ( typeof target === 'number' && target >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\twhile( columns.length <= target )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\tfn( target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'number' && target < 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\tfn( columns.length+target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'string' )\n\t\t\t\t{\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ ) {\n\t\t\t\t\t\tif (target === '_all') {\n\t\t\t\t\t\t\t// Apply to all columns\n\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.indexOf(':name') !== -1) {\n\t\t\t\t\t\t\t// Column selector\n\t\t\t\t\t\t\tif (columns[k].sName === target.replace(':name', '')) {\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Cell selector\n\t\t\t\t\t\t\theaderLayout.forEach(function (row) {\n\t\t\t\t\t\t\t\tif (row[k]) {\n\t\t\t\t\t\t\t\t\tvar cell = $(row[k].cell);\n\n\t\t\t\t\t\t\t\t\t// Legacy support. Note that it means that we don't support\n\t\t\t\t\t\t\t\t\t// an element name selector only, since they are treated as\n\t\t\t\t\t\t\t\t\t// class names for 1.x compat.\n\t\t\t\t\t\t\t\t\tif (target.match(/^[a-z][\\w-]*$/i)) {\n\t\t\t\t\t\t\t\t\t\ttarget = '.' + target;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (cell.is( target )) {\n\t\t\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Statically defined columns array\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tfn( i, aoCols[i] );\n\t\t}\n\t}\n}\n\n\n/**\n * Get the width for a given set of columns\n *\n * @param {*} settings DataTables settings object\n * @param {*} targets Columns - comma separated string or array of numbers\n * @param {*} original Use the original width (true) or calculated (false)\n * @param {*} incVisible Include visible columns (true) or not (false)\n * @returns Combined CSS value\n */\nfunction _fnColumnsSumWidth( settings, targets, original, incVisible ) {\n\tif ( ! Array.isArray( targets ) ) {\n\t\ttargets = _fnColumnsFromHeader( targets );\n\t}\n\n\tvar sum = 0;\n\tvar unit;\n\tvar columns = settings.aoColumns;\n\t\n\tfor ( var i=0, ien=targets.length ; i<ien ; i++ ) {\n\t\tvar column = columns[ targets[i] ];\n\t\tvar definedWidth = original ?\n\t\t\tcolumn.sWidthOrig :\n\t\t\tcolumn.sWidth;\n\n\t\tif ( ! incVisible && column.bVisible === false ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( definedWidth === null || definedWidth === undefined ) {\n\t\t\treturn null; // can't determine a defined width - browser defined\n\t\t}\n\t\telse if ( typeof definedWidth === 'number' ) {\n\t\t\tunit = 'px';\n\t\t\tsum += definedWidth;\n\t\t}\n\t\telse {\n\t\t\tvar matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n\n\t\t\tif ( matched ) {\n\t\t\t\tsum += matched[1] * 1;\n\t\t\t\tunit = matched.length === 3 ?\n\t\t\t\t\tmatched[2] :\n\t\t\t\t\t'px';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn sum + unit;\n}\n\nfunction _fnColumnsFromHeader( cell )\n{\n\tvar attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n\n\tif ( ! attr ) {\n\t\treturn [];\n\t}\n\n\treturn attr.split(',').map( function (val) {\n\t\treturn val * 1;\n\t} );\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} settings dataTables settings object\n *  @param {array} data data array to be added\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData ( settings, dataIn, tr, tds )\n{\n\t/* Create the object for storing information about this new row */\n\tvar rowIdx = settings.aoData.length;\n\tvar rowModel = $.extend( true, {}, DataTable.models.oRow, {\n\t\tsrc: tr ? 'dom' : 'data',\n\t\tidx: rowIdx\n\t} );\n\n\trowModel._aData = dataIn;\n\tsettings.aoData.push( rowModel );\n\n\tvar columns = settings.aoColumns;\n\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tcolumns[i].sType = null;\n\t}\n\n\t/* Add to the display array */\n\tsettings.aiDisplayMaster.push( rowIdx );\n\n\tvar id = settings.rowIdFn( dataIn );\n\tif ( id !== undefined ) {\n\t\tsettings.aIds[ id ] = rowModel;\n\t}\n\n\t/* Create the DOM information, or register it if already present */\n\tif ( tr || ! settings.oFeatures.bDeferRender )\n\t{\n\t\t_fnCreateTr( settings, rowIdx, tr, tds );\n\t}\n\n\treturn rowIdx;\n}\n\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr( settings, trs )\n{\n\tvar row;\n\n\t// Allow an individual node to be passed in\n\tif ( ! (trs instanceof $) ) {\n\t\ttrs = $(trs);\n\t}\n\n\treturn trs.map( function (i, el) {\n\t\trow = _fnGetRowElements( settings, el );\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t} );\n}\n\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n{\n\tif (type === 'search') {\n\t\ttype = 'filter';\n\t}\n\telse if (type === 'order') {\n\t\ttype = 'sort';\n\t}\n\n\tvar row = settings.aoData[rowIdx];\n\n\tif (! row) {\n\t\treturn undefined;\n\t}\n\n\tvar draw           = settings.iDraw;\n\tvar col            = settings.aoColumns[colIdx];\n\tvar rowData        = row._aData;\n\tvar defaultContent = col.sDefaultContent;\n\tvar cellData       = col.fnGetData( rowData, type, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t} );\n\n\t// Allow for a node being returned for non-display types\n\tif (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n\t\tcellData = cellData.innerHTML;\n\t}\n\n\tif ( cellData === undefined ) {\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\tsettings.iDrawError = draw;\n\t\t}\n\t\treturn defaultContent;\n\t}\n\n\t// When the data source is null and a specific data type is requested (i.e.\n\t// not the original data), we can use default column data\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\tcellData = defaultContent;\n\t}\n\telse if ( typeof cellData === 'function' ) {\n\t\t// If the data source is a function, then we run it and use the return,\n\t\t// executing in the scope of the data object (for instances)\n\t\treturn cellData.call( rowData );\n\t}\n\n\tif ( cellData === null && type === 'display' ) {\n\t\treturn '';\n\t}\n\n\tif ( type === 'filter' ) {\n\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\tif ( fomatters[ col.sType ] ) {\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t}\n\t}\n\n\treturn cellData;\n}\n\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n{\n\tvar col     = settings.aoColumns[colIdx];\n\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\tcol.fnSetData( rowData, val, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t}  );\n}\n\n/**\n * Write a value to a cell\n * @param {*} td Cell\n * @param {*} val Value\n */\nfunction _fnWriteCell(td, val)\n{\n\tif (val && typeof val === 'object' && val.nodeName) {\n\t\t$(td)\n\t\t\t.empty()\n\t\t\t.append(val);\n\t}\n\telse {\n\t\ttd.innerHTML = val;\n\t}\n}\n\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation( str )\n{\n\tvar parts = str.match(/(\\\\.|[^.])+/g) || [''];\n\n\treturn parts.map( function ( s ) {\n\t\treturn s.replace(/\\\\\\./g, '.');\n\t} );\n}\n\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster ( settings )\n{\n\treturn _pluck( settings.aoData, '_aData' );\n}\n\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable( settings )\n{\n\tsettings.aoData.length = 0;\n\tsettings.aiDisplayMaster.length = 0;\n\tsettings.aiDisplay.length = 0;\n\tsettings.aIds = {};\n}\n\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n{\n\tvar row = settings.aoData[ rowIdx ];\n\tvar i, ien;\n\n\t// Remove the cached data for the row\n\trow._aSortData = null;\n\trow._aFilterData = null;\n\trow.displayData = null;\n\n\t// Are we reading last data from DOM or the data object?\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t// Read the data from the DOM\n\t\trow._aData = _fnGetRowElements(\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t)\n\t\t\t.data;\n\t}\n\telse {\n\t\t// Reading from data object, update the DOM\n\t\tvar cells = row.anCells;\n\t\tvar display = _fnGetRowDisplay(settings, rowIdx);\n\n\t\tif ( cells ) {\n\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t_fnWriteCell(cells[colIdx], display[colIdx]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnWriteCell(cells[i], display[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column specific invalidation\n\tvar cols = settings.aoColumns;\n\tif ( colIdx !== undefined ) {\n\t\t// Type - the data might have changed\n\t\tcols[ colIdx ].sType = null;\n\n\t\t// Max length string. Its a fairly cheep recalculation, so not worth\n\t\t// something more complicated\n\t\tcols[ colIdx ].maxLenString = null;\n\t}\n\telse {\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\tcols[i].sType = null;\n\t\t\tcols[i].maxLenString = null;\n\t\t}\n\n\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t_fnRowAttributes( settings, row );\n\t}\n}\n\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements( settings, row, colIdx, d )\n{\n\tvar\n\t\ttds = [],\n\t\ttd = row.firstChild,\n\t\tname, col, i=0, contents,\n\t\tcolumns = settings.aoColumns,\n\t\tobjectRead = settings._rowReadObject;\n\n\t// Allow the data object to be passed in, or construct\n\td = d !== undefined ?\n\t\td :\n\t\tobjectRead ?\n\t\t\t{} :\n\t\t\t[];\n\n\tvar attr = function ( str, td  ) {\n\t\tif ( typeof str === 'string' ) {\n\t\t\tvar idx = str.indexOf('@');\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Read data from a cell and store into the data object\n\tvar cellProcess = function ( cell ) {\n\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\tcol = columns[i];\n\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\tsetter( d, contents );\n\n\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t// be read to either an object or an array.\n\t\t\t\tif ( objectRead ) {\n\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t}\n\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td[i] = contents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t};\n\n\tif ( td ) {\n\t\t// `tr` element was passed in\n\t\twhile ( td ) {\n\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\tcellProcess( td );\n\t\t\t\ttds.push( td );\n\t\t\t}\n\n\t\t\ttd = td.nextSibling;\n\t\t}\n\t}\n\telse {\n\t\t// Existing row object passed in\n\t\ttds = row.anCells;\n\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\tcellProcess( tds[j] );\n\t\t}\n\t}\n\n\t// Read the ID from the DOM if present\n\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\tif ( rowNode ) {\n\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\tif ( id ) {\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: d,\n\t\tcells: tds\n\t};\n}\n\n/**\n * Render and cache a row's display data for the columns, if required\n * @returns \n */\nfunction _fnGetRowDisplay (settings, rowIdx) {\n\tvar rowModal = settings.aoData[rowIdx];\n\tvar columns = settings.aoColumns;\n\n\tif (! rowModal.displayData) {\n\t\t// Need to render and cache\n\t\trowModal.displayData = [];\n\t\n\t\tfor ( var colIdx=0, len=columns.length ; colIdx<len ; colIdx++ ) {\n\t\t\trowModal.displayData.push(\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'display' )\n\t\t\t);\n\t\t}\n\t}\n\n\treturn rowModal.displayData;\n}\n\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n{\n\tvar\n\t\trow = oSettings.aoData[iRow],\n\t\trowData = row._aData,\n\t\tcells = [],\n\t\tnTr, nTd, oCol,\n\t\ti, iLen, create,\n\t\ttrClass = oSettings.oClasses.tbody.row;\n\n\tif ( row.nTr === null )\n\t{\n\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\trow.nTr = nTr;\n\t\trow.anCells = cells;\n\n\t\t_addClass(nTr, trClass);\n\n\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t * to the aoData array for fast look up\n\t\t */\n\t\tnTr._DT_RowIndex = iRow;\n\n\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t_fnRowAttributes( oSettings, row );\n\n\t\t/* Process each column */\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\t\tcreate = nTrIn && anTds[i] ? false : true;\n\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\n\t\t\tif (! nTd) {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\n\t\t\tnTd._DT_CellIndex = {\n\t\t\t\trow: iRow,\n\t\t\t\tcolumn: i\n\t\t\t};\n\t\t\t\n\t\t\tcells.push( nTd );\n\t\t\t\n\t\t\tvar display = _fnGetRowDisplay(oSettings, iRow);\n\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\tif (\n\t\t\t\tcreate ||\n\t\t\t\t(\n\t\t\t\t\t(oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t(!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t_fnWriteCell(nTd, display[i]);\n\t\t\t}\n\n\t\t\t// column class\n\t\t\t_addClass(nTd, oCol.sClass);\n\n\t\t\t// Visibility - add or remove as required\n\t\t\tif ( oCol.bVisible && create )\n\t\t\t{\n\t\t\t\tnTr.appendChild( nTd );\n\t\t\t}\n\t\t\telse if ( ! oCol.bVisible && ! create )\n\t\t\t{\n\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t}\n\n\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t{\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells] );\n\t}\n\telse {\n\t\t_addClass(row.nTr, trClass);\n\t}\n}\n\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes( settings, row )\n{\n\tvar tr = row.nTr;\n\tvar data = row._aData;\n\n\tif ( tr ) {\n\t\tvar id = settings.rowIdFn( data );\n\n\t\tif ( id ) {\n\t\t\ttr.id = id;\n\t\t}\n\n\t\tif ( data.DT_RowClass ) {\n\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\ta;\n\n\t\t\t$(tr)\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t.addClass( data.DT_RowClass );\n\t\t}\n\n\t\tif ( data.DT_RowAttr ) {\n\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t}\n\n\t\tif ( data.DT_RowData ) {\n\t\t\t$(tr).data( data.DT_RowData );\n\t\t}\n\t}\n}\n\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead( settings, side )\n{\n\tvar classes = settings.oClasses;\n\tvar columns = settings.aoColumns;\n\tvar i, ien, row;\n\tvar target = side === 'header'\n\t\t? settings.nTHead\n\t\t: settings.nTFoot;\n\tvar titleProp = side === 'header' ? 'sTitle' : side;\n\n\t// Footer might be defined\n\tif (! target) {\n\t\treturn;\n\t}\n\n\t// If no cells yet and we have content for them, then create\n\tif (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\n\t\trow = $('tr', target);\n\n\t\t// Add a row if needed\n\t\tif (! row.length) {\n\t\t\trow = $('<tr/>').appendTo(target)\n\t\t}\n\n\t\t// Add the number of cells needed to make up to the number of columns\n\t\tif (row.length === 1) {\n\t\t\tvar cellCount = 0;\n\t\t\t\n\t\t\t$('td, th', row).each(function () {\n\t\t\t\tcellCount += this.colSpan;\n\t\t\t});\n\n\t\t\tfor ( i=cellCount, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\t$('<th/>')\n\t\t\t\t\t.html( columns[i][titleProp] || '' )\n\t\t\t\t\t.appendTo( row );\n\t\t\t}\n\t\t}\n\t}\n\n\tvar detected = _fnDetectHeader( settings, target, true );\n\n\tif (side === 'header') {\n\t\tsettings.aoHeader = detected;\n\t\t$('tr', target).addClass(classes.thead.row);\n\t}\n\telse {\n\t\tsettings.aoFooter = detected;\n\t\t$('tr', target).addClass(classes.tfoot.row);\n\t}\n\n\t// Every cell needs to be passed through the renderer\n\t$(target).children('tr').children('th, td')\n\t\t.each( function () {\n\t\t\t_fnRenderer( settings, side )(\n\t\t\t\tsettings, $(this), classes\n\t\t\t);\n\t\t} );\n}\n\n/**\n * Build a layout structure for a header or footer\n *\n * @param {*} settings DataTables settings\n * @param {*} source Source layout array\n * @param {*} incColumns What columns should be included\n * @returns Layout array in column index order\n */\nfunction _fnHeaderLayout( settings, source, incColumns )\n{\n\tvar row, column, cell;\n\tvar local = [];\n\tvar structure = [];\n\tvar columns = settings.aoColumns;\n\tvar columnCount = columns.length;\n\tvar rowspan, colspan;\n\n\tif ( ! source ) {\n\t\treturn;\n\t}\n\n\t// Default is to work on only visible columns\n\tif ( ! incColumns ) {\n\t\tincColumns = _range(columnCount)\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn columns[idx].bVisible;\n\t\t\t});\n\t}\n\n\t// Make a copy of the master layout array, but with only the columns we want\n\tfor ( row=0 ; row<source.length ; row++ ) {\n\t\t// Remove any columns we haven't selected\n\t\tlocal[row] = source[row].slice().filter(function (cell, i) {\n\t\t\treturn incColumns.includes(i);\n\t\t});\n\n\t\t// Prep the structure array - it needs an element for each row\n\t\tstructure.push( [] );\n\t}\n\n\tfor ( row=0 ; row<local.length ; row++ ) {\n\t\tfor ( column=0 ; column<local[row].length ; column++ ) {\n\t\t\trowspan = 1;\n\t\t\tcolspan = 1;\n\n\t\t\t// Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t// insert point. If there is, then there is nothing to do.\n\t\t\tif ( structure[row][column] === undefined ) {\n\t\t\t\tcell = local[row][column].cell;\n\n\t\t\t\t// Expand for rowspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row+rowspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row+rowspan][column].cell\n\t\t\t\t) {\n\t\t\t\t\tstructure[row+rowspan][column] = null;\n\t\t\t\t\trowspan++;\n\t\t\t\t}\n\n\t\t\t\t// And for colspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row][column+colspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row][column+colspan].cell\n\t\t\t\t) {\n\t\t\t\t\t// Which also needs to go over rows\n\t\t\t\t\tfor ( var k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tstructure[row+k][column+colspan] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolspan++;\n\t\t\t\t}\n\n\t\t\t\tvar titleSpan = $('span.dt-column-title', cell);\n\n\t\t\t\tstructure[row][column] = {\n\t\t\t\t\tcell: cell,\n\t\t\t\t\tcolspan: colspan,\n\t\t\t\t\trowspan: rowspan,\n\t\t\t\t\ttitle: titleSpan.length\n\t\t\t\t\t\t? titleSpan.html()\n\t\t\t\t\t\t: $(cell).html()\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn structure;\n}\n\n\n/**\n * Draw the header (or footer) element based on the column visibility states.\n *\n *  @param object oSettings dataTables settings object\n *  @param array aoSource Layout array from _fnDetectHeader\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead( settings, source )\n{\n\tvar layout = _fnHeaderLayout(settings, source);\n\tvar tr, n;\n\n\tfor ( var row=0 ; row<source.length ; row++ ) {\n\t\ttr = source[row].row;\n\n\t\t// All cells are going to be replaced, so empty out the row\n\t\t// Can't use $().empty() as that kills event handlers\n\t\tif (tr) {\n\t\t\twhile( (n = tr.firstChild) ) {\n\t\t\t\ttr.removeChild( n );\n\t\t\t}\n\t\t}\n\n\t\tfor ( var column=0 ; column<layout[row].length ; column++ ) {\n\t\t\tvar point = layout[row][column];\n\n\t\t\tif (point) {\n\t\t\t\t$(point.cell)\n\t\t\t\t\t.appendTo(tr)\n\t\t\t\t\t.attr('rowspan', point.rowspan)\n\t\t\t\t\t.attr('colspan', point.colspan);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw( oSettings, ajaxComplete )\n{\n\t// Allow for state saving and a custom start position\n\t_fnStart( oSettings );\n\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\tif ( aPreDraw.indexOf(false) !== -1 )\n\t{\n\t\t_fnProcessingDisplay( oSettings, false );\n\t\treturn;\n\t}\n\n\tvar anRows = [];\n\tvar iRowCount = 0;\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar aiDisplay = oSettings.aiDisplay;\n\tvar iDisplayStart = oSettings._iDisplayStart;\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\tvar columns = oSettings.aoColumns;\n\tvar body = $(oSettings.nTBody);\n\n\toSettings.bDrawing = true;\n\n\t/* Server-side processing draw intercept */\n\tif ( oSettings.deferLoading )\n\t{\n\t\toSettings.deferLoading = false;\n\t\toSettings.iDraw++;\n\t\t_fnProcessingDisplay( oSettings, false );\n\t}\n\telse if ( !bServerSide )\n\t{\n\t\toSettings.iDraw++;\n\t}\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t{\n\t\t// Show loading message for server-side processing\n\t\tif (oSettings.iDraw === 0) {\n\t\t\tbody.empty().append(_emptyRow(oSettings));\n\t\t}\n\n\t\t_fnAjaxUpdate( oSettings );\n\t\treturn;\n\t}\n\n\tif ( aiDisplay.length !== 0 )\n\t{\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t{\n\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\tif ( aoData.nTr === null )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t}\n\n\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t// Add various classes as needed\n\t\t\tfor (var i=0 ; i<columns.length ; i++) {\n\t\t\t\tvar col = columns[i];\n\t\t\t\tvar td = aoData.anCells[i];\n\n\t\t\t\t_addClass(td, _ext.type.className[col.sType]); // auto class\n\t\t\t\t_addClass(td, oSettings.oClasses.tbody.cell); // all cells\n\t\t\t}\n\n\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t// useful?\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\n\t\t\tanRows.push( nRow );\n\t\t\tiRowCount++;\n\t\t}\n\t}\n\telse\n\t{\n\t\tanRows[ 0 ] = _emptyRow(oSettings);\n\t}\n\n\t/* Header and footer callbacks */\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t// replaceChildren is faster, but only became widespread in 2020,\n\t// so a fall back in jQuery is provided for older browsers.\n\tif (body[0].replaceChildren) {\n\t\tbody[0].replaceChildren.apply(body[0], anRows);\n\t}\n\telse {\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t}\n\n\t// Empty table needs a specific class\n\t$(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n\n\t/* Call all required callback functions for the end of a draw */\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings], true );\n\n\t/* Draw is complete, sorting and filtering must be as well */\n\toSettings.bSorted = false;\n\toSettings.bFiltered = false;\n\toSettings.bDrawing = false;\n}\n\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw( settings, holdPosition, recompute )\n{\n\tvar\n\t\tfeatures = settings.oFeatures,\n\t\tsort     = features.bSort,\n\t\tfilter   = features.bFilter;\n\n\tif (recompute === undefined || recompute === true) {\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t_fnColumnTypes( settings );\n\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t}\n\n\tif ( holdPosition !== true ) {\n\t\tsettings._iDisplayStart = 0;\n\t}\n\n\t// Let any modules know about the draw hold position state (used by\n\t// scrolling internally)\n\tsettings._drawHold = holdPosition;\n\n\t_fnDraw( settings );\n\n\tsettings.api.one('draw', function () {\n\t\tsettings._drawHold = false;\n\t});\n}\n\n\n/*\n * Table is empty - create a row with an empty message in it\n */\nfunction _emptyRow ( settings ) {\n\tvar oLang = settings.oLanguage;\n\tvar zero = oLang.sZeroRecords;\n\tvar dataSrc = _fnDataSource( settings );\n\n\t// Make use of the fact that settings.json is only set once the initial data has\n\t// been loaded. Show loading when that isn't the case\n\tif ((dataSrc === 'ssp' || dataSrc === 'ajax') && ! settings.json) {\n\t\tzero = oLang.sLoadingRecords;\n\t}\n\telse if ( oLang.sEmptyTable && settings.fnRecordsTotal() === 0 )\n\t{\n\t\tzero = oLang.sEmptyTable;\n\t}\n\n\treturn $( '<tr/>' )\n\t\t.append( $('<td />', {\n\t\t\t'colSpan': _fnVisbleColumns( settings ),\n\t\t\t'class':   settings.oClasses.empty.row\n\t\t} ).html( zero ) )[0];\n}\n\n\n/**\n * Expand the layout items into an object for the rendering function\n */\nfunction _layoutItems (row, align, items) {\n\tif ( Array.isArray(items)) {\n\t\tfor (var i=0 ; i<items.length ; i++) {\n\t\t\t_layoutItems(row, align, items[i]);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tvar rowCell = row[align];\n\n\t// If it is an object, then there can be multiple features contained in it\n\tif ( $.isPlainObject( items ) ) {\n\t\t// A feature plugin cannot be named \"features\" due to this check\n\t\tif (items.features) {\n\t\t\tif (items.rowId) {\n\t\t\t\trow.id = items.rowId;\n\t\t\t}\n\t\t\tif (items.rowClass) {\n\t\t\t\trow.className = items.rowClass;\n\t\t\t}\n\n\t\t\trowCell.id = items.id;\n\t\t\trowCell.className = items.className;\n\n\t\t\t_layoutItems(row, align, items.features);\n\t\t}\n\t\telse {\n\t\t\tObject.keys(items).map(function (key) {\n\t\t\t\trowCell.contents.push( {\n\t\t\t\t\tfeature: key,\n\t\t\t\t\topts: items[key]\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\telse {\n\t\trowCell.contents.push(items);\n\t}\n}\n\n/**\n * Find, or create a layout row\n */\nfunction _layoutGetRow(rows, rowNum, align) {\n\tvar row;\n\n\t// Find existing rows\n\tfor (var i=0; i<rows.length; i++) {\n\t\trow = rows[i];\n\n\t\tif (row.rowNum === rowNum) {\n\t\t\t// full is on its own, but start and end share a row\n\t\t\tif (\n\t\t\t\t(align === 'full' && row.full) ||\n\t\t\t\t((align === 'start' || align === 'end') && (row.start || row.end))\n\t\t\t) {\n\t\t\t\tif (! row[align]) {\n\t\t\t\t\trow[align] = {\n\t\t\t\t\t\tcontents: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\t\t}\n\t}\n\n\t// If we get this far, then there was no match, create a new row\n\trow = {\n\t\trowNum: rowNum\t\n\t};\n\n\trow[align] = {\n\t\tcontents: []\n\t};\n\n\trows.push(row);\n\n\treturn row;\n}\n\n/**\n * Convert a `layout` object given by a user to the object structure needed\n * for the renderer. This is done twice, once for above and once for below\n * the table. Ordering must also be considered.\n *\n * @param {*} settings DataTables settings object\n * @param {*} layout Layout object to convert\n * @param {string} side `top` or `bottom`\n * @returns Converted array structure - one item for each row.\n */\nfunction _layoutArray ( settings, layout, side ) {\n\tvar rows = [];\n\t\n\t// Split out into an array\n\t$.each( layout, function ( pos, items ) {\n\t\tif (items === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar parts = pos.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/);\n\t\tvar rowNum = parts[2]\n\t\t\t? parts[2] * 1\n\t\t\t: 0;\n\t\tvar align = parts[3]\n\t\t\t? parts[3].toLowerCase()\n\t\t\t: 'full';\n\n\t\t// Filter out the side we aren't interested in\n\t\tif (parts[1] !== side) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get or create the row we should attach to\n\t\tvar row = _layoutGetRow(rows, rowNum, align);\n\n\t\t_layoutItems(row, align, items);\n\t});\n\n\t// Order by item identifier\n\trows.sort( function ( a, b ) {\n\t\tvar order1 = a.rowNum;\n\t\tvar order2 = b.rowNum;\n\n\t\t// If both in the same row, then the row with `full` comes first\n\t\tif (order1 === order2) {\n\t\t\tvar ret = a.full && ! b.full ? -1 : 1;\n\n\t\t\treturn side === 'bottom'\n\t\t\t\t? ret * -1\n\t\t\t\t: ret;\n\t\t}\n\n\t\treturn order2 - order1;\n\t} );\n\n\t// Invert for below the table\n\tif ( side === 'bottom' ) {\n\t\trows.reverse();\n\t}\n\n\tfor (var row = 0; row<rows.length; row++) {\n\t\tdelete rows[row].rowNum;\n\n\t\t_layoutResolve(settings, rows[row]);\n\t}\n\n\treturn rows;\n}\n\n\n/**\n * Convert the contents of a row's layout object to nodes that can be inserted\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\n *\n * @param {*} settings DataTables settings object\n * @param {*} row Layout object for this row\n */\nfunction _layoutResolve( settings, row ) {\n\tvar getFeature = function (feature, opts) {\n\t\tif ( ! _ext.features[ feature ] ) {\n\t\t\t_fnLog( settings, 0, 'Unknown feature: '+ feature );\n\t\t}\n\n\t\treturn _ext.features[ feature ].apply( this, [settings, opts] );\n\t};\n\n\tvar resolve = function ( item ) {\n\t\tif (! row[ item ]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar line = row[ item ].contents;\n\n\t\tfor ( var i=0, ien=line.length ; i<ien ; i++ ) {\n\t\t\tif ( ! line[i] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'string' ) {\n\t\t\t\tline[i] = getFeature( line[i], null );\n\t\t\t}\n\t\t\telse if ( $.isPlainObject(line[i]) ) {\n\t\t\t\t// If it's an object, it just has feature and opts properties from\n\t\t\t\t// the transform in _layoutArray\n\t\t\t\tline[i] = getFeature(line[i].feature, line[i].opts);\n\t\t\t}\n\t\t\telse if ( typeof line[i].node === 'function' ) {\n\t\t\t\tline[i] = line[i].node( settings );\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'function' ) {\n\t\t\t\tvar inst = line[i]( settings );\n\n\t\t\t\tline[i] = typeof inst.node === 'function' ?\n\t\t\t\t\tinst.node() :\n\t\t\t\t\tinst;\n\t\t\t}\n\t\t}\n\t};\n\n\tresolve('start');\n\tresolve('end');\n\tresolve('full');\n}\n\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} settings DataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml ( settings )\n{\n\tvar classes = settings.oClasses;\n\tvar table = $(settings.nTable);\n\n\t// Wrapper div around everything DataTables controls\n\tvar insert = $('<div/>')\n\t\t.attr({\n\t\t\tid:      settings.sTableId+'_wrapper',\n\t\t\t'class': classes.container\n\t\t})\n\t\t.insertBefore(table);\n\n\tsettings.nTableWrapper = insert[0];\n\n\tif (settings.sDom) {\n\t\t// Legacy\n\t\t_fnLayoutDom(settings, settings.sDom, insert);\n\t}\n\telse {\n\t\tvar top = _layoutArray( settings, settings.layout, 'top' );\n\t\tvar bottom = _layoutArray( settings, settings.layout, 'bottom' );\n\t\tvar renderer = _fnRenderer( settings, 'layout' );\n\t\n\t\t// Everything above - the renderer will actually insert the contents into the document\n\t\ttop.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\n\t\t// The table - always the center of attention\n\t\trenderer( settings, insert, {\n\t\t\tfull: {\n\t\t\t\ttable: true,\n\t\t\t\tcontents: [ _fnFeatureHtmlTable(settings) ]\n\t\t\t}\n\t\t} );\n\n\t\t// Everything below\n\t\tbottom.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\t}\n\n\t// Processing floats on top, so it isn't an inserted feature\n\t_processingHtml( settings );\n}\n\n/**\n * Draw the table with the legacy DOM property\n * @param {*} settings DT settings object\n * @param {*} dom DOM string\n * @param {*} insert Insert point\n */\nfunction _fnLayoutDom( settings, dom, insert )\n{\n\tvar parts = dom.match(/(\".*?\")|('.*?')|./g);\n\tvar featureNode, option, newNode, next, attr;\n\n\tfor ( var i=0 ; i<parts.length ; i++ ) {\n\t\tfeatureNode = null;\n\t\toption = parts[i];\n\n\t\tif ( option == '<' ) {\n\t\t\t// New container div\n\t\t\tnewNode = $('<div/>');\n\n\t\t\t// Check to see if we should append an id and/or a class name to the container\n\t\t\tnext = parts[i+1];\n\n\t\t\tif ( next[0] == \"'\" || next[0] == '\"' ) {\n\t\t\t\tattr = next.replace(/['\"]/g, '');\n\n\t\t\t\tvar id = '', className;\n\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t */\n\t\t\t\tif ( attr.indexOf('.') != -1 ) {\n\t\t\t\t\tvar split = attr.split('.');\n\n\t\t\t\t\tid = split[0];\n\t\t\t\t\tclassName = split[1];\n\t\t\t\t}\n\t\t\t\telse if ( attr[0] == \"#\" ) {\n\t\t\t\t\tid = attr;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tclassName = attr;\n\t\t\t\t}\n\n\t\t\t\tnewNode\n\t\t\t\t\t.attr('id', id.substring(1))\n\t\t\t\t\t.addClass(className);\n\n\t\t\t\ti++; // Move along the position array\n\t\t\t}\n\n\t\t\tinsert.append( newNode );\n\t\t\tinsert = newNode;\n\t\t}\n\t\telse if ( option == '>' ) {\n\t\t\t// End container div\n\t\t\tinsert = insert.parent();\n\t\t}\n\t\telse if ( option == 't' ) {\n\t\t\t// Table\n\t\t\tfeatureNode = _fnFeatureHtmlTable( settings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDataTable.ext.feature.forEach(function(feature) {\n\t\t\t\tif ( option == feature.cFeature ) {\n\t\t\t\t\tfeatureNode = feature.fnInit( settings );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Add to the display\n\t\tif ( featureNode ) {\n\t\t\tinsert.append( featureNode );\n\t\t}\n\t}\n}\n\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param {node} thead The header/footer element for the table\n *  @returns {array} Calculated layout array\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader ( settings, thead, write )\n{\n\tvar columns = settings.aoColumns;\n\tvar rows = $(thead).children('tr');\n\tvar row, cell;\n\tvar i, k, l, iLen, shifted, column, colspan, rowspan;\n\tvar titleRow = settings.titleRow;\n\tvar isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n\tvar layout = [];\n\tvar unique;\n\tvar shift = function ( a, i, j ) {\n\t\tvar k = a[i];\n\t\twhile ( k[j] ) {\n\t\t\tj++;\n\t\t}\n\t\treturn j;\n\t};\n\n\t// We know how many rows there are in the layout - so prep it\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\tlayout.push( [] );\n\t}\n\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\trow = rows[i];\n\t\tcolumn = 0;\n\n\t\t// For every cell in the row..\n\t\tcell = row.firstChild;\n\t\twhile ( cell ) {\n\t\t\tif (\n\t\t\t\tcell.nodeName.toUpperCase() == 'TD' ||\n\t\t\t\tcell.nodeName.toUpperCase() == 'TH'\n\t\t\t) {\n\t\t\t\tvar cols = [];\n\t\t\t\tvar jqCell = $(cell);\n\n\t\t\t\t// Get the col and rowspan attributes from the DOM and sanitise them\n\t\t\t\tcolspan = cell.getAttribute('colspan') * 1;\n\t\t\t\trowspan = cell.getAttribute('rowspan') * 1;\n\t\t\t\tcolspan = (!colspan || colspan===0 || colspan===1) ? 1 : colspan;\n\t\t\t\trowspan = (!rowspan || rowspan===0 || rowspan===1) ? 1 : rowspan;\n\n\t\t\t\t// There might be colspan cells already in this row, so shift our target\n\t\t\t\t// accordingly\n\t\t\t\tshifted = shift( layout, i, column );\n\n\t\t\t\t// Cache calculation for unique columns\n\t\t\t\tunique = colspan === 1 ?\n\t\t\t\t\ttrue :\n\t\t\t\t\tfalse;\n\t\t\t\t\n\t\t\t\t// Perform header setup\n\t\t\t\tif ( write ) {\n\t\t\t\t\tif (unique) {\n\t\t\t\t\t\t// Allow column options to be set from HTML attributes\n\t\t\t\t\t\t_fnColumnOptions( settings, shifted, _fnEscapeObject(jqCell.data()) );\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Get the width for the column. This can be defined from the\n\t\t\t\t\t\t// width attribute, style attribute or `columns.width` option\n\t\t\t\t\t\tvar columnDef = columns[shifted];\n\t\t\t\t\t\tvar width = cell.getAttribute('width') || null;\n\t\t\t\t\t\tvar t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\t\t\t\tif ( t ) {\n\t\t\t\t\t\t\twidth = t[1];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcolumnDef.sWidthOrig = columnDef.sWidth || width;\n\n\t\t\t\t\t\tif (isHeader) {\n\t\t\t\t\t\t\t// Column title handling - can be user set, or read from the DOM\n\t\t\t\t\t\t\t// This happens before the render, so the original is still in place\n\t\t\t\t\t\t\tif ( columnDef.sTitle !== null && ! columnDef.autoTitle ) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t(titleRow === true && i === 0) || // top row\n\t\t\t\t\t\t\t\t\t(titleRow === false && i === rows.length -1) || // bottom row\n\t\t\t\t\t\t\t\t\t(titleRow === i) || // specific row\n\t\t\t\t\t\t\t\t\t(titleRow === null)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.sTitle;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (! columnDef.sTitle && unique) {\n\t\t\t\t\t\t\t\tcolumnDef.sTitle = _stripHtml(cell.innerHTML);\n\t\t\t\t\t\t\t\tcolumnDef.autoTitle = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Footer specific operations\n\t\t\t\t\t\t\tif (columnDef.footer) {\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.footer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\n\t\t\t\t\t\t// provided.\n\t\t\t\t\t\tif (! columnDef.ariaTitle) {\n\t\t\t\t\t\t\tcolumnDef.ariaTitle = jqCell.attr(\"aria-label\") || columnDef.sTitle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Column specific class names\n\t\t\t\t\t\tif ( columnDef.className ) {\n\t\t\t\t\t\t\tjqCell.addClass( columnDef.className );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wrap the column title so we can write to it in future\n\t\t\t\t\tif ( $('span.dt-column-title', cell).length === 0) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-title')\n\t\t\t\t\t\t\t.append(cell.childNodes)\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tsettings.orderIndicators &&\n\t\t\t\t\t\tisHeader &&\n\t\t\t\t\t\tjqCell.filter(':not([data-dt-order=disable])').length !== 0 &&\n\t\t\t\t\t\tjqCell.parent(':not([data-dt-order=disable])').length !== 0 &&\n\t\t\t\t\t\t$('span.dt-column-order', cell).length === 0\n\t\t\t\t\t) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-order')\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\n\t\t\t\t\t// We need to wrap the elements in the header in another element to use flexbox\n\t\t\t\t\t// layout for those elements\n\t\t\t\t\tvar headerFooter = isHeader ? 'header' : 'footer';\n\n\t\t\t\t\tif ( $('span.dt-column-' + headerFooter, cell).length === 0) {\n\t\t\t\t\t\t$('<div>')\n\t\t\t\t\t\t\t.addClass('dt-column-' + headerFooter)\n\t\t\t\t\t\t\t.append(cell.childNodes)\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If there is col / rowspan, copy the information into the layout grid\n\t\t\t\tfor ( l=0 ; l<colspan ; l++ ) {\n\t\t\t\t\tfor ( k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tlayout[i+k][shifted+l] = {\n\t\t\t\t\t\t\tcell: cell,\n\t\t\t\t\t\t\tunique: unique\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlayout[i+k].row = row;\n\t\t\t\t\t}\n\n\t\t\t\t\tcols.push( shifted+l );\n\t\t\t\t}\n\n\t\t\t\t// Assign an attribute so spanning cells can still be identified\n\t\t\t\t// as belonging to a column\n\t\t\t\tcell.setAttribute('data-dt-column', _unique(cols).join(','));\n\t\t\t}\n\n\t\t\tcell = cell.nextSibling;\n\t\t}\n\t}\n\n\treturn layout;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart( oSettings )\n{\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t// Check and see if we have an initial draw position from state saving\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t{\n\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\tiInitDisplayStart :\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t0 :\n\t\t\t\tiInitDisplayStart;\n\n\t\toSettings.iInitDisplayStart = -1;\n\t}\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax( oSettings, data, fn )\n{\n\tvar ajaxData;\n\tvar ajax = oSettings.ajax;\n\tvar instance = oSettings.oInstance;\n\tvar callback = function ( json ) {\n\t\tvar status = oSettings.jqXHR\n\t\t\t? oSettings.jqXHR.status\n\t\t\t: null;\n\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\tjson = {};\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t}\n\n\t\tvar error = json.error || json.sError;\n\t\tif ( error ) {\n\t\t\t_fnLog( oSettings, 0, error );\n\t\t}\n\n\t\t// Microsoft often wrap JSON as a string in another JSON object\n\t\t// Let's handle that automatically\n\t\tif (json.d && typeof json.d === 'string') {\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(json.d);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// noop\n\t\t\t}\n\t\t}\n\n\t\toSettings.json = json;\n\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true );\n\t\tfn( json );\n\t};\n\n\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t{\n\t\tajaxData = ajax.data;\n\n\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t// If the function returned something, use that alone\n\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\tnewData :\n\t\t\t$.extend( true, data, newData );\n\n\t\t// Remove the data property as we've resolved it already and don't want\n\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\tdelete ajax.data;\n\t}\n\n\tvar baseAjax = {\n\t\t\"url\": typeof ajax === 'string' ?\n\t\t\tajax :\n\t\t\t'',\n\t\t\"data\": data,\n\t\t\"success\": callback,\n\t\t\"dataType\": \"json\",\n\t\t\"cache\": false,\n\t\t\"type\": oSettings.sServerMethod,\n\t\t\"error\": function (xhr, error) {\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true );\n\n\t\t\tif ( ret.indexOf(true) === -1 ) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t}\n\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t};\n\n\t// If `ajax` option is an object, extend and override our default base\n\tif ( $.isPlainObject( ajax ) ) {\n\t\t$.extend( baseAjax, ajax )\n\t}\n\n\t// Store the data submitted for the API\n\toSettings.oAjaxData = data;\n\n\t// Allow plug-ins and external processes to modify the data\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data, baseAjax], true );\n\n\t// Custom Ajax option to submit the parameters as a JSON string\n\tif (baseAjax.submitAs === 'json' && typeof data === 'object') {\n\t\tbaseAjax.data = JSON.stringify(data);\n\t}\n\n\tif ( typeof ajax === 'function' )\n\t{\n\t\t// Is a function - let the caller define what needs to be done\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t}\n\telse if (ajax.url === '') {\n\t\t// No url, so don't load any data. Just apply an empty data array\n\t\t// to the object for the callback.\n\t\tvar empty = {};\n\n\t\t_fnAjaxDataSrc(oSettings, empty, []);\n\t\tcallback(empty);\n\t}\n\telse {\n\t\t// Object to extend the base settings\n\t\toSettings.jqXHR = $.ajax( baseAjax );\n\t}\n\n\t// Restore for next time around\n\tif ( ajaxData ) {\n\t\tajax.data = ajaxData;\n\t}\n}\n\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate( settings )\n{\n\tsettings.iDraw++;\n\t_fnProcessingDisplay( settings, true );\n\n\t_fnBuildAjax(\n\t\tsettings,\n\t\t_fnAjaxParameters( settings ),\n\t\tfunction(json) {\n\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t}\n\t);\n}\n\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters( settings )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tfeatures = settings.oFeatures,\n\t\tpreSearch = settings.oPreviousSearch,\n\t\tpreColSearch = settings.aoPreSearchCols,\n\t\tcolData = function ( idx, prop ) {\n\t\t\treturn typeof columns[idx][prop] === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\tcolumns[idx][prop];\n\t\t};\n\n\treturn {\n\t\tdraw: settings.iDraw,\n\t\tcolumns: columns.map( function ( column, i ) {\n\t\t\treturn {\n\t\t\t\tdata: colData(i, 'mData'),\n\t\t\t\tname: column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable: column.bSortable,\n\t\t\t\tsearch: {\n\t\t\t\t\tvalue: preColSearch[i].search,\n\t\t\t\t\tregex: preColSearch[i].regex,\n\t\t\t\t\tfixed: Object.keys(column.searchFixed).map( function(name) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tterm: column.searchFixed[name].toString()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t};\n\t\t} ),\n\t\torder: _fnSortFlatten( settings ).map( function ( val ) {\n\t\t\treturn {\n\t\t\t\tcolumn: val.col,\n\t\t\t\tdir: val.dir,\n\t\t\t\tname: colData(val.col, 'sName')\n\t\t\t};\n\t\t} ),\n\t\tstart: settings._iDisplayStart,\n\t\tlength: features.bPaginate ?\n\t\t\tsettings._iDisplayLength :\n\t\t\t-1,\n\t\tsearch: {\n\t\t\tvalue: preSearch.search,\n\t\t\tregex: preSearch.regex,\n\t\t\tfixed: Object.keys(settings.searchFixed).map( function(name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: name,\n\t\t\t\t\tterm: settings.searchFixed[name].toString()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t};\n}\n\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw ( settings, json )\n{\n\tvar data = _fnAjaxDataSrc(settings, json);\n\tvar draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n\tvar recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n\tvar recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n\n\tif ( draw !== undefined ) {\n\t\t// Protect against out of sequence returns\n\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.iDraw = draw * 1;\n\t}\n\n\t// No data in returned object, so rather than an array, we show an empty table\n\tif ( ! data ) {\n\t\tdata = [];\n\t}\n\n\t_fnClearTable( settings );\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t_fnAddData( settings, data[i] );\n\t}\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t_fnColumnTypes(settings);\n\t_fnDraw( settings, true );\n\t_fnInitComplete( settings );\n\t_fnProcessingDisplay( settings, false );\n}\n\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} settings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\nfunction _fnAjaxDataSrc ( settings, json, write )\n{\n\tvar dataProp = 'data';\n\n\tif ($.isPlainObject( settings.ajax ) && settings.ajax.dataSrc !== undefined) {\n\t\t// Could in inside a `dataSrc` object, or not!\n\t\tvar dataSrc = settings.ajax.dataSrc;\n\n\t\t// string, function and object are valid types\n\t\tif (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n\t\t\tdataProp = dataSrc;\n\t\t}\n\t\telse if (dataSrc.data !== undefined) {\n\t\t\tdataProp = dataSrc.data;\n\t\t}\n\t}\n\n\tif ( ! write ) {\n\t\tif ( dataProp === 'data' ) {\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t// it if possible\n\t\t\treturn json.aaData || json[dataProp];\n\t\t}\n\n\t\treturn dataProp !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataProp )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t// set\n\t_fnSetObjectDataFn( dataProp )( json, write );\n}\n\n/**\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n * @param {*} settings DataTables settings object\n * @param {*} param Target parameter\n * @param {*} json JSON data\n * @returns Resolved value\n */\nfunction _fnAjaxDataSrcParam (settings, param, json) {\n\tvar dataSrc = $.isPlainObject( settings.ajax )\n\t\t? settings.ajax.dataSrc\n\t\t: null;\n\n\tif (dataSrc && dataSrc[param]) {\n\t\t// Get from custom location\n\t\treturn _fnGetObjectDataFn( dataSrc[param] )( json );\n\t}\n\n\t// else - Default behaviour\n\tvar old = '';\n\n\t// Legacy support\n\tif (param === 'draw') {\n\t\told = 'sEcho';\n\t}\n\telse if (param === 'recordsTotal') {\n\t\told = 'iTotalRecords';\n\t}\n\telse if (param === 'recordsFiltered') {\n\t\told = 'iTotalDisplayRecords';\n\t}\n\n\treturn json[old] !== undefined\n\t\t? json[old]\n\t\t: json[param];\n}\n\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} settings dataTables settings object\n *  @param {object} input search information\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete ( settings, input )\n{\n\tvar columnsSearch = settings.aoPreSearchCols;\n\n\t// In server-side processing all filtering is done by the server, so no point hanging around here\n\tif ( _fnDataSource( settings ) != 'ssp' )\n\t{\n\t\t// Check if any of the rows were invalidated\n\t\t_fnFilterData( settings );\n\n\t\t// Start from the full data set\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t// Global filter first\n\t\t_fnFilter( settings.aiDisplay, settings, input.search, input );\n\n\t\t$.each(settings.searchFixed, function (name, term) {\n\t\t\t_fnFilter(settings.aiDisplay, settings, term, {});\n\t\t});\n\n\t\t// Then individual column filters\n\t\tfor ( var i=0 ; i<columnsSearch.length ; i++ )\n\t\t{\n\t\t\tvar col = columnsSearch[i];\n\n\t\t\t_fnFilter(\n\t\t\t\tsettings.aiDisplay,\n\t\t\t\tsettings,\n\t\t\t\tcol.search,\n\t\t\t\tcol,\n\t\t\t\ti\n\t\t\t);\n\n\t\t\t$.each(settings.aoColumns[i].searchFixed, function (name, term) {\n\t\t\t\t_fnFilter(settings.aiDisplay, settings, term, {}, i);\n\t\t\t});\n\t\t}\n\n\t\t// And finally global filtering\n\t\t_fnFilterCustom( settings );\n\t}\n\n\t// Tell the draw function we have been filtering\n\tsettings.bFiltered = true;\n\n\t_fnCallbackFire( settings, null, 'search', [settings] );\n}\n\n\n/**\n * Apply custom filtering functions\n * \n * This is legacy now that we have named functions, but it is widely used\n * from 1.x, so it is not yet deprecated.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom( settings )\n{\n\tvar filters = DataTable.ext.search;\n\tvar displayRows = settings.aiDisplay;\n\tvar row, rowIdx;\n\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\tvar rows = [];\n\n\t\t// Loop over each row and see if it should be included\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\trowIdx = displayRows[ j ];\n\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\trows.push( rowIdx );\n\t\t\t}\n\t\t}\n\n\t\t// So the array reference doesn't break set the results into the\n\t\t// existing array\n\t\tdisplayRows.length = 0;\n\t\t_fnArrayApply(displayRows, rows);\n\t}\n}\n\n\n/**\n * Filter the data table based on user input and draw the table\n */\nfunction _fnFilter( searchRows, settings, input, options, column )\n{\n\tif ( input === '' ) {\n\t\treturn;\n\t}\n\n\tvar i = 0;\n\tvar matched = [];\n\n\t// Search term can be a function, regex or string - if a string we apply our\n\t// smart filtering regex (assuming the options require that)\n\tvar searchFunc = typeof input === 'function' ? input : null;\n\tvar rpSearch = input instanceof RegExp\n\t\t? input\n\t\t: searchFunc\n\t\t\t? null\n\t\t\t: _fnFilterCreateSearch( input, options );\n\n\t// Then for each row, does the test pass. If not, lop the row from the array\n\tfor (i=0 ; i<searchRows.length ; i++) {\n\t\tvar row = settings.aoData[ searchRows[i] ];\n\t\tvar data = column === undefined\n\t\t\t? row._sFilterRow\n\t\t\t: row._aFilterData[ column ];\n\n\t\tif ( (searchFunc && searchFunc(data, row._aData, searchRows[i], column)) || (rpSearch && rpSearch.test(data)) ) {\n\t\t\tmatched.push(searchRows[i]);\n\t\t}\n\t}\n\n\t// Mutate the searchRows array\n\tsearchRows.length = matched.length;\n\n\tfor (i=0 ; i<matched.length ; i++) {\n\t\tsearchRows[i] = matched[i];\n\t}\n}\n\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch( search, inOpts )\n{\n\tvar not = [];\n\tvar options = $.extend({}, {\n\t\tboundary: false,\n\t\tcaseInsensitive: true,\n\t\texact: false,\n\t\tregex: false,\n\t\tsmart: true\n\t}, inOpts);\n\n\tif (typeof search !== 'string') {\n\t\tsearch = search.toString();\n\t}\n\n\t// Remove diacritics if normalize is set up to do so\n\tsearch = _normalize(search);\n\n\tif (options.exact) {\n\t\treturn new RegExp(\n\t\t\t'^'+_fnEscapeRegex(search)+'$',\n\t\t\toptions.caseInsensitive ? 'i' : ''\n\t\t);\n\t}\n\n\tsearch = options.regex ?\n\t\tsearch :\n\t\t_fnEscapeRegex( search );\n\t\n\tif ( options.smart ) {\n\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t * order is important - a la google. And a negative look around for\n\t\t * finding rows which don't contain a given string.\n\t\t * \n\t\t * So this is the sort of thing we want to generate:\n\t\t * \n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t */\n\t\tvar parts = search.match( /!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''];\n\t\tvar a = parts.map( function ( word ) {\n\t\t\tvar negative = false;\n\t\t\tvar m;\n\n\t\t\t// Determine if it is a \"does not include\"\n\t\t\tif ( word.charAt(0) === '!' ) {\n\t\t\t\tnegative = true;\n\t\t\t\tword = word.substring(1);\n\t\t\t}\n\n\t\t\t// Strip the quotes from around matched phrases\n\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\tm = word.match( /^\"(.*)\"$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\n\t\t\t\t// Smart quote match (iPhone users)\n\t\t\t\tm = word.match( /^\\u201C(.*)\\u201D$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\n\t\t\t// For our \"not\" case, we need to modify the string that is\n\t\t\t// allowed to match at the end of the expression.\n\t\t\tif (negative) {\n\t\t\t\tif (word.length > 1) {\n\t\t\t\t\tnot.push('(?!'+word+')');\n\t\t\t\t}\n\n\t\t\t\tword = '';\n\t\t\t}\n\n\t\t\treturn word.replace(/\"/g, '');\n\t\t} );\n\n\t\tvar match = not.length\n\t\t\t? not.join('')\n\t\t\t: '';\n\n\t\tvar boundary = options.boundary\n\t\t\t? '\\\\b'\n\t\t\t: '';\n\n\t\tsearch = '^(?=.*?'+boundary+a.join( ')(?=.*?'+boundary )+')('+match+'.)*$';\n\t}\n\n\treturn new RegExp( search, options.caseInsensitive ? 'i' : '' );\n}\n\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar column;\n\tvar j, jen, filterData, cellData, row;\n\tvar wasInvalidated = false;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aFilterData ) {\n\t\t\tfilterData = [];\n\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\tcolumn = columns[j];\n\n\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\tcellData = _fnGetCellData( settings, rowIdx, j, 'filter' );\n\n\t\t\t\t\t// Search in DataTables is string based\n\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcellData = '';\n\t\t\t\t}\n\n\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t}\n\n\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t}\n\n\t\t\t\tfilterData.push( cellData );\n\t\t\t}\n\n\t\t\trow._aFilterData = filterData;\n\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\twasInvalidated = true;\n\t\t}\n\t}\n\n\treturn wasInvalidated;\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise ( settings )\n{\n\tvar i;\n\tvar init = settings.oInit;\n\tvar deferLoading = settings.deferLoading;\n\tvar dataSrc = _fnDataSource( settings );\n\n\t// Ensure that the table data is fully initialised\n\tif ( ! settings.bInitialised ) {\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\treturn;\n\t}\n\n\t// Build the header / footer for the table\n\t_fnBuildHead( settings, 'header' );\n\t_fnBuildHead( settings, 'footer' );\n\n\t// Load the table's state (if needed) and then render around it and draw\n\t_fnLoadState( settings, init, function () {\n\t\t// Then draw the header / footer\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\n\t\t// Cache the paging start point, as the first redraw will reset it\n\t\tvar iAjaxStart = settings.iInitDisplayStart\n\n\t\t// Local data load\n\t\t// Check if there is data passing into the constructor\n\t\tif ( init.aaData ) {\n\t\t\tfor ( i=0 ; i<init.aaData.length ; i++ ) {\n\t\t\t\t_fnAddData( settings, init.aaData[ i ] );\n\t\t\t}\n\t\t}\n\t\telse if ( deferLoading || dataSrc == 'dom' ) {\n\t\t\t// Grab the data from the page\n\t\t\t_fnAddTr( settings, $(settings.nTBody).children('tr') );\n\t\t}\n\n\t\t// Filter not yet applied - copy the display master\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t// Enable features\n\t\t_fnAddOptionsHtml( settings );\n\t\t_fnSortInit( settings );\n\n\t\t_colGroup( settings );\n\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings], true );\n\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, {}, function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t\t_fnReDraw( settings );\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t}\n\t\t}\n\t} );\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete ( settings )\n{\n\tif (settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar args = [settings, settings.json];\n\n\tsettings._bInitComplete = true;\n\n\t// Table is fully set up and we have data, so calculate the\n\t// column widths\n\t_fnAdjustColumnSizing( settings );\n\n\t_fnCallbackFire( settings, null, 'plugin-init', args, true );\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', args, true );\n}\n\nfunction _fnLengthChange ( settings, val )\n{\n\tvar len = parseInt( val, 10 );\n\tsettings._iDisplayLength = len;\n\n\t_fnLengthOverflow( settings );\n\n\t// Fire length change event\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n}\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange ( settings, action, redraw )\n{\n\tvar\n\t\tstart     = settings._iDisplayStart,\n\t\tlen       = settings._iDisplayLength,\n\t\trecords   = settings.fnRecordsDisplay();\n\n\tif ( records === 0 || len === -1 )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( typeof action === \"number\" )\n\t{\n\t\tstart = action * len;\n\n\t\tif ( start > records )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"first\" )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( action == \"previous\" )\n\t{\n\t\tstart = len >= 0 ?\n\t\t\tstart - len :\n\t\t\t0;\n\n\t\tif ( start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"next\" )\n\t{\n\t\tif ( start + len < records )\n\t\t{\n\t\t\tstart += len;\n\t\t}\n\t}\n\telse if ( action == \"last\" )\n\t{\n\t\tstart = Math.floor( (records-1) / len) * len;\n\t}\n\telse if ( action === 'ellipsis' )\n\t{\n\t\treturn;\n\t}\n\telse\n\t{\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t}\n\n\tvar changed = settings._iDisplayStart !== start;\n\tsettings._iDisplayStart = start;\n\n\t_fnCallbackFire( settings, null, changed ? 'page' : 'page-nc', [settings] );\n\n\tif ( changed && redraw ) {\n\t\t_fnDraw( settings );\n\t}\n\n\treturn changed;\n}\n\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings DataTables settings object\n */\nfunction _processingHtml ( settings )\n{\n\tvar table = settings.nTable;\n\tvar scrolling = settings.oScroll.sX !== '' || settings.oScroll.sY !== '';\n\n\tif ( settings.oFeatures.bProcessing ) {\n\t\tvar n = $('<div/>', {\n\t\t\t\t'id': settings.sTableId + '_processing',\n\t\t\t\t'class': settings.oClasses.processing.container,\n\t\t\t\t'role': 'status'\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>');\n\n\t\t// Different positioning depending on if scrolling is enabled or not\n\t\tif (scrolling) {\n\t\t\tn.prependTo( $('div.dt-scroll', settings.nTableWrapper) );\n\t\t}\n\t\telse {\n\t\t\tn.insertBefore( table );\n\t\t}\n\n\t\t$(table).on( 'processing.dt.DT', function (e, s, show) {\n\t\t\tn.css( 'display', show ? 'block' : 'none' );\n\t\t} );\n\t}\n}\n\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings DataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n */\nfunction _fnProcessingDisplay ( settings, show )\n{\n\t// Ignore cases when we are still redrawing\n\tif (settings.bDrawing && show === false) {\n\t\treturn;\n\t}\n\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n}\n\n/**\n * Show the processing element if an action takes longer than a given time\n *\n * @param {*} settings DataTables settings object\n * @param {*} enable Do (true) or not (false) async processing (local feature enablement)\n * @param {*} run Function to run\n */\nfunction _fnProcessingRun( settings, enable, run ) {\n\tif (! enable) {\n\t\t// Immediate execution, synchronous\n\t\trun();\n\t}\n\telse {\n\t\t_fnProcessingDisplay(settings, true);\n\t\t\n\t\t// Allow the processing display to show if needed\n\t\tsetTimeout(function () {\n\t\t\trun();\n\n\t\t\t_fnProcessingDisplay(settings, false);\n\t\t}, 0);\n\t}\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable ( settings )\n{\n\tvar table = $(settings.nTable);\n\n\t// Scrolling from here on in\n\tvar scroll = settings.oScroll;\n\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\treturn settings.nTable;\n\t}\n\n\tvar scrollX = scroll.sX;\n\tvar scrollY = scroll.sY;\n\tvar classes = settings.oClasses.scrolling;\n\tvar caption = settings.captionNode;\n\tvar captionSide = caption ? caption._captionSide : null;\n\tvar headerClone = $( table[0].cloneNode(false) );\n\tvar footerClone = $( table[0].cloneNode(false) );\n\tvar footer = table.children('tfoot');\n\tvar _div = '<div/>';\n\tvar size = function ( s ) {\n\t\treturn !s ? null : _fnStringToCss( s );\n\t};\n\n\tif ( ! footer.length ) {\n\t\tfooter = null;\n\t}\n\n\t/*\n\t * The HTML structure that we want to generate in this function is:\n\t *  div - scroller\n\t *    div - scroll head\n\t *      div - scroll head inner\n\t *        table - scroll head table\n\t *          thead - thead\n\t *    div - scroll body\n\t *      table - table (master table)\n\t *        thead - thead clone for sizing\n\t *        tbody - tbody\n\t *    div - scroll foot\n\t *      div - scroll foot inner\n\t *        table - scroll foot table\n\t *          tfoot - tfoot\n\t */\n\tvar scroller = $( _div, { 'class': classes.container } )\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.header.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.header.inner } )\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t)\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.body } )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t} )\n\t\t\t\t.append( table )\n\t\t);\n\n\tif ( footer ) {\n\t\tscroller.append(\n\t\t\t$(_div, { 'class': classes.footer.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.footer.inner } )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tvar children = scroller.children();\n\tvar scrollHead = children[0];\n\tvar scrollBody = children[1];\n\tvar scrollFoot = footer ? children[2] : null;\n\n\t// When the body is scrolled, then we also want to scroll the headers\n\t$(scrollBody).on( 'scroll.DT', function () {\n\t\tvar scrollLeft = this.scrollLeft;\n\n\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t}\n\t} );\n\n\t// When focus is put on the header cells, we might need to scroll the body\n\t$('th, td', scrollHead).on('focus', function () {\n\t\tvar scrollLeft = scrollHead.scrollLeft;\n\n\t\tscrollBody.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollBody.scrollLeft = scrollLeft;\n\t\t}\n\t});\n\n\t$(scrollBody).css('max-height', scrollY);\n\tif (! scroll.bCollapse) {\n\t\t$(scrollBody).css('height', scrollY);\n\t}\n\n\tsettings.nScrollHead = scrollHead;\n\tsettings.nScrollBody = scrollBody;\n\tsettings.nScrollFoot = scrollFoot;\n\n\t// On redraw - align columns\n\tsettings.aoDrawCallback.push(_fnScrollDraw);\n\n\treturn scroller[0];\n}\n\n\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Correct colgroup > col values if needed\n *   3. Copy colgroup > col over to header and footer\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw ( settings )\n{\n\t// Given that this is such a monster function, a lot of variables are use\n\t// to try and keep the minimised size as small as possible\n\tvar\n\t\tscroll         = settings.oScroll,\n\t\tbarWidth       = scroll.iBarWidth,\n\t\tdivHeader      = $(settings.nScrollHead),\n\t\tdivHeaderInner = divHeader.children('div'),\n\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\tdivBodyEl      = settings.nScrollBody,\n\t\tdivBody        = $(divBodyEl),\n\t\tdivFooter      = $(settings.nScrollFoot),\n\t\tdivFooterInner = divFooter.children('div'),\n\t\tdivFooterTable = divFooterInner.children('table'),\n\t\theader         = $(settings.nTHead),\n\t\ttable          = $(settings.nTable),\n\t\tfooter         = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n\t\tbrowser        = settings.oBrowser,\n\t\theaderCopy, footerCopy;\n\n\t// If the scrollbar visibility has changed from the last draw, we need to\n\t// adjust the column sizes as the table width will have changed to account\n\t// for the scrollbar\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t_fnAdjustColumnSizing( settings );\n\t\treturn; // adjust column sizing will call this function again\n\t}\n\telse {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t}\n\n\t// 1. Re-create the table inside the scrolling div\n\t// Remove the old minimised thead and tfoot elements in the inner table\n\ttable.children('thead, tfoot').remove();\n\n\t// Clone the current header and footer elements and then place it into the inner table\n\theaderCopy = header.clone().prependTo( table );\n\theaderCopy.find('th, td').removeAttr('tabindex');\n\theaderCopy.find('[id]').removeAttr('id');\n\n\tif ( footer ) {\n\t\tfooterCopy = footer.clone().prependTo( table );\n\t\tfooterCopy.find('[id]').removeAttr('id');\n\t}\n\n\t// 2. Correct colgroup > col values if needed\n\t// It is possible that the cell sizes are smaller than the content, so we need to\n\t// correct colgroup>col for such cases. This can happen if the auto width detection\n\t// uses a cell which has a longer string, but isn't the widest! For example \n\t// \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n\t// \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n\t// Note the use of translating into a column index to get the `col` element. This\n\t// is because of Responsive which might remove `col` elements, knocking the alignment\n\t// of the indexes out.\n\tif (settings.aiDisplay.length) {\n\t\t// Get the column sizes from the first row in the table. This should really be a\n\t\t// [].find, but it wasn't supported in Chrome until Sept 2015, and DT has 10 year\n\t\t// browser support\n\t\tvar firstTr = null;\n\t\tvar start = _fnDataSource( settings ) !== 'ssp'\n\t\t\t? settings._iDisplayStart\n\t\t\t: 0;\n\n\t\tfor (i=start ; i<start + settings.aiDisplay.length ; i++) {\n\t\t\tvar idx = settings.aiDisplay[i];\n\t\t\tvar tr = settings.aoData[idx].nTr;\n\n\t\t\tif (tr) {\n\t\t\t\tfirstTr = tr;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (firstTr) {\n\t\t\tvar colSizes = $(firstTr).children('th, td').map(function (vis) {\n\t\t\t\treturn {\n\t\t\t\t\tidx: _fnVisibleToColumnIndex(settings, vis),\n\t\t\t\t\twidth: $(this).outerWidth()\n\t\t\t\t};\n\t\t\t});\n\n\t\t\t// Check against what the colgroup > col is set to and correct if needed\n\t\t\tfor (var i=0 ; i<colSizes.length ; i++) {\n\t\t\t\tvar colEl = settings.aoColumns[ colSizes[i].idx ].colEl[0];\n\t\t\t\tvar colWidth = colEl.style.width.replace('px', '');\n\n\t\t\t\tif (colWidth !== colSizes[i].width) {\n\t\t\t\t\tcolEl.style.width = colSizes[i].width + 'px';\n\n\t\t\t\t\tif (scroll.sX) {\n\t\t\t\t\t\tcolEl.style.minWidth = colSizes[i].width + 'px';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 3. Copy the colgroup over to the header and footer\n\tdivHeaderTable\n\t\t.find('colgroup')\n\t\t.remove();\n\n\tdivHeaderTable.append(settings.colgroup.clone());\n\n\tif ( footer ) {\n\t\tdivFooterTable\n\t\t\t.find('colgroup')\n\t\t\t.remove();\n\n\t\tdivFooterTable.append(settings.colgroup.clone());\n\t}\n\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t// the content of the cell so that the width applied to the header and body\n\t// both match, but we want to hide it completely.\n\t$('th, td', headerCopy).each(function () {\n\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t});\n\n\tif ( footer ) {\n\t\t$('th, td', footerCopy).each(function () {\n\t\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t\t});\n\t}\n\n\t// 4. Clean up\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\tvar isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\tvar paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\n\t// Set the width's of the header and footer tables\n\tvar outerWidth = table.outerWidth();\n\n\tdivHeaderTable.css('width', _fnStringToCss( outerWidth ));\n\tdivHeaderInner\n\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\n\tif ( footer ) {\n\t\tdivFooterTable.css('width', _fnStringToCss( outerWidth ));\n\t\tdivFooterInner\n\t\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\t}\n\n\t// Correct DOM ordering for colgroup - comes before the thead\n\ttable.children('colgroup').prependTo(table);\n\n\t// Adjust the position of the header in case we loose the y-scrollbar\n\tdivBody.trigger('scroll');\n\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t// only if we aren't holding the position\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\tdivBodyEl.scrollTop = 0;\n\t}\n}\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths ( settings )\n{\n\t// Not interested in doing column width calculation if auto-width is disabled\n\tif (! settings.oFeatures.bAutoWidth) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ttable = settings.nTable,\n\t\tcolumns = settings.aoColumns,\n\t\tscroll = settings.oScroll,\n\t\tscrollY = scroll.sY,\n\t\tscrollX = scroll.sX,\n\t\tscrollXInner = scroll.sXInner,\n\t\tvisibleColumns = _fnGetColumns( settings, 'bVisible' ),\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\ttableContainer = table.parentNode,\n\t\ti, column, columnIdx;\n\t\t\n\tvar styleWidth = table.style.width;\n\tvar containerWidth = _fnWrapperWidth(settings);\n\n\t// Don't re-run for the same width as the last time\n\tif (containerWidth === settings.containerWidth) {\n\t\treturn false;\n\t}\n\n\tsettings.containerWidth = containerWidth;\n\n\t// If there is no width applied as a CSS style or as an attribute, we assume that\n\t// the width is intended to be 100%, which is usually is in CSS, but it is very\n\t// difficult to correctly parse the rules to get the final result.\n\tif ( ! styleWidth && ! tableWidthAttr) {\n\t\ttable.style.width = '100%';\n\t\tstyleWidth = '100%';\n\t}\n\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\ttableWidthAttr = styleWidth;\n\t}\n\n\t// Let plug-ins know that we are doing a recalc, in case they have changed any of the\n\t// visible columns their own way (e.g. Responsive uses display:none).\n\t_fnCallbackFire(\n\t\tsettings,\n\t\tnull,\n\t\t'column-calc',\n\t\t{visible: visibleColumns},\n\t\tfalse\n\t);\n\n\t// Construct a single row, worst case, table with the widest\n\t// node in the data, assign any user defined widths, then insert it into\n\t// the DOM and allow the browser to do all the hard work of calculating\n\t// table widths\n\tvar tmpTable = $(table.cloneNode())\n\t\t.css( 'visibility', 'hidden' )\n\t\t.removeAttr( 'id' );\n\n\t// Clean up the table body\n\ttmpTable.append('<tbody>')\n\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t// Clone the table header and footer - we can't use the header / footer\n\t// from the cloned table, since if scrolling is active, the table's\n\t// real header and footer are contained in different table tags\n\ttmpTable\n\t\t.append( $(settings.nTHead).clone() )\n\t\t.append( $(settings.nTFoot).clone() );\n\n\t// Remove any assigned widths from the footer (from scrolling)\n\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t// Apply custom sizing to the cloned header\n\ttmpTable.find('thead th, thead td').each( function () {\n\t\t// Get the `width` from the header layout\n\t\tvar width = _fnColumnsSumWidth( settings, this, true, false );\n\n\t\tif ( width ) {\n\t\t\tthis.style.width = width;\n\n\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t// width the column requires, then it will have no effect\n\t\t\tif ( scrollX ) {\n\t\t\t\tthis.style.minWidth = width;\n\n\t\t\t\t$( this ).append( $('<div/>').css( {\n\t\t\t\t\twidth: width,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 0,\n\t\t\t\t\theight: 1\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.style.width = '';\n\t\t}\n\t} );\n\n\t// Find the widest piece of data for each column and put it into the table\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\tcolumnIdx = visibleColumns[i];\n\t\tcolumn = columns[ columnIdx ];\n\n\t\tvar longest = _fnGetMaxLenString(settings, columnIdx);\n\t\tvar autoClass = _ext.type.className[column.sType];\n\t\tvar text = longest + column.sContentPadding;\n\t\tvar insert = longest.indexOf('<') === -1\n\t\t\t? document.createTextNode(text)\n\t\t\t: text\n\t\t\n\t\t$('<td/>')\n\t\t\t.addClass(autoClass)\n\t\t\t.addClass(column.sClass)\n\t\t\t.append(insert)\n\t\t\t.appendTo(tr);\n\t}\n\n\t// Tidy the temporary table - remove name attributes so there aren't\n\t// duplicated in the dom (radio elements for example)\n\t$('[name]', tmpTable).removeAttr('name');\n\n\t// Table has been built, attach to the document so we can work with it.\n\t// A holding element is used, positioned at the top of the container\n\t// with minimal height, so it has no effect on if the container scrolls\n\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t// needed\n\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\theight: 1,\n\t\t\t\tright: 0,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} :\n\t\t\t{}\n\t\t)\n\t\t.append( tmpTable )\n\t\t.appendTo( tableContainer );\n\n\t// When scrolling (X or Y) we want to set the width of the table as \n\t// appropriate. However, when not scrolling leave the table width as it\n\t// is. This results in slightly different, but I think correct behaviour\n\tif ( scrollX && scrollXInner ) {\n\t\ttmpTable.width( scrollXInner );\n\t}\n\telse if ( scrollX ) {\n\t\ttmpTable.css( 'width', 'auto' );\n\t\ttmpTable.removeAttr('width');\n\n\t\t// If there is no width attribute or style, then allow the table to\n\t\t// collapse\n\t\tif ( tmpTable.outerWidth() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\ttmpTable.outerWidth( tableContainer.clientWidth );\n\t\t}\n\t}\n\telse if ( scrollY ) {\n\t\ttmpTable.outerWidth( tableContainer.clientWidth );\n\t}\n\telse if ( tableWidthAttr ) {\n\t\ttmpTable.outerWidth( tableWidthAttr );\n\t}\n\n\t// Get the width of each column in the constructed table\n\tvar total = 0;\n\tvar bodyCells = tmpTable.find('tbody tr').eq(0).children();\n\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t// Use getBounding for sub-pixel accuracy, which we then want to round up!\n\t\tvar bounding = bodyCells[i].getBoundingClientRect().width;\n\n\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t// of the table might not equal the total given here\n\t\ttotal += bounding;\n\n\t\t// Width for each column to use\n\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding );\n\t}\n\n\ttable.style.width = _fnStringToCss( total );\n\n\t// Finished with the table - ditch it\n\tholder.remove();\n\n\t// If there is a width attr, we want to attach an event listener which\n\t// allows the table sizing to automatically adjust when the window is\n\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t// CSS is a relative value or absolute - DOM read is always px.\n\tif ( tableWidthAttr ) {\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t}\n\n\tif ( (tableWidthAttr || scrollX) && ! settings._reszEvt ) {\n\t\tvar resize = DataTable.util.throttle( function () {\n\t\t\tvar newWidth = _fnWrapperWidth(settings);\n\n\t\t\t// Don't do it if destroying or the container width is 0\n\t\t\tif (! settings.bDestroying && newWidth !== 0) {\n\t\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\t}\n\t\t} );\n\n\t\t// For browsers that support it (~2020 onwards for wide support) we can watch for the\n\t\t// container changing width.\n\t\tif (window.ResizeObserver) {\n\t\t\t// This is a tricky beast - if the element is visible when `.observe()` is called,\n\t\t\t// then the callback is immediately run. Which we don't want. If the element isn't\n\t\t\t// visible, then it isn't run, but we want it to run when it is then made visible.\n\t\t\t// This flag allows the above to be satisfied.\n\t\t\tvar first = $(settings.nTableWrapper).is(':visible');\n\n\t\t\t// Use an empty div to attach the observer so it isn't impacted by height changes\n\t\t\tvar resizer = $('<div>')\n\t\t\t\t.css({\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: 0\n\t\t\t\t})\n\t\t\t\t.addClass('dt-autosize')\n\t\t\t\t.appendTo(settings.nTableWrapper);\n\n\t\t\tsettings.resizeObserver = new ResizeObserver(function (e) {\n\t\t\t\tif (first) {\n\t\t\t\t\tfirst = false;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresize();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tsettings.resizeObserver.observe(resizer[0]);\n\t\t}\n\t\telse {\n\t\t\t// For old browsers, the best we can do is listen for a window resize\n\t\t\t$(window).on('resize.DT-'+settings.sInstance, resize);\n\t\t}\n\n\t\tsettings._reszEvt = true;\n\t}\n}\n\n/**\n * Get the width of the DataTables wrapper element\n *\n * @param {*} settings DataTables settings object\n * @returns Width\n */\nfunction _fnWrapperWidth(settings) {\n\treturn $(settings.nTableWrapper).is(':visible')\n\t\t? $(settings.nTableWrapper).width()\n\t\t: 0;\n}\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} string of the max length\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString( settings, colIdx )\n{\n\tvar column = settings.aoColumns[colIdx];\n\n\tif (! column.maxLenString) {\n\t\tvar s, max='', maxLen = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aiDisplayMaster.length ; i<ien ; i++ ) {\n\t\t\tvar rowIdx = settings.aiDisplayMaster[i];\n\t\t\tvar data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n\n\t\t\tvar cellString = data && typeof data === 'object' && data.nodeType\n\t\t\t\t? data.innerHTML\n\t\t\t\t: data+'';\n\n\t\t\t// Remove id / name attributes from elements so they\n\t\t\t// don't interfere with existing elements\n\t\t\tcellString = cellString\n\t\t\t\t.replace(/id=\".*?\"/g, '')\n\t\t\t\t.replace(/name=\".*?\"/g, '');\n\n\t\t\ts = _stripHtml(cellString)\n\t\t\t\t.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > maxLen ) {\n\t\t\t\t// We want the HTML in the string, but the length that\n\t\t\t\t// is important is the stripped string\n\t\t\t\tmax = cellString;\n\t\t\t\tmaxLen = s.length;\n\t\t\t}\n\t\t}\n\n\t\tcolumn.maxLenString = max;\n\t}\n\n\treturn column.maxLenString;\n}\n\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss( s )\n{\n\tif ( s === null ) {\n\t\treturn '0px';\n\t}\n\n\tif ( typeof s == 'number' ) {\n\t\treturn s < 0 ?\n\t\t\t'0px' :\n\t\t\ts+'px';\n\t}\n\n\t// Check it has a unit character already\n\treturn s.match(/\\d$/) ?\n\t\ts+'px' :\n\t\ts;\n}\n\n/**\n * Re-insert the `col` elements for current visibility\n *\n * @param {*} settings DT settings\n */\nfunction _colGroup( settings ) {\n\tvar cols = settings.aoColumns;\n\n\tsettings.colgroup.empty();\n\n\tfor (i=0 ; i<cols.length ; i++) {\n\t\tif (cols[i].bVisible) {\n\t\t\tsettings.colgroup.append(cols[i].colEl);\n\t\t}\n\t}\n}\n\n\nfunction _fnSortInit( settings ) {\n\tvar target = settings.nTHead;\n\tvar headerRows = target.querySelectorAll('tr');\n\tvar titleRow = settings.titleRow;\n\tvar notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\t\n\t// Legacy support for `orderCellsTop`\n\tif (titleRow === true) {\n\t\ttarget = headerRows[0];\n\t}\n\telse if (titleRow === false) {\n\t\ttarget = headerRows[ headerRows.length - 1 ];\n\t}\n\telse if (titleRow !== null) {\n\t\ttarget = headerRows[titleRow];\n\t}\n\t// else - all rows\n\n\tif (settings.orderHandler) {\n\t\t_fnSortAttachListener(\n\t\t\tsettings,\n\t\t\ttarget,\n\t\t\ttarget === settings.nTHead\n\t\t\t\t? 'tr'+notSelector+' th'+notSelector+', tr'+notSelector+' td'+notSelector\n\t\t\t\t: 'th'+notSelector+', td'+notSelector\n\t\t);\n\t}\n\n\t// Need to resolve the user input array into our internal structure\n\tvar order = [];\n\t_fnSortResolve( settings, order, settings.aaSorting );\n\n\tsettings.aaSorting = order;\n}\n\n\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n\t_fnBindAction( node, selector, function (e) {\n\t\tvar run = false;\n\t\tvar columns = column === undefined\n\t\t\t? _fnColumnsFromHeader( e.target )\n\t\t\t: typeof column === 'function'\n\t\t\t\t? column()\n\t\t\t\t: Array.isArray(column)\n\t\t\t\t\t? column\n\t\t\t\t\t: [column];\n\n\t\tif ( columns.length ) {\n\t\t\tfor ( var i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\tvar ret = _fnSortAdd( settings, columns[i], i, e.shiftKey );\n\n\t\t\t\tif (ret !== false) {\n\t\t\t\t\trun = true;\n\t\t\t\t}\t\t\t\t\t\n\n\t\t\t\t// If the first entry is no sort, then subsequent\n\t\t\t\t// sort columns are ignored\n\t\t\t\tif (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (run) {\n\t\t\t\t_fnProcessingRun(settings, true, function () {\n\t\t\t\t\t_fnSort( settings );\n\t\t\t\t\t_fnSortDisplay( settings, settings.aiDisplay );\n\n\t\t\t\t\t_fnReDraw( settings, false, false );\n\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Sort the display array to match the master's order\n * @param {*} settings\n */\nfunction _fnSortDisplay(settings, display) {\n\tif (display.length < 2) {\n\t\treturn;\n\t}\n\n\tvar master = settings.aiDisplayMaster;\n\tvar masterMap = {};\n\tvar map = {};\n\tvar i;\n\n\t// Rather than needing an `indexOf` on master array, we can create a map\n\tfor (i=0 ; i<master.length ; i++) {\n\t\tmasterMap[master[i]] = i;\n\t}\n\n\t// And then cache what would be the indexOf fom the display\n\tfor (i=0 ; i<display.length ; i++) {\n\t\tmap[display[i]] = masterMap[display[i]];\n\t}\n\n\tdisplay.sort(function(a, b){\n\t\t// Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n\t\treturn map[a] - map[b];\n\t});\n}\n\n\nfunction _fnSortResolve (settings, nestedSort, sort) {\n\tvar push = function ( a ) {\n\t\tif ($.isPlainObject(a)) {\n\t\t\tif (a.idx !== undefined) {\n\t\t\t\t// Index based ordering\n\t\t\t\tnestedSort.push([a.idx, a.dir]);\n\t\t\t}\n\t\t\telse if (a.name) {\n\t\t\t\t// Name based ordering\n\t\t\t\tvar cols = _pluck( settings.aoColumns, 'sName');\n\t\t\t\tvar idx = cols.indexOf(a.name);\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tnestedSort.push([idx, a.dir]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Plain column index and direction pair\n\t\t\tnestedSort.push(a);\n\t\t}\n\t};\n\n\tif ( $.isPlainObject(sort) ) {\n\t\t// Object\n\t\tpush(sort);\n\t}\n\telse if ( sort.length && typeof sort[0] === 'number' ) {\n\t\t// 1D array\n\t\tpush(sort);\n\t}\n\telse if ( sort.length ) {\n\t\t// 2D array\n\t\tfor (var z=0; z<sort.length; z++) {\n\t\t\tpush(sort[z]); // Object or array\n\t\t}\n\t}\n}\n\n\nfunction _fnSortFlatten ( settings )\n{\n\tvar\n\t\ti, k, kLen,\n\t\taSort = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoColumns = settings.aoColumns,\n\t\taDataSort, iCol, sType, srcCol,\n\t\tfixed = settings.aaSortingFixed,\n\t\tfixedObj = $.isPlainObject( fixed ),\n\t\tnestedSort = [];\n\t\n\tif ( ! settings.oFeatures.bSort ) {\n\t\treturn aSort;\n\t}\n\n\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t// specified\n\tif ( Array.isArray( fixed ) ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed );\n\t}\n\n\tif ( fixedObj && fixed.pre ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.pre );\n\t}\n\n\t_fnSortResolve( settings, nestedSort, settings.aaSorting );\n\n\tif (fixedObj && fixed.post ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.post );\n\t}\n\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t{\n\t\tsrcCol = nestedSort[i][0];\n\n\t\tif ( aoColumns[ srcCol ] ) {\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n\t\t\t\t}\n\n\t\t\t\tif ( nestedSort[i][1] ) {\n\t\t\t\t\taSort.push( {\n\t\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\t\tcol:       iCol,\n\t\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\t\ttype:      sType,\n\t\t\t\t\t\tformatter: extSort[ sType+\"-pre\" ],\n\t\t\t\t\t\tsorter:    extSort[ sType+\"-\"+nestedSort[i][1] ]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSort ( oSettings, col, dir )\n{\n\tvar\n\t\ti, ien, iLen,\n\t\taiOrig = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoData = oSettings.aoData,\n\t\tsortCol,\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\taSort;\n\n\t// Make sure the columns all have types defined\n\t_fnColumnTypes(oSettings);\n\n\t// Allow a specific column to be sorted, which will _not_ alter the display\n\t// master\n\tif (col !== undefined) {\n\t\tvar srcCol = oSettings.aoColumns[col];\n\n\t\taSort = [{\n\t\t\tsrc:       col,\n\t\t\tcol:       col,\n\t\t\tdir:       dir,\n\t\t\tindex:     0,\n\t\t\ttype:      srcCol.sType,\n\t\t\tformatter: extSort[ srcCol.sType+\"-pre\" ],\n\t\t\tsorter:    extSort[ srcCol.sType+\"-\"+dir ]\n\t\t}];\n\t\tdisplayMaster = displayMaster.slice();\n\t}\n\telse {\n\t\taSort = _fnSortFlatten( oSettings );\n\t}\n\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\tsortCol = aSort[i];\n\n\t\t// Load the data needed for the sort, for each cell\n\t\t_fnSortData( oSettings, sortCol.col );\n\t}\n\n\t/* No sorting required if server-side or no sorting array */\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t{\n\t\t// Reset the initial positions on each pass so we get a stable sort\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\taiOrig[ i ] = i;\n\t\t}\n\n\t\t// If the first sort is desc, then reverse the array to preserve original\n\t\t// order, just in reverse\n\t\tif (aSort.length && aSort[0].dir === 'desc' && oSettings.orderDescReverse) {\n\t\t\taiOrig.reverse();\n\t\t}\n\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t *  fnLocalSorting = function(a,b){\n\t\t *    var test;\n\t\t *    test = oSort['string-asc']('data11', 'data12');\n\t\t *      if (test !== 0)\n\t\t *        return test;\n\t\t *    test = oSort['numeric-desc']('data21', 'data22');\n\t\t *    if (test !== 0)\n\t\t *      return test;\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t *  }\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t * positions in the original data array to provide a stable sort.\n\t\t */\n\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\tvar\n\t\t\t\tx, y, k, test, sort,\n\t\t\t\tlen=aSort.length,\n\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\tsort = aSort[k];\n\n\t\t\t\t// Data, which may have already been through a `-pre` function\n\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\tif (sort.sorter) {\n\t\t\t\t\t// If there is a custom sorter (`-asc` or `-desc`) for this\n\t\t\t\t\t// data type, use it\n\t\t\t\t\ttest = sort.sorter(x, y);\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Otherwise, use generic sorting\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = aiOrig[a];\n\t\t\ty = aiOrig[b];\n\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t} );\n\t}\n\telse if ( aSort.length === 0 ) {\n\t\t// Apply index order\n\t\tdisplayMaster.sort(function (x, y) {\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t});\n\t}\n\n\tif (col === undefined) {\n\t\t// Tell the draw function that we have sorted the data\n\t\toSettings.bSorted = true;\n\t\toSettings.sortDetails = aSort;\n\n\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort] );\n\t}\n\n\treturn displayMaster;\n}\n\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {int} addIndex Counter\n *  @param {boolean} [shift=false] Shift click add\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAdd ( settings, colIdx, addIndex, shift )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\tvar sorting = settings.aaSorting;\n\tvar asSorting = col.asSorting;\n\tvar nextSortIdx;\n\tvar next = function ( a, overflow ) {\n\t\tvar idx = a._idx;\n\t\tif ( idx === undefined ) {\n\t\t\tidx = asSorting.indexOf(a[1]);\n\t\t}\n\n\t\treturn idx+1 < asSorting.length ?\n\t\t\tidx+1 :\n\t\t\toverflow ?\n\t\t\t\tnull :\n\t\t\t\t0;\n\t};\n\n\tif ( ! col.bSortable ) {\n\t\treturn false;\n\t}\n\n\t// Convert to 2D array if needed\n\tif ( typeof sorting[0] === 'number' ) {\n\t\tsorting = settings.aaSorting = [ sorting ];\n\t}\n\n\t// If appending the sort then we are multi-column sorting\n\tif ( (shift || addIndex) && settings.oFeatures.bSortMulti ) {\n\t\t// Are we already doing some kind of sort on this column?\n\t\tvar sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n\n\t\tif ( sortIdx !== -1 ) {\n\t\t\t// Yes, modify the sort\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t}\n\n\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t}\n\t\t}\n\t\telse if (shift) {\n\t\t\t// No sort on this column yet, being added by shift click\n\t\t\t// add it as itself\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t\telse {\n\t\t\t// No sort on this column yet, being added from a colspan\n\t\t\t// so add with same direction as first column\n\t\t\tsorting.push( [ colIdx, sorting[0][1], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t}\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t// Single column - already sorting on this column, modify the sort\n\t\tnextSortIdx = next( sorting[0] );\n\n\t\tsorting.length = 1;\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\tsorting[0]._idx = nextSortIdx;\n\t}\n\telse {\n\t\t// Single column - sort only on this column\n\t\tsorting.length = 0;\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\tsorting[0]._idx = 0;\n\t}\n}\n\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses( settings )\n{\n\tvar oldSort = settings.aLastSort;\n\tvar sortClass = settings.oClasses.order.position;\n\tvar sort = _fnSortFlatten( settings );\n\tvar features = settings.oFeatures;\n\tvar i, ien, colIdx;\n\n\tif ( features.bSort && features.bSortClasses ) {\n\t\t// Remove old sorting classes\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t// Remove column sorting\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\n\t\t// Add new column sorting\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = sort[i].src;\n\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\t}\n\n\tsettings.aLastSort = sort;\n}\n\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData( settings, colIdx )\n{\n\t// Custom sorting function - provided by the sort data type\n\tvar column = settings.aoColumns[ colIdx ];\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\tvar customData;\n\n\tif ( customSort ) {\n\t\tcustomData = customSort.call( settings.oInstance, settings, colIdx,\n\t\t\t_fnColumnIndexToVisible( settings, colIdx )\n\t\t);\n\t}\n\n\t// Use / populate cache\n\tvar row, cellData;\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\tvar data = settings.aoData;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\t// Sparse array\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aSortData ) {\n\t\t\trow._aSortData = [];\n\t\t}\n\n\t\tif ( ! row._aSortData[colIdx] || customSort ) {\n\t\t\tcellData = customSort ?\n\t\t\t\tcustomData[rowIdx] : // If there was a custom sort function, use data from there\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'sort' );\n\n\t\t\trow._aSortData[ colIdx ] = formatter ?\n\t\t\t\tformatter( cellData, settings ) :\n\t\t\t\tcellData;\n\t\t}\n\t}\n}\n\n\n/**\n * State information for a table\n *\n * @param {*} settings\n * @returns State object\n */\nfunction _fnSaveState ( settings )\n{\n\tif (settings._bLoadingState) {\n\t\treturn;\n\t}\n\n\t// Sort state saving uses [[idx, order]] structure.\n\tvar sorting = [];\n\t_fnSortResolve(settings, sorting, settings.aaSorting );\n\n\t/* Store the interesting variables */\n\tvar columns = settings.aoColumns;\n\tvar state = {\n\t\ttime:    +new Date(),\n\t\tstart:   settings._iDisplayStart,\n\t\tlength:  settings._iDisplayLength,\n\t\torder:   sorting.map(function (sort) {\n\t\t\t// If a column name is available, use it\n\t\t\treturn columns[sort[0]] && columns[sort[0]].sName\n\t\t\t\t? [ columns[sort[0]].sName, sort[1] ]\n\t\t\t\t: sort.slice();\n\t\t} ),\n\t\tsearch:  $.extend({}, settings.oPreviousSearch),\n\t\tcolumns: settings.aoColumns.map( function ( col, i ) {\n\t\t\treturn {\n\t\t\t\tname: col.sName,\n\t\t\t\tvisible: col.bVisible,\n\t\t\t\tsearch: $.extend({}, settings.aoPreSearchCols[i])\n\t\t\t};\n\t\t} )\n\t};\n\n\tsettings.oSavedState = state;\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t{\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\t\n}\n\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState ( settings, init, callback )\n{\n\tif ( ! settings.oFeatures.bStateSave ) {\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tvar loaded = function(state) {\n\t\t_fnImplementState(settings, state, callback);\n\t}\n\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\tif ( state !== undefined ) {\n\t\t_fnImplementState( settings, state, callback );\n\t}\n\t// otherwise, wait for the loaded callback to be executed\n\n\treturn true;\n}\n\nfunction _fnImplementState ( settings, s, callback) {\n\tvar i, ien;\n\tvar columns = settings.aoColumns;\n\tvar currentNames = _pluck(settings.aoColumns, 'sName');\n\n\tsettings._bLoadingState = true;\n\n\t// When StateRestore was introduced the state could now be implemented at any time\n\t// Not just initialisation. To do this an api instance is required in some places\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\tif ( ! s || ! s.time ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Reject old data\n\tvar duration = settings.iStateDuration;\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t// cancelling of loading by returning false\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\tif ( abStateLoad.indexOf(false) !== -1 ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Store the saved state so it might be accessed at any time\n\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t// This is needed for ColReorder, which has to happen first to allow all\n\t// the stored indexes to be usable. It is not publicly documented.\n\t_fnCallbackFire( settings, null, 'stateLoadInit', [settings, s], true );\n\n\t// Page Length\n\tif ( s.length !== undefined ) {\n\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\tif (api) {\n\t\t\tapi.page.len(s.length)\n\t\t}\n\t\telse {\n\t\t\tsettings._iDisplayLength   = s.length;\n\t\t}\n\t}\n\n\t// Restore key features\n\tif ( s.start !== undefined ) {\n\t\tif(api === null) {\n\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t}\n\t\telse {\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t}\n\t}\n\n\t// Order\n\tif ( s.order !== undefined ) {\n\t\tsettings.aaSorting = [];\n\t\t$.each( s.order, function ( i, col ) {\n\t\t\tvar set = [ col[0], col[1] ];\n\n\t\t\t// A column name was stored and should be used for restore\n\t\t\tif (typeof col[0] === 'string') {\n\t\t\t\t// Find the name from the current list of column names\n\t\t\t\tvar idx = currentNames.indexOf(col[0]);\n\n\t\t\t\tif (idx < 0) {\n\t\t\t\t\t// If the column was not found ignore it and continue\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tset[0] = idx;\n\t\t\t}\n\t\t\telse if (set[0] >= columns.length) {\n\t\t\t\t// If the column index is out of bounds ignore it and continue\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsettings.aaSorting.push(set);\n\t\t} );\n\t}\n\n\t// Search\n\tif ( s.search !== undefined ) {\n\t\t$.extend( settings.oPreviousSearch, s.search );\n\t}\n\n\t// Columns\n\tif ( s.columns ) {\n\t\tvar set = s.columns;\n\t\tvar incoming = _pluck(s.columns, 'name');\n\n\t\t// Check if it is a 2.2 style state object with a `name` property for the columns, and if\n\t\t// the name was defined. If so, then create a new array that will map the state object\n\t\t// given, to the current columns (don't bother if they are already matching tho).\n\t\tif (incoming.join('').length && incoming.join('') !== currentNames.join('')) {\n\t\t\tset = [];\n\n\t\t\t// For each column, try to find the name in the incoming array\n\t\t\tfor (i=0 ; i<currentNames.length ; i++) {\n\t\t\t\tif (currentNames[i] != '') {\n\t\t\t\t\tvar idx = incoming.indexOf(currentNames[i]);\n\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tset.push(s.columns[idx]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// No matching column name in the state's columns, so this might be a new\n\t\t\t\t\t\t// column and thus can't have a state already.\n\t\t\t\t\t\tset.push({});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If no name, but other columns did have a name, then there is no knowing\n\t\t\t\t\t// where this one came from originally so it can't be restored.\n\t\t\t\t\tset.push({});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// If the number of columns to restore is different from current, then all bets are off.\n\t\tif (set.length === columns.length) {\n\t\t\tfor ( i=0, ien=set.length ; i<ien ; i++ ) {\n\t\t\t\tvar col = set[i];\n\n\t\t\t\t// Visibility\n\t\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\t\tif (api) {\n\t\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Search\n\t\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t\t$.extend( settings.aoPreSearchCols[i], col.search );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\t\tif (api) {\n\t\t\t\tapi.columns.adjust();\n\t\t\t}\n\t\t}\n\t}\n\n\tsettings._bLoadingState = false;\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\tcallback();\n}\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog( settings, level, msg, tn )\n{\n\tmsg = 'DataTables warning: '+\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\tif ( tn ) {\n\t\tmsg += '. For more information about this error, please see '+\n\t\t'https://datatables.net/tn/'+tn;\n\t}\n\n\tif ( ! level  ) {\n\t\t// Backwards compatibility pre 1.10\n\t\tvar ext = DataTable.ext;\n\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\tif ( settings ) {\n\t\t\t_fnCallbackFire( settings, null, 'dt-error', [ settings, tn, msg ], true );\n\t\t}\n\n\t\tif ( type == 'alert' ) {\n\t\t\talert( msg );\n\t\t}\n\t\telse if ( type == 'throw' ) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\telse if ( typeof type == 'function' ) {\n\t\t\ttype( settings, tn, msg );\n\t\t}\n\t}\n\telse if ( window.console && console.log ) {\n\t\tconsole.log( msg );\n\t}\n}\n\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap( ret, src, name, mappedName )\n{\n\tif ( Array.isArray( name ) ) {\n\t\t$.each( name, function (i, val) {\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnMap( ret, src, val );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tif ( mappedName === undefined ) {\n\t\tmappedName = name;\n\t}\n\n\tif ( src[name] !== undefined ) {\n\t\tret[mappedName] = src[name];\n\t}\n}\n\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend( out, extender, breakRefs )\n{\n\tvar val;\n\n\tfor ( var prop in extender ) {\n\t\tif ( Object.prototype.hasOwnProperty.call(extender, prop) ) {\n\t\t\tval = extender[prop];\n\n\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\tout[prop] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t}\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\tout[prop] = val.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[prop] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object|string} selector Selector (for delegated events) or data object\n *   to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction( n, selector, fn )\n{\n\t$(n)\n\t\t.on( 'click.DT', selector, function (e) {\n\t\t\tfn(e);\n\t\t} )\n\t\t.on( 'keypress.DT', selector, function (e){\n\t\t\tif ( e.which === 13 ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tfn(e);\n\t\t\t}\n\t\t} )\n\t\t.on( 'selectstart.DT', selector, function () {\n\t\t\t// Don't want a double click resulting in text selection\n\t\t\treturn false;\n\t\t} );\n}\n\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} settings dataTables settings object\n *  @param {string} store Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg( settings, store, fn )\n{\n\tif ( fn ) {\n\t\tsettings[store].push(fn);\n\t}\n}\n\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @param {boolean} [bubbles] True if the event should bubble\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire( settings, callbackArr, eventName, args, bubbles )\n{\n\tvar ret = [];\n\n\tif ( callbackArr ) {\n\t\tret = settings[callbackArr].slice().reverse().map( function (val) {\n\t\t\treturn val.apply( settings.oInstance, args );\n\t\t} );\n\t}\n\n\tif ( eventName !== null) {\n\t\tvar e = $.Event( eventName+'.dt' );\n\t\tvar table = $(settings.nTable);\n\t\t\n\t\t// Expose the DataTables API on the event object for easy access\n\t\te.dt = settings.api;\n\n\t\ttable[bubbles ?  'trigger' : 'triggerHandler']( e, args );\n\n\t\t// If not yet attached to the document, trigger the event\n\t\t// on the body directly to sort of simulate the bubble\n\t\tif (bubbles && table.parents('body').length === 0) {\n\t\t\t$('body').trigger( e, args );\n\t\t}\n\n\t\tret.push( e.result );\n\t}\n\n\treturn ret;\n}\n\n\nfunction _fnLengthOverflow ( settings )\n{\n\tvar\n\t\tstart = settings._iDisplayStart,\n\t\tend = settings.fnDisplayEnd(),\n\t\tlen = settings._iDisplayLength;\n\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\tif ( start >= end )\n\t{\n\t\tstart = end - len;\n\t}\n\n\t// Keep the start record on the current page\n\tstart -= (start % len);\n\n\tif ( len === -1 || start < 0 )\n\t{\n\t\tstart = 0;\n\t}\n\n\tsettings._iDisplayStart = start;\n}\n\n\nfunction _fnRenderer( settings, type )\n{\n\tvar renderer = settings.renderer;\n\tvar host = DataTable.ext.renderer[type];\n\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t// the default.\n\t\treturn host[renderer[type]] || host._;\n\t}\n\telse if ( typeof renderer === 'string' ) {\n\t\t// Common renderer - if there is one available for this type use it,\n\t\t// otherwise use the default\n\t\treturn host[renderer] || host._;\n\t}\n\n\t// Use the default\n\treturn host._;\n}\n\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource ( settings )\n{\n\tif ( settings.oFeatures.bServerSide ) {\n\t\treturn 'ssp';\n\t}\n\telse if ( settings.ajax ) {\n\t\treturn 'ajax';\n\t}\n\treturn 'dom';\n}\n\n/**\n * Common replacement for language strings\n *\n * @param {*} settings DT settings object\n * @param {*} str String with values to replace\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n * @returns String\n */\nfunction _fnMacros ( settings, str, entries )\n{\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is\n\t// used only internally\n\tvar\n\t\tformatter  = settings.fnFormatNumber,\n\t\tstart      = settings._iDisplayStart+1,\n\t\tlen        = settings._iDisplayLength,\n\t\tvis        = settings.fnRecordsDisplay(),\n\t\tmax        = settings.fnRecordsTotal(),\n\t\tall        = len === -1;\n\n\treturn str.\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\treplace(/_MAX_/g,   formatter.call( settings, max ) ).\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) ).\n\t\treplace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries) ).\n\t\treplace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max) ).\n\t\treplace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis) );\n}\n\n/**\n * Add elements to an array as quickly as possible, but stack stafe.\n *\n * @param {*} arr Array to add the data to\n * @param {*} data Data array that is to be added\n * @returns \n */\nfunction _fnArrayApply(arr, data) {\n\tif (! data) {\n\t\treturn;\n\t}\n\n\t// Chrome can throw a max stack error if apply is called with\n\t// too large an array, but apply is faster.\n\tif (data.length < 10000) {\n\t\tarr.push.apply(arr, data);\n\t}\n\telse {\n\t\tfor (i=0 ; i<data.length ; i++) {\n\t\t\tarr.push(data[i]);\n\t\t}\n\t}\n}\n\n/**\n * Add one or more listeners to the table\n *\n * @param {*} that JQ for the table\n * @param {*} name Event name\n * @param {*} src Listener(s)\n */\nfunction _fnListener(that, name, src) {\n\tif (!Array.isArray(src)) {\n\t\tsrc = [src];\n\t}\n\n\tfor (i=0 ; i<src.length ; i++) {\n\t\tthat.on(name + '.dt', src[i]);\n\t}\n}\n\n/**\n * Escape HTML entities in strings, in an object\n */\nfunction _fnEscapeObject(obj) {\n\tif (DataTable.ext.escape.attributes) {\n\t\t$.each(obj, function (key, val) {\n\t\t\tobj[key] = _escapeHtml(val);\n\t\t})\n\t}\n\n\treturn obj;\n}\n\n\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function ( mixed )\n{\n\tvar idx, jq;\n\tvar settings = DataTable.settings;\n\tvar tables = _pluck(settings, 'nTable');\n\n\tif ( ! mixed ) {\n\t\treturn [];\n\t}\n\telse if ( mixed.nTable && mixed.oFeatures ) {\n\t\t// DataTables settings object\n\t\treturn [ mixed ];\n\t}\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t// Table node\n\t\tidx = tables.indexOf(mixed);\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t}\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\treturn mixed.settings().toArray();\n\t}\n\telse if ( typeof mixed === 'string' ) {\n\t\t// jQuery selector\n\t\tjq = $(mixed).get();\n\t}\n\telse if ( mixed instanceof $ ) {\n\t\t// jQuery object (also DataTables instance)\n\t\tjq = mixed.get();\n\t}\n\n\tif ( jq ) {\n\t\treturn settings.filter(function (v, idx) {\n\t\t\treturn jq.includes(tables[idx]);\n\t\t});\n\t}\n};\n\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new DataTable.Api( 'table.dataTable' );\n */\n_Api = function ( context, data )\n{\n\tif ( ! (this instanceof _Api) ) {\n\t\treturn new _Api( context, data );\n\t}\n\n\tvar i;\n\tvar settings = [];\n\tvar ctxSettings = function ( o ) {\n\t\tvar a = _toSettings( o );\n\t\tif ( a ) {\n\t\t\tsettings.push.apply( settings, a );\n\t\t}\n\t};\n\n\tif ( Array.isArray( context ) ) {\n\t\tfor ( i=0 ; i<context.length ; i++ ) {\n\t\t\tctxSettings( context[i] );\n\t\t}\n\t}\n\telse {\n\t\tctxSettings( context );\n\t}\n\n\t// Remove duplicates\n\tthis.context = settings.length > 1\n\t\t? _unique( settings )\n\t\t: settings;\n\n\t// Initial data\n\t_fnArrayApply(this, data);\n\n\t// selector\n\tthis.selector = {\n\t\trows: null,\n\t\tcols: null,\n\t\topts: null\n\t};\n\n\t_Api.extend( this, this, __apiStruct );\n};\n\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend( _Api.prototype, {\n\tany: function ()\n\t{\n\t\treturn this.count() !== 0;\n\t},\n\n\tcontext: [], // array of table settings objects\n\n\tcount: function ()\n\t{\n\t\treturn this.flatten().length;\n\t},\n\n\teach: function ( fn )\n\t{\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\tfn.call( this, this[i], i, this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\teq: function ( idx )\n\t{\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length > idx ?\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\tnull;\n\t},\n\n\tfilter: function ( fn )\n\t{\n\t\tvar a = __arrayProto.filter.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tflatten: function ()\n\t{\n\t\tvar a = [];\n\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t},\n\n\tget: function ( idx )\n\t{\n\t\treturn this[ idx ];\n\t},\n\n\tjoin:    __arrayProto.join,\n\n\tincludes: function ( find ) {\n\t\treturn this.indexOf( find ) === -1 ? false : true;\n\t},\n\n\tindexOf: __arrayProto.indexOf,\n\n\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\tvar\n\t\t\ta = [], ret,\n\t\t\ti, ien, j, jen,\n\t\t\tcontext = this.context,\n\t\t\trows, items, item,\n\t\t\tselector = this.selector;\n\n\t\t// Argument shifting\n\t\tif ( typeof flatten === 'string' ) {\n\t\t\talwaysNew = fn;\n\t\t\tfn = type;\n\t\t\ttype = flatten;\n\t\t\tflatten = false;\n\t\t}\n\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\tif ( type === 'table' ) {\n\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\titems = this[i];\n\n\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\titem = items[j];\n\n\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( a.length || alwaysNew ) {\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\tvar apiSelector = api.selector;\n\t\t\tapiSelector.rows = selector.rows;\n\t\t\tapiSelector.cols = selector.cols;\n\t\t\tapiSelector.opts = selector.opts;\n\t\t\treturn api;\n\t\t}\n\t\treturn this;\n\t},\n\n\tlastIndexOf: __arrayProto.lastIndexOf,\n\n\tlength:  0,\n\n\tmap: function ( fn )\n\t{\n\t\tvar a = __arrayProto.map.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tpluck: function ( prop )\n\t{\n\t\tvar fn = DataTable.util.get(prop);\n\n\t\treturn this.map( function ( el ) {\n\t\t\treturn fn(el);\n\t\t} );\n\t},\n\n\tpop:     __arrayProto.pop,\n\n\tpush:    __arrayProto.push,\n\n\treduce: __arrayProto.reduce,\n\n\treduceRight: __arrayProto.reduceRight,\n\n\treverse: __arrayProto.reverse,\n\n\t// Object with rows, columns and opts\n\tselector: null,\n\n\tshift:   __arrayProto.shift,\n\n\tslice: function () {\n\t\treturn new _Api( this.context, this );\n\t},\n\n\tsort:    __arrayProto.sort,\n\n\tsplice:  __arrayProto.splice,\n\n\ttoArray: function ()\n\t{\n\t\treturn __arrayProto.slice.call( this );\n\t},\n\n\tto$: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\ttoJQuery: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\tunique: function ()\n\t{\n\t\treturn new _Api( this.context, _unique(this.toArray()) );\n\t},\n\n\tunshift: __arrayProto.unshift\n} );\n\n\nfunction _api_scope( scope, fn, struc ) {\n\treturn function () {\n\t\tvar ret = fn.apply( scope || this, arguments );\n\n\t\t// Method extension\n\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\treturn ret;\n\t};\n}\n\nfunction _api_find( src, name ) {\n\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\tif ( src[i].name === name ) {\n\t\t\treturn src[i];\n\t\t}\n\t}\n\treturn null;\n}\n\nwindow.__apiStruct = __apiStruct;\n\n_Api.extend = function ( scope, obj, ext )\n{\n\t// Only extend API instances and static properties of the API\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\tstruct;\n\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\tstruct = ext[i];\n\n\t\tif (struct.name === '__proto__') {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Value\n\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t_api_scope( scope, struct.val, struct ) :\n\t\t\tstruct.type === 'object' ?\n\t\t\t\t{} :\n\t\t\t\tstruct.val;\n\n\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t// Property extension\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t}\n};\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n\n_Api.register = _api_register = function ( name, val )\n{\n\tif ( Array.isArray( name ) ) {\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t_Api.register( name[j], val );\n\t\t}\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\their = name.split('.'),\n\t\tstruct = __apiStruct,\n\t\tkey, method;\n\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\tkey = method ?\n\t\t\their[i].replace('()', '') :\n\t\t\their[i];\n\n\t\tvar src = _api_find( struct, key );\n\t\tif ( ! src ) {\n\t\t\tsrc = {\n\t\t\t\tname:      key,\n\t\t\t\tval:       {},\n\t\t\t\tmethodExt: [],\n\t\t\t\tpropExt:   [],\n\t\t\t\ttype:      'object'\n\t\t\t};\n\t\t\tstruct.push( src );\n\t\t}\n\n\t\tif ( i === ien-1 ) {\n\t\t\tsrc.val = val;\n\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t'object' :\n\t\t\t\t\t'other';\n\t\t}\n\t\telse {\n\t\t\tstruct = method ?\n\t\t\t\tsrc.methodExt :\n\t\t\t\tsrc.propExt;\n\t\t}\n\t}\n};\n\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t_Api.register( pluralName, val );\n\n\t_Api.register( singularName, function () {\n\t\tvar ret = val.apply( this, arguments );\n\n\t\tif ( ret === this ) {\n\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\treturn this;\n\t\t}\n\t\telse if ( ret instanceof _Api ) {\n\t\t\t// New API instance returned, want the value from the first item\n\t\t\t// in the returned array for the singular result.\n\t\t\treturn ret.length ?\n\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\tret[0] :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Non-API return - just fire it back\n\t\treturn ret;\n\t} );\n};\n\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function ( selector, a )\n{\n\tif ( Array.isArray(selector) ) {\n\t\tvar result = [];\n\n\t\tselector.forEach(function (sel) {\n\t\t\tvar inner = __table_selector(sel, a);\n\n\t\t\t_fnArrayApply(result, inner);\n\t\t});\n\n\t\treturn result.filter( function (item) {\n\t\t\treturn item;\n\t\t});\n\t}\n\n\t// Integer is used to pick out a table by index\n\tif ( typeof selector === 'number' ) {\n\t\treturn [ a[ selector ] ];\n\t}\n\n\t// Perform a jQuery selector on the table nodes\n\tvar nodes = a.map( function (el) {\n\t\treturn el.nTable;\n\t} );\n\n\treturn $(nodes)\n\t\t.filter( selector )\n\t\t.map( function () {\n\t\t\t// Need to translate back from the table node to the settings\n\t\t\tvar idx = nodes.indexOf(this);\n\t\t\treturn a[ idx ];\n\t\t} )\n\t\t.toArray();\n};\n\n\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register( 'tables()', function ( selector ) {\n\t// A new instance is created if there was a selector specified\n\treturn selector !== undefined && selector !== null ?\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\tthis;\n} );\n\n\n_api_register( 'table()', function ( selector ) {\n\tvar tables = this.tables( selector );\n\tvar ctx = tables.context;\n\n\t// Truncate to the first matched table\n\treturn ctx.length ?\n\t\tnew _Api( ctx[0] ) :\n\t\ttables;\n} );\n\n// Common methods, combined to reduce size\n[\n\t['nodes', 'node', 'nTable'],\n\t['body', 'body', 'nTBody'],\n\t['header', 'header', 'nTHead'],\n\t['footer', 'footer', 'nTFoot'],\n].forEach(function (item) {\n\t_api_registerPlural(\n\t\t'tables().' + item[0] + '()',\n\t\t'table().' + item[1] + '()' ,\n\t\tfunction () {\n\t\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t\treturn ctx[item[2]];\n\t\t\t}, 1 );\n\t\t}\n\t);\n});\n\n// Structure methods\n[\n\t['header', 'aoHeader'],\n\t['footer', 'aoFooter'],\n].forEach(function (item) {\n\t_api_register( 'table().' + item[0] + '.structure()' , function (selector) {\n\t\tvar indexes = this.columns(selector).indexes().flatten().toArray();\n\t\tvar ctx = this.context[0];\n\t\tvar structure = _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n\n\t\t// The structure is in column index order - but from this method we want the return to be\n\t\t// in the columns() selector API order. In order to do that we need to map from one form\n\t\t// to the other\n\t\tvar orderedIndexes = indexes.slice().sort(function (a, b) {\n\t\t\treturn a - b;\n\t\t});\n\n\t\treturn structure.map(function (row) {\n\t\t\treturn indexes.map(function (colIdx) {\n\t\t\t\treturn row[orderedIndexes.indexOf(colIdx)];\n\t\t\t});\n\t\t});\n\t});\n});\n\n\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTableWrapper;\n\t}, 1 );\n} );\n\n_api_register( 'tables().every()', function ( fn ) {\n\tvar that = this;\n\n\treturn this.iterator('table', function (s, i) {\n\t\tfn.call(that.table(i), i);\n\t});\n});\n\n_api_register( 'caption()', function ( value, side ) {\n\tvar context = this.context;\n\n\t// Getter - return existing node's content\n\tif ( value === undefined ) {\n\t\tvar caption = context[0].captionNode;\n\n\t\treturn caption && context.length ?\n\t\t\tcaption.innerHTML : \n\t\t\tnull;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tvar table = $(ctx.nTable);\n\t\tvar caption = $(ctx.captionNode);\n\t\tvar container = $(ctx.nTableWrapper);\n\n\t\t// Create the node if it doesn't exist yet\n\t\tif ( ! caption.length ) {\n\t\t\tcaption = $('<caption/>').html( value );\n\t\t\tctx.captionNode = caption[0];\n\n\t\t\t// If side isn't set, we need to insert into the document to let the\n\t\t\t// CSS decide so we can read it back, otherwise there is no way to\n\t\t\t// know if the CSS would put it top or bottom for scrolling\n\t\t\tif (! side) {\n\t\t\t\ttable.prepend(caption);\n\n\t\t\t\tside = caption.css('caption-side');\n\t\t\t}\n\t\t}\n\n\t\tcaption.html( value );\n\n\t\tif ( side ) {\n\t\t\tcaption.css( 'caption-side', side );\n\t\t\tcaption[0]._captionSide = side;\n\t\t}\n\n\t\tif (container.find('div.dataTables_scroll').length) {\n\t\t\tvar selector = (side === 'top' ? 'Head' : 'Foot');\n\n\t\t\tcontainer.find('div.dataTables_scroll'+ selector +' table').prepend(caption);\n\t\t}\n\t\telse {\n\t\t\ttable.prepend(caption);\n\t\t}\n\t}, 1 );\n} );\n\n_api_register( 'caption.node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length ? ctx[0].captionNode : null;\n} );\n\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register( 'draw()', function ( paging ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( paging === 'page' ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\telse {\n\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\tfalse :\n\t\t\t\t\ttrue;\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, paging===false );\n\t\t}\n\t} );\n} );\n\n\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n *//**\n * Set the current page.\n *\n * Note that if you attempt to show a page which does not exist, DataTables will\n * not throw an error, but rather reset the paging.\n *\n * @param {integer|string} action The paging action to take. This can be one of:\n *  * `integer` - The page index to jump to\n *  * `string` - An action to take:\n *    * `first` - Jump to first page.\n *    * `next` - Jump to the next page\n *    * `previous` - Jump to previous page\n *    * `last` - Jump to the last page.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.page.info().page; // not an expensive call\n\t}\n\n\t// else, have an action to take on all tables\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnPageChange( settings, action );\n\t} );\n} );\n\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register( 'page.info()', function () {\n\tif ( this.context.length === 0 ) {\n\t\treturn undefined;\n\t}\n\n\tvar\n\t\tsettings   = this.context[0],\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn {\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\"start\":          start,\n\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\"length\":         len,\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\"recordsDisplay\": visRecords,\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t};\n} );\n\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n *//**\n * Set the current page length.\n *\n * @param {integer} Page length to set. Use `-1` to show all records.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page.len()', function ( len ) {\n\t// Note that we can't call this function 'length()' because `length`\n\t// is a Javascript property of functions which defines how many arguments\n\t// the function expects.\n\tif ( len === undefined ) {\n\t\treturn this.context.length !== 0 ?\n\t\t\tthis.context[0]._iDisplayLength :\n\t\t\tundefined;\n\t}\n\n\t// else, set the page length\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLengthChange( settings, len );\n\t} );\n} );\n\n\n\nvar __reload = function ( settings, holdPosition, callback ) {\n\t// Use the draw event to trigger a callback\n\tif ( callback ) {\n\t\tvar api = new _Api( settings );\n\n\t\tapi.one( 'draw', function () {\n\t\t\tcallback( api.ajax.json() );\n\t\t} );\n\t}\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t_fnReDraw( settings, holdPosition );\n\t}\n\telse {\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t// Cancel an existing request\n\t\tvar xhr = settings.jqXHR;\n\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\txhr.abort();\n\t\t}\n\n\t\t// Trigger xhr\n\t\t_fnBuildAjax( settings, {}, function( json ) {\n\t\t\t_fnClearTable( settings );\n\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t_fnInitComplete( settings );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t} );\n\t}\n};\n\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register( 'ajax.json()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].json;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register( 'ajax.params()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].oAjaxData;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\treturn this.iterator( 'table', function (settings) {\n\t\t__reload( settings, resetPaging===false, callback );\n\t} );\n} );\n\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n *//**\n * Set the Ajax URL. Note that this will set the URL for all tables in the\n * current context.\n *\n * @param {string} url URL to set.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url()', function ( url ) {\n\tvar ctx = this.context;\n\n\tif ( url === undefined ) {\n\t\t// get\n\t\tif ( ctx.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tctx = ctx[0];\n\n\t\treturn $.isPlainObject( ctx.ajax ) ?\n\t\t\tctx.ajax.url :\n\t\t\tctx.ajax;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\tsettings.ajax.url = url;\n\t\t}\n\t\telse {\n\t\t\tsettings.ajax = url;\n\t\t}\n\t} );\n} );\n\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t// Same as a reload, but makes sense to present it for easy access after a\n\t// url change\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t__reload( ctx, resetPaging===false, callback );\n\t} );\n} );\n\n\n\n\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\n{\n\tvar\n\t\tout = [], res,\n\t\ti, ien,\n\t\tselectorType = typeof selector;\n\n\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t// given with their array like look\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\tselector = [ selector ];\n\t}\n\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\tres = selectFn( typeof selector[i] === 'string' ? selector[i].trim() : selector[i] );\n\n\t\t// Remove empty items\n\t\tres = res.filter( function (item) {\n\t\t\treturn item !== null && item !== undefined;\n\t\t});\n\n\t\tif ( res && res.length ) {\n\t\t\tout = out.concat( res );\n\t\t}\n\t}\n\n\t// selector extensions\n\tvar ext = _ext.selector[ type ];\n\tif ( ext.length ) {\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tout = ext[i]( settings, opts, out );\n\t\t}\n\t}\n\n\treturn _unique( out );\n};\n\n\nvar _selector_opts = function ( opts )\n{\n\tif ( ! opts ) {\n\t\topts = {};\n\t}\n\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t// than search\n\tif ( opts.filter && opts.search === undefined ) {\n\t\topts.search = opts.filter;\n\t}\n\n\treturn $.extend( {\n\t\tcolumnOrder: 'implied',\n\t\tsearch: 'none',\n\t\torder: 'current',\n\t\tpage: 'all'\n\t}, opts );\n};\n\n\n// Reduce the API instance to the first item found\nvar _selector_first = function ( old )\n{\n\tvar inst = new _Api(old.context[0]);\n\n\t// Use a push rather than passing to the constructor, since it will\n\t// merge arrays down automatically, which isn't what is wanted here\n\tif (old.length) {\n\t\tinst.push( old[0] );\n\t}\n\n\tinst.selector = old.selector;\n\n\t// Limit to a single row / column / cell\n\tif (inst.length && inst[0].length > 1) {\n\t\tinst[0].splice(1);\n\t}\n\n\treturn inst;\n};\n\n\nvar _selector_row_indexes = function ( settings, opts )\n{\n\tvar\n\t\ti, ien, tmp, a=[],\n\t\tdisplayFiltered = settings.aiDisplay,\n\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\tvar\n\t\tsearch = opts.search,  // none, applied, removed\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\tpage   = opts.page;    // all, current\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t// In server-side processing mode, most options are irrelevant since\n\t\t// rows not shown don't exist and the index order is the applied order\n\t\t// Removed is a special case - for consistency just return an empty\n\t\t// array\n\t\treturn search === 'removed' ?\n\t\t\t[] :\n\t\t\t_range( 0, displayMaster.length );\n\t}\n\n\tif ( page == 'current' ) {\n\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t// are\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\ta.push( displayFiltered[i] );\n\t\t}\n\t}\n\telse if ( order == 'current' || order == 'applied' ) {\n\t\tif ( search == 'none') {\n\t\t\ta = displayMaster.slice();\n\t\t}\n\t\telse if ( search == 'applied' ) {\n\t\t\ta = displayFiltered.slice();\n\t\t}\n\t\telse if ( search == 'removed' ) {\n\t\t\t// O(n+m) solution by creating a hash map\n\t\t\tvar displayFilteredMap = {};\n\n\t\t\tfor ( i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t}\n\n\t\t\tdisplayMaster.forEach(function (item) {\n\t\t\t\tif (! Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n\t\t\t\t\ta.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\telse if ( order == 'index' || order == 'original' ) {\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tif (! settings.aoData[i]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( search == 'none' ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\ttmp = displayFiltered.indexOf(i);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if ( typeof order === 'number' ) {\n\t\t// Order the rows by the given column\n\t\tvar ordered = _fnSort(settings, order, 'asc');\n\n\t\tif (search === 'none') {\n\t\t\ta = ordered;\n\t\t}\n\t\telse { // applied | removed\n\t\t\tfor (i=0; i<ordered.length; i++) {\n\t\t\t\ttmp = displayFiltered.indexOf(ordered[i]);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( ordered[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function ( settings, selector, opts )\n{\n\tvar rows;\n\tvar run = function ( sel ) {\n\t\tvar selInt = _intVal( sel );\n\t\tvar aoData = settings.aoData;\n\n\t\t// Short cut - selector is a number and no options provided (default is\n\t\t// all records, so no need to check if the index is in there, since it\n\t\t// must be - dev error if the index doesn't exist).\n\t\tif ( selInt !== null && ! opts ) {\n\t\t\treturn [ selInt ];\n\t\t}\n\n\t\tif ( ! rows ) {\n\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t}\n\n\t\tif ( selInt !== null && rows.indexOf(selInt) !== -1 ) {\n\t\t\t// Selector - integer\n\t\t\treturn [ selInt ];\n\t\t}\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t// Selector - none\n\t\t\treturn rows;\n\t\t}\n\n\t\t// Selector - function\n\t\tif ( typeof sel === 'function' ) {\n\t\t\treturn rows.map( function (idx) {\n\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// Selector - node\n\t\tif ( sel.nodeName ) {\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse if ( cellIdx ) {\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t}\n\n\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t// DataTables simplifies this for row selectors since you can select\n\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t// unescaped.\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t// get row index from id\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\treturn [ rowObj.idx ];\n\t\t\t}\n\n\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t// matches\n\t\t}\n\t\t\n\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\tvar nodes = _removeEmpty(\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t);\n\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t// it also allows arrays, so this will cope with all three options\n\t\treturn $(nodes)\n\t\t\t.filter( sel )\n\t\t\t.map( function () {\n\t\t\t\treturn this._DT_RowIndex;\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\tvar matched = _selector_run( 'row', selector, run, settings, opts );\n\n\tif (opts.order === 'current' || opts.order === 'applied') {\n\t\t_fnSortDisplay(settings, matched);\n\t}\n\n\treturn matched;\n};\n\n\n_api_register( 'rows()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __row_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in __row_selector?\n\tinst.selector.rows = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_register( 'rows().nodes()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn settings.aoData[ row ].nTr || undefined;\n\t}, 1 );\n} );\n\n_api_register( 'rows().data()', function () {\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\tvar r = settings.aoData[ row ];\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t_fnInvalidate( settings, row, src );\n\t} );\n} );\n\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn row;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\tvar a = [];\n\tvar context = this.context;\n\n\t// `iterator` will drop undefined values, but in this case we want them\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t}\n\t}\n\n\treturn new _Api( context, a );\n} );\n\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\tthis.iterator( 'row', function ( settings, row ) {\n\t\tvar data = settings.aoData;\n\t\tvar rowData = data[ row ];\n\n\t\t// Delete from the display arrays\n\t\tvar idx = settings.aiDisplayMaster.indexOf(row);\n\t\tif (idx !== -1) {\n\t\t\tsettings.aiDisplayMaster.splice(idx, 1);\n\t\t}\n\n\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\tsettings._iRecordsDisplay--;\n\t\t}\n\n\t\t// Check for an 'overflow' they case for displaying the table\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Remove the row's ID reference if there is one\n\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\tif ( id !== undefined ) {\n\t\t\tdelete settings.aIds[ id ];\n\t\t}\n\n\t\tdata[row] = null;\n\t} );\n\n\treturn this;\n} );\n\n\n_api_register( 'rows.add()', function ( rows ) {\n\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\tvar row, i, ien;\n\t\t\tvar out = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}, 1 );\n\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\tvar modRows = this.rows( -1 );\n\tmodRows.pop();\n\t_fnArrayApply(modRows, newRows);\n\n\treturn modRows;\n} );\n\n\n\n\n\n/**\n *\n */\n_api_register( 'row()', function ( selector, opts ) {\n\treturn _selector_first( this.rows( selector, opts ) );\n} );\n\n\n_api_register( 'row().data()', function ( data ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && this.length && this[0].length ?\n\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\tvar row = ctx[0].aoData[ this[0] ];\n\trow._aData = data;\n\n\t// If the DOM has an id, and the data source is an array\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t}\n\n\t// Automatically invalidate\n\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\treturn this;\n} );\n\n\n_api_register( 'row().node()', function () {\n\tvar ctx = this.context;\n\n\tif (ctx.length && this.length && this[0].length) {\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\n\t\tif (row && row.nTr) {\n\t\t\treturn row.nTr;\n\t\t}\n\t}\n\n\treturn null;\n} );\n\n\n_api_register( 'row.add()', function ( row ) {\n\t// Allow a jQuery object to be passed in - only a single row is added from\n\t// it though - the first element in the set\n\tif ( row instanceof $ && row.length ) {\n\t\trow = row[0];\n\t}\n\n\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t}\n\t\treturn _fnAddData( settings, row );\n\t} );\n\n\t// Return an Api.rows() extended instance, with the newly added row selected\n\treturn this.row( rows[0] );\n} );\n\n\n$(document).on('plugin-init.dt', function (e, context) {\n\tvar api = new _Api( context );\n\n\tapi.on( 'stateSaveParams.DT', function ( e, settings, d ) {\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t// internal loop\n\t\tvar idFn = settings.rowIdFn;\n\t\tvar rows = settings.aiDisplayMaster;\n\t\tvar ids = [];\n\n\t\tfor (var i=0 ; i<rows.length ; i++) {\n\t\t\tvar rowIdx = rows[i];\n\t\t\tvar data = settings.aoData[rowIdx];\n\n\t\t\tif (data._detailsShow) {\n\t\t\t\tids.push( '#' + idFn(data._aData) );\n\t\t\t}\n\t\t}\n\n\t\td.childRows = ids;\n\t});\n\n\t// For future state loads (e.g. with StateRestore)\n\tapi.on( 'stateLoaded.DT', function (e, settings, state) {\n\t\t__details_state_load( api, state );\n\t});\n\n\t// And the initial load state\n\t__details_state_load( api, api.state.loaded() );\n});\n\nvar __details_state_load = function (api, state)\n{\n\tif ( state && state.childRows ) {\n\t\tapi\n\t\t\t.rows( state.childRows.map(function (id) {\n\t\t\t\t// Escape any `:` characters from the row id. Accounts for\n\t\t\t\t// already escaped characters.\n\t\t\t\treturn id.replace(/([^:\\\\]*(?:\\\\.[^:\\\\]*)*):/g, \"$1\\\\:\");\n\t\t\t}) )\n\t\t\t.every( function () {\n\t\t\t\t_fnCallbackFire( api.settings()[0], null, 'requestChild', [ this ] )\n\t\t\t});\n\t}\n}\n\nvar __details_add = function ( ctx, row, data, klass )\n{\n\t// Convert to array of TR elements\n\tvar rows = [];\n\tvar addRow = function ( r, k ) {\n\t\t// Recursion to allow for arrays of jQuery objects\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\taddRow( r[i], k );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t// to add the correct number of columns etc\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\tr.setAttribute( 'data-dt-row', row.idx );\n\t\t\trows.push( r );\n\t\t}\n\t\telse {\n\t\t\t// Otherwise create a row with a wrapper\n\t\t\tvar created = $('<tr><td></td></tr>')\n\t\t\t\t.attr( 'data-dt-row', row.idx )\n\t\t\t\t.addClass( k );\n\t\t\t\n\t\t\t$('td', created)\n\t\t\t\t.addClass( k )\n\t\t\t\t.html( r )[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\trows.push( created[0] );\n\t\t}\n\t};\n\n\taddRow( data, klass );\n\n\tif ( row._details ) {\n\t\trow._details.detach();\n\t}\n\n\trow._details = $(rows);\n\n\t// If the children were already shown, that state should be retained\n\tif ( row._detailsShow ) {\n\t\trow._details.insertAfter( row.nTr );\n\t}\n};\n\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(\n\tfunction (ctx) {\n\t\t_fnSaveState( ctx[0] )\n\t},\n\t500\n);\n\n\nvar __details_remove = function ( api, idx )\n{\n\tvar ctx = api.context;\n\n\tif ( ctx.length ) {\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\tif ( row && row._details ) {\n\t\t\trow._details.remove();\n\n\t\t\trow._detailsShow = undefined;\n\t\t\trow._details = undefined;\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_display = function ( api, show ) {\n\tvar ctx = api.context;\n\n\tif ( ctx.length && api.length ) {\n\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\tif ( row._details ) {\n\t\t\trow._detailsShow = show;\n\n\t\t\tif ( show ) {\n\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow._details.detach();\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t}\n\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\n\t\t\t__details_events( ctx[0] );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_events = function ( settings )\n{\n\tvar api = new _Api( settings );\n\tvar namespace = '.dt.DT_details';\n\tvar drawEvent = 'draw'+namespace;\n\tvar colvisEvent = 'column-sizing'+namespace;\n\tvar destroyEvent = 'destroy'+namespace;\n\tvar data = settings.aoData;\n\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t// On each draw, insert the required elements into the document\n\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t// Internal data grab\n\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Column visibility change - update the colspan\n\t\tapi.on( colvisEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t// a colspan)\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\trow = data[i];\n\n\t\t\t\tif ( row && row._details ) {\n\t\t\t\t\trow._details.each(function () {\n\t\t\t\t\t\tvar el = $(this).children('td');\n\n\t\t\t\t\t\tif (el.length == 1) {\n\t\t\t\t\t\t\tel.attr('colspan', visible);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Table destroyed - nuke any child rows\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif ( data[i] && data[i]._details ) {\n\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp+'row().child';\nvar _child_mth = _child_obj+'()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register( _child_mth, function ( data, klass ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// get\n\t\treturn ctx.length && this.length && ctx[0].aoData[ this[0] ]\n\t\t\t? ctx[0].aoData[ this[0] ]._details\n\t\t\t: undefined;\n\t}\n\telse if ( data === true ) {\n\t\t// show\n\t\tthis.child.show();\n\t}\n\telse if ( data === false ) {\n\t\t// remove\n\t\t__details_remove( this );\n\t}\n\telse if ( ctx.length && this.length ) {\n\t\t// set\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t}\n\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.show()',\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, true );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.hide()',\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, false );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.remove()',\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n], function () {           // it returns an object and this method is not executed)\n\t__details_remove( this );\n\treturn this;\n} );\n\n\n_api_register( _child_obj+'.isShown()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length && this.length && ctx[0].aoData[ this[0] ] ) {\n\t\t// _detailsShown as false or undefined will fall through to return false\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t}\n\treturn false;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+)?:(name|title|visIdx|visible)$/;\n\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function ( settings, column, r1, r2, rows, type ) {\n\tvar a = [];\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\ta.push( _fnGetCellData( settings, rows[row], column, type ) );\n\t}\n\treturn a;\n};\n\n\nvar __column_header = function ( settings, column, row ) {\n\tvar header = settings.aoHeader;\n\tvar titleRow = settings.titleRow;\n\tvar target = null;\n\n\tif (row !== undefined) {\n\t\ttarget = row;\n\t}\n\telse if (titleRow === true) { // legacy orderCellsTop support\n\t\ttarget = 0;\n\t}\n\telse if (titleRow === false) {\n\t\ttarget = header.length - 1;\n\t}\n\telse if (titleRow !== null) {\n\t\ttarget = titleRow;\n\t}\n\telse {\n\t\t// Automatic - find the _last_ unique cell from the top that is not empty (last for\n\t\t// backwards compatibility)\n\t\tfor (var i=0 ; i<header.length ; i++) {\n\t\t\tif (header[i][column].unique && $('span.dt-column-title', header[i][column].cell).text()) {\n\t\t\t\ttarget = i;\n\t\t\t}\n\t\t}\n\n\t\tif (target === null) {\n\t\t\ttarget = 0;\n\t\t}\n\t}\n\n\treturn header[target][column].cell;\n};\n\nvar __column_header_cells = function (header) {\n\tvar out = [];\n\n\tfor (var i=0 ; i<header.length ; i++) {\n\t\tfor (var j=0 ; j<header[i].length ; j++) {\n\t\t\tvar cell = header[i][j].cell;\n\n\t\t\tif (!out.includes(cell)) {\n\t\t\t\tout.push(cell);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\nvar __column_selector = function ( settings, selector, opts )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tnames, titles,\n\t\tnodes = __column_header_cells(settings.aoHeader);\n\t\n\tvar run = function ( s ) {\n\t\tvar selInt = _intVal( s );\n\n\t\t// Selector - all\n\t\tif ( s === '' ) {\n\t\t\treturn _range( columns.length );\n\t\t}\n\n\t\t// Selector - index\n\t\tif ( selInt !== null ) {\n\t\t\treturn [ selInt >= 0 ?\n\t\t\t\tselInt : // Count from left\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t];\n\t\t}\n\n\t\t// Selector = function\n\t\tif ( typeof s === 'function' ) {\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\treturn columns.map(function (col, idx) {\n\t\t\t\treturn s(\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t__column_header( settings, idx )\n\t\t\t\t\t) ? idx : null;\n\t\t\t});\n\t\t}\n\n\t\t// jQuery or string selector\n\t\tvar match = typeof s === 'string' ?\n\t\t\ts.match( __re_column_selector ) :\n\t\t\t'';\n\n\t\tif ( match ) {\n\t\t\tswitch( match[2] ) {\n\t\t\t\tcase 'visIdx':\n\t\t\t\tcase 'visible':\n\t\t\t\t\t// Selector is a column index\n\t\t\t\t\tif (match[1] && match[1].match(/^\\d+$/)) {\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = columns.map( function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn columns.map( function (col, idx) {\n\t\t\t\t\t\t// Not visible, can't match\n\t\t\t\t\t\tif (! col.bVisible) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Selector\n\t\t\t\t\t\tif (match[1]) {\n\t\t\t\t\t\t\treturn $(nodes[idx]).filter(match[1]).length > 0 ? idx : null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// `:visible` on its own\n\t\t\t\t\t\treturn idx;\n\t\t\t\t\t} );\n\n\t\t\t\tcase 'name':\n\t\t\t\t\t// Don't get names, unless needed, and only get once if it is\n\t\t\t\t\tif (!names) {\n\t\t\t\t\t\tnames = _pluck( columns, 'sName' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\treturn names.map( function (name, i) {\n\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tcase 'title':\n\t\t\t\t\tif (!titles) {\n\t\t\t\t\t\ttitles = _pluck( columns, 'sTitle' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// match by column title\n\t\t\t\t\treturn titles.map( function (title, i) {\n\t\t\t\t\t\treturn title === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Cell in the table body\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t}\n\n\t\t// jQuery selector on the TH elements for the columns\n\t\tvar jqResult = $( nodes )\n\t\t\t.filter( s )\n\t\t\t.map( function () {\n\t\t\t\treturn _fnColumnsFromHeader( this ); // `nodes` is column index complete and in order\n\t\t\t} )\n\t\t\t.toArray()\n\t\t\t.sort(function (a, b) {\n\t\t\t\treturn a - b;\n\t\t\t});\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t// a child or such an element\n\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\treturn host.length ?\n\t\t\t[ host.data('dt-column') ] :\n\t\t\t[];\n\t};\n\n\tvar selected = _selector_run( 'column', selector, run, settings, opts );\n\n\treturn opts.columnOrder && opts.columnOrder === 'index'\n\t\t? selected.sort(function (a, b) { return a - b; })\n\t\t: selected; // implied\n};\n\n\nvar __setColumnVis = function ( settings, column, vis ) {\n\tvar\n\t\tcols = settings.aoColumns,\n\t\tcol  = cols[ column ],\n\t\tdata = settings.aoData,\n\t\tcells, i, ien, tr;\n\n\t// Get\n\tif ( vis === undefined ) {\n\t\treturn col.bVisible;\n\t}\n\n\t// Set\n\t// No change\n\tif ( col.bVisible === vis ) {\n\t\treturn false;\n\t}\n\n\tif ( vis ) {\n\t\t// Insert column\n\t\t// Need to decide if we should use appendChild or insertBefore\n\t\tvar insertBefore = _pluck(cols, 'bVisible').indexOf(true, column+1);\n\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\tif (data[i]) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Remove column\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t}\n\n\t// Common actions\n\tcol.bVisible = vis;\n\n\t_colGroup(settings);\n\t\n\treturn true;\n};\n\n\n_api_register( 'columns()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __column_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in _row_selector?\n\tinst.selector.cols = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_registerPlural( 'columns().header()', 'column().header()', function ( row ) {\n\treturn this.iterator( 'column', function (settings, column) {\n\t\treturn __column_header(settings, column, row);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( row ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar footer = settings.aoFooter;\n\n\t\tif (! footer.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn settings.aoFooter[row !== undefined ? row : 0][column].cell;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\treturn this.iterator( 'column-rows', __columnData, 1 );\n} );\n\n_api_registerPlural( 'columns().render()', 'column().render()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn __columnData( settings, column, i, j, rows, type );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].mData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().init()', 'column().init()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column];\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().names()', 'column().name()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].sName;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().titles()', 'column().title()', function (title, row) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t// Argument shifting\n\t\tif (typeof title === 'number') {\n\t\t\trow = title;\n\t\t\ttitle = undefined;\n\t\t}\n\n\t\tvar span = $('span.dt-column-title', this.column(column).header(row));\n\n\t\tif (title !== undefined) {\n\t\t\tspan.html(title);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn span.html();\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().types()', 'column().type()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar type = settings.aoColumns[column].sType;\n\n\t\t// If the type was invalidated, then resolve it. This actually does\n\t\t// all columns at the moment. Would only happen once if getting all\n\t\t// column's data types.\n\t\tif (! type) {\n\t\t\t_fnColumnTypes(settings);\n\t\t}\n\n\t\treturn type;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\tvar that = this;\n\tvar changed = [];\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\tif ( vis === undefined ) {\n\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t} // else\n\t\t\n\t\tif (__setColumnVis( settings, column, vis )) {\n\t\t\tchanged.push(column);\n\t\t}\n\t} );\n\n\t// Group the column visibility changes\n\tif ( vis !== undefined ) {\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t// Redraw the header after changes\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t}\n\t\n\t\t\t_fnSaveState( settings );\n\n\t\t\t// Second loop once the first is done for events\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\tif (changed.includes(column)) {\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( changed.length && (calc === undefined || calc) ) {\n\t\t\t\tthat.columns.adjust();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n} );\n\n_api_registerPlural( 'columns().widths()', 'column().width()', function () {\n\t// Injects a fake row into the table for just a moment so the widths can\n\t// be read, regardless of colspan in the header and rows being present in\n\t// the body\n\tvar columns = this.columns(':visible').count();\n\tvar row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n\n\t$(this.table().body()).append(row);\n\n\tvar widths = row.children().map(function () {\n\t\treturn $(this).outerWidth();\n\t});\n\n\trow.remove();\n\t\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar visIdx = _fnColumnIndexToVisible( settings, column );\n\n\t\treturn visIdx !== null ? widths[visIdx] : 0;\n\t}, 1);\n} );\n\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn type === 'visible' ?\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\tcolumn;\n\t}, 1 );\n} );\n\n_api_register( 'columns.adjust()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Force a column sizing to happen with a manual call - otherwise it can skip\n\t\t// if the size hasn't changed\n\t\tsettings.containerWidth = -1;\n\n\t\t_fnAdjustColumnSizing( settings );\n\t}, 1 );\n} );\n\n_api_register( 'column.index()', function ( type, idx ) {\n\tif ( this.context.length !== 0 ) {\n\t\tvar ctx = this.context[0];\n\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t}\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t}\n\t}\n} );\n\n_api_register( 'column()', function ( selector, opts ) {\n\treturn _selector_first( this.columns( selector, opts ) );\n} );\n\nvar __cell_selector = function ( settings, selector, opts )\n{\n\tvar data = settings.aoData;\n\tvar rows = _selector_row_indexes( settings, opts );\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\tvar allCells = $(_flatten( [], cells ));\n\tvar row;\n\tvar columns = settings.aoColumns.length;\n\tvar a, i, ien, j, o, host;\n\n\tvar run = function ( s ) {\n\t\tvar fnSelector = typeof s === 'function';\n\n\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t// All cells and function selectors\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\to = {\n\t\t\t\t\t\trow: row,\n\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t// Selector - index\n\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\treturn s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ?\n\t\t\t\t[s] :\n\t\t\t\t[];\n\t\t}\n\n\t\t// Selector - jQuery filtered cells\n\t\tvar jqResult = allCells\n\t\t\t.filter( s )\n\t\t\t.map( function (i, el) {\n\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t// data attributes\n\t\thost = $(s).closest('*[data-dt-row]');\n\t\treturn host.length ?\n\t\t\t[ {\n\t\t\t\trow: host.data('dt-row'),\n\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t} ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'cell', selector, run, settings, opts );\n};\n\n\n\n\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t// Argument shifting\n\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t// Indexes\n\t\tif ( rowSelector.row === undefined ) {\n\t\t\t// Selector options in first parameter\n\t\t\topts = rowSelector;\n\t\t\trowSelector = null;\n\t\t}\n\t\telse {\n\t\t\t// Cell index objects in first parameter\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t}\n\tif ( $.isPlainObject( columnSelector ) ) {\n\t\topts = columnSelector;\n\t\tcolumnSelector = null;\n\t}\n\n\t// Cell selector\n\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t} );\n\t}\n\n\t// The default built in options need to apply to row and columns\n\tvar internalOpts = opts ? {\n\t\tpage: opts.page,\n\t\torder: opts.order,\n\t\tsearch: opts.search\n\t} : {};\n\n\t// Row + column selector\n\tvar columns = this.columns( columnSelector, internalOpts );\n\tvar rows = this.rows( rowSelector, internalOpts );\n\tvar i, ien, j, jen;\n\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\tvar a = [];\n\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\ta.push( {\n\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}, 1 );\n\n\t// There is currently only one extension which uses a cell selector extension\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t// an extension specific check at the moment\n\tvar cells = opts && opts.selected ?\n\t\tthis.cells( cellsNoOpts, opts ) :\n\t\tcellsNoOpts;\n\n\t$.extend( cells.selector, {\n\t\tcols: columnSelector,\n\t\trows: rowSelector,\n\t\topts: opts\n\t} );\n\n\treturn cells;\n} );\n\n\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\tvar data = settings.aoData[ row ];\n\n\t\treturn data && data.anCells ?\n\t\t\tdata.anCells[ column ] :\n\t\t\tundefined;\n\t}, 1 );\n} );\n\n\n_api_register( 'cells().data()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings.aoData[ row ][ type ][ column ];\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column, type );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t};\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t_fnInvalidate( settings, row, src, column );\n\t} );\n} );\n\n\n\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n} );\n\n\n_api_register( 'cell().data()', function ( data ) {\n\tvar ctx = this.context;\n\tvar cell = this[0];\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && cell.length ?\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\treturn this;\n} );\n\n\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n *//**\n * Set the ordering for the table.\n *\n * @param {integer} order Column index to sort upon.\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 1D array of sorting information to be applied.\n * @param {array} [...] Optional additional sorting conditions\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 2D array of sorting information to be applied.\n * @returns {DataTables.Api} this\n */\n_api_register( 'order()', function ( order, dir ) {\n\tvar ctx = this.context;\n\tvar args = Array.prototype.slice.call( arguments );\n\n\tif ( order === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].aaSorting :\n\t\t\tundefined;\n\t}\n\n\t// set\n\tif ( typeof order === 'number' ) {\n\t\t// Simple column / direction passed in\n\t\torder = [ [ order, dir ] ];\n\t}\n\telse if ( args.length > 1 ) {\n\t\t// Arguments passed in (list of 1D arrays)\n\t\torder = args;\n\t}\n\t// otherwise a 2D array was passed in\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar resolved = [];\n\t\t_fnSortResolve(settings, resolved, order);\n\n\t\tsettings.aaSorting = resolved;\n\t} );\n} );\n\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register( 'order.listener()', function ( node, column, callback ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSortAttachListener(settings, node, {}, column, callback);\n\t} );\n} );\n\n\n_api_register( 'order.fixed()', function ( set ) {\n\tif ( ! set ) {\n\t\tvar ctx = this.context;\n\t\tvar fixed = ctx.length ?\n\t\t\tctx[0].aaSortingFixed :\n\t\t\tundefined;\n\n\t\treturn Array.isArray( fixed ) ?\n\t\t\t{ pre: fixed } :\n\t\t\tfixed;\n\t}\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t} );\n} );\n\n\n// Order by the selected column(s)\n_api_register( [\n\t'columns().order()',\n\t'column().order()'\n], function ( dir ) {\n\tvar that = this;\n\n\tif ( ! dir ) {\n\t\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\t\tvar sort = _fnSortFlatten( settings );\n\n\t\t\tfor ( var i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tif ( sort[i].col === idx ) {\n\t\t\t\t\treturn sort[i].dir;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}, 1 );\n\t}\n\telse {\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tsettings.aaSorting = that[i].map( function (col) {\n\t\t\t\treturn [ col, dir ];\n\t\t\t} );\n\t\t} );\n\t}\n} );\n\n_api_registerPlural('columns().orderable()', 'column().orderable()', function ( directions ) {\n\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\tvar col = settings.aoColumns[idx];\n\n\t\treturn directions ?\n\t\t\tcol.asSorting :\n\t\t\tcol.bSortable;\n\t}, 1 );\n} );\n\n\n_api_register( 'processing()', function ( show ) {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t_fnProcessingDisplay( ctx, show );\n\t} );\n} );\n\n\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\tvar ctx = this.context;\n\n\tif ( input === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].oPreviousSearch.search :\n\t\t\tundefined;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof regex === 'object') {\n\t\t\t// New style options to pass to the search builder\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, regex, {\n\t\t\t\tsearch: input\n\t\t\t} ) );\n\t\t}\n\t\telse {\n\t\t\t// Compat for the old options\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, {\n\t\t\t\tsearch: input,\n\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t} ) );\n\t\t}\n\t} );\n} );\n\n_api_register( 'search.fixed()', function ( name, search ) {\n\tvar ret = this.iterator( true, 'table', function ( settings ) {\n\t\tvar fixed = settings.searchFixed;\n\n\t\tif (! name) {\n\t\t\treturn Object.keys(fixed);\n\t\t}\n\t\telse if (search === undefined) {\n\t\t\treturn fixed[name];\n\t\t}\n\t\telse if (search === null) {\n\t\t\tdelete fixed[name];\n\t\t}\n\t\telse {\n\t\t\tfixed[name] = search;\n\t\t}\n\n\t\treturn this;\n\t} );\n\n\treturn name !== undefined && search === undefined\n\t\t? ret[0]\n\t\t: ret;\n} );\n\n_api_registerPlural(\n\t'columns().search()',\n\t'column().search()',\n\tfunction ( input, regex, smart, caseInsen ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\tif ( input === undefined ) {\n\t\t\t\t// get\n\t\t\t\treturn preSearch[ column ].search;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof regex === 'object') {\n\t\t\t\t// New style options to pass to the search builder\n\t\t\t\t$.extend( preSearch[ column ], regex, {\n\t\t\t\t\tsearch: input\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Old style (with not all options available)\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\tsearch: input,\n\t\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t} );\n\t}\n);\n\n_api_register([\n\t\t'columns().search.fixed()',\n\t\t'column().search.fixed()'\n\t],\n\tfunction ( name, search ) {\n\t\tvar ret = this.iterator( true, 'column', function ( settings, colIdx ) {\n\t\t\tvar fixed = settings.aoColumns[colIdx].searchFixed;\n\n\t\t\tif (! name) {\n\t\t\t\treturn Object.keys(fixed);\n\t\t\t}\n\t\t\telse if (search === undefined) {\n\t\t\t\treturn fixed[name] || null;\n\t\t\t}\n\t\t\telse if (search === null) {\n\t\t\t\tdelete fixed[name];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfixed[name] = search;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} );\n\n\t\treturn name !== undefined && search === undefined\n\t\t\t? ret[0]\n\t\t\t: ret;\n\t}\n);\n/*\n * State API methods\n */\n\n_api_register( 'state()', function ( set, ignoreTime ) {\n\t// getter\n\tif ( ! set ) {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t}\n\n\tvar setMutate = $.extend( true, {}, set );\n\n\t// setter\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ignoreTime !== false ) {\n\t\t\tsetMutate.time = +new Date() + 100;\n\t\t}\n\n\t\t_fnImplementState( settings, setMutate, function(){} );\n\t} );\n} );\n\n\n_api_register( 'state.clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Save an empty object\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t} );\n} );\n\n\n_api_register( 'state.loaded()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oLoadedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.save()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSaveState( settings );\n\t} );\n} );\n\n// Can be assigned in DateTable.use() - note luxon and moment vars are in helpers.js\nvar __bootstrap;\nvar __foundation;\n\n/**\n * Set the libraries that DataTables uses, or the global objects.\n * Note that the arguments can be either way around (legacy support)\n * and the second is optional. See docs.\n */\nDataTable.use = function (arg1, arg2) {\n\t// Reverse arguments for legacy support\n\tvar module = typeof arg1 === 'string'\n\t\t? arg2\n\t\t: arg1;\n\tvar type = typeof arg2 === 'string'\n\t\t? arg2\n\t\t: arg1;\n\n\t// Getter\n\tif (module === undefined && typeof type === 'string') {\n\t\tswitch (type) {\n\t\t\tcase 'lib':\n\t\t\tcase 'jq':\n\t\t\t\treturn $;\n\n\t\t\tcase 'win':\n\t\t\t\treturn window;\n\n\t\t\tcase 'datetime':\n\t\t\t\treturn DataTable.DateTime;\n\n\t\t\tcase 'luxon':\n\t\t\t\treturn __luxon;\n\n\t\t\tcase 'moment':\n\t\t\t\treturn __moment;\n\n\t\t\tcase 'bootstrap':\n\t\t\t\t// Use local if set, otherwise try window, which could be undefined\n\t\t\t\treturn __bootstrap || window.bootstrap;\n\n\t\t\tcase 'foundation':\n\t\t\t\t// Ditto\n\t\t\t\treturn __foundation || window.Foundation;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Setter\n\tif (type === 'lib' || type === 'jq' || (module && module.fn && module.fn.jquery)) {\n\t\t$ = module;\n\t}\n\telse if (type === 'win' || (module && module.document)) {\n\t\twindow = module;\n\t\tdocument = module.document;\n\t}\n\telse if (type === 'datetime' || (module && module.type === 'DateTime')) {\n\t\tDataTable.DateTime = module;\n\t}\n\telse if (type === 'luxon' || (module && module.FixedOffsetZone)) {\n\t\t__luxon = module;\n\t}\n\telse if (type === 'moment' || (module && module.isMoment)) {\n\t\t__moment = module;\n\t}\n\telse if (type === 'bootstrap' || (module && module.Modal && module.Modal.NAME === 'modal'))\n\t{\n\t\t// This is currently for BS5 only. BS3/4 attach to jQuery, so no need to use `.use()`\n\t\t__bootstrap = module;\n\t}\n\telse if (type === 'foundation' || (module && module.Reveal)) {\n\t\t__foundation = module;\n\t}\n}\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n\tvar is = false;\n\n\t// Test if the first parameter is a window object\n\tif (root && root.document) {\n\t\twindow = root;\n\t\tdocument = root.document;\n\t}\n\n\t// Test if the second parameter is a jQuery object\n\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t$ = jq;\n\t\tis = true;\n\t}\n\n\treturn is;\n}\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @param {string} [version2=current DataTables version] As above, but optional.\n *   If not given the current DataTables version will be used.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = function( version, version2 )\n{\n\tvar aThis = version2 ?\n\t\tversion2.split('.') :\n\t\tDataTable.version.split('.');\n\tvar aThat = version.split('.');\n\tvar iThis, iThat;\n\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t// Parts are the same, keep comparing\n\t\tif (iThis === iThat) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parts are different, return immediately\n\t\treturn iThis > iThat;\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = function ( table )\n{\n\tvar t = $(table).get(0);\n\tvar is = false;\n\n\tif ( table instanceof DataTable.Api ) {\n\t\treturn true;\n\t}\n\n\t$.each( DataTable.settings, function (i, o) {\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\tis = true;\n\t\t}\n\t} );\n\n\treturn is;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = function ( visible )\n{\n\tvar api = false;\n\n\tif ( $.isPlainObject( visible ) ) {\n\t\tapi = visible.api;\n\t\tvisible = visible.visible;\n\t}\n\n\tvar a = DataTable.settings\n\t\t.filter( function (o) {\n\t\t\treturn !visible || (visible && $(o.nTable).is(':visible')) \n\t\t\t\t? true\n\t\t\t\t: false;\n\t\t} )\n\t\t.map( function (o) {\n\t\t\treturn o.nTable;\n\t\t});\n\n\treturn api ?\n\t\tnew _Api( a ) :\n\t\ta;\n};\n\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n/**\n *\n */\n_api_register( '$()', function ( selector, opts ) {\n\tvar\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\tjqRows = $(rows);\n\n\treturn $( [].concat(\n\t\tjqRows.filter( selector ).toArray(),\n\t\tjqRows.find( selector ).toArray()\n\t) );\n} );\n\n\n// jQuery functions to operate on the tables\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\targs[0] = args[0].split( /\\s/ ).map( function ( e ) {\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\te+'.dt' :\n\t\t\t\te;\n\t\t\t} ).join( ' ' );\n\n\t\tvar inst = $( this.tables().nodes() );\n\t\tinst[key].apply( inst, args );\n\t\treturn this;\n\t} );\n} );\n\n\n_api_register( 'clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnClearTable( settings );\n\t} );\n} );\n\n\n_api_register( 'error()', function (msg) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLog( settings, 0, msg );\n\t} );\n} );\n\n\n_api_register( 'settings()', function () {\n\treturn new _Api( this.context, this.context );\n} );\n\n\n_api_register( 'init()', function () {\n\tvar ctx = this.context;\n\treturn ctx.length ? ctx[0].oInit : null;\n} );\n\n\n_api_register( 'data()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t} ).flatten();\n} );\n\n\n_api_register( 'trigger()', function ( name, args, bubbles ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _fnCallbackFire( settings, null, name, args, bubbles );\n\t} ).flatten();\n} );\n\n\n_api_register( 'ready()', function ( fn ) {\n\tvar ctx = this.context;\n\n\t// Get status of first table\n\tif (! fn) {\n\t\treturn ctx.length\n\t\t\t? (ctx[0]._bInitComplete || false)\n\t\t\t: null;\n\t}\n\n\t// Function to run either once the table becomes ready or\n\t// immediately if it is already ready.\n\treturn this.tables().every(function () {\n\t\tvar api = this;\n\n\t\tif (this.context[0]._bInitComplete) {\n\t\t\tfn.call(api);\n\t\t}\n\t\telse {\n\t\t\tthis.on('init.dt.DT', function () {\n\t\t\t\tfn.call(api);\n\t\t\t});\n\t\t}\n\t} );\n} );\n\n\n_api_register( 'destroy()', function ( remove ) {\n\tremove = remove || false;\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar classes   = settings.oClasses;\n\t\tvar table     = settings.nTable;\n\t\tvar tbody     = settings.nTBody;\n\t\tvar thead     = settings.nTHead;\n\t\tvar tfoot     = settings.nTFoot;\n\t\tvar jqTable   = $(table);\n\t\tvar jqTbody   = $(tbody);\n\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\tvar rows      = settings.aoData.map( function (r) { return r ? r.nTr : null; } );\n\t\tvar orderClasses = classes.order;\n\n\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t// should be taken\n\t\tsettings.bDestroying = true;\n\n\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings], true );\n\n\t\t// If not being removed from the document, make all columns visible\n\t\tif ( ! remove ) {\n\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t}\n\n\t\t// Container width change listener\n\t\tif (settings.resizeObserver) {\n\t\t\tsettings.resizeObserver.disconnect();\n\t\t}\n\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t// for removing them\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t// When scrolling we had to break the table up - restore it\n\t\tif ( table != thead.parentNode ) {\n\t\t\tjqTable.children('thead').detach();\n\t\t\tjqTable.append( thead );\n\t\t}\n\n\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\tjqTable.children('tfoot').detach();\n\t\t\tjqTable.append( tfoot );\n\t\t}\n\n\t\t// Clean up the header / footer\n\t\tcleanHeader(thead, 'header');\n\t\tcleanHeader(tfoot, 'footer');\n\t\tsettings.colgroup.remove();\n\n\t\tsettings.aaSorting = [];\n\t\tsettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( settings );\n\n\t\t$(jqTable).find('th, td').removeClass(\n\t\t\t$.map(DataTable.ext.type.className, function (v) {\n\t\t\t\treturn v;\n\t\t\t}).join(' ')\n\t\t);\n\n\t\t$('th, td', thead)\n\t\t\t.removeClass(\n\t\t\t\torderClasses.none + ' ' +\n\t\t\t\torderClasses.canAsc + ' ' +\n\t\t\t\torderClasses.canDesc + ' ' +\n\t\t\t\torderClasses.isAsc + ' ' +\n\t\t\t\torderClasses.isDesc\n\t\t\t)\n\t\t\t.css('width', '')\n\t\t\t.removeAttr('aria-sort');\n\n\t\t// Add the TR elements back into the table in their original order\n\t\tjqTbody.children().detach();\n\t\tjqTbody.append( rows );\n\n\t\tvar orig = settings.nTableWrapper.parentNode;\n\t\tvar insertBefore = settings.nTableWrapper.nextSibling;\n\n\t\t// Remove the DataTables generated nodes, events and classes\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\tjqTable[ removedMethod ]();\n\t\tjqWrapper[ removedMethod ]();\n\n\t\t// If we need to reattach the table to the document\n\t\tif ( ! remove && orig ) {\n\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\torig.insertBefore( table, insertBefore );\n\n\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t// so we can restore directly to that\n\t\t\tjqTable\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t.removeClass( classes.table );\n\t\t}\n\n\t\t/* Remove the settings object from the settings array */\n\t\tvar idx = DataTable.settings.indexOf(settings);\n\t\tif ( idx !== -1 ) {\n\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t}\n\t} );\n} );\n\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t_api_register( type+'s().every()', function ( fn ) {\n\t\tvar opts = this.selector.opts;\n\t\tvar api = this;\n\t\tvar inst;\n\t\tvar counter = 0;\n\n\t\treturn this.iterator( 'every', function ( settings, selectedIdx, tableIdx ) {\n\t\t\tinst = api[ type ](selectedIdx, opts);\n\n\t\t\tif (type === 'cell') {\n\t\t\t\tfn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfn.call(inst, selectedIdx, tableIdx, counter);\n\t\t\t}\n\n\t\t\tcounter++;\n\t\t} );\n\t} );\n} );\n\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register( 'i18n()', function ( token, def, plural ) {\n\tvar ctx = this.context[0];\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\tif ( resolved === undefined ) {\n\t\tresolved = def;\n\t}\n\n\tif ( $.isPlainObject( resolved ) ) {\n\t\tresolved = plural !== undefined && resolved[ plural ] !== undefined ?\n\t\t\tresolved[ plural ] :\n\t\t\tresolved._;\n\t}\n\n\treturn typeof resolved === 'string'\n\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\n\t\t: resolved;\n} );\n\n// Needed for header and footer, so pulled into its own function\nfunction cleanHeader(node, className) {\n\t$(node).find('span.dt-column-order').remove();\n\t$(node).find('span.dt-column-title').each(function () {\n\t\tvar title = $(this).html();\n\t\t$(this).parent().parent().append(title);\n\t\t$(this).remove();\n\t});\n\t$(node).find('div.dt-column-' + className).remove();\n\n\t$('th, td', node).removeAttr('data-dt-column');\n}\n\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"2.3.2\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t */\n\t\"caseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t */\n\t\"search\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t */\n\t\"regex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t */\n\t\"smart\": true,\n\n\t/**\n\t * Flag to indicate if DataTables should only trigger a search when\n\t * the return key is pressed.\n\t */\n\t\"return\": false\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Array of TD elements for each row. This is null until the row has been\n\t * created.\n\t */\n\t\"anCells\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data\n\t * source.\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is\n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t */\n\t\"_aSortData\": null,\n\n\t/**\n\t * Per cell filtering data cache. As per the sort data cache, used to\n\t * increase the performance of the filtering in DataTables\n\t */\n\t\"_aFilterData\": null,\n\n\t/**\n\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t * in this case a string rather than an array. This is easily computed with\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t * needed on every search (memory traded for performance)\n\t */\n\t\"_sFilterRow\": null,\n\n\t/**\n\t * Denote if the original data source was from the DOM, or the data source\n\t * object. This is used for invalidating data, so DataTables can\n\t * automatically read data from the original source, unless uninstructed\n\t * otherwise.\n\t */\n\t\"src\": null,\n\n\t/**\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t * object, but want to know the index\n\t */\n\t\"idx\": -1,\n\n\t/**\n\t * Cached display value\n\t */\n\tdisplayData: null\n};\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * Column index.\n\t */\n\t\"idx\": null,\n\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t */\n\t\"asSorting\": null,\n\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t */\n\t\"bSearchable\": null,\n\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t */\n\t\"bSortable\": null,\n\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t */\n\t\"bVisible\": null,\n\n\t/**\n\t * Store for manual type assignment using the `column.type` option. This\n\t * is held in store so we can manipulate the column's `sType` property.\n\t */\n\t\"_sManualType\": null,\n\n\t/**\n\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t * source for filtering or sorting. True is either are.\n\t */\n\t\"_bAttrSrc\": false,\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column\n\t * initialisation method\n\t */\n\t\"fnGetData\": null,\n\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b>\n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t */\n\t\"fnSetData\": null,\n\n\t/**\n\t * Property to read the value for the cells in the column from the data\n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t */\n\t\"mData\": null,\n\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t */\n\t\"mRender\": null,\n\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t */\n\t\"sClass\": null,\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t */\n\t\"sContentPadding\": null,\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t */\n\t\"sName\": null,\n\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t */\n\t\"sSortDataType\": 'std',\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t */\n\t\"sSortingClass\": null,\n\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t */\n\t\"sTitle\": null,\n\n\t/**\n\t * Column sorting and filtering type\n\t */\n\t\"sType\": null,\n\n\t/**\n\t * Width of the column\n\t */\n\t\"sWidth\": null,\n\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t */\n\t\"sWidthOrig\": null,\n\n\t/** Cached string which is the longest in the column */\n\tmaxLenString: null,\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: null\n};\n\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which\n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t * initialisation. You can define which column(s) the sort is performed\n\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t * should contain an array for each column to be sorted initially containing\n\t * the column's index and a direction string ('asc' or 'desc').\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the `sorting` parameter, but\n\t * cannot be overridden by user interaction with the table. What this means\n\t * is that you could have a column (visible or hidden) which the sorting\n\t * will always be forced on first - any sorting after that (from the user)\n\t * will then be performed as required. This can be useful for grouping rows\n\t * together.\n\t */\n\t\"aaSortingFixed\": [],\n\n\n\t/**\n\t * DataTables can be instructed to load data to display in the table from a\n\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t *\n\t * The `ajax` property has three different modes of operation, depending on\n\t * how it is defined. These are:\n\t *\n\t * * `string` - Set the URL from where the data should be loaded from.\n\t * * `object` - Define properties for `jQuery.ajax`.\n\t * * `function` - Custom data get function\n\t *\n\t * `string`\n\t * --------\n\t *\n\t * As a string, the `ajax` property simply defines the URL from which\n\t * DataTables will load data.\n\t *\n\t * `object`\n\t * --------\n\t *\n\t * As an object, the parameters in the object are passed to\n\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n\t * of the Ajax request. DataTables has a number of default parameters which\n\t * you can override using this option. Please refer to the jQuery\n\t * documentation for a full description of the options available, although\n\t * the following parameters provide additional options in DataTables or\n\t * require special consideration:\n\t *\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t *   can also be used as a function to manipulate the data DataTables sends\n\t *   to the server. The function takes a single parameter, an object of\n\t *   parameters with the values that DataTables has readied for sending. An\n\t *   object may be returned which will be merged into the DataTables\n\t *   defaults, or you can add the items to the object that was passed in and\n\t *   not return anything from the function. This supersedes `fnServerParams`\n\t *   from DataTables 1.9-.\n\t *\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t *   from an Ajax source or for server-side processing - this parameter\n\t *   allows that property to be changed. You can use Javascript dotted\n\t *   object notation to get a data source for multiple levels of nesting, or\n\t *   it my be used as a function. As a function it takes a single parameter,\n\t *   the JSON returned from the server, which can be manipulated as\n\t *   required, with the returned value being that used by DataTables as the\n\t *   data source for the table.\n\t *\n\t * * `success` - Should not be overridden it is used internally in\n\t *   DataTables. To manipulate / transform the data returned by the server\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t *\n\t * `function`\n\t * ----------\n\t *\n\t * As a function, making the Ajax call is left up to yourself allowing\n\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t * than Ajax could be used to obtain the required data, such as Web storage\n\t * or an AIR database.\n\t *\n\t * The function is given four parameters and no return is required. The\n\t * parameters are:\n\t *\n\t * 1. _object_ - Data to send to the server\n\t * 2. _function_ - Callback function that must be executed when the required\n\t *    data has been obtained. That data should be passed into the callback\n\t *    as the only parameter\n\t * 3. _object_ - DataTables settings object for the table\n\t */\n\t\"ajax\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be\n\t * either a 1D array of options which will be used for both the displayed\n\t * option and the value, or a 2D array which will use the array in the first\n\t * position as the value, and the array in the second position as the\n\t * displayed options (useful for language strings such as 'All').\n\t *\n\t * Note that the `pageLength` property will be automatically set to the\n\t * first value given in this array, unless `pageLength` is also provided.\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The `columns` option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t * column, multiple columns, or all columns, using the `targets` property of\n\t * each object in the array. This allows great flexibility when creating\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t * columns you specifically want. `columnDefs` may use any of the column\n\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t * have `targets` defined in each object in the array. Values in the `targets`\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as `search`, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size\n\t * as the number of columns, and each element be an object with the parameters\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using `columns`.\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t */\n\t\"bDeferRender\": true,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with\n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.dom}.\n\t */\n\t\"bFilter\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bInfo\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bLengthChange\": true,\n\n\t/**\n\t * Enable or disable pagination.\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t * you need.\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * `ajax` parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the `sortable` option for each column.\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Enable or display DataTables' ability to sort multiple columns at the\n\t * same time (activated by shift-click by the user).\n\t */\n\t\"bSortMulti\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t */\n\t\"bSortCellsTop\": null,\n\n\n\t/** Specify which row is the title row in the header. Replacement for bSortCellsTop */\n\ttitleRow: null,\n\n\n\t/**\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t * used to save table display information such as pagination information,\n\t * display length, filtering and sorting. As such when the end user reloads\n\t * the page the display display will match what thy had previously set up.\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' event.\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t */\n\t\"fnFormatNumber\": function ( toFormat ) {\n\t\treturn toFormat.toString().replace(\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\tthis.oLanguage.sThousands\n\t\t);\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateLoadCallback\": function ( settings ) {\n\t\ttry {\n\t\t\treturn JSON.parse(\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t * a plug-in.\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored By default DataTables will use `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\ttry {\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\tJSON.stringify( data )\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// noop\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table\n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or\n\t * other state properties or modification. Note that for plug-in authors, you should\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration for which the saved state information is considered valid. After this period\n\t * has elapsed the state will be returned to the default.\n\t * Value is given in seconds.\n\t */\n\t\"iStateDuration\": 7200,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * Classes that DataTables assigns to the various components and features\n\t * that it adds to the HTML table. This allows classes to be configured\n\t * during initialisation in addition to through the static\n\t * {@link DataTable.ext.oStdClasses} object).\n\t */\n\t\"oClasses\": {},\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be sorted\n\t\t\t */\n\t\t\t\"orderable\": \": Activate to sort\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being sorted\n\t\t\t */\n\t\t\t\"orderableReverse\": \": Activate to invert sorting\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being \n\t\t\t * sorted and next step is to remove sorting\n\t\t\t */\n\t\t\t\"orderableRemove\": \": Activate to remove sorting\",\n\n\t\t\tpaginate: {\n\t\t\t\tfirst: 'First',\n\t\t\t\tlast: 'Last',\n\t\t\t\tnext: 'Next',\n\t\t\t\tprevious: 'Previous',\n\t\t\t\tnumber: ''\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t * control types.\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Label and character for first page button (Â«)\n\t\t\t */\n\t\t\t\"sFirst\": \"\\u00AB\",\n\n\t\t\t/**\n\t\t\t * Last page button (Â»)\n\t\t\t */\n\t\t\t\"sLast\": \"\\u00BB\",\n\n\t\t\t/**\n\t\t\t * Next page button (âº)\n\t\t\t */\n\t\t\t\"sNext\": \"\\u203A\",\n\n\t\t\t/**\n\t\t\t * Previous page button (â¹)\n\t\t\t */\n\t\t\t\"sPrevious\": \"\\u2039\",\n\t\t},\n\n\t\t/**\n\t\t * Plural object for the data type the table is showing\n\t\t */\n\t\tentries: {\n\t\t\t_: \"entries\",\n\t\t\t1: \"entry\"\n\t\t},\n\n\t\t/**\n\t\t * Page length options\n\t\t */\n\t\tlengthLabels: {\n\t\t\t'-1': 'All'\n\t\t},\n\n\t\t/**\n\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t * instead (either the default or given value).\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t/**\n\t\t * This string gives information to the end user about the information\n\t\t * that is current on display on the page. The following tokens can be\n\t\t * used in the string and will be dynamically replaced as the table\n\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t * removed as needed by the language requires:\n\t\t *\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t * * `\\_PAGE\\_` - Current page number\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the\n\t\t * format of this string should match `info`.\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended\n\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n\n\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t * being used) at all times.\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t/**\n\t\t * This decimal place operator is a little different from the other\n\t\t * language options since DataTables doesn't output floating point\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t * what this parameter does is modify the sort methods of the table so\n\t\t * that numbers which are in a format which has a character other than\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t *\n\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t * the same table and still be sortable, the table must be consistent.\n\t\t * However, multiple different tables on the page can use different\n\t\t * decimal place characters.\n\t\t */\n\t\t\"sDecimal\": \"\",\n\n\n\t\t/**\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t * used to format large numbers that are used in the table information.\n\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t */\n\t\t\"sThousands\": \",\",\n\n\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t */\n\t\t\"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n\n\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t */\n\t\t\"sProcessing\": \"\",\n\n\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\n\n\t\t/**\n\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t */\n\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t */\n\t\t\"sUrl\": \"\",\n\n\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/** The initial data order is reversed when `desc` ordering */\n\torderDescReverse: true,\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the `search` parameter must be\n\t * defined, but all other parameters are optional. When `regex` is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When `smart`\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * Table and control layout. This replaces the legacy `dom` option.\n\t */\n\tlayout: {\n\t\ttopStart: 'pageLength',\n\t\ttopEnd: 'search',\n\t\tbottomStart: 'info',\n\t\tbottomEnd: 'paging'\n\t},\n\n\n\t/**\n\t * Legacy DOM layout option\n\t */\n\t\"sDom\": null,\n\n\n\t/**\n\t * Search delay option. This will throttle full table searches that use the\n\t * DataTables provided search input element (it does not effect calls to\n\t * `dt-api search()`, providing a delay before the search is made.\n\t */\n\t\"searchDelay\": null,\n\n\n\t/**\n\t * DataTables features six different built-in options for the buttons to\n\t * display for pagination control:\n\t *\n\t * * `numbers` - Page number buttons only\n\t * * `simple` - 'Previous' and 'Next' buttons only\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t */\n\t\"sPaginationType\": \"\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t * certain layout, or you have a large number of columns in the table, you\n\t * can enable x-scrolling to show the table in a viewport, which can be\n\t * scrolled. This property can be `true` which will allow the table to\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t * is recommended.\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t */\n\t\"sServerMethod\": \"GET\",\n\n\n\t/**\n\t * DataTables makes use of renderers when displaying HTML elements for\n\t * a table. These renderers can be added or modified by plug-ins to\n\t * generate suitable mark-up for a site. For example the Bootstrap\n\t * integration plug-in for DataTables uses a paging button renderer to\n\t * display pagination buttons in the mark-up required by Bootstrap.\n\t *\n\t * For further information about the renderers available see\n\t * DataTable.ext.renderer\n\t */\n\t\"renderer\": null,\n\n\n\t/**\n\t * Set the data property name that DataTables should use to get a row's id\n\t * to set as the `id` property in the node.\n\t */\n\t\"rowId\": \"DT_RowId\",\n\n\n\t/**\n\t * Caption value\n\t */\n\t\"caption\": null,\n\n\n\t/**\n\t * For server-side processing - use the data from the DOM for the first draw\n\t */\n\tiDeferLoading: null,\n\n\t/** Event listeners */\n\ton: null\n};\n\n_fnHungarianMap( DataTable.defaults );\n\n\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n\t/**\n\t * Define which column(s) an order will occur on for this column. This\n\t * allows a column's ordering to take multiple columns into account when\n\t * doing a sort or use the data from a different column. For example first\n\t * name / last name columns make sense to do a multi-column sort over the\n\t * two columns.\n\t */\n\t\"aDataSort\": null,\n\t\"iDataSort\": -1,\n\n\tariaTitle: '',\n\n\n\t/**\n\t * You can control the default ordering direction, and even alter the\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t * using this parameter.\n\t */\n\t\"asSorting\": [ 'asc', 'desc', '' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable ordering on this column.\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t */\n\t\"bVisible\": true,\n\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * This property can be used to read data from any data source property,\n\t * including deeply nested objects / properties. `data` can be given in a\n\t * number of different ways which effect its behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object. Note that\n\t *      function notation is recommended for use in `render` rather than\n\t *      `data` as it is much simpler to use as a renderer.\n\t * * `null` - use the original data source for the row rather than plucking\n\t *   data directly from it. This action has effects on two other\n\t *   initialisation options:\n\t *    * `defaultContent` - When null is given as the `data` option and\n\t *      `defaultContent` is specified for the column, the value defined by\n\t *      `defaultContent` will be used for the cell.\n\t *    * `render` - When null is used for the `data` option and the `render`\n\t *      option is specified for the column, the whole data source for the\n\t *      row is used for the renderer.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * `{array|object}` The data source for the row\n\t *      * `{string}` The type call data requested - this will be 'set' when\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t *        when gathering data. Note that when `undefined` is given for the\n\t *        type DataTables expects to get the raw data for the object back<\n\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t *    * Return:\n\t *      * The return value from the function is not required when 'set' is\n\t *        the type of call, but otherwise the return is what will be used\n\t *        for the data requested.\n\t *\n\t * Note that `data` is a getter and setter option. If you just require\n\t * formatting of data for output, you will likely want to use `render` which\n\t * is simply a getter and thus simpler to use.\n\t *\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t * name change reflects the flexibility of this property and is consistent\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t * be used by DataTables, as it automatically maps the old name to the new\n\t * if required.\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to `data` and it is suggested that\n\t * when you want to manipulate data for display (including filtering,\n\t * sorting etc) without altering the underlying data for the table, use this\n\t * property. `render` can be considered to be the the read only companion to\n\t * `data` which is read / write (then as such more complex). Like `data`\n\t * this option can be given in a number of different ways to effect its\n\t * behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object.\n\t * * `object` - use different data for the different data types requested by\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t *   of the object is the data type the property refers to and the value can\n\t *   defined using an integer, string or function using the same rules as\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t *   This is the default value to use if you haven't specified a value for\n\t *   the data type requested by DataTables.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * {array|object} The data source for the row (based on `data`)\n\t *      * {string} The type call data requested - this will be 'filter',\n\t *        'display', 'type' or 'sort'.\n\t *      * {array|object} The full data source for the row (not based on\n\t *        `data`)\n\t *    * Return:\n\t *      * The return value from the function is what will be used for the\n\t *        data requested.\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t */\n\t\"sClass\": \"\",\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this!\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because `data`\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the ordering which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to ordering. This allows ordering to occur on user\n\t * editable elements such as form inputs.\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be\n\t * ordered. Four types (string, numeric, date and html (which will strip\n\t * HTML tags before ordering)) are currently available. Note that only date\n\t * formats understood by Javascript's Date() object will be accepted as type\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t * through plug-ins.\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t */\n\t\"sWidth\": null\n};\n\n_fnHungarianMap( DataTable.defaults.column );\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t */\n\t\"oFeatures\": {\n\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all for DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bDeferRender\": null,\n\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bFilter\": null,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bInfo\": true,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bLengthChange\": true,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bPaginate\": null,\n\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bProcessing\": null,\n\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bServerSide\": null,\n\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSort\": null,\n\n\t\t/**\n\t\t * Multi-column sorting\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortMulti\": null,\n\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortClasses\": null,\n\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\n\n\t/**\n\t * Scrolling settings for a table.\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bCollapse\": null,\n\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t */\n\t\t\"iBarWidth\": 0,\n\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sX\": null,\n\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sY\": null\n\t},\n\n\t/**\n\t * Language information for the table.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See\n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\n\t/**\n\t * Browser support parameters\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t * scrolling container - needed for rtl language layout, although not\n\t\t * all browsers move the scrollbar (Safari).\n\t\t */\n\t\t\"bScrollbarLeft\": false,\n\n\t\t/**\n\t\t * Browser scrollbar width\n\t\t */\n\t\t\"barWidth\": 0\n\t},\n\n\n\t\"ajax\": null,\n\n\n\t/**\n\t * Array referencing the nodes which are used for the features. The\n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t */\n\t\"aanFeatures\": [],\n\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t */\n\t\"aoData\": [],\n\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t */\n\t\"aiDisplay\": [],\n\n\t/**\n\t * Array of indexes for display - no filtering\n\t */\n\t\"aiDisplayMaster\": [],\n\n\t/**\n\t * Map of row ids to data indexes\n\t */\n\t\"aIds\": {},\n\n\t/**\n\t * Store information about each column that is in use\n\t */\n\t\"aoColumns\": [],\n\n\t/**\n\t * Store information about the table's header\n\t */\n\t\"aoHeader\": [],\n\n\t/**\n\t * Store information about the table's footer\n\t */\n\t\"aoFooter\": [],\n\n\t/**\n\t * Store the applied global search information in case we want to force a\n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"oPreviousSearch\": {},\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: {},\n\n\t/**\n\t * Store the applied search for each column - see\n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t */\n\t\"aoPreSearchCols\": [],\n\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSorting\": null,\n\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSortingFixed\": [],\n\n\t/**\n\t * If restoring a table - we should restore its width\n\t */\n\t\"sDestroyWidth\": 0,\n\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t */\n\t\"aoRowCallback\": [],\n\n\t/**\n\t * Callback functions for the header on each draw.\n\t */\n\t\"aoHeaderCallback\": [],\n\n\t/**\n\t * Callback function for the footer on each draw.\n\t */\n\t\"aoFooterCallback\": [],\n\n\t/**\n\t * Array of callback functions for draw callback functions\n\t */\n\t\"aoDrawCallback\": [],\n\n\t/**\n\t * Array of callback functions for row created function\n\t */\n\t\"aoRowCreatedCallback\": [],\n\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of\n\t * false will be used to cancel the draw.\n\t */\n\t\"aoPreDrawCallback\": [],\n\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t */\n\t\"aoInitComplete\": [],\n\n\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t */\n\t\"aoStateSaveParams\": [],\n\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t */\n\t\"aoStateLoadParams\": [],\n\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t */\n\t\"aoStateLoaded\": [],\n\n\t/**\n\t * Cache the table ID for quick access\n\t */\n\t\"sTableId\": \"\",\n\n\t/**\n\t * The TABLE node for the main table\n\t */\n\t\"nTable\": null,\n\n\t/**\n\t * Permanent ref to the thead element\n\t */\n\t\"nTHead\": null,\n\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t */\n\t\"nTFoot\": null,\n\n\t/**\n\t * Permanent ref to the tbody element\n\t */\n\t\"nTBody\": null,\n\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t */\n\t\"nTableWrapper\": null,\n\n\t/**\n\t * Indicate if all required information has been read in\n\t */\n\t\"bInitialised\": false,\n\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t */\n\t\"aoOpenRows\": [],\n\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sDom\": null,\n\n\t/**\n\t * Search delay (in mS)\n\t */\n\t\"searchDelay\": null,\n\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\t/**\n\t * Number of paging controls on the page. Only used for backwards compatibility\n\t */\n\tpagingControls: 0,\n\n\t/**\n\t * The state duration (for `stateSave`) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"iStateDuration\": 0,\n\n\t/**\n\t * Array of callback functions for state saving. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateSave\": [],\n\n\t/**\n\t * Array of callback functions for state loading. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateLoad\": [],\n\n\t/**\n\t * State that was saved. Useful for back reference\n\t */\n\t\"oSavedState\": null,\n\n\t/**\n\t * State that was loaded. Useful for back reference\n\t */\n\t\"oLoadedState\": null,\n\n\t/**\n\t * Note if draw should be blocked while getting data\n\t */\n\t\"bAjaxDataGet\": true,\n\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering.\n\t * This can be used for working with the XHR information in one of the\n\t * callbacks\n\t */\n\t\"jqXHR\": null,\n\n\t/**\n\t * JSON returned from the server in the last Ajax request\n\t */\n\t\"json\": undefined,\n\n\t/**\n\t * Data submitted as part of the last Ajax request\n\t */\n\t\"oAjaxData\": undefined,\n\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sServerMethod\": null,\n\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"fnFormatNumber\": null,\n\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aLengthMenu\": null,\n\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t */\n\t\"iDraw\": 0,\n\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t */\n\t\"bDrawing\": false,\n\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t */\n\t\"iDrawError\": -1,\n\n\t/**\n\t * Paging display length\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsDisplay\": 0,\n\n\t/**\n\t * The classes to use for the table\n\t */\n\t\"oClasses\": {},\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than\n\t * one unique cell per column. Replaced by titleRow\n\t */\n\t\"bSortCellsTop\": null,\n\n\t/**\n\t * Initialisation object that is used for the table\n\t */\n\t\"oInit\": null,\n\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t */\n\t\"aoDestroyCallback\": [],\n\n\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsTotal * 1 :\n\t\t\tthis.aiDisplayMaster.length;\n\t},\n\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\tthis.aiDisplay.length;\n\t},\n\n\t/**\n\t * Get the display end point - aiDisplay index\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tvar\n\t\t\tlen      = this._iDisplayLength,\n\t\t\tstart    = this._iDisplayStart,\n\t\t\tcalc     = start + len,\n\t\t\trecords  = this.aiDisplay.length,\n\t\t\tfeatures = this.oFeatures,\n\t\t\tpaginate = features.bPaginate;\n\n\t\tif ( features.bServerSide ) {\n\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\tstart + records :\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t}\n\t\telse {\n\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\trecords :\n\t\t\t\tcalc;\n\t\t}\n\t},\n\n\t/**\n\t * The DataTables object for this table\n\t */\n\t\"oInstance\": null,\n\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null,\n\n\t/**\n\t * Last applied sort\n\t */\n\t\"aLastSort\": [],\n\n\t/**\n\t * Stored plug-in instances\n\t */\n\t\"oPlugins\": {},\n\n\t/**\n\t * Function used to get a row's id from the row's data\n\t */\n\t\"rowIdFn\": null,\n\n\t/**\n\t * Data location where to store a row's id\n\t */\n\t\"rowId\": null,\n\n\tcaption: '',\n\n\tcaptionNode: null,\n\n\tcolgroup: null,\n\n\t/** Delay loading of data */\n\tdeferLoading: null,\n\n\t/** Allow auto type detection */\n\ttypeDetect: true,\n\n\t/** ResizeObserver for the container div */\n\tresizeObserver: null,\n\n\t/** Keep a record of the last size of the container, so we can skip duplicates */\n\tcontainerWidth: -1,\n\n\t/** Reverse the initial order of the data set on desc ordering */\n\torderDescReverse: null,\n\n\t/** Show / hide ordering indicators in headers */\n\torderIndicators: true,\n\n\t/** Default ordering listener */\n\torderHandler: true,\n\n\t/** Title row indicator */\n\ttitleRow: null\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n\nvar extPagination = DataTable.ext.pager;\n\n// Paging buttons configuration\n$.extend( extPagination, {\n\tsimple: function () {\n\t\treturn [ 'previous', 'next' ];\n\t},\n\n\tfull: function () {\n\t\treturn [ 'first', 'previous', 'next', 'last' ];\n\t},\n\n\tnumbers: function () {\n\t\treturn [ 'numbers' ];\n\t},\n\n\tsimple_numbers: function () {\n\t\treturn [ 'previous', 'numbers', 'next' ];\n\t},\n\n\tfull_numbers: function () {\n\t\treturn [ 'first', 'previous', 'numbers', 'next', 'last' ];\n\t},\n\n\tfirst_last: function () {\n\t\treturn ['first', 'last'];\n\t},\n\n\tfirst_last_numbers: function () {\n\t\treturn ['first', 'numbers', 'last'];\n\t},\n\n\t// For testing and plug-ins to use\n\t_numbers: _pagingNumbers,\n\n\t// Number of number buttons - legacy, use `numbers` option for paging feature\n\tnumbers_length: 7\n} );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tpagingButton: {\n\t\t_: function (settings, buttonType, content, active, disabled) {\n\t\t\tvar classes = settings.oClasses.paging;\n\t\t\tvar btnClasses = [classes.button];\n\t\t\tvar btn;\n\n\t\t\tif (active) {\n\t\t\t\tbtnClasses.push(classes.active);\n\t\t\t}\n\n\t\t\tif (disabled) {\n\t\t\t\tbtnClasses.push(classes.disabled)\n\t\t\t}\n\n\t\t\tif (buttonType === 'ellipsis') {\n\t\t\t\tbtn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtn = $('<button>', {\n\t\t\t\t\tclass: btnClasses.join(' '),\n\t\t\t\t\trole: 'link',\n\t\t\t\t\ttype: 'button'\n\t\t\t\t}).html(content);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdisplay: btn,\n\t\t\t\tclicker: btn\n\t\t\t}\n\t\t}\n\t},\n\n\tpagingContainer: {\n\t\t_: function (settings, buttons) {\n\t\t\t// No wrapping element - just append directly to the host\n\t\t\treturn buttons;\n\t\t}\n\t}\n} );\n\n// Common function to remove new lines, strip HTML and diacritic control\nvar _filterString = function (stripHtml, normalize) {\n\treturn function (str) {\n\t\tif (_empty(str) || typeof str !== 'string') {\n\t\t\treturn str;\n\t\t}\n\n\t\tstr = str.replace( _re_new_lines, \" \" );\n\n\t\tif (stripHtml) {\n\t\t\tstr = _stripHtml(str);\n\t\t}\n\n\t\tif (normalize) {\n\t\t\tstr = _normalize(str, false);\n\t\t}\n\n\t\treturn str;\n\t};\n}\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\n/**\n * Common logic for moment, luxon or a date action.\n *\n * Happens after __mldObj, so don't need to call `resolveWindowsLibs` again\n */\nfunction __mld( dtLib, momentFn, luxonFn, dateFn, arg1 ) {\n\tif (__moment) {\n\t\treturn dtLib[momentFn]( arg1 );\n\t}\n\telse if (__luxon) {\n\t\treturn dtLib[luxonFn]( arg1 );\n\t}\n\t\n\treturn dateFn ? dtLib[dateFn]( arg1 ) : dtLib;\n}\n\n\nvar __mlWarning = false;\nvar __luxon; // Can be assigned in DateTable.use()\nvar __moment; // Can be assigned in DateTable.use()\n\n/**\n * \n */\nfunction resolveWindowLibs() {\n\tif (window.luxon && ! __luxon) {\n\t\t__luxon = window.luxon;\n\t}\n\t\n\tif (window.moment && ! __moment) {\n\t\t__moment = window.moment;\n\t}\n}\n\nfunction __mldObj (d, format, locale) {\n\tvar dt;\n\n\tresolveWindowLibs();\n\n\tif (__moment) {\n\t\tdt = __moment.utc( d, format, locale, true );\n\n\t\tif (! dt.isValid()) {\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if (__luxon) {\n\t\tdt = format && typeof d === 'string'\n\t\t\t? __luxon.DateTime.fromFormat( d, format )\n\t\t\t: __luxon.DateTime.fromISO( d );\n\n\t\tif (! dt.isValid) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdt = dt.setLocale(locale);\n\t}\n\telse if (! format) {\n\t\t// No format given, must be ISO\n\t\tdt = new Date(d);\n\t}\n\telse {\n\t\tif (! __mlWarning) {\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t}\n\n\t\t__mlWarning = true;\n\t}\n\n\treturn dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper (localeString) {\n\treturn function ( from, to, locale, def ) {\n\t\t// Luxon and Moment support\n\t\t// Argument shifting\n\t\tif ( arguments.length === 0 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = null; // means toLocaleString\n\t\t\tfrom = null; // means iso8601\n\t\t}\n\t\telse if ( arguments.length === 1 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\t\telse if ( arguments.length === 2 ) {\n\t\t\tlocale = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\n\t\tvar typeName = 'datetime' + (to ? '-' + to : '');\n\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\tif (! DataTable.ext.type.order[typeName + '-pre']) {\n\t\t\tDataTable.type(typeName, {\n\t\t\t\tdetect: function (d) {\n\t\t\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t\t},\n\t\t\t\torder: {\n\t\t\t\t\tpre: function (d) {\n\t\t\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\t\t\t\treturn d.valueOf();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclassName: 'dt-right'\n\t\t\t});\n\t\t}\n\t\n\t\treturn function ( d, type ) {\n\t\t\t// Allow for a default value\n\t\t\tif (d === null || d === undefined) {\n\t\t\t\tif (def === '--now') {\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t// UTC\n\t\t\t\t\tvar local = new Date();\n\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type === 'type') {\n\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\treturn typeName;\n\t\t\t}\n\n\t\t\tif (d === '') {\n\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t? ''\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t}\n\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\tif (dt === null) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tif (type === 'sort') {\n\t\t\t\treturn dt;\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = to === null\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t// XSS protection\n\t\t\treturn type === 'display' ?\n\t\t\t\t_escapeHtml( formatted ) :\n\t\t\t\tformatted;\n\t\t};\n\t}\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (window.Intl !== undefined) {\n\ttry {\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\n\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\tif (num[i].type === 'group') {\n\t\t\t\t__thousands = num[i].value;\n\t\t\t}\n\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t__decimal = num[i].value;\n\t\t\t}\n\t\t}\n\t}\n\tcatch (e) {\n\t\t// noop\n\t}\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function ( format, locale ) {\n\tvar typeName = 'datetime-' + format;\n\n\tif (! locale) {\n\t\tlocale = 'en';\n\t}\n\n\tif (! DataTable.ext.type.order[typeName]) {\n\t\tDataTable.type(typeName, {\n\t\t\tdetect: function (d) {\n\t\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\t\treturn d === '' || dt ? typeName : false;\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tpre: function (d) {\n\t\t\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t\t\t}\n\t\t\t},\n\t\t\tclassName: 'dt-right'\n\t\t});\n\t}\n}\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\n * This renderer has three overloads:\n *   * 1 parameter:\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n *   * 2 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to. Assumes `en` locale\n *   * 3 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to\n *     * `string` - Locale\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n\tdate: __mlHelper('toLocaleDateString'),\n\tdatetime: __mlHelper('toLocaleString'),\n\ttime: __mlHelper('toLocaleTimeString'),\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t// Auto locale detection\n\t\tif (thousands === null || thousands === undefined) {\n\t\t\tthousands = __thousands;\n\t\t}\n\n\t\tif (decimal === null || decimal === undefined) {\n\t\t\tdecimal = __decimal;\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: function ( d ) {\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\tvar flo = parseFloat( d );\n\t\t\t\tvar abs = Math.abs(flo);\n\n\t\t\t\t// Scientific notation for large and small numbers\n\t\t\t\tif (abs >= 100000000000 || (abs < 0.0001 && abs !== 0) ) {\n\t\t\t\t\tvar exp = flo.toExponential(precision).split(/e\\+?/);\n\t\t\t\t\treturn exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n\t\t\t\t}\n\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t// be a number after all)\n\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\treturn _escapeHtml( d );\n\t\t\t\t}\n\n\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\td = Math.abs( flo );\n\n\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t'';\n\n\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\tnegative = '';\n\t\t\t\t}\n\n\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t) +\n\t\t\t\t\tfloatPart +\n\t\t\t\t\t(postfix||'');\n\t\t\t}\n\t\t};\n\t},\n\n\ttext: function () {\n\t\treturn {\n\t\t\tdisplay: _escapeHtml,\n\t\t\tfilter: _escapeHtml\n\t\t};\n\t}\n};\n\n\nvar _extTypes = DataTable.ext.type;\n\n// Get / set type\nDataTable.type = function (name, prop, val) {\n\tif (! prop) {\n\t\treturn {\n\t\t\tclassName: _extTypes.className[name],\n\t\t\tdetect: _extTypes.detect.find(function (fn) {\n\t\t\t\treturn fn._name === name;\n\t\t\t}),\n\t\t\torder: {\n\t\t\t\tpre: _extTypes.order[name + '-pre'],\n\t\t\t\tasc: _extTypes.order[name + '-asc'],\n\t\t\t\tdesc: _extTypes.order[name + '-desc']\n\t\t\t},\n\t\t\trender: _extTypes.render[name],\n\t\t\tsearch: _extTypes.search[name]\n\t\t};\n\t}\n\n\tvar setProp = function(prop, propVal) {\n\t\t_extTypes[prop][name] = propVal;\n\t};\n\tvar setDetect = function (detect) {\n\t\t// `detect` can be a function or an object - we set a name\n\t\t// property for either - that is used for the detection\n\t\tObject.defineProperty(detect, \"_name\", {value: name});\n\n\t\tvar idx = _extTypes.detect.findIndex(function (item) {\n\t\t\treturn item._name === name;\n\t\t});\n\n\t\tif (idx === -1) {\n\t\t\t_extTypes.detect.unshift(detect);\n\t\t}\n\t\telse {\n\t\t\t_extTypes.detect.splice(idx, 1, detect);\n\t\t}\n\t};\n\tvar setOrder = function (obj) {\n\t\t_extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n\t\t_extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n\t\t_extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n\t};\n\n\t// prop is optional\n\tif (val === undefined) {\n\t\tval = prop;\n\t\tprop = null;\n\t}\n\n\tif (prop === 'className') {\n\t\tsetProp('className', val);\n\t}\n\telse if (prop === 'detect') {\n\t\tsetDetect(val);\n\t}\n\telse if (prop === 'order') {\n\t\tsetOrder(val);\n\t}\n\telse if (prop === 'render') {\n\t\tsetProp('render', val);\n\t}\n\telse if (prop === 'search') {\n\t\tsetProp('search', val);\n\t}\n\telse if (! prop) {\n\t\tif (val.className) {\n\t\t\tsetProp('className', val.className);\n\t\t}\n\n\t\tif (val.detect !== undefined) {\n\t\t\tsetDetect(val.detect);\n\t\t}\n\n\t\tif (val.order) {\n\t\t\tsetOrder(val.order);\n\t\t}\n\n\t\tif (val.render !== undefined) {\n\t\t\tsetProp('render', val.render);\n\t\t}\n\n\t\tif (val.search !== undefined) {\n\t\t\tsetProp('search', val.search);\n\t\t}\n\t}\n}\n\n// Get a list of types\nDataTable.types = function () {\n\treturn _extTypes.detect.map(function (fn) {\n\t\treturn fn._name;\n\t});\n};\n\nvar __diacriticSort = function (a, b) {\n\ta = a !== null && a !== undefined ? a.toString().toLowerCase() : '';\n\tb = b !== null && b !== undefined ? b.toString().toLowerCase() : '';\n\n\t// Checked for `navigator.languages` support in `oneOf` so this code can't execute in old\n\t// Safari and thus can disable this check\n\t// eslint-disable-next-line compat/compat\n\treturn a.localeCompare(b, navigator.languages[0] || navigator.language, {\n\t\tnumeric: true,\n\t\tignorePunctuation: true,\n\t});\n}\n\nvar __diacriticHtmlSort = function (a, b) {\n\ta = _stripHtml(a);\n\tb = _stripHtml(b);\n\n\treturn __diacriticSort(a, b);\n}\n\n//\n// Built in data types\n//\n\nDataTable.type('string', {\n\tdetect: function () {\n\t\treturn 'string';\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) && typeof a !== 'boolean' ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t}\n\t},\n\tsearch: _filterString(false, true)\n});\n\nDataTable.type('string-utf8', {\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\treturn true;\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one data point must contain a non-ASCII character\n\t\t\t// This line will also check if navigator.languages is supported or not. If not (Safari 10.0-)\n\t\t\t// this data type won't be supported.\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\treturn ! _empty( d ) && navigator.languages && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n\t\t}\n\t},\n\torder: {\n\t\tasc: __diacriticSort,\n\t\tdesc: function (a, b) {\n\t\t\treturn __diacriticSort(a, b) * -1;\n\t\t}\n\t},\n\tsearch: _filterString(false, true)\n});\n\n\nDataTable.type('html', {\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1);\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one data point must contain a `<`\n\t\t\treturn ! _empty( d ) && typeof d === 'string' && d.indexOf('<') !== -1;\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\t_stripHtml(a).trim().toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('html-utf8', {\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1);\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one data point must contain a `<` and a non-ASCII character\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\treturn navigator.languages &&\n\t\t\t\t! _empty( d ) &&\n\t\t\t\ttypeof d === 'string' &&\n\t\t\t\td.indexOf('<') !== -1 &&\n\t\t\t\ttypeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n\t\t}\n\t},\n\torder: {\n\t\tasc: __diacriticHtmlSort,\n\t\tdesc: function (a, b) {\n\t\t\treturn __diacriticHtmlSort(a, b) * -1;\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('date', {\n\tclassName: 'dt-type-date',\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d);\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one entry must be a date or a string with a date\n\t\t\treturn (d instanceof Date) || (typeof d === 'string' && _re_date.test(d));\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t}\n\t}\n});\n\n\nDataTable.type('html-num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true, false );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html, _re_formatted_numeric );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('html-num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, false, true );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, false, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true, true );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_formatted_numeric );\n\t\t}\n\t}\n});\n\n\nDataTable.type('num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, false, true );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, false, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function (d, s) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp );\n\t\t}\n\t}\n});\n\n\n\n\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\tif ( d !== 0 && (!d || d === '-') ) {\n\t\treturn -Infinity;\n\t}\n\t\n\tvar type = typeof d;\n\n\tif (type === 'number' || type === 'bigint') {\n\t\treturn d;\n\t}\n\n\t// If a decimal place other than `.` is used, it needs to be given to the\n\t// function so we can detect it and replace with a `.` which is the only\n\t// decimal place Javascript recognises - it is not locale aware.\n\tif ( decimalPlace ) {\n\t\td = _numToDecimal( d, decimalPlace );\n\t}\n\n\tif ( d.replace ) {\n\t\tif ( re1 ) {\n\t\t\td = d.replace( re1, '' );\n\t\t}\n\n\t\tif ( re2 ) {\n\t\t\td = d.replace( re2, '' );\n\t\t}\n\t}\n\n\treturn d * 1;\n};\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tfooter: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.tfoot.cell);\n\t\t}\n\t},\n\n\theader: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.thead.cell);\n\n\t\t\tif (! settings.oFeatures.bSort) {\n\t\t\t\tcell.addClass(classes.order.none);\n\t\t\t}\n\n\t\t\tvar titleRow = settings.titleRow;\n\t\t\tvar headerRows = cell.closest('thead').find('tr');\n\t\t\tvar rowIdx = cell.parent().index();\n\n\t\t\t// Conditions to not apply the ordering icons\n\t\t\tif (\n\t\t\t\t// Cells and rows which have the attribute to disable the icons\n\t\t\t\tcell.attr('data-dt-order') === 'disable' ||\n\t\t\t\tcell.parent().attr('data-dt-order') === 'disable' ||\n\n\t\t\t\t// titleRow support, for defining a specific row in the header\n\t\t\t\t(titleRow === true && rowIdx !== 0) ||\n\t\t\t\t(titleRow === false && rowIdx !== headerRows.length - 1) ||\n\t\t\t\t(typeof titleRow === 'number' && rowIdx !== titleRow)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// No additional mark-up required\n\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t// listening for\n\t\t\t$(settings.nTable).on( 'order.dt.DT column-visibility.dt.DT', function ( e, ctx, column ) {\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t}\n\n\t\t\t\tvar sorting = ctx.sortDetails;\n\n\t\t\t\tif (! sorting) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar orderedColumns = _pluck(sorting, 'col');\n\n\t\t\t\t// This handler is only needed on column visibility if the column is part of the\n\t\t\t\t// ordering. If it isn't, then we can bail out to save performance. It could be a\n\t\t\t\t// separate event handler, but this is a balance between code reuse / size and performance\n\t\t\t\t// console.log(e, e.name, column, orderedColumns, orderedColumns.includes(column))\n\t\t\t\tif (e.type === 'column-visibility' && ! orderedColumns.includes(column)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar i;\n\t\t\t\tvar orderClasses = classes.order;\n\t\t\t\tvar columns = ctx.api.columns( cell );\n\t\t\t\tvar col = settings.aoColumns[columns.flatten()[0]];\n\t\t\t\tvar orderable = columns.orderable().includes(true);\n\t\t\t\tvar ariaType = '';\n\t\t\t\tvar indexes = columns.indexes();\n\t\t\t\tvar sortDirs = columns.orderable(true).flatten();\n\t\t\t\tvar tabIndex = settings.iTabIndex;\n\t\t\t\tvar canOrder = ctx.orderHandler && orderable;\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\torderClasses.isAsc +' '+\n\t\t\t\t\t\torderClasses.isDesc\n\t\t\t\t\t)\n\t\t\t\t\t.toggleClass( orderClasses.none, ! orderable )\n\t\t\t\t\t.toggleClass( orderClasses.canAsc, canOrder && sortDirs.includes('asc') )\n\t\t\t\t\t.toggleClass( orderClasses.canDesc, canOrder && sortDirs.includes('desc') );\n\n\t\t\t\t// Determine if all of the columns that this cell covers are included in the\n\t\t\t\t// current ordering\n\t\t\t\tvar isOrdering = true;\n\t\t\t\t\n\t\t\t\tfor (i=0; i<indexes.length; i++) {\n\t\t\t\t\tif (! orderedColumns.includes(indexes[i])) {\n\t\t\t\t\t\tisOrdering = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isOrdering ) {\n\t\t\t\t\t// Get the ordering direction for the columns under this cell\n\t\t\t\t\t// Note that it is possible for a cell to be asc and desc sorting\n\t\t\t\t\t// (column spanning cells)\n\t\t\t\t\tvar orderDirs = columns.order();\n\n\t\t\t\t\tcell.addClass(\n\t\t\t\t\t\torderDirs.includes('asc') ? orderClasses.isAsc : '' +\n\t\t\t\t\t\torderDirs.includes('desc') ? orderClasses.isDesc : ''\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Find the first visible column that has ordering applied to it - it get's\n\t\t\t\t// the aria information, as the ARIA spec says that only one column should\n\t\t\t\t// be marked with aria-sort\n\t\t\t\tvar firstVis = -1; // column index\n\n\t\t\t\tfor (i=0; i<orderedColumns.length; i++) {\n\t\t\t\t\tif (settings.aoColumns[orderedColumns[i]].bVisible) {\n\t\t\t\t\t\tfirstVis = orderedColumns[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (indexes[0] == firstVis) {\n\t\t\t\t\tvar firstSort = sorting[0];\n\t\t\t\t\tvar sortOrder = col.asSorting;\n\n\t\t\t\t\tcell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\n\n\t\t\t\t\t// Determine if the next click will remove sorting or change the sort\n\t\t\t\t\tariaType = ! sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcell.removeAttr('aria-sort');\n\t\t\t\t}\n\n\t\t\t\t// Make the headers tab-able for keyboard navigation\n\t\t\t\tif (orderable) {\n\t\t\t\t\tvar orderSpan = cell.find('.dt-column-order');\n\t\t\t\t\t\n\t\t\t\t\torderSpan\n\t\t\t\t\t\t.attr('role', 'button')\n\t\t\t\t\t\t.attr('aria-label', orderable\n\t\t\t\t\t\t\t? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType)\n\t\t\t\t\t\t\t: col.ariaTitle\n\t\t\t\t\t\t);\n\n\t\t\t\t\tif (tabIndex !== -1) {\n\t\t\t\t\t\torderSpan.attr('tabindex', tabIndex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t},\n\n\tlayout: {\n\t\t_: function ( settings, container, items ) {\n\t\t\tvar classes = settings.oClasses.layout;\n\t\t\tvar row = $('<div/>')\n\t\t\t\t.attr('id', items.id || null)\n\t\t\t\t.addClass(items.className || classes.row)\n\t\t\t\t.appendTo( container );\n\n\t\t\tDataTable.ext.renderer.layout._forLayoutRow(items, function (key, val) {\n\t\t\t\tif (key === 'id' || key === 'className') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar klass = '';\n\n\t\t\t\tif (val.table) {\n\t\t\t\t\trow.addClass(classes.tableRow);\n\t\t\t\t\tklass += classes.tableCell + ' ';\n\t\t\t\t}\n\n\t\t\t\tif (key === 'start') {\n\t\t\t\t\tklass += classes.start;\n\t\t\t\t}\n\t\t\t\telse if (key === 'end') {\n\t\t\t\t\tklass += classes.end;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tklass += classes.full;\n\t\t\t\t}\n\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.attr({\n\t\t\t\t\t\tid: val.id || null,\n\t\t\t\t\t\t\"class\": val.className\n\t\t\t\t\t\t\t? val.className\n\t\t\t\t\t\t\t: classes.cell + ' ' + klass\n\t\t\t\t\t})\n\t\t\t\t\t.append( val.contents )\n\t\t\t\t\t.appendTo( row );\n\t\t\t});\n\t\t},\n\n\t\t// Shared for use by the styling frameworks\n\t\t_forLayoutRow: function (items, fn) {\n\t\t\t// As we are inserting dom elements, we need start / end in a\n\t\t\t// specific order, this function is used for sorting the layout\n\t\t\t// keys.\n\t\t\tvar layoutEnum = function (x) {\n\t\t\t\tswitch (x) {\n\t\t\t\t\tcase '': return 0;\n\t\t\t\t\tcase 'start': return 1;\n\t\t\t\t\tcase 'end': return 2;\n\t\t\t\t\tdefault: return 3;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tObject\n\t\t\t\t.keys(items)\n\t\t\t\t.sort(function (a, b) {\n\t\t\t\t\treturn layoutEnum(a) - layoutEnum(b);\n\t\t\t\t})\n\t\t\t\t.forEach(function (key) {\n\t\t\t\t\tfn(key, items[key]);\n\t\t\t\t});\n\t\t}\n\t}\n} );\n\n\nDataTable.feature = {};\n\n// Third parameter is internal only!\nDataTable.feature.register = function ( name, cb, legacy ) {\n\tDataTable.ext.features[ name ] = cb;\n\n\tif (legacy) {\n\t\t_ext.feature.push({\n\t\t\tcFeature: legacy,\n\t\t\tfnInit: cb\n\t\t});\n\t}\n};\n\nfunction _divProp(el, prop, val) {\n\tif (val) {\n\t\tel[prop] = val;\n\t}\n}\n\nDataTable.feature.register( 'div', function ( settings, opts ) {\n\tvar n = $('<div>')[0];\n\n\tif (opts) {\n\t\t_divProp(n, 'className', opts.className);\n\t\t_divProp(n, 'id', opts.id);\n\t\t_divProp(n, 'innerHTML', opts.html);\n\t\t_divProp(n, 'textContent', opts.text);\n\t}\n\n\treturn n;\n} );\n\nDataTable.feature.register( 'info', function ( settings, opts ) {\n\t// For compatibility with the legacy `info` top level option\n\tif (! settings.oFeatures.bInfo) {\n\t\treturn null;\n\t}\n\n\tvar\n\t\tlang  = settings.oLanguage,\n\t\ttid = settings.sTableId,\n\t\tn = $('<div/>', {\n\t\t\t'class': settings.oClasses.info.container,\n\t\t} );\n\n\topts = $.extend({\n\t\tcallback: lang.fnInfoCallback,\n\t\tempty: lang.sInfoEmpty,\n\t\tpostfix: lang.sInfoPostFix,\n\t\tsearch: lang.sInfoFiltered,\n\t\ttext: lang.sInfo,\n\t}, opts);\n\n\n\t// Update display on each draw\n\tsettings.aoDrawCallback.push(function (s) {\n\t\t_fnUpdateInfo(s, opts, n);\n\t});\n\n\t// For the first info display in the table, we add a callback and aria information.\n\tif (! settings._infoEl) {\n\t\tn.attr({\n\t\t\t'aria-live': 'polite',\n\t\t\tid: tid+'_info',\n\t\t\trole: 'status'\n\t\t});\n\n\t\t// Table is described by our info div\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\n\t\tsettings._infoEl = n;\n\t}\n\n\treturn n;\n}, 'i' );\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo ( settings, opts, node )\n{\n\tvar\n\t\tstart = settings._iDisplayStart+1,\n\t\tend   = settings.fnDisplayEnd(),\n\t\tmax   = settings.fnRecordsTotal(),\n\t\ttotal = settings.fnRecordsDisplay(),\n\t\tout   = total\n\t\t\t? opts.text\n\t\t\t: opts.empty;\n\n\tif ( total !== max ) {\n\t\t// Record set after filtering\n\t\tout += ' ' + opts.search;\n\t}\n\n\t// Convert the macros\n\tout += opts.postfix;\n\tout = _fnMacros( settings, out );\n\n\tif ( opts.callback ) {\n\t\tout = opts.callback.call( settings.oInstance,\n\t\t\tsettings, start, end, max, total, out\n\t\t);\n\t}\n\n\tnode.html( out );\n\n\t_fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n}\n\nvar __searchCounter = 0;\n\n// opts\n// - text\n// - placeholder\nDataTable.feature.register( 'search', function ( settings, opts ) {\n\t// Don't show the input if filtering isn't available on the table\n\tif (! settings.oFeatures.bFilter) {\n\t\treturn null;\n\t}\n\n\tvar classes = settings.oClasses.search;\n\tvar tableId = settings.sTableId;\n\tvar language = settings.oLanguage;\n\tvar previousSearch = settings.oPreviousSearch;\n\tvar input = '<input type=\"search\" class=\"'+classes.input+'\"/>';\n\n\topts = $.extend({\n\t\tplaceholder: language.sSearchPlaceholder,\n\t\tprocessing: false,\n\t\ttext: language.sSearch\n\t}, opts);\n\n\t// The _INPUT_ is optional - is appended if not present\n\tif (opts.text.indexOf('_INPUT_') === -1) {\n\t\topts.text += '_INPUT_';\n\t}\n\n\topts.text = _fnMacros(settings, opts.text);\n\n\t// We can put the <input> outside of the label if it is at the start or end\n\t// which helps improve accessability (not all screen readers like implicit\n\t// for elements).\n\tvar end = opts.text.match(/_INPUT_$/);\n\tvar start = opts.text.match(/^_INPUT_/);\n\tvar removed = opts.text.replace(/_INPUT_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_INPUT_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_INPUT_';\n\t}\n\n\tvar filter = $('<div>')\n\t\t.addClass(classes.container)\n\t\t.append(str.replace(/_INPUT_/, input));\n\n\t// add for and id to label and input\n\tfilter.find('label').attr('for', 'dt-search-' + __searchCounter);\n\tfilter.find('input').attr('id', 'dt-search-' + __searchCounter);\n\t__searchCounter++;\n\n\tvar searchFn = function(event) {\n\t\tvar val = this.value;\n\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\treturn;\n\t\t}\n\n\t\t/* Now do the filter */\n\t\tif ( val != previousSearch.search ) {\n\t\t\t_fnProcessingRun(settings, opts.processing, function () {\n\t\t\t\tpreviousSearch.search = val;\n\t\t\n\t\t\t\t_fnFilterComplete( settings, previousSearch );\n\t\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t});\n\t\t}\n\t};\n\n\tvar searchDelay = settings.searchDelay !== null ?\n\t\tsettings.searchDelay :\n\t\t0;\n\n\tvar jqFilter = $('input', filter)\n\t\t.val( previousSearch.search )\n\t\t.attr( 'placeholder', opts.placeholder )\n\t\t.on(\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\tsearchDelay ?\n\t\t\t\tDataTable.util.debounce( searchFn, searchDelay ) :\n\t\t\t\tsearchFn\n\t\t)\n\t\t.on( 'mouseup.DT', function(e) {\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\tsetTimeout( function () {\n\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t}, 10);\n\t\t} )\n\t\t.on( 'keypress.DT', function(e) {\n\t\t\t/* Prevent form submission */\n\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} )\n\t\t.attr('aria-controls', tableId);\n\n\t// Update the input elements whenever the table is filtered\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\tif ( settings === s && jqFilter[0] !== document.activeElement ) {\n\t\t\tjqFilter.val( typeof previousSearch.search !== 'function'\n\t\t\t\t? previousSearch.search\n\t\t\t\t: ''\n\t\t\t);\n\t\t}\n\t} );\n\n\treturn filter;\n}, 'f' );\n\n// opts\n// - type - button configuration\n// - buttons - number of buttons to show - must be odd\nDataTable.feature.register( 'paging', function ( settings, opts ) {\n\t// Don't show the paging input if the table doesn't have paging enabled\n\tif (! settings.oFeatures.bPaginate) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tbuttons: DataTable.ext.pager.numbers_length,\n\t\ttype: settings.sPaginationType,\n\t\tboundaryNumbers: true,\n\t\tfirstLast: true,\n\t\tpreviousNext: true,\n\t\tnumbers: true\n\t}, opts);\n\n\tvar host = $('<div/>')\n\t\t.addClass(settings.oClasses.paging.container + (opts.type ? ' paging_' + opts.type : ''))\n\t\t.append(\n\t\t\t$('<nav>')\n\t\t\t\t.attr('aria-label', 'pagination')\n\t\t\t\t.addClass(settings.oClasses.paging.nav)\n\t\t);\n\tvar draw = function () {\n\t\t_pagingDraw(settings, host.children(), opts);\n\t};\n\n\tsettings.aoDrawCallback.push(draw);\n\n\t// Responsive redraw of paging control\n\t$(settings.nTable).on('column-sizing.dt.DT', draw);\n\n\treturn host;\n}, 'p' );\n\n/**\n * Dynamically create the button type array based on the configuration options.\n * This will only happen if the paging type is not defined.\n */\nfunction _pagingDynamic(opts) {\n\tvar out = [];\n\n\tif (opts.numbers) {\n\t\tout.push('numbers');\n\t}\n\n\tif (opts.previousNext) {\n\t\tout.unshift('previous');\n\t\tout.push('next');\n\t}\n\n\tif (opts.firstLast) {\n\t\tout.unshift('first');\n\t\tout.push('last');\n\t}\n\n\treturn out;\n}\n\nfunction _pagingDraw(settings, host, opts) {\n\tif (! settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar\n\t\tplugin = opts.type\n\t\t\t? DataTable.ext.pager[ opts.type ]\n\t\t\t: _pagingDynamic,\n\t\taria = settings.oLanguage.oAria.paginate || {},\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings._iDisplayLength,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1,\n\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\tbuttons = [],\n\t\tbuttonEls = [],\n\t\tbuttonsNested = plugin(opts)\n\t\t\t.map(function (val) {\n\t\t\t\treturn val === 'numbers'\n\t\t\t\t\t? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers)\n\t\t\t\t\t: val;\n\t\t\t});\n\n\t// .flat() would be better, but not supported in old Safari\n\tbuttons = buttons.concat.apply(buttons, buttonsNested);\n\n\tfor (var i=0 ; i<buttons.length ; i++) {\n\t\tvar button = buttons[i];\n\n\t\tvar btnInfo = _pagingButtonInfo(settings, button, page, pages);\n\t\tvar btn = _fnRenderer( settings, 'pagingButton' )(\n\t\t\tsettings,\n\t\t\tbutton,\n\t\t\tbtnInfo.display,\n\t\t\tbtnInfo.active,\n\t\t\tbtnInfo.disabled\n\t\t);\n\n\t\tvar ariaLabel = typeof button === 'string'\n\t\t\t? aria[ button ]\n\t\t\t: aria.number\n\t\t\t\t? aria.number + (button+1)\n\t\t\t\t: null;\n\n\t\t// Common attributes\n\t\t$(btn.clicker).attr({\n\t\t\t'aria-controls': settings.sTableId,\n\t\t\t'aria-disabled': btnInfo.disabled ? 'true' : null,\n\t\t\t'aria-current': btnInfo.active ? 'page' : null,\n\t\t\t'aria-label': ariaLabel,\n\t\t\t'data-dt-idx': button,\n\t\t\t'tabIndex': btnInfo.disabled\n\t\t\t\t? -1\n\t\t\t\t: settings.iTabIndex && btn.clicker[0].nodeName.toLowerCase() !== 'span'\n\t\t\t\t\t? settings.iTabIndex\n\t\t\t\t\t: null, // `0` doesn't need a tabIndex since it is the default\n\t\t});\n\n\t\tif (typeof button !== 'number') {\n\t\t\t$(btn.clicker).addClass(button);\n\t\t}\n\n\t\t_fnBindAction(\n\t\t\tbtn.clicker, {action: button}, function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t}\n\t\t);\n\n\t\tbuttonEls.push(btn.display);\n\t}\n\n\tvar wrapped = _fnRenderer(settings, 'pagingContainer')(\n\t\tsettings, buttonEls\n\t);\n\n\tvar activeEl = host.find(document.activeElement).data('dt-idx');\n\n\thost.empty().append(wrapped);\n\n\tif ( activeEl !== undefined ) {\n\t\thost.find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t}\n\n\t// Responsive - check if the buttons are over two lines based on the\n\t// height of the buttons and the container.\n\tif (buttonEls.length) {\n\t\tvar outerHeight = $(buttonEls[0]).outerHeight();\n\t\n\t\tif (\n\t\t\topts.buttons > 1 && // prevent infinite\n\t\t\touterHeight > 0 && // will be 0 if hidden\n\t\t\t$(host).height() >= (outerHeight * 2) - 10\n\t\t) {\n\t\t\t_pagingDraw(settings, host, $.extend({}, opts, { buttons: opts.buttons - 2 }));\n\t\t}\n\t}\n}\n\n/**\n * Get properties for a button based on the current paging state of the table\n *\n * @param {*} settings DT settings object\n * @param {*} button The button type in question\n * @param {*} page Table's current page\n * @param {*} pages Number of pages\n * @returns Info object\n */\nfunction _pagingButtonInfo(settings, button, page, pages) {\n\tvar lang = settings.oLanguage.oPaginate;\n\tvar o = {\n\t\tdisplay: '',\n\t\tactive: false,\n\t\tdisabled: false\n\t};\n\n\tswitch ( button ) {\n\t\tcase 'ellipsis':\n\t\t\to.display = '&#x2026;';\n\t\t\tbreak;\n\n\t\tcase 'first':\n\t\t\to.display = lang.sFirst;\n\n\t\t\tif (page === 0) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'previous':\n\t\t\to.display = lang.sPrevious;\n\n\t\t\tif ( page === 0 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'next':\n\t\t\to.display = lang.sNext;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'last':\n\t\t\to.display = lang.sLast;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tif ( typeof button === 'number' ) {\n\t\t\t\to.display = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\n\t\t\t\tif (page === button) {\n\t\t\t\t\to.active = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn o;\n}\n\n/**\n * Compute what number buttons to show in the paging control\n *\n * @param {*} page Current page\n * @param {*} pages Total number of pages\n * @param {*} buttons Target number of number buttons\n * @param {boolean} addFirstLast Indicate if page 1 and end should be included\n * @returns Buttons to show\n */\nfunction _pagingNumbers ( page, pages, buttons, addFirstLast ) {\n\tvar\n\t\tnumbers = [],\n\t\thalf = Math.floor(buttons / 2),\n\t\tbefore = addFirstLast ? 2 : 1,\n\t\tafter = addFirstLast ? 1 : 0;\n\n\tif ( pages <= buttons ) {\n\t\tnumbers = _range(0, pages);\n\t}\n\telse if (buttons === 1) {\n\t\t// Single button - current page only\n\t\tnumbers = [page];\n\t}\n\telse if (buttons === 3) {\n\t\t// Special logic for just three buttons\n\t\tif (page <= 1) {\n\t\t\tnumbers = [0, 1, 'ellipsis'];\n\t\t}\n\t\telse if (page >= pages - 2) {\n\t\t\tnumbers = _range(pages-2, pages);\n\t\t\tnumbers.unshift('ellipsis');\n\t\t}\n\t\telse {\n\t\t\tnumbers = ['ellipsis', page, 'ellipsis'];\n\t\t}\n\t}\n\telse if ( page <= half ) {\n\t\tnumbers = _range(0, buttons-before);\n\t\tnumbers.push('ellipsis');\n\n\t\tif (addFirstLast) {\n\t\t\tnumbers.push(pages-1);\n\t\t}\n\t}\n\telse if ( page >= pages - 1 - half ) {\n\t\tnumbers = _range(pages-(buttons-before), pages);\n\t\tnumbers.unshift('ellipsis');\n\n\t\tif (addFirstLast) {\n\t\t\tnumbers.unshift(0);\n\t\t}\n\t}\n\telse {\n\t\tnumbers = _range(page-half+before, page+half-after);\n\t\tnumbers.push('ellipsis');\n\t\tnumbers.unshift('ellipsis');\n\n\t\tif (addFirstLast) {\n\t\t\tnumbers.push(pages-1);\n\t\t\tnumbers.unshift(0);\n\t\t}\n\t}\n\n\treturn numbers;\n}\n\nvar __lengthCounter = 0;\n\n// opts\n// - menu\n// - text\nDataTable.feature.register( 'pageLength', function ( settings, opts ) {\n\tvar features = settings.oFeatures;\n\n\t// For compatibility with the legacy `pageLength` top level option\n\tif (! features.bPaginate || ! features.bLengthChange) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tmenu: settings.aLengthMenu,\n\t\ttext: settings.oLanguage.sLengthMenu\n\t}, opts);\n\n\tvar\n\t\tclasses  = settings.oClasses.length,\n\t\ttableId  = settings.sTableId,\n\t\tmenu     = opts.menu,\n\t\tlengths  = [],\n\t\tlanguage = [],\n\t\ti;\n\n\t// Options can be given in a number of ways\n\tif (Array.isArray( menu[0] )) {\n\t\t// Old 1.x style - 2D array\n\t\tlengths = menu[0];\n\t\tlanguage = menu[1];\n\t}\n\telse {\n\t\tfor ( i=0 ; i<menu.length ; i++ ) {\n\t\t\t// An object with different label and value\n\t\t\tif ($.isPlainObject(menu[i])) {\n\t\t\t\tlengths.push(menu[i].value);\n\t\t\t\tlanguage.push(menu[i].label);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Or just a number to display and use\n\t\t\t\tlengths.push(menu[i]);\n\t\t\t\tlanguage.push(menu[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// We can put the <select> outside of the label if it is at the start or\n\t// end which helps improve accessability (not all screen readers like\n\t// implicit for elements).\n\tvar end = opts.text.match(/_MENU_$/);\n\tvar start = opts.text.match(/^_MENU_/);\n\tvar removed = opts.text.replace(/_MENU_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_MENU_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_MENU_';\n\t}\n\n\t// Wrapper element - use a span as a holder for where the select will go\n\tvar tmpId = 'tmp-' + (+new Date())\n\tvar div = $('<div/>')\n\t\t.addClass( classes.container )\n\t\t.append(\n\t\t\tstr.replace( '_MENU_', '<span id=\"'+tmpId+'\"></span>' )\n\t\t);\n\n\t// Save text node content for macro updating\n\tvar textNodes = [];\n\tArray.prototype.slice.call(div.find('label')[0].childNodes).forEach(function (el) {\n\t\tif (el.nodeType === Node.TEXT_NODE) {\n\t\t\ttextNodes.push({\n\t\t\t\tel: el,\n\t\t\t\ttext: el.textContent\n\t\t\t});\n\t\t}\n\t});\n\n\t// Update the label text in case it has an entries value\n\tvar updateEntries = function (len) {\n\t\ttextNodes.forEach(function (node) {\n\t\t\tnode.el.textContent = _fnMacros(settings, node.text, len);\n\t\t});\n\t}\n\n\t// Next, the select itself, along with the options\n\tvar select = $('<select/>', {\n\t\t'aria-controls': tableId,\n\t\t'class':         classes.select\n\t} );\n\n\tfor ( i=0 ; i<lengths.length ; i++ ) {\n\t\t// Attempt to look up the length from the i18n options\n\t\tvar label = settings.api.i18n('lengthLabels.' + lengths[i], null);\n\n\t\tif (label === null) {\n\t\t\t// If not present, fallback to old style\n\t\t\tlabel = typeof language[i] === 'number' ?\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\tlanguage[i];\n\t\t}\n\n\t\tselect[0][ i ] = new Option(label, lengths[i]);\n\t}\n\n\t// add for and id to label and input\n\tdiv.find('label').attr('for', 'dt-length-' + __lengthCounter);\n\tselect.attr('id', 'dt-length-' + __lengthCounter);\n\t__lengthCounter++;\n\n\t// Swap in the select list\n\tdiv.find('#' + tmpId).replaceWith(select);\n\n\t// Can't use `select` variable as user might provide their own and the\n\t// reference is broken by the use of outerHTML\n\t$('select', div)\n\t\t.val( settings._iDisplayLength )\n\t\t.on( 'change.DT', function() {\n\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t_fnDraw( settings );\n\t\t} );\n\n\t// Update node value whenever anything changes the table's length\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\tif ( settings === s ) {\n\t\t\t$('select', div).val( len );\n\n\t\t\t// Resolve plurals in the text for the new length\n\t\t\tupdateEntries(len);\n\t\t}\n\t} );\n\n\tupdateEntries(settings._iDisplayLength);\n\n\treturn div;\n}, 'l' );\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function ( opts ) {\n\treturn $(this).dataTable( opts ).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each( DataTable, function ( prop, val ) {\n\t$.fn.DataTable[ prop ] = val;\n} );\n\nexport default DataTable;\n"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;EACC2E,OAAO,EAAE,OAAO;EAEhB;EACAC,MAAM,EAAE;IACP;IACAC,UAAU,EAAE;EACb,CAAC;EAED;AACD;AACA;EACCC,OAAO,EAAE,EAAE;EAEX;AACD;AACA;AACA;AACA;AACA;EACCvC,QAAQ,EAAE,CAAC,CAAC;EAGZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCwC,MAAM,EAAE,EAAE;EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC3K,QAAQ,EAAE;IACT0H,IAAI,EAAE,EAAE;IACR9F,MAAM,EAAE,EAAE;IACV6B,GAAG,EAAE;EACN,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;EACCmH,MAAM,EAAE;IACP;AACF;AACA;AACA;AACA;AACA;AACA;IACEjB,IAAI,EAAE;EACP,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCkB,KAAK,EAAE,CAAC,CAAC;EAGTC,QAAQ,EAAE;IACTC,UAAU,EAAE,CAAC,CAAC;IACdC,MAAM,EAAE,CAAC;EACV,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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CD;AACA;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE,EAAE;EAEZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,YAAY,EAAE,IAAI;EAElB;AACD;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;AACA;EACC,KAAK,EAAE,IAAI;EAEX;AACD;AACA;AACA;EACC,KAAK,EAAE,CAAC,CAAC;EAET;AACD;AACA;EACC7B,WAAW,EAAE;AACd,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAhc,SAAS,CAACoD,MAAM,CAACuU,OAAO,GAAG;EAC1B;AACD;AACA;EACC,KAAK,EAAE,IAAI;EAEX;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;EACC,UAAU,EAAE,IAAI;EAEhB;AACD;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;AACA;EACC,WAAW,EAAE,KAAK;EAElB;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAEf;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAEvB;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAEvB;AACD;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAEtB;AACD;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,YAAY,EAAE,IAAI;EAElB;EACA4H,YAAY,EAAE,IAAI;EAElB;AACD;AACA;EACC1H,WAAW,EAAE;AACd,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA7X,SAAS,CAACmB,QAAQ,GAAG;EACpB;AACD;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAM,EAAE,IAAI;EAGZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAE;EAGlC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,EAAE;EAGlB;AACD;AACA;AACA;AACA;EACC,YAAY,EAAE,IAAI;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,KAAK;EAGjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAEf;AACD;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;EACC,WAAW,EAAE,IAAI;EAGjB;AACD;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,KAAK;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,KAAK;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,KAAK;EAGxB;AACD;AACA;AACA;AACA;EACC,aAAa,EAAE,KAAK;EAGpB;AACD;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAGb;AACD;AACA;AACA;EACC,YAAY,EAAE,IAAI;EAGlB;AACD;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;EACA2U,QAAQ,EAAE,IAAI;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;EACC,YAAY,EAAE,KAAK;EAGnB;AACD;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;EACC,kBAAkB,EAAE,IAAI;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,SAAAqiB,CAAW0K,QAAQ,EAAG;IACvC,OAAOA,QAAQ,CAAC5Y,QAAQ,CAAC,CAAC,CAAC3a,OAAO,CACjC,uBAAuB,EACvB,IAAI,CAAC9K,SAAS,CAACs+B,UAChB,CAAC;EACF,CAAC;EAGD;AACD;AACA;AACA;AACA;EACC,kBAAkB,EAAE,IAAI;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;EACC,mBAAmB,EAAE,IAAI;EAGzB;AACD;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;EACC,qBAAqB,EAAE,SAAA7M,CAAW9zB,QAAQ,EAAG;IAC5C,IAAI;MACH,OAAOwmB,IAAI,CAACC,KAAK,CAChB,CAACzmB,QAAQ,CAACi0B,cAAc,KAAK,CAAC,CAAC,GAAG2M,cAAc,GAAGC,YAAY,EAAEC,OAAO,CACvE,aAAa,GAAC9gC,QAAQ,CAACqwB,SAAS,GAAC,GAAG,GAAC0Q,QAAQ,CAACC,QAC/C,CACD,CAAC;IACF,CAAC,CAAC,OAAOta,CAAC,EAAE;MACX,OAAO,CAAC,CAAC;IACV;EACD,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,IAAI;EAGzB;AACD;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;EACC,qBAAqB,EAAE,SAAAiN,CAAW3zB,QAAQ,EAAEF,IAAI,EAAG;IAClD,IAAI;MACH,CAACE,QAAQ,CAACi0B,cAAc,KAAK,CAAC,CAAC,GAAG2M,cAAc,GAAGC,YAAY,EAAEI,OAAO,CACvE,aAAa,GAACjhC,QAAQ,CAACqwB,SAAS,GAAC,GAAG,GAAC0Q,QAAQ,CAACC,QAAQ,EACtDxa,IAAI,CAACU,SAAS,CAAEpnB,IAAK,CACtB,CAAC;IACF,CAAC,CAAC,OAAO4mB,CAAC,EAAE;MACX;IAAA;EAEF,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,IAAI;EAGzB;AACD;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAGpB;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,CAAC;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,CAAC;EAGd;AACD;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,CAAC,CAAC;EAGd;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE;IACZ;AACF;AACA;AACA;AACA;IACE,OAAO,EAAE;MACR;AACH;AACA;MACG,WAAW,EAAE,oBAAoB;MAEjC;AACH;AACA;MACG,kBAAkB,EAAE,8BAA8B;MAElD;AACH;AACA;AACA;MACG,iBAAiB,EAAE,8BAA8B;MAEjDwa,QAAQ,EAAE;QACTjR,KAAK,EAAE,OAAO;QACdjhB,IAAI,EAAE,MAAM;QACZ+V,IAAI,EAAE,MAAM;QACZzW,QAAQ,EAAE,UAAU;QACpB6yB,MAAM,EAAE;MACT;IACD,CAAC;IAED;AACF;AACA;AACA;IACE,WAAW,EAAE;MACZ;AACH;AACA;MACG,QAAQ,EAAE,QAAQ;MAElB;AACH;AACA;MACG,OAAO,EAAE,QAAQ;MAEjB;AACH;AACA;MACG,OAAO,EAAE,QAAQ;MAEjB;AACH;AACA;MACG,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;IACEpL,OAAO,EAAE;MACRjwB,CAAC,EAAE,SAAS;MACZ,CAAC,EAAE;IACJ,CAAC;IAED;AACF;AACA;IACEs7B,YAAY,EAAE;MACb,IAAI,EAAE;IACP,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,4BAA4B;IAG3C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,OAAO,EAAE,qDAAqD;IAG9D;AACF;AACA;AACA;IACE,YAAY,EAAE,qCAAqC;IAGnD;AACF;AACA;AACA;AACA;IACE,eAAe,EAAE,2CAA2C;IAG5D;AACF;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,EAAE;IAGlB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,UAAU,EAAE,EAAE;IAGd;AACF;AACA;AACA;AACA;AACA;IACE,YAAY,EAAE,GAAG;IAGjB;AACF;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,2BAA2B;IAG1C;AACF;AACA;AACA;AACA;AACA;AACA;IACE,iBAAiB,EAAE,YAAY;IAG/B;AACF;AACA;AACA;IACE,aAAa,EAAE,EAAE;IAGjB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE,SAAS;IAGpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,oBAAoB,EAAE,EAAE;IAGxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,MAAM,EAAE,EAAE;IAGV;AACF;AACA;AACA;AACA;IACE,cAAc,EAAE;EACjB,CAAC;EAGD;EACA9O,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE10B,CAAC,CAACgC,MAAM,CAAE,CAAC,CAAC,EAAE/B,SAAS,CAACoD,MAAM,CAAC6S,OAAQ,CAAC;EAGnD;AACD;AACA;EACC5J,MAAM,EAAE;IACPm3B,QAAQ,EAAE,YAAY;IACtBC,MAAM,EAAE,QAAQ;IAChBC,WAAW,EAAE,MAAM;IACnBC,SAAS,EAAE;EACZ,CAAC;EAGD;AACD;AACA;EACC,MAAM,EAAE,IAAI;EAGZ;AACD;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,EAAE;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,EAAE;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,EAAE;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,IAAI;EAGhB;AACD;AACA;AACA;EACC,OAAO,EAAE,UAAU;EAGnB;AACD;AACA;EACC,SAAS,EAAE,IAAI;EAGf;AACD;AACA;EACCt9B,aAAa,EAAE,IAAI;EAEnB;EACA7E,EAAE,EAAE;AACL,CAAC;AAEDiT,eAAe,CAAEzU,SAAS,CAACmB,QAAS,CAAC;;AAIrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAnB,SAAS,CAACmB,QAAQ,CAACU,MAAM,GAAG;EAC3B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EACjB,WAAW,EAAE,CAAC,CAAC;EAEfimB,SAAS,EAAE,EAAE;EAGb;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE,CAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAE;EAGlC;AACD;AACA;EACC,aAAa,EAAE,IAAI;EAGnB;AACD;AACA;EACC,WAAW,EAAE,IAAI;EAGjB;AACD;AACA;EACC,UAAU,EAAE,IAAI;EAGhB;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAGb;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAGf;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAGjB;AACD;AACA;EACC,QAAQ,EAAE,EAAE;EAEZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAGrB;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAGvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,EAAE;EAGX;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAGtB;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAGb;AACD;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE;AACX,CAAC;AAEDrT,eAAe,CAAEzU,SAAS,CAACmB,QAAQ,CAACU,MAAO,CAAC;;AAI5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA7B,SAAS,CAACoD,MAAM,CAACD,SAAS,GAAG;EAC5B;AACD;AACA;EACC,WAAW,EAAE;IAEZ;AACF;AACA;AACA;AACA;AACA;IACE,YAAY,EAAE,IAAI;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,IAAI;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE,IAAI;IAEf;AACF;AACA;AACA;IACE,OAAO,EAAE,IAAI;IAEb;AACF;AACA;AACA;IACE,eAAe,EAAE,IAAI;IAErB;AACF;AACA;AACA;AACA;AACA;IACE,WAAW,EAAE,IAAI;IAEjB;AACF;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,IAAI;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,IAAI;IAEnB;AACF;AACA;AACA;AACA;IACE,OAAO,EAAE,IAAI;IAEb;AACF;AACA;AACA;AACA;IACE,YAAY,EAAE,IAAI;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,IAAI;IAEpB;AACF;AACA;AACA;AACA;IACE,YAAY,EAAE;EACf,CAAC;EAGD;AACD;AACA;EACC,SAAS,EAAE;IACV;AACF;AACA;AACA;AACA;AACA;IACE,WAAW,EAAE,IAAI;IAEjB;AACF;AACA;AACA;IACE,WAAW,EAAE,CAAC;IAEd;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,EAAE,IAAI;IAEV;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE,IAAI;IAEf;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,EAAE;EACP,CAAC;EAED;AACD;AACA;EACC,WAAW,EAAE;IACZ;AACF;AACA;AACA;IACE,gBAAgB,EAAE;EACnB,CAAC;EAED;AACD;AACA;EACC,UAAU,EAAE;IACX;AACF;AACA;AACA;AACA;IACE,gBAAgB,EAAE,KAAK;IAEvB;AACF;AACA;IACE,UAAU,EAAE;EACb,CAAC;EAGD,MAAM,EAAE,IAAI;EAGZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;AACA;EACC,QAAQ,EAAE,EAAE;EAEZ;AACD;AACA;EACC,WAAW,EAAE,EAAE;EAEf;AACD;AACA;EACC,iBAAiB,EAAE,EAAE;EAErB;AACD;AACA;EACC,MAAM,EAAE,CAAC,CAAC;EAEV;AACD;AACA;EACC,WAAW,EAAE,EAAE;EAEf;AACD;AACA;EACC,UAAU,EAAE,EAAE;EAEd;AACD;AACA;EACC,UAAU,EAAE,EAAE;EAEd;AACD;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,CAAC,CAAC;EAErB;AACD;AACA;EACC0U,WAAW,EAAE,CAAC,CAAC;EAEf;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAErB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAEpB;AACD;AACA;EACC,eAAe,EAAE,CAAC;EAElB;AACD;AACA;EACC,eAAe,EAAE,EAAE;EAEnB;AACD;AACA;EACC,kBAAkB,EAAE,EAAE;EAEtB;AACD;AACA;EACC,kBAAkB,EAAE,EAAE;EAEtB;AACD;AACA;EACC,gBAAgB,EAAE,EAAE;EAEpB;AACD;AACA;EACC,sBAAsB,EAAE,EAAE;EAE1B;AACD;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAEvB;AACD;AACA;EACC,gBAAgB,EAAE,EAAE;EAGpB;AACD;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAEvB;AACD;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAEvB;AACD;AACA;AACA;EACC,eAAe,EAAE,EAAE;EAEnB;AACD;AACA;EACC,UAAU,EAAE,EAAE;EAEd;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;EACC,cAAc,EAAE,KAAK;EAErB;AACD;AACA;AACA;EACC,YAAY,EAAE,EAAE;EAEhB;AACD;AACA;AACA;AACA;AACA;EACC,MAAM,EAAE,IAAI;EAEZ;AACD;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,YAAY;EAE/B;AACD;AACA;EACC+rB,cAAc,EAAE,CAAC;EAEjB;AACD;AACA;AACA;AACA;EACC,gBAAgB,EAAE,CAAC;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}