{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from 'react';\n// import { useNavigate, useParams } from 'react-router-dom';\n// import Breadcrumbs from '../Breadcrumbs'; // CORRECTED PATH: Breadcrumbs is one level up\n// import projectData from '../../data/projectData.json'; // CORRECTED PATH: data is two levels up\n// import accountData from '../../data/accountData.json'; // CORRECTED PATH: data is two levels up\n\n// const ProjectLevel = () => {\n//   const navigate = useNavigate();\n//   const { accountId } = useParams(); // Get accountId from URL parameters\n\n//   useEffect(() => {\n//     const link = document.createElement('link');\n//     link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n//     link.rel = 'stylesheet';\n//     document.head.appendChild(link);\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\n//   }, []);\n\n//   // Filter projects based on accountId\n//   const projects = accountId\n//     ? projectData.projects.filter(project => project.accountId === accountId)\n//     : projectData.projects; // If no accountId, show all projects (e.g., if navigated directly)\n\n//   // Get account name for display in title and breadcrumbs\n//   const currentAccount = accountData.accounts.find(acc => acc.id === accountId);\n//   const accountName = currentAccount ? currentAccount.name : 'All Accounts';\n\n//   // Adjust breadcrumb path based on whether accountId is present\n//   const breadcrumbPath = [\n//     { name: 'PMO Dashboard', page: '' },\n//     { name: 'Revenue Forecast - Early View', page: 'upload' },\n//     { name: 'Account Level', page: 'accounts' },\n//     { name: `Projects (${accountName})`, page: `accounts/${accountId}/projects` }\n//   ];\n\n//   return (\n//     <div\n//       className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\n//       style={{\n//         background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n//         fontFamily: \"'Poppins', sans-serif\"\n//       }}\n//     >\n//       <div\n//         className=\"card shadow p-4 p-md-5 w-100\"\n//         style={{ maxWidth: '1000px', backgroundColor: '#ffffffdd', borderRadius: '1rem' }}\n//       >\n//         <Breadcrumbs path={breadcrumbPath} />\n//         <h2 className=\"text-center mb-4 fw-semibold text-dark\">\n//           üìÅ Project Level Overview {accountId ? `for ${accountName}` : ''}\n//         </h2>\n\n//         <div className=\"table-responsive rounded\">\n//           <table className=\"table table-hover align-middle table-borderless mb-0\">\n//             <thead\n//               className=\"text-white\"\n//               style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\n//             >\n//               <tr>\n//                 <th className=\"px-3 py-2\">Project ID</th>\n//                 <th className=\"px-3 py-2\">Account</th>\n//                 <th className=\"px-3 py-2\">Project Name</th>\n//                 <th className=\"px-3 py-2\">Associates</th>\n//                 <th className=\"px-3 py-2\">Client Hours</th>\n//                 <th className=\"px-3 py-2\">CTS Hours</th>\n//                 <th className=\"px-3 py-2\">Variance</th>\n//                 <th className=\"px-3 py-2 text-center\">View</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {projects.length > 0 ? (\n//                 projects.map((project) => {\n//                   const variance = project.ctsHour - project.clientHour;\n//                   return (\n//                     <tr key={project.id} style={{ backgroundColor: '#fdfdfd' }}>\n//                       <td className=\"px-3 py-2\">{project.id}</td>\n//                       <td className=\"px-3 py-2\">{project.accountName}</td>\n//                       <td className=\"px-3 py-2\">{project.name}</td>\n//                       <td className=\"px-3 py-2\">{project.totalAssociates}</td>\n//                       <td className=\"px-3 py-2\">{project.clientHour}</td>\n//                       <td className=\"px-3 py-2\">{project.ctsHour}</td>\n//                       <td\n//                         className={`px-3 py-2 fw-semibold ${\n//                           variance > 0 ? 'text-danger' : variance < 0 ? 'text-primary' : 'text-success'\n//                         }`}\n//                       >\n//                         {variance}\n//                       </td>\n//                       <td className=\"px-3 py-2 text-center\">\n//                         <button\n//                           onClick={() => navigate(`/projects/${project.id}/associates`)}\n//                           className=\"btn btn-sm btn-outline-primary rounded-circle\"\n//                           title=\"View Associates\"\n//                         >\n//                           üîç\n//                         </button>\n//                       </td>\n//                     </tr>\n//                   );\n//                 })\n//               ) : (\n//                 <tr>\n//                   <td colSpan=\"8\" className=\"text-center text-muted py-4\">\n//                     No projects found for this account.\n//                   </td>\n//                 </tr>\n//               )}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProjectLevel;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport Breadcrumbs from '../Breadcrumbs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n  const BACKEND_URL = 'http://localhost:8081';\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n  useEffect(() => {\n    var _location$state, _location$state2;\n    const fetchProjectData = async (month, year, accId) => {\n      setLoading(true);\n      setError(null);\n      const requestBody = {\n        month: month,\n        year: year,\n        accId: accId\n      };\n      console.log(\"Fetching project data with request body (POST):\", requestBody);\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/project`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(requestBody)\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorText || response.statusText}`);\n        }\n        const data = await response.json();\n        setProjects(Array.isArray(data) ? data : [data].filter(Boolean));\n        if (data && data.length > 0 && data[0].accountName) {\n          setActiveAccountName(data[0].accountName);\n        } else {\n          // Fallback to Account ID if name not found in project data\n\n          const storedAccountName = sessionStorage.getItem('lastFetchedAccountName');\n          if (storedAccountName) {\n            setActiveAccountName(storedAccountName);\n          } else {\n            setActiveAccountName(accId);\n          }\n        }\n      } catch (err) {\n        console.error(\"Error fetching project data:\", err);\n        setError(`Failed to load project data: ${err.message || \"Network error\"}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    let monthToUse = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let yearToUse = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let accountIdToUse = urlAccountId;\n    if (!monthToUse || !yearToUse || !accountIdToUse) {\n      const storedMonth = sessionStorage.getItem('lastFetchedProjectMonth');\n      const storedYear = sessionStorage.getItem('lastFetchedProjectYear');\n      const storedAccountId = sessionStorage.getItem('lastFetchedProjectAccountId');\n      const storedAccountName = sessionStorage.getItem('lastFetchedProjectAccountName');\n      if (storedMonth && storedYear && storedAccountId) {\n        monthToUse = parseInt(storedMonth, 10);\n        yearToUse = parseInt(storedYear, 10);\n        accountIdToUse = storedAccountId;\n        if (storedAccountName) setActiveAccountName(storedAccountName);\n      }\n    }\n    if (monthToUse && yearToUse && accountIdToUse) {\n      if (monthToUse !== activeMonth || yearToUse !== activeYear || accountIdToUse !== activeAccountId || projects.length === 0) {\n        setActiveMonth(monthToUse);\n        setActiveYear(yearToUse);\n        setActiveAccountId(accountIdToUse);\n        sessionStorage.setItem('lastFetchedProjectMonth', monthToUse.toString());\n        sessionStorage.setItem('lastFetchedProjectYear', yearToUse.toString());\n        sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\n        if (activeAccountName && activeAccountName !== 'Loading...') {\n          sessionStorage.setItem('lastFetchedProjectAccountName', activeAccountName);\n        }\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse);\n      } else {\n        setLoading(false);\n      }\n    } else {\n      setError(\"Missing project context (month, year, or account ID). Please go back and select an account.\");\n      setLoading(false);\n    }\n  }, [location.state, urlAccountId, BACKEND_URL, activeMonth, activeYear, activeAccountId, projects.length, activeAccountName]);\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, {\n    name: 'Account Level',\n    page: 'accounts'\n  }, {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading Project Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate('/accounts'),\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1200px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 fw-semibold text-dark\",\n        children: [\"\\uD83D\\uDCC1 Project Level Overview \", activeAccountId ? `for ${activeAccountName}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover align-middle table-borderless mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #3b82f6, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Project ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Total Associates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Company Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Client Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Variance Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2 text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                backgroundColor: '#fdfdfd'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.projectId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.totalAssociatesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.totalCompanyHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.totalClientHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.varianceHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: [\"$\", project.revenue.toLocaleString(undefined, {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2 text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  // Navigate to AssociateLevel, passing projectId, month, year, accountId, accountName\n\n                  onClick: () => navigate(`/projects/${project.projectId}/associates`, {\n                    state: {\n                      projectId: project.projectId,\n                      projectName: project.projectName,\n                      // Pass project name for breadcrumbs\n\n                      accountId: project.accountId,\n                      // Pass account ID\n\n                      accountName: project.accountName,\n                      // Pass account name\n\n                      month: activeMonth,\n                      // Pass the active month\n\n                      year: activeYear // Pass the active year\n                    }\n                  }),\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  title: \"View Associates\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 21\n              }, this)]\n            }, project.projectId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"10\",\n                className: \"text-center text-muted py-4\",\n                children: \"No projects found for this account and period.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"dtZipBuvP2CxkWJcbftvLuDREZU=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ProjectLevel;\nexport default ProjectLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectLevel\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useLocation","Breadcrumbs","jsxDEV","_jsxDEV","ProjectLevel","_s","navigate","accountId","urlAccountId","location","projects","setProjects","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","BACKEND_URL","link","document","createElement","href","rel","head","appendChild","body","style","fontFamily","_location$state","_location$state2","fetchProjectData","month","year","accId","requestBody","console","log","response","fetch","method","headers","JSON","stringify","ok","errorText","text","Error","status","statusText","data","json","Array","isArray","filter","Boolean","length","accountName","storedAccountName","sessionStorage","getItem","err","message","monthToUse","state","yearToUse","accountIdToUse","storedMonth","storedYear","storedAccountId","parseInt","setItem","toString","breadcrumbPath","name","page","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","maxWidth","backgroundColor","borderRadius","path","map","project","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","title","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Details/ProjectLevel.js"],"sourcesContent":["\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { useNavigate, useParams } from 'react-router-dom';\r\n// import Breadcrumbs from '../Breadcrumbs'; // CORRECTED PATH: Breadcrumbs is one level up\r\n// import projectData from '../../data/projectData.json'; // CORRECTED PATH: data is two levels up\r\n// import accountData from '../../data/accountData.json'; // CORRECTED PATH: data is two levels up\r\n\r\n// const ProjectLevel = () => {\r\n//   const navigate = useNavigate();\r\n//   const { accountId } = useParams(); // Get accountId from URL parameters\r\n\r\n//   useEffect(() => {\r\n//     const link = document.createElement('link');\r\n//     link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n//     link.rel = 'stylesheet';\r\n//     document.head.appendChild(link);\r\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n//   }, []);\r\n\r\n//   // Filter projects based on accountId\r\n//   const projects = accountId\r\n//     ? projectData.projects.filter(project => project.accountId === accountId)\r\n//     : projectData.projects; // If no accountId, show all projects (e.g., if navigated directly)\r\n\r\n//   // Get account name for display in title and breadcrumbs\r\n//   const currentAccount = accountData.accounts.find(acc => acc.id === accountId);\r\n//   const accountName = currentAccount ? currentAccount.name : 'All Accounts';\r\n\r\n//   // Adjust breadcrumb path based on whether accountId is present\r\n//   const breadcrumbPath = [\r\n//     { name: 'PMO Dashboard', page: '' },\r\n//     { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n//     { name: 'Account Level', page: 'accounts' },\r\n//     { name: `Projects (${accountName})`, page: `accounts/${accountId}/projects` }\r\n//   ];\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n//       style={{\r\n//         background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n//         fontFamily: \"'Poppins', sans-serif\"\r\n//       }}\r\n//     >\r\n//       <div\r\n//         className=\"card shadow p-4 p-md-5 w-100\"\r\n//         style={{ maxWidth: '1000px', backgroundColor: '#ffffffdd', borderRadius: '1rem' }}\r\n//       >\r\n//         <Breadcrumbs path={breadcrumbPath} />\r\n//         <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n//           üìÅ Project Level Overview {accountId ? `for ${accountName}` : ''}\r\n//         </h2>\r\n\r\n//         <div className=\"table-responsive rounded\">\r\n//           <table className=\"table table-hover align-middle table-borderless mb-0\">\r\n//             <thead\r\n//               className=\"text-white\"\r\n//               style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\r\n//             >\r\n//               <tr>\r\n//                 <th className=\"px-3 py-2\">Project ID</th>\r\n//                 <th className=\"px-3 py-2\">Account</th>\r\n//                 <th className=\"px-3 py-2\">Project Name</th>\r\n//                 <th className=\"px-3 py-2\">Associates</th>\r\n//                 <th className=\"px-3 py-2\">Client Hours</th>\r\n//                 <th className=\"px-3 py-2\">CTS Hours</th>\r\n//                 <th className=\"px-3 py-2\">Variance</th>\r\n//                 <th className=\"px-3 py-2 text-center\">View</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {projects.length > 0 ? (\r\n//                 projects.map((project) => {\r\n//                   const variance = project.ctsHour - project.clientHour;\r\n//                   return (\r\n//                     <tr key={project.id} style={{ backgroundColor: '#fdfdfd' }}>\r\n//                       <td className=\"px-3 py-2\">{project.id}</td>\r\n//                       <td className=\"px-3 py-2\">{project.accountName}</td>\r\n//                       <td className=\"px-3 py-2\">{project.name}</td>\r\n//                       <td className=\"px-3 py-2\">{project.totalAssociates}</td>\r\n//                       <td className=\"px-3 py-2\">{project.clientHour}</td>\r\n//                       <td className=\"px-3 py-2\">{project.ctsHour}</td>\r\n//                       <td\r\n//                         className={`px-3 py-2 fw-semibold ${\r\n//                           variance > 0 ? 'text-danger' : variance < 0 ? 'text-primary' : 'text-success'\r\n//                         }`}\r\n//                       >\r\n//                         {variance}\r\n//                       </td>\r\n//                       <td className=\"px-3 py-2 text-center\">\r\n//                         <button\r\n//                           onClick={() => navigate(`/projects/${project.id}/associates`)}\r\n//                           className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n//                           title=\"View Associates\"\r\n//                         >\r\n//                           üîç\r\n//                         </button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   );\r\n//                 })\r\n//               ) : (\r\n//                 <tr>\r\n//                   <td colSpan=\"8\" className=\"text-center text-muted py-4\">\r\n//                     No projects found for this account.\r\n//                   </td>\r\n//                 </tr>\r\n//               )}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProjectLevel;\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\n\r\nimport Breadcrumbs from '../Breadcrumbs';\r\n\r\nconst ProjectLevel = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { accountId: urlAccountId } = useParams();\r\n\r\n  const location = useLocation();\r\n\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n\r\n  const [activeYear, setActiveYear] = useState(null);\r\n\r\n  const [activeAccountId, setActiveAccountId] = useState(null);\r\n\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  useEffect(() => {\r\n\r\n    const link = document.createElement('link');\r\n\r\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n\r\n    link.rel = 'stylesheet';\r\n\r\n    document.head.appendChild(link);\r\n\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchProjectData = async (month, year, accId) => {\r\n\r\n      setLoading(true);\r\n\r\n      setError(null);\r\n\r\n      const requestBody = {\r\n\r\n        month: month,\r\n\r\n        year: year,\r\n\r\n        accId: accId\r\n\r\n      };\r\n\r\n      console.log(\"Fetching project data with request body (POST):\", requestBody);\r\n\r\n      try {\r\n\r\n        const response = await fetch(`${BACKEND_URL}/api/project`, {\r\n\r\n          method: 'POST',\r\n\r\n          headers: {\r\n\r\n            'Content-Type': 'application/json',\r\n\r\n          },\r\n\r\n          body: JSON.stringify(requestBody),\r\n\r\n        });\r\n\r\n        if (!response.ok) {\r\n\r\n          const errorText = await response.text();\r\n\r\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorText || response.statusText}`);\r\n\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setProjects(Array.isArray(data) ? data : [data].filter(Boolean));\r\n\r\n        if (data && data.length > 0 && data[0].accountName) {\r\n\r\n          setActiveAccountName(data[0].accountName);\r\n\r\n        } else {\r\n\r\n          // Fallback to Account ID if name not found in project data\r\n\r\n          const storedAccountName = sessionStorage.getItem('lastFetchedAccountName');\r\n\r\n          if (storedAccountName) {\r\n\r\n            setActiveAccountName(storedAccountName);\r\n\r\n          } else {\r\n\r\n            setActiveAccountName(accId);\r\n\r\n          }\r\n\r\n        }\r\n\r\n      } catch (err) {\r\n\r\n        console.error(\"Error fetching project data:\", err);\r\n\r\n        setError(`Failed to load project data: ${err.message || \"Network error\"}`);\r\n\r\n      } finally {\r\n\r\n        setLoading(false);\r\n\r\n      }\r\n\r\n    };\r\n\r\n    let monthToUse = location.state?.month;\r\n\r\n    let yearToUse = location.state?.year;\r\n\r\n    let accountIdToUse = urlAccountId;\r\n\r\n    if (!monthToUse || !yearToUse || !accountIdToUse) {\r\n\r\n      const storedMonth = sessionStorage.getItem('lastFetchedProjectMonth');\r\n\r\n      const storedYear = sessionStorage.getItem('lastFetchedProjectYear');\r\n\r\n      const storedAccountId = sessionStorage.getItem('lastFetchedProjectAccountId');\r\n\r\n      const storedAccountName = sessionStorage.getItem('lastFetchedProjectAccountName');\r\n\r\n      if (storedMonth && storedYear && storedAccountId) {\r\n\r\n        monthToUse = parseInt(storedMonth, 10);\r\n\r\n        yearToUse = parseInt(storedYear, 10);\r\n\r\n        accountIdToUse = storedAccountId;\r\n\r\n        if (storedAccountName) setActiveAccountName(storedAccountName);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    if (monthToUse && yearToUse && accountIdToUse) {\r\n\r\n      if (\r\n\r\n        monthToUse !== activeMonth ||\r\n\r\n        yearToUse !== activeYear ||\r\n\r\n        accountIdToUse !== activeAccountId ||\r\n\r\n        projects.length === 0\r\n\r\n      ) {\r\n\r\n        setActiveMonth(monthToUse);\r\n\r\n        setActiveYear(yearToUse);\r\n\r\n        setActiveAccountId(accountIdToUse);\r\n\r\n        sessionStorage.setItem('lastFetchedProjectMonth', monthToUse.toString());\r\n\r\n        sessionStorage.setItem('lastFetchedProjectYear', yearToUse.toString());\r\n\r\n        sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\r\n\r\n        if (activeAccountName && activeAccountName !== 'Loading...') {\r\n\r\n          sessionStorage.setItem('lastFetchedProjectAccountName', activeAccountName);\r\n\r\n        }\r\n\r\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse);\r\n\r\n      } else {\r\n\r\n        setLoading(false);\r\n\r\n      }\r\n\r\n    } else {\r\n\r\n      setError(\"Missing project context (month, year, or account ID). Please go back and select an account.\");\r\n\r\n      setLoading(false);\r\n\r\n    }\r\n\r\n  }, [location.state, urlAccountId, BACKEND_URL, activeMonth, activeYear, activeAccountId, projects.length, activeAccountName]);\r\n\r\n  const breadcrumbPath = [\r\n\r\n    { name: 'PMO Dashboard', page: '' },\r\n\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n\r\n    { name: 'Account Level', page: 'accounts' },\r\n\r\n    { name: `Projects (${activeAccountName})`, page: `accounts/${activeAccountId}/projects` }\r\n\r\n  ];\r\n\r\n  if (loading) {\r\n\r\n    return (\r\n\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n\r\n        <div className=\"spinner-border text-primary\" role=\"status\">\r\n\r\n          <span className=\"visually-hidden\">Loading Project Data...</span>\r\n\r\n        </div>\r\n\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n  if (error) {\r\n\r\n    return (\r\n\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n\r\n        <button className=\"btn btn-primary mt-3\" onClick={() => navigate('/accounts')}>\r\n\r\n          Go to Account Level\r\n\r\n        </button>\r\n\r\n      </div>\r\n\r\n    );\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <div\r\n\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n\r\n      style={{\r\n\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n\r\n        fontFamily: \"'Poppins', sans-serif\"\r\n\r\n      }}\r\n\r\n    >\r\n\r\n      <div\r\n\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n\r\n        style={{ maxWidth: '1200px', backgroundColor: '#ffffffdd', borderRadius: '1rem' }}\r\n\r\n      >\r\n\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n\r\n          üìÅ Project Level Overview {activeAccountId ? `for ${activeAccountName}` : ''}\r\n\r\n        </h2>\r\n\r\n        <div className=\"table-responsive rounded\">\r\n\r\n          <table className=\"table table-hover align-middle table-borderless mb-0\">\r\n\r\n            <thead\r\n\r\n              className=\"text-white\"\r\n\r\n              style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\r\n\r\n            >\r\n\r\n              <tr>\r\n\r\n                <th className=\"px-3 py-2\">Project ID</th>\r\n\r\n                <th className=\"px-3 py-2\">Project Name</th>\r\n\r\n                <th className=\"px-3 py-2\">Account ID</th>\r\n\r\n                <th className=\"px-3 py-2\">Account Name</th>\r\n\r\n                <th className=\"px-3 py-2\">Total Associates</th>\r\n\r\n                <th className=\"px-3 py-2\">Company Hours</th>\r\n\r\n                <th className=\"px-3 py-2\">Client Hours</th>\r\n\r\n                <th className=\"px-3 py-2\">Variance Hours</th>\r\n\r\n                <th className=\"px-3 py-2\">Revenue</th>\r\n\r\n                <th className=\"px-3 py-2 text-center\">View</th>\r\n\r\n              </tr>\r\n\r\n            </thead>\r\n\r\n            <tbody>\r\n\r\n              {projects.length > 0 ? (\r\n\r\n                projects.map((project) => (\r\n\r\n                  <tr key={project.projectId} style={{ backgroundColor: '#fdfdfd' }}>\r\n\r\n                    <td className=\"px-3 py-2\">{project.projectId}</td>\r\n\r\n                    <td className=\"px-3 py-2\">{project.projectName}</td>\r\n\r\n                    <td className=\"px-3 py-2\">{project.accountId}</td>\r\n\r\n                    <td className=\"px-3 py-2\">{project.accountName}</td>\r\n\r\n                    <td className=\"px-3 py-2\">{project.totalAssociatesCount}</td>\r\n\r\n                    <td className=\"px-3 py-2\">{project.totalCompanyHours}</td>\r\n\r\n                    <td className=\"px-3 py-2\">{project.totalClientHours}</td>\r\n\r\n                    <td className=\"px-3 py-2\">{project.varianceHours}</td>\r\n\r\n                    <td className=\"px-3 py-2\">${project.revenue.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n\r\n                    <td className=\"px-3 py-2 text-center\">\r\n\r\n                      <button\r\n\r\n                        // Navigate to AssociateLevel, passing projectId, month, year, accountId, accountName\r\n\r\n                        onClick={() => navigate(`/projects/${project.projectId}/associates`, {\r\n\r\n                          state: {\r\n\r\n                            projectId: project.projectId,\r\n\r\n                            projectName: project.projectName, // Pass project name for breadcrumbs\r\n\r\n                            accountId: project.accountId, // Pass account ID\r\n\r\n                            accountName: project.accountName, // Pass account name\r\n\r\n                            month: activeMonth, // Pass the active month\r\n\r\n                            year: activeYear // Pass the active year\r\n\r\n                          }\r\n\r\n                        })}\r\n\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n\r\n                        title=\"View Associates\"\r\n\r\n                      >\r\n\r\n                        üîç\r\n\r\n                      </button>\r\n\r\n                    </td>\r\n\r\n                  </tr>\r\n\r\n                ))\r\n\r\n              ) : (\r\n\r\n                <tr>\r\n\r\n                  <td colSpan=\"10\" className=\"text-center text-muted py-4\">\r\n\r\n                    No projects found for this account and period.\r\n\r\n                  </td>\r\n\r\n                </tr>\r\n\r\n              )}\r\n\r\n            </tbody>\r\n\r\n          </table>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n};\r\n\r\nexport default ProjectLevel;\r\n\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}