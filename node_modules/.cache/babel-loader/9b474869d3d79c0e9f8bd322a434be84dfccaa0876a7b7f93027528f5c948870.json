{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\AccountLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\n\n// Utility to convert month number to month name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const date = new Date();\n  date.setMonth(monthNumber - 1);\n  return date.toLocaleString('en-US', {\n    month: 'long'\n  });\n};\nconst AccountLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tableRef = useRef(null);\n\n  // UI state\n  const [accounts, setAccounts] = useState([]);\n  const [commentsMap, setCommentsMap] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [commentInput, setCommentInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Active filters\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeMonthName, setActiveMonthName] = useState(null);\n  const [activeSbu, setActiveSbu] = useState(null);\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (value = 0) => value.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Load Poppins font\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch accounts when filters change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            monthNameParam,\n            sbu\n          })\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(txt || resp.statusText);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setAccounts(list);\n\n        // seed comments map\n        const initMap = {};\n        list.forEach(acc => {\n          if (acc.accountComment) {\n            initMap[acc.accountId] = acc.accountComment;\n          }\n        });\n        setCommentsMap(initMap);\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load accounts: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Read from React state, sessionStorage, or URL query\n    const qs = new URLSearchParams(location.search);\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let s = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.sbu;\n    if (!m) {\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\n      const qm = qs.get('month');\n      m = sm !== null && sm !== void 0 ? sm : qm;\n    }\n    if (!y) {\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\n      const qy = qs.get('year');\n      y = sy !== null && sy !== void 0 ? sy : qy;\n    }\n    if (!s) {\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\n      const qsS = qs.get('sbu');\n      s = ss !== null && ss !== void 0 ? ss : qsS;\n    }\n\n    // Normalize numeric values\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && s) {\n      const mn = getMonthName(m);\n      // only refetch if any filter changed or first load\n      if (m !== activeMonth || y !== activeYear || s !== activeSbu || accounts.length === 0) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveMonthName(mn);\n        setActiveSbu(s);\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\n        fetchAccountData(m, y, mn, s);\n      }\n    } else {\n      setError('Missing month, year or SBU. Please navigate here with those parameters.');\n      setLoading(false);\n    }\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\n\n  // Initialize & destroy DataTable\n  useEffect(() => {\n    if (!loading && accounts.length > 0 && tableRef.current) {\n      const $tbl = $(tableRef.current);\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n      }\n      $tbl.DataTable({\n        paging: true,\n        searching: true,\n        ordering: true,\n        info: true,\n        autoWidth: false\n      });\n    }\n    return () => {\n      if (tableRef.current) {\n        const $tbl = $(tableRef.current);\n        if ($.fn.DataTable.isDataTable($tbl)) {\n          $tbl.DataTable().destroy();\n        }\n      }\n    };\n  }, [loading, accounts]);\n\n  // Download CSV of current table view (respects DataTables search/filter/paging)\n  const handleDownload = () => {\n    const $tbl = $(tableRef.current);\n    let headers = ['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference'];\n    let rows = [];\n    if ($.fn.DataTable.isDataTable($tbl)) {\n      const dt = $tbl.DataTable();\n\n      // Headers from the first 6 columns\n      headers = $tbl.find('thead th').slice(0, 6).map(function () {\n        return $(this).text().trim();\n      }).get();\n\n      // Get visible (filtered) rows and read displayed cell text\n      const nodes = dt.rows({\n        search: 'applied'\n      }).nodes().toArray();\n      rows = nodes.map(tr => Array.from(tr.cells).slice(0, 6).map(td => td.textContent.trim()));\n    } else {\n      // Fallback to state if DataTable not initialized\n      rows = accounts.map(acc => {\n        var _acc$accountId, _acc$accountName, _acc$totalProjects, _acc$totalRevenue, _acc$forecastNetReven, _acc$difference;\n        return [String((_acc$accountId = acc.accountId) !== null && _acc$accountId !== void 0 ? _acc$accountId : ''), String((_acc$accountName = acc.accountName) !== null && _acc$accountName !== void 0 ? _acc$accountName : ''), String((_acc$totalProjects = acc.totalProjects) !== null && _acc$totalProjects !== void 0 ? _acc$totalProjects : ''), formatCurrency((_acc$totalRevenue = acc.totalRevenue) !== null && _acc$totalRevenue !== void 0 ? _acc$totalRevenue : 0), formatCurrency((_acc$forecastNetReven = acc.forecastNetRevenue) !== null && _acc$forecastNetReven !== void 0 ? _acc$forecastNetReven : 0), formatCurrency((_acc$difference = acc.difference) !== null && _acc$difference !== void 0 ? _acc$difference : 0)];\n      });\n    }\n    const csvArray = [headers, ...rows];\n    const csv = csvArray.map(r => r.map(v => `\"${String(v).replace(/\"/g, '\"\"')}\"`).join(',')).join('\\r\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    const fileName = `AccountLevel_${activeSbu || 'All'}_${activeMonthName || ''}${activeYear || ''}.csv`;\n    a.href = url;\n    a.download = fileName.replace(/\\s+/g, '_');\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  // Open comment modal\n  const openCommentModal = accId => {\n    setCurrentAccountId(accId);\n    setCommentInput(commentsMap[accId] || '');\n    setModalVisible(true);\n  };\n\n  // Save or update comment\n  const saveComment = async () => {\n    try {\n      const dto = {\n        accId: currentAccountId,\n        month: activeMonth,\n        year: activeYear,\n        comment: commentInput\n      };\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dto)\n      });\n      if (!resp.ok) {\n        throw new Error(await resp.text());\n      }\n      // update local maps\n      setCommentsMap(m => ({\n        ...m,\n        [currentAccountId]: commentInput\n      }));\n      setAccounts(list => list.map(acc => acc.accountId === currentAccountId ? {\n        ...acc,\n        accountComment: commentInput\n      } : acc));\n      setModalVisible(false);\n    } catch (e) {\n      alert('Error saving comment: ' + e.message);\n    }\n  };\n\n  // Dynamic breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu'\n  }] : []), {\n    name: 'Account Level',\n    page: 'accounts'\n  }].filter(Boolean);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3 mb-md-0 fw-semibold text-dark\",\n          children: [\"\\uD83C\\uDFE2 Account Level Overview \\u2013 \", activeSbu, activeMonthName && activeYear && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2 text-primary\",\n            children: [\"(\", activeMonthName, \" \", activeYear, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success\",\n          onClick: handleDownload,\n          disabled: loading || !!error,\n          title: \"Download current table view as CSV\",\n          children: \"\\u2B07\\uFE0F Download CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Account Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload'),\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Forecast Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Revenue Difference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: accounts.map(acc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.totalProjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.totalRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.forecastNetRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.difference)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-secondary\",\n                  onClick: () => openCommentModal(acc.accountId),\n                  children: \"\\uD83D\\uDCAC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/accounts/${acc.accountId}/project-types`, {\n                    state: {\n                      accId: acc.accountId,\n                      month: activeMonth,\n                      year: activeYear,\n                      monthName: activeMonthName,\n                      sbu: activeSbu\n                    }\n                  }),\n                  title: \"View Project Types\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this)]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      style: {\n        backgroundColor: '#00000066'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"\\uD83D\\uDCAC Comment for \", currentAccountId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setModalVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setModalVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: saveComment,\n              disabled: !commentInput.trim(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountLevel, \"1AsQM+NuAK3aF9Nw5LlGaGx8YvM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AccountLevel;\nexport default AccountLevel;\nvar _c;\n$RefreshReg$(_c, \"AccountLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","AccountLevel","_s","navigate","location","tableRef","accounts","setAccounts","commentsMap","setCommentsMap","modalVisible","setModalVisible","currentAccountId","setCurrentAccountId","commentInput","setCommentInput","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeMonthName","setActiveMonthName","activeSbu","setActiveSbu","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","value","style","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","_location$state3","fetchAccountData","year","monthNameParam","sbu","resp","fetch","method","headers","JSON","stringify","ok","txt","text","Error","statusText","data","json","list","Array","isArray","filter","Boolean","initMap","forEach","acc","accountComment","accountId","e","console","message","qs","URLSearchParams","search","m","state","y","s","sm","sessionStorage","getItem","qm","get","sy","qy","ss","qsS","parseInt","mn","length","setItem","toString","current","$tbl","fn","DataTable","isDataTable","destroy","paging","searching","ordering","info","autoWidth","handleDownload","rows","dt","find","slice","map","trim","nodes","toArray","tr","from","cells","td","textContent","_acc$accountId","_acc$accountName","_acc$totalProjects","_acc$totalRevenue","_acc$forecastNetReven","_acc$difference","String","accountName","totalProjects","totalRevenue","forecastNetRevenue","difference","csvArray","csv","r","v","replace","join","blob","Blob","type","url","URL","createObjectURL","a","fileName","download","click","remove","revokeObjectURL","openCommentModal","accId","saveComment","dto","comment","alert","breadcrumbPath","name","page","className","background","children","maxWidth","backgroundColor","borderRadius","path","_jsxFileName","lineNumber","columnNumber","onClick","disabled","title","role","ref","width","monthName","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/AccountLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\n// Utility to convert month number to month name\r\nconst getMonthName = (monthNumber) => {\r\n  const date = new Date();\r\n  date.setMonth(monthNumber - 1);\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n};\r\n\r\nconst AccountLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  // UI state\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Active filters\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeMonthName, setActiveMonthName] = useState(null);\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits,\r\n  } = commonData.currencySettings;\r\n\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits,\r\n    });\r\n\r\n  // Load Poppins font\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch accounts when filters change\r\n  useEffect(() => {\r\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, monthNameParam, sbu }),\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(txt || resp.statusText);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setAccounts(list);\r\n\r\n        // seed comments map\r\n        const initMap = {};\r\n        list.forEach((acc) => {\r\n          if (acc.accountComment) {\r\n            initMap[acc.accountId] = acc.accountComment;\r\n          }\r\n        });\r\n        setCommentsMap(initMap);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load accounts: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Read from React state, sessionStorage, or URL query\r\n    const qs = new URLSearchParams(location.search);\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    let s = location.state?.sbu;\r\n\r\n    if (!m) {\r\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\r\n      const qm = qs.get('month');\r\n      m = sm ?? qm;\r\n    }\r\n    if (!y) {\r\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\r\n      const qy = qs.get('year');\r\n      y = sy ?? qy;\r\n    }\r\n    if (!s) {\r\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\r\n      const qsS = qs.get('sbu');\r\n      s = ss ?? qsS;\r\n    }\r\n\r\n    // Normalize numeric values\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && s) {\r\n      const mn = getMonthName(m);\r\n      // only refetch if any filter changed or first load\r\n      if (\r\n        m !== activeMonth ||\r\n        y !== activeYear ||\r\n        s !== activeSbu ||\r\n        accounts.length === 0\r\n      ) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveMonthName(mn);\r\n        setActiveSbu(s);\r\n\r\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\r\n\r\n        fetchAccountData(m, y, mn, s);\r\n      }\r\n    } else {\r\n      setError(\r\n        'Missing month, year or SBU. Please navigate here with those parameters.'\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\r\n\r\n  // Initialize & destroy DataTable\r\n  useEffect(() => {\r\n    if (!loading && accounts.length > 0 && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n      }\r\n      $tbl.DataTable({\r\n        paging: true,\r\n        searching: true,\r\n        ordering: true,\r\n        info: true,\r\n        autoWidth: false,\r\n      });\r\n    }\r\n    return () => {\r\n      if (tableRef.current) {\r\n        const $tbl = $(tableRef.current);\r\n        if ($.fn.DataTable.isDataTable($tbl)) {\r\n          $tbl.DataTable().destroy();\r\n        }\r\n      }\r\n    };\r\n  }, [loading, accounts]);\r\n\r\n  // Download CSV of current table view (respects DataTables search/filter/paging)\r\n  const handleDownload = () => {\r\n    const $tbl = $(tableRef.current);\r\n    let headers = [\r\n      'Account ID',\r\n      'Account Name',\r\n      'Total Projects',\r\n      'Total Revenue',\r\n      'Forecast Revenue',\r\n      'Revenue Difference',\r\n    ];\r\n    let rows = [];\r\n\r\n    if ($.fn.DataTable.isDataTable($tbl)) {\r\n      const dt = $tbl.DataTable();\r\n\r\n      // Headers from the first 6 columns\r\n      headers = $tbl.find('thead th').slice(0, 6).map(function () {\r\n        return $(this).text().trim();\r\n      }).get();\r\n\r\n      // Get visible (filtered) rows and read displayed cell text\r\n      const nodes = dt.rows({ search: 'applied' }).nodes().toArray();\r\n      rows = nodes.map((tr) =>\r\n        Array.from(tr.cells).slice(0, 6).map((td) => td.textContent.trim())\r\n      );\r\n    } else {\r\n      // Fallback to state if DataTable not initialized\r\n      rows = accounts.map((acc) => [\r\n        String(acc.accountId ?? ''),\r\n        String(acc.accountName ?? ''),\r\n        String(acc.totalProjects ?? ''),\r\n        formatCurrency(acc.totalRevenue ?? 0),\r\n        formatCurrency(acc.forecastNetRevenue ?? 0),\r\n        formatCurrency(acc.difference ?? 0),\r\n      ]);\r\n    }\r\n\r\n    const csvArray = [headers, ...rows];\r\n    const csv = csvArray\r\n      .map((r) =>\r\n        r\r\n          .map((v) => `\"${String(v).replace(/\"/g, '\"\"')}\"`)\r\n          .join(',')\r\n      )\r\n      .join('\\r\\n');\r\n\r\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const fileName = `AccountLevel_${activeSbu || 'All'}_${activeMonthName || ''}${activeYear || ''}.csv`;\r\n    a.href = url;\r\n    a.download = fileName.replace(/\\s+/g, '_');\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Open comment modal\r\n  const openCommentModal = (accId) => {\r\n    setCurrentAccountId(accId);\r\n    setCommentInput(commentsMap[accId] || '');\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // Save or update comment\r\n  const saveComment = async () => {\r\n    try {\r\n      const dto = {\r\n        accId: currentAccountId,\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        comment: commentInput,\r\n      };\r\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dto),\r\n      });\r\n      if (!resp.ok) {\r\n        throw new Error(await resp.text());\r\n      }\r\n      // update local maps\r\n      setCommentsMap((m) => ({ ...m, [currentAccountId]: commentInput }));\r\n      setAccounts((list) =>\r\n        list.map((acc) =>\r\n          acc.accountId === currentAccountId\r\n            ? { ...acc, accountComment: commentInput }\r\n            : acc\r\n        )\r\n      );\r\n      setModalVisible(false);\r\n    } catch (e) {\r\n      alert('Error saving comment: ' + e.message);\r\n    }\r\n  };\r\n\r\n  // Dynamic breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    ...(activeSbu ? [{ name: `${activeSbu} SBU Level`, page: 'sbu' }] : []),\r\n    { name: 'Account Level', page: 'accounts' },\r\n  ].filter(Boolean);\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\">\r\n          <h2 className=\"mb-3 mb-md-0 fw-semibold text-dark\">\r\n            🏢 Account Level Overview – {activeSbu}\r\n            {activeMonthName && activeYear && (\r\n              <span className=\"ms-2 text-primary\">\r\n                ({activeMonthName} {activeYear})\r\n              </span>\r\n            )}\r\n          </h2>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            onClick={handleDownload}\r\n            disabled={loading || (!!error)}\r\n            title=\"Download current table view as CSV\"\r\n          >\r\n            ⬇️ Download CSV\r\n          </button>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\" />\r\n            <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')}\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              ref={tableRef}\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th>Account ID</th>\r\n                  <th>Account Name</th>\r\n                  <th>Total Projects</th>\r\n                  <th>Total Revenue</th>\r\n                  <th>Forecast Revenue</th>\r\n                  <th>Revenue Difference</th>\r\n                  <th className=\"text-center\">Comment</th>\r\n                  <th className=\"text-center\">View</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {accounts.map((acc) => (\r\n                  <tr key={acc.accountId}>\r\n                    <td>{acc.accountId}</td>\r\n                    <td>{acc.accountName}</td>\r\n                    <td>{acc.totalProjects}</td>\r\n                    <td>{formatCurrency(acc.totalRevenue)}</td>\r\n                    <td>{formatCurrency(acc.forecastNetRevenue)}</td>\r\n                    <td>{formatCurrency(acc.difference)}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-secondary\"\r\n                        onClick={() => openCommentModal(acc.accountId)}\r\n                      >\r\n                        💬\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                        onClick={() =>\r\n                          navigate(`/accounts/${acc.accountId}/project-types`, {\r\n                            state: {\r\n                              accId: acc.accountId,\r\n                              month: activeMonth,\r\n                              year: activeYear,\r\n                              monthName: activeMonthName,\r\n                              sbu: activeSbu,\r\n                            },\r\n                          })\r\n                        }\r\n                        title=\"View Project Types\"\r\n                      >\r\n                        🔍\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {modalVisible && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: '#00000066' }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">\r\n                  💬 Comment for {currentAccountId}\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModalVisible(false)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  value={commentInput}\r\n                  onChange={(e) => setCommentInput(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setModalVisible(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={saveComment}\r\n                  disabled={!commentInput.trim()}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountLevel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}