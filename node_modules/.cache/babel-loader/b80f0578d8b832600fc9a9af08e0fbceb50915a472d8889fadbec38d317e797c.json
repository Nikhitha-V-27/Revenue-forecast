{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\AccountLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport * as XLSX from 'xlsx'; // Import XLSX for Excel export\nimport { saveAs } from 'file-saver'; // Import saveAs for triggering file download\n\n// Utility to convert month number to month name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const date = new Date();\n  date.setMonth(monthNumber - 1);\n  return date.toLocaleString('en-US', {\n    month: 'long'\n  });\n};\nconst AccountLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const tableInstanceRef = useRef(null); // Ref to hold the DataTable instance\n\n  // UI state\n  const [accounts, setAccounts] = useState([]);\n  const [commentsMap, setCommentsMap] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [commentInput, setCommentInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Active filters\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeMonthName, setActiveMonthName] = useState(null);\n  const [activeSbu, setActiveSbu] = useState(null);\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (value = 0) => value.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  /**\r\n   * Handles the \"Download Data\" button click.\r\n   * Generates an Excel (XLSX) file from the filtered 'accounts' data and triggers a download.\r\n   */\n  const handleDownloadData = () => {\n    // Get the currently filtered data from DataTables\n    const dataToExport = tableInstanceRef.current ? tableInstanceRef.current.rows({\n      search: 'applied'\n    }).data().toArray() : accounts; // Fallback to all accounts if DataTable isn't initialized or no filter applied\n\n    if (dataToExport.length === 0) {\n      console.log('No data to download after applying filters.');\n      // Optionally, show a user-friendly message here (e.g., a toast notification)\n      return;\n    }\n    const headers = ['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference', 'Comment'];\n    const dataForExcel = dataToExport.map(account => ({\n      'Account ID': account.accountId,\n      'Account Name': account.accountName,\n      'Total Projects': account.totalProjects,\n      'Total Revenue': formatCurrency(account.totalRevenue),\n      'Forecast Revenue': formatCurrency(account.forecastNetRevenue),\n      'Revenue Difference': formatCurrency(account.difference),\n      'Comment': account.accountComment || ''\n    }));\n    const wb = XLSX.utils.book_new();\n    const ws = XLSX.utils.json_to_sheet(dataForExcel, {\n      header: headers\n    });\n    XLSX.utils.book_append_sheet(wb, ws, 'Account Data');\n    const excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const dataBlob = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    const monthName = getMonthName(activeMonth);\n    const filename = `Account_Data_${activeSbu || 'All'}_${monthName || ''}_${activeYear || ''}.xlsx`;\n    saveAs(dataBlob, filename);\n    console.log('Downloading filtered account data in Excel format!');\n  };\n\n  // Load Poppins font\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch accounts when filters change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const payload = {\n          month,\n          year,\n          monthNameParam,\n          sbu\n        };\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(txt || resp.statusText);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setAccounts(list);\n\n        // seed comments map\n        const initMap = {};\n        list.forEach(acc => {\n          if (acc.accountComment) {\n            initMap[acc.accountId] = acc.accountComment;\n          }\n        });\n        setCommentsMap(initMap);\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load accounts: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Read from React state, sessionStorage, or URL query\n    const qs = new URLSearchParams(location.search);\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let s = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.sbu;\n    if (!m) {\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\n      const qm = qs.get('month');\n      m = sm !== null && sm !== void 0 ? sm : qm;\n    }\n    if (!y) {\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\n      const qy = qs.get('year');\n      y = sy !== null && sy !== void 0 ? sy : qy;\n    }\n    if (!s) {\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\n      const qsS = qs.get('sbu');\n      s = ss !== null && ss !== void 0 ? ss : qsS;\n    }\n\n    // Normalize numeric values\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && s) {\n      const mn = getMonthName(m);\n      if (m !== activeMonth || y !== activeYear || s !== activeSbu || accounts.length === 0) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveMonthName(mn);\n        setActiveSbu(s);\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\n        fetchAccountData(m, y, mn, s);\n      }\n    } else {\n      setError('Missing month, year or SBU. Please navigate here with those parameters.');\n      setLoading(false);\n    }\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\n\n  // Initialize & destroy DataTable with standard sorting and searching\n  useEffect(() => {\n    if (!loading && accounts.length > 0 && tableRef.current) {\n      const $tbl = $(tableRef.current);\n\n      // Destroy existing DataTable instance if it exists\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        tableInstanceRef.current.destroy();\n      }\n\n      // Initialize DataTable with standard options\n      const instance = $tbl.DataTable({\n        paging: true,\n        searching: true,\n        // Enable global search box\n        ordering: true,\n        // Enable default column sorting\n        info: true,\n        autoWidth: false,\n        data: accounts,\n        // Pass the accounts data\n        columns: [{\n          data: 'accountId',\n          orderable: true\n        }, {\n          data: 'accountName',\n          orderable: true\n        }, {\n          data: 'totalProjects',\n          orderable: true\n        }, {\n          data: 'totalRevenue',\n          orderable: true,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'forecastNetRevenue',\n          orderable: true,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'difference',\n          orderable: true,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'accountComment',\n          orderable: false,\n          // Comment column not sortable\n          className: 'text-center',\n          render: function (data, type, row) {\n            return `\n                <button class=\"btn btn-sm btn-outline-secondary comment-btn\" data-account-id=\"${row.accountId}\">\n                  💬\n                </button>\n              `;\n          }\n        }, {\n          data: null,\n          orderable: false,\n          // View button column not sortable\n          className: 'text-center',\n          render: function (data, type, row) {\n            return `\n                <button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" data-account-id=\"${row.accountId}\">\n                  🔍\n                </button>\n              `;\n          }\n        }],\n        order: [[0, 'asc']] // Default sort by Account ID (first column) ascending\n      });\n      tableInstanceRef.current = instance;\n\n      // Re-attach event listeners for dynamically rendered buttons (comments and view)\n      $tbl.off('click', '.comment-btn').on('click', '.comment-btn', function () {\n        const accId = $(this).data('account-id');\n        openCommentModal(accId);\n      });\n      $tbl.off('click', '.view-btn').on('click', '.view-btn', function () {\n        const accId = $(this).data('account-id');\n        navigate(`/accounts/${accId}/project-types`, {\n          state: {\n            accId: accId,\n            month: activeMonth,\n            year: activeYear,\n            monthName: activeMonthName,\n            sbu: activeSbu\n          }\n        });\n      });\n    }\n\n    // Cleanup function to destroy DataTable instance and event listeners\n    return () => {\n      if (tableInstanceRef.current) {\n        tableInstanceRef.current.destroy();\n        tableInstanceRef.current = null;\n      }\n      $(tableRef.current).off('click', '.comment-btn');\n      $(tableRef.current).off('click', '.view-btn');\n    };\n  }, [loading, accounts, activeMonth, activeYear, activeMonthName, activeSbu, navigate]);\n\n  // Open comment modal\n  const openCommentModal = accId => {\n    setCurrentAccountId(accId);\n    setCommentInput(commentsMap[accId] || '');\n    setModalVisible(true);\n  };\n\n  // Save or update comment\n  const saveComment = async () => {\n    try {\n      const dto = {\n        accId: currentAccountId,\n        month: activeMonth,\n        year: activeYear,\n        comment: commentInput\n      };\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dto)\n      });\n      if (!resp.ok) {\n        throw new Error(await resp.text());\n      }\n      // update local maps\n      setCommentsMap(m => ({\n        ...m,\n        [currentAccountId]: commentInput\n      }));\n      setAccounts(list => list.map(acc => acc.accountId === currentAccountId ? {\n        ...acc,\n        accountComment: commentInput\n      } : acc));\n      setModalVisible(false);\n    } catch (e) {\n      window.alert('Error saving comment: ' + e.message); // Using window.alert for simplicity\n    }\n  };\n\n  // Dynamic breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  },\n  // Always starts with Dashboard\n  {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  },\n  // Added this line\n  ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu'\n  }] : []),\n  // Conditionally add SBU Level\n  {\n    name: 'Account Level',\n    page: 'accounts'\n  }].filter(Boolean);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3 mb-md-0 fw-semibold text-dark\",\n          children: [\"\\uD83C\\uDFE2 Account Level Overview \\u2013 \", activeSbu, activeMonthName && activeYear && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2 text-primary\",\n            children: [\"(\", activeMonthName, \" \", activeYear, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Account Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Account Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload'),\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Forecast Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Revenue Difference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      style: {\n        backgroundColor: '#00000066'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"Comment for \", currentAccountId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setModalVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setModalVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: saveComment,\n              disabled: !commentInput.trim(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountLevel, \"7INgXGWkl2RLfxYNsixyYJyQse4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AccountLevel;\nexport default AccountLevel;\nvar _c;\n$RefreshReg$(_c, \"AccountLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","$","Breadcrumbs","commonData","XLSX","saveAs","jsxDEV","_jsxDEV","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","AccountLevel","_s","navigate","location","tableRef","tableInstanceRef","accounts","setAccounts","commentsMap","setCommentsMap","modalVisible","setModalVisible","currentAccountId","setCurrentAccountId","commentInput","setCommentInput","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeMonthName","setActiveMonthName","activeSbu","setActiveSbu","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","value","style","handleDownloadData","dataToExport","current","rows","search","data","toArray","length","console","log","headers","dataForExcel","map","account","accountId","accountName","totalProjects","totalRevenue","forecastNetRevenue","difference","accountComment","wb","utils","book_new","ws","json_to_sheet","header","book_append_sheet","excelBuffer","write","bookType","type","dataBlob","Blob","monthName","filename","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","_location$state3","fetchAccountData","year","monthNameParam","sbu","payload","resp","fetch","method","JSON","stringify","ok","txt","text","Error","statusText","json","list","Array","isArray","filter","Boolean","initMap","forEach","acc","e","message","qs","URLSearchParams","m","state","y","s","sm","sessionStorage","getItem","qm","get","sy","qy","ss","qsS","parseInt","mn","setItem","toString","$tbl","fn","DataTable","isDataTable","destroy","instance","paging","searching","ordering","info","autoWidth","columns","orderable","render","className","row","order","off","on","accId","openCommentModal","saveComment","dto","comment","window","alert","breadcrumbPath","name","page","background","children","maxWidth","backgroundColor","borderRadius","path","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","role","ref","width","onChange","target","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/AccountLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\nimport * as XLSX from 'xlsx'; // Import XLSX for Excel export\r\nimport { saveAs } from 'file-saver'; // Import saveAs for triggering file download\r\n\r\n// Utility to convert month number to month name\r\nconst getMonthName = (monthNumber) => {\r\n  const date = new Date();\r\n  date.setMonth(monthNumber - 1);\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n};\r\n\r\nconst AccountLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n  const tableInstanceRef = useRef(null); // Ref to hold the DataTable instance\r\n\r\n  // UI state\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Active filters\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeMonthName, setActiveMonthName] = useState(null);\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits,\r\n  } = commonData.currencySettings;\r\n\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits,\r\n    });\r\n\r\n  /**\r\n   * Handles the \"Download Data\" button click.\r\n   * Generates an Excel (XLSX) file from the filtered 'accounts' data and triggers a download.\r\n   */\r\n  const handleDownloadData = () => {\r\n    // Get the currently filtered data from DataTables\r\n    const dataToExport = tableInstanceRef.current\r\n      ? tableInstanceRef.current.rows({ search: 'applied' }).data().toArray()\r\n      : accounts; // Fallback to all accounts if DataTable isn't initialized or no filter applied\r\n\r\n    if (dataToExport.length === 0) {\r\n      console.log('No data to download after applying filters.');\r\n      // Optionally, show a user-friendly message here (e.g., a toast notification)\r\n      return;\r\n    }\r\n\r\n    const headers = [\r\n      'Account ID',\r\n      'Account Name',\r\n      'Total Projects',\r\n      'Total Revenue',\r\n      'Forecast Revenue',\r\n      'Revenue Difference',\r\n      'Comment',\r\n    ];\r\n\r\n    const dataForExcel = dataToExport.map((account) => ({\r\n      'Account ID': account.accountId,\r\n      'Account Name': account.accountName,\r\n      'Total Projects': account.totalProjects,\r\n      'Total Revenue': formatCurrency(account.totalRevenue),\r\n      'Forecast Revenue': formatCurrency(account.forecastNetRevenue),\r\n      'Revenue Difference': formatCurrency(account.difference),\r\n      'Comment': account.accountComment || '',\r\n    }));\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    const ws = XLSX.utils.json_to_sheet(dataForExcel, { header: headers });\r\n\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Account Data');\r\n\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const dataBlob = new Blob([excelBuffer], {\r\n      type: 'application/octet-stream',\r\n    });\r\n\r\n    const monthName = getMonthName(activeMonth);\r\n    const filename = `Account_Data_${activeSbu || 'All'}_${monthName || ''}_${activeYear || ''}.xlsx`;\r\n    saveAs(dataBlob, filename);\r\n\r\n    console.log('Downloading filtered account data in Excel format!');\r\n  };\r\n\r\n\r\n  // Load Poppins font\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch accounts when filters change\r\n  useEffect(() => {\r\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const payload = { month, year, monthNameParam, sbu };\r\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload),\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(txt || resp.statusText);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setAccounts(list);\r\n\r\n        // seed comments map\r\n        const initMap = {};\r\n        list.forEach((acc) => {\r\n          if (acc.accountComment) {\r\n            initMap[acc.accountId] = acc.accountComment;\r\n          }\r\n        });\r\n        setCommentsMap(initMap);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load accounts: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Read from React state, sessionStorage, or URL query\r\n    const qs = new URLSearchParams(location.search);\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    let s = location.state?.sbu;\r\n\r\n    if (!m) {\r\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\r\n      const qm = qs.get('month');\r\n      m = sm ?? qm;\r\n    }\r\n    if (!y) {\r\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\r\n      const qy = qs.get('year');\r\n      y = sy ?? qy;\r\n    }\r\n    if (!s) {\r\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\r\n      const qsS = qs.get('sbu');\r\n      s = ss ?? qsS;\r\n    }\r\n\r\n    // Normalize numeric values\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && s) {\r\n      const mn = getMonthName(m);\r\n      if (\r\n        m !== activeMonth ||\r\n        y !== activeYear ||\r\n        s !== activeSbu ||\r\n        accounts.length === 0\r\n      ) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveMonthName(mn);\r\n        setActiveSbu(s);\r\n\r\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\r\n\r\n        fetchAccountData(m, y, mn, s);\r\n      }\r\n    } else {\r\n      setError(\r\n        'Missing month, year or SBU. Please navigate here with those parameters.'\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\r\n\r\n  // Initialize & destroy DataTable with standard sorting and searching\r\n  useEffect(() => {\r\n    if (!loading && accounts.length > 0 && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n\r\n      // Destroy existing DataTable instance if it exists\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        tableInstanceRef.current.destroy();\r\n      }\r\n\r\n      // Initialize DataTable with standard options\r\n      const instance = $tbl.DataTable({\r\n        paging: true,\r\n        searching: true, // Enable global search box\r\n        ordering: true, // Enable default column sorting\r\n        info: true,\r\n        autoWidth: false,\r\n        data: accounts, // Pass the accounts data\r\n        columns: [\r\n          { data: 'accountId', orderable: true },\r\n          { data: 'accountName', orderable: true },\r\n          { data: 'totalProjects', orderable: true },\r\n          { data: 'totalRevenue', orderable: true, render: (data) => formatCurrency(data) },\r\n          { data: 'forecastNetRevenue', orderable: true, render: (data) => formatCurrency(data) },\r\n          { data: 'difference', orderable: true, render: (data) => formatCurrency(data) },\r\n          {\r\n            data: 'accountComment',\r\n            orderable: false, // Comment column not sortable\r\n            className: 'text-center',\r\n            render: function (data, type, row) {\r\n              return `\r\n                <button class=\"btn btn-sm btn-outline-secondary comment-btn\" data-account-id=\"${row.accountId}\">\r\n                  💬\r\n                </button>\r\n              `;\r\n            }\r\n          },\r\n          {\r\n            data: null,\r\n            orderable: false, // View button column not sortable\r\n            className: 'text-center',\r\n            render: function (data, type, row) {\r\n              return `\r\n                <button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" data-account-id=\"${row.accountId}\">\r\n                  🔍\r\n                </button>\r\n              `;\r\n            }\r\n          },\r\n        ],\r\n        order: [[0, 'asc']], // Default sort by Account ID (first column) ascending\r\n      });\r\n\r\n      tableInstanceRef.current = instance;\r\n\r\n      // Re-attach event listeners for dynamically rendered buttons (comments and view)\r\n      $tbl.off('click', '.comment-btn').on('click', '.comment-btn', function() {\r\n        const accId = $(this).data('account-id');\r\n        openCommentModal(accId);\r\n      });\r\n\r\n      $tbl.off('click', '.view-btn').on('click', '.view-btn', function() {\r\n        const accId = $(this).data('account-id');\r\n        navigate(`/accounts/${accId}/project-types`, {\r\n          state: {\r\n            accId: accId,\r\n            month: activeMonth,\r\n            year: activeYear,\r\n            monthName: activeMonthName,\r\n            sbu: activeSbu,\r\n          },\r\n        });\r\n      });\r\n    }\r\n\r\n    // Cleanup function to destroy DataTable instance and event listeners\r\n    return () => {\r\n      if (tableInstanceRef.current) {\r\n        tableInstanceRef.current.destroy();\r\n        tableInstanceRef.current = null;\r\n      }\r\n      $(tableRef.current).off('click', '.comment-btn');\r\n      $(tableRef.current).off('click', '.view-btn');\r\n    };\r\n  }, [loading, accounts, activeMonth, activeYear, activeMonthName, activeSbu, navigate]);\r\n\r\n  // Open comment modal\r\n  const openCommentModal = (accId) => {\r\n    setCurrentAccountId(accId);\r\n    setCommentInput(commentsMap[accId] || '');\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // Save or update comment\r\n  const saveComment = async () => {\r\n    try {\r\n      const dto = {\r\n        accId: currentAccountId,\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        comment: commentInput,\r\n      };\r\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dto),\r\n      });\r\n      if (!resp.ok) {\r\n        throw new Error(await resp.text());\r\n      }\r\n      // update local maps\r\n      setCommentsMap((m) => ({ ...m, [currentAccountId]: commentInput }));\r\n      setAccounts((list) =>\r\n        list.map((acc) =>\r\n          acc.accountId === currentAccountId\r\n            ? { ...acc, accountComment: commentInput }\r\n            : acc\r\n        )\r\n      );\r\n      setModalVisible(false);\r\n    } catch (e) {\r\n      window.alert('Error saving comment: ' + e.message); // Using window.alert for simplicity\r\n    }\r\n  };\r\n\r\n  // Dynamic breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' }, // Always starts with Dashboard\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' }, // Added this line\r\n    ...(activeSbu ? [{ name: `${activeSbu} SBU Level`, page: 'sbu' }] : []), // Conditionally add SBU Level\r\n    { name: 'Account Level', page: 'accounts' },\r\n  ].filter(Boolean);\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\">\r\n          <h2 className=\"mb-3 mb-md-0 fw-semibold text-dark\">\r\n            🏢 Account Level Overview – {activeSbu}\r\n            {activeMonthName && activeYear && (\r\n              <span className=\"ms-2 text-primary\">\r\n                ({activeMonthName} {activeYear})\r\n              </span>\r\n            )}\r\n          </h2>\r\n          {/* Download button, visible only if accounts are loaded */}\r\n          {accounts.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n              title=\"Download Account Data\"\r\n            >\r\n              <i className=\"bi bi-download me-2\"></i> Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\" />\r\n            <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')}\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              ref={tableRef}\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th>Account ID</th>\r\n                  <th>Account Name</th>\r\n                  <th>Total Projects</th>\r\n                  <th>Total Revenue</th>\r\n                  <th>Forecast Revenue</th>\r\n                  <th>Revenue Difference</th>\r\n                  <th className=\"text-center\">Comment</th>\r\n                  <th className=\"text-center\">View</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* DataTables will handle rendering tbody. No need for accounts.map here. */}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {modalVisible && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: '#00000066' }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Comment for {currentAccountId}</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModalVisible(false)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  value={commentInput}\r\n                  onChange={(e) => setCommentInput(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" onClick={() => setModalVisible(false)}>\r\n                  Cancel\r\n                </button>\r\n                <button className=\"btn btn-primary\" onClick={saveComment} disabled={!commentInput.trim()}>\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}