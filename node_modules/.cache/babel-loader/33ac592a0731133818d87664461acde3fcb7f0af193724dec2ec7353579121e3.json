{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n  const tableRef = useRef(null);\n\n  // Raw and filtered data\n  const [projects, setProjects] = useState([]);\n  const [filteredProjects, setFilteredProjects] = useState([]);\n\n  // Initialize filters for each data column to \"no filter\"\n  const initialFilters = {\n    projectId: null,\n    projectName: null,\n    totalAssociatesCount: null,\n    totalCompanyHours: null,\n    totalClientHours: null,\n    varianceHours: null,\n    revenue: null\n  };\n  const [columnFilters, setColumnFilters] = useState(initialFilters);\n\n  // UI state\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Context state\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n  const [activeSbu, setActiveSbu] = useState(null);\n  const [activeProjectType, setActiveProjectType] = useState(null);\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Formatting helpers\n  const formatCurrency = (val = 0) => val.toLocaleString(commonData.currencySettings.locale, {\n    style: 'currency',\n    currency: commonData.currencySettings.currency,\n    minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\n    maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\n  });\n  const getMonthName = num => {\n    const d = new Date();\n    d.setMonth(num - 1);\n    return d.toLocaleString('en-US', {\n      month: 'long'\n    });\n  };\n\n  // 1️⃣ Fetch project data when context changes\n  useEffect(() => {\n    var _location$state$month, _location$state, _location$state$year, _location$state2, _location$state$proje, _location$state3, _location$state$sbu, _location$state4, _location$state$accou, _location$state5;\n    const fetchProjectData = async (month, year, accId, projectType) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            accId,\n            projectType\n          })\n        });\n        if (!resp.ok) throw new Error(await resp.text());\n        const raw = await resp.json();\n        const list = Array.isArray(raw) ? raw : [raw].filter(Boolean);\n        setProjects(list);\n        if (list.length && list[0].accountName) {\n          setActiveAccountName(list[0].accountName);\n        }\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load project data: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // derive context from URL / state / sessionStorage\n    let m = (_location$state$month = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month) !== null && _location$state$month !== void 0 ? _location$state$month : sessionStorage.getItem('lastFetchedProjectMonth');\n    let y = (_location$state$year = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year) !== null && _location$state$year !== void 0 ? _location$state$year : sessionStorage.getItem('lastFetchedProjectYear');\n    let accType = (_location$state$proje = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.projectType) !== null && _location$state$proje !== void 0 ? _location$state$proje : sessionStorage.getItem('lastFetchedProjectType');\n    let sbu = (_location$state$sbu = (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.sbu) !== null && _location$state$sbu !== void 0 ? _location$state$sbu : sessionStorage.getItem('lastFetchedProjectSbu');\n    let acctName = (_location$state$accou = (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.accountName) !== null && _location$state$accou !== void 0 ? _location$state$accou : sessionStorage.getItem('lastFetchedProjectAccountName');\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && urlAccountId) {\n      setActiveMonth(m);\n      setActiveYear(y);\n      setActiveAccountId(urlAccountId);\n      if (acctName) setActiveAccountName(acctName);\n      setActiveProjectType(accType);\n      setActiveSbu(sbu);\n      sessionStorage.setItem('lastFetchedProjectMonth', m);\n      sessionStorage.setItem('lastFetchedProjectYear', y);\n      sessionStorage.setItem('lastFetchedProjectAccountName', acctName || '');\n      sessionStorage.setItem('lastFetchedProjectType', accType || '');\n      sessionStorage.setItem('lastFetchedProjectSbu', sbu || '');\n      fetchProjectData(m, y, urlAccountId, accType);\n    } else {\n      setError('Missing month, year, or account ID. Please navigate here with all parameters.');\n      setLoading(false);\n    }\n  }, [location.state, urlAccountId]);\n\n  // 2️⃣ Helper: get unique dropdown options for each column\n  const getUniqueOptions = key => {\n    if (!projects.length) return ['All'];\n    let vals = projects.map(p => key === 'revenue' ? formatCurrency(p[key]) : p[key]);\n    vals = vals.map(v => String(v));\n    return ['All', ...[...new Set(vals)].sort()];\n  };\n\n  // 3️⃣ applyFilters: filter raw projects using every active column filter\n  const applyFilters = (data, filters) => data.filter(row => Object.entries(filters).every(([col, val]) => {\n    if (!val || val === 'All') return true;\n    let cell = row[col];\n    if (col === 'revenue') cell = formatCurrency(cell);\n    return String(cell) === String(val);\n  }));\n\n  // 4️⃣ Regenerate filteredProjects when raw data or filters change\n  useEffect(() => {\n    setFilteredProjects(applyFilters(projects, columnFilters));\n  }, [projects, columnFilters]);\n\n  // 5️⃣ Initialize / destroy DataTable on filteredProjects change\n  useEffect(() => {\n    const $tbl = $(tableRef.current);\n    if (!loading) {\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n      }\n      $tbl.DataTable({\n        paging: true,\n        searching: true,\n        ordering: true,\n        info: true,\n        autoWidth: false\n      });\n    }\n    return () => {\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n      }\n    };\n  }, [loading, filteredProjects]);\n\n  // Handler to update one column’s filter\n  const handleFilterChange = (col, val) => {\n    setColumnFilters(prev => ({\n      ...prev,\n      [col]: val === 'All' ? null : val\n    }));\n  };\n\n  // Download CSV of the **filtered** view\n  const handleDownloadData = () => {\n    if (!filteredProjects.length) return;\n    const headers = ['Project ID', 'Project Name', 'Total Associates', 'Company Hours', 'Client Hours', 'Variance Hours', 'Revenue'];\n    const rows = filteredProjects.map(p => [p.projectId, p.projectName, p.totalAssociatesCount, p.totalCompanyHours, p.totalClientHours, p.varianceHours, formatCurrency(p.revenue)]);\n    const csvContent = [headers.join(','), ...rows.map(r => r.map(c => `\"${c}\"`).join(','))].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    const fname = `Projects_Account_${activeAccountId}_${getMonthName(activeMonth)}_${activeYear}.csv`;\n    a.href = url;\n    a.download = fname;\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  // Build breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }] : []), {\n    name: 'Account Level',\n    page: 'accounts',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }, ...(activeProjectType ? [{\n    name: `${activeProjectType} Project Type`,\n    page: `accounts/${activeAccountId}/project-types`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu,\n      accId: activeAccountId\n    }\n  }] : []), {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }].filter(Boolean);\n\n  // 6️⃣ Render states\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate('/accounts', {\n          state: {\n            month: activeMonth,\n            year: activeYear,\n            sbu: activeSbu\n          }\n        }),\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 7️⃣ Main render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif'\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1200px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0 fw-semibold text-dark\",\n          children: [\"\\uD83D\\uDCC1 Project Level Overview\", ' ', activeAccountName && `for ${activeAccountName}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), filteredProjects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          children: \"Download Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-borderless mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #3b82f6, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Project ID\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  value: columnFilters.projectId || 'All',\n                  onChange: e => handleFilterChange('projectId', e.target.value),\n                  children: getUniqueOptions('projectId').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, opt, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Project Name\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  value: columnFilters.projectName || 'All',\n                  onChange: e => handleFilterChange('projectName', e.target.value),\n                  children: getUniqueOptions('projectName').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, opt, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Total Associates\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  value: columnFilters.totalAssociatesCount || 'All',\n                  onChange: e => handleFilterChange('totalAssociatesCount', e.target.value),\n                  children: getUniqueOptions('totalAssociatesCount').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, opt, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 364,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Company Hours\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  value: columnFilters.totalCompanyHours || 'All',\n                  onChange: e => handleFilterChange('totalCompanyHours', e.target.value),\n                  children: getUniqueOptions('totalCompanyHours').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, opt, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Client Hours\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  value: columnFilters.totalClientHours || 'All',\n                  onChange: e => handleFilterChange('totalClientHours', e.target.value),\n                  children: getUniqueOptions('totalClientHours').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, opt, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Variance Hours\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  value: columnFilters.varianceHours || 'All',\n                  onChange: e => handleFilterChange('varianceHours', e.target.value),\n                  children: getUniqueOptions('varianceHours').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, opt, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Revenue\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  value: columnFilters.revenue || 'All',\n                  onChange: e => handleFilterChange('revenue', e.target.value),\n                  children: getUniqueOptions('revenue').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, opt, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredProjects.map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.projectId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.totalAssociatesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.totalCompanyHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.totalClientHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.varianceHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(p.revenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/projects/${p.projectId}/associates`, {\n                    state: {\n                      projectId: p.projectId,\n                      projectName: p.projectName,\n                      accountId: p.accountId,\n                      accountName: p.accountName,\n                      month: activeMonth,\n                      year: activeYear,\n                      sbu: activeSbu,\n                      projectType: activeProjectType\n                    }\n                  }),\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)]\n            }, p.projectId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"yMySsUR98ep0z6zKTJELj6gTrhI=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ProjectLevel;\nexport default ProjectLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useParams","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","ProjectLevel","_s","navigate","accountId","urlAccountId","location","tableRef","projects","setProjects","filteredProjects","setFilteredProjects","initialFilters","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","columnFilters","setColumnFilters","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","activeSbu","setActiveSbu","activeProjectType","setActiveProjectType","BACKEND_URL","formatCurrency","val","toLocaleString","currencySettings","locale","style","currency","minimumFractionDigits","maximumFractionDigits","getMonthName","num","d","Date","setMonth","month","_location$state$month","_location$state","_location$state$year","_location$state2","_location$state$proje","_location$state3","_location$state$sbu","_location$state4","_location$state$accou","_location$state5","fetchProjectData","year","accId","projectType","resp","fetch","method","headers","body","JSON","stringify","ok","Error","text","raw","json","list","Array","isArray","filter","Boolean","length","accountName","e","console","message","m","state","sessionStorage","getItem","y","accType","sbu","acctName","parseInt","setItem","getUniqueOptions","key","vals","map","p","v","String","Set","sort","applyFilters","data","filters","row","Object","entries","every","col","cell","$tbl","current","fn","DataTable","isDataTable","destroy","paging","searching","ordering","info","autoWidth","handleFilterChange","prev","handleDownloadData","rows","csvContent","join","r","c","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","fname","href","download","appendChild","click","remove","revokeObjectURL","breadcrumbPath","name","page","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","fontFamily","maxWidth","backgroundColor","borderRadius","path","ref","width","value","onChange","target","opt","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/ProjectLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\nconst ProjectLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { accountId: urlAccountId } = useParams();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  // Raw and filtered data\r\n  const [projects, setProjects] = useState([]);\r\n  const [filteredProjects, setFilteredProjects] = useState([]);\r\n\r\n  // Initialize filters for each data column to \"no filter\"\r\n  const initialFilters = {\r\n    projectId: null,\r\n    projectName: null,\r\n    totalAssociatesCount: null,\r\n    totalCompanyHours: null,\r\n    totalClientHours: null,\r\n    varianceHours: null,\r\n    revenue: null\r\n  };\r\n  const [columnFilters, setColumnFilters] = useState(initialFilters);\r\n\r\n  // UI state\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Context state\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeAccountId, setActiveAccountId] = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n  const [activeProjectType, setActiveProjectType] = useState(null);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Formatting helpers\r\n  const formatCurrency = (val = 0) =>\r\n    val.toLocaleString(commonData.currencySettings.locale, {\r\n      style: 'currency',\r\n      currency: commonData.currencySettings.currency,\r\n      minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\r\n      maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\r\n    });\r\n\r\n  const getMonthName = (num) => {\r\n    const d = new Date();\r\n    d.setMonth(num - 1);\r\n    return d.toLocaleString('en-US', { month: 'long' });\r\n  };\r\n\r\n  // 1️⃣ Fetch project data when context changes\r\n  useEffect(() => {\r\n    const fetchProjectData = async (month, year, accId, projectType) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, accId, projectType })\r\n        });\r\n        if (!resp.ok) throw new Error(await resp.text());\r\n\r\n        const raw = await resp.json();\r\n        const list = Array.isArray(raw) ? raw : [raw].filter(Boolean);\r\n        setProjects(list);\r\n\r\n        if (list.length && list[0].accountName) {\r\n          setActiveAccountName(list[0].accountName);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load project data: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // derive context from URL / state / sessionStorage\r\n    let m = location.state?.month ?? sessionStorage.getItem('lastFetchedProjectMonth');\r\n    let y = location.state?.year ?? sessionStorage.getItem('lastFetchedProjectYear');\r\n    let accType = location.state?.projectType ?? sessionStorage.getItem('lastFetchedProjectType');\r\n    let sbu = location.state?.sbu ?? sessionStorage.getItem('lastFetchedProjectSbu');\r\n    let acctName = location.state?.accountName ?? sessionStorage.getItem('lastFetchedProjectAccountName');\r\n\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && urlAccountId) {\r\n      setActiveMonth(m);\r\n      setActiveYear(y);\r\n      setActiveAccountId(urlAccountId);\r\n      if (acctName) setActiveAccountName(acctName);\r\n      setActiveProjectType(accType);\r\n      setActiveSbu(sbu);\r\n\r\n      sessionStorage.setItem('lastFetchedProjectMonth', m);\r\n      sessionStorage.setItem('lastFetchedProjectYear', y);\r\n      sessionStorage.setItem('lastFetchedProjectAccountName', acctName || '');\r\n      sessionStorage.setItem('lastFetchedProjectType', accType || '');\r\n      sessionStorage.setItem('lastFetchedProjectSbu', sbu || '');\r\n\r\n      fetchProjectData(m, y, urlAccountId, accType);\r\n    } else {\r\n      setError('Missing month, year, or account ID. Please navigate here with all parameters.');\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, urlAccountId]);\r\n\r\n  // 2️⃣ Helper: get unique dropdown options for each column\r\n  const getUniqueOptions = (key) => {\r\n    if (!projects.length) return ['All'];\r\n    let vals = projects.map((p) =>\r\n      key === 'revenue' ? formatCurrency(p[key]) : p[key]\r\n    );\r\n    vals = vals.map((v) => String(v));\r\n    return ['All', ...[...new Set(vals)].sort()];\r\n  };\r\n\r\n  // 3️⃣ applyFilters: filter raw projects using every active column filter\r\n  const applyFilters = (data, filters) =>\r\n    data.filter((row) =>\r\n      Object.entries(filters).every(([col, val]) => {\r\n        if (!val || val === 'All') return true;\r\n\r\n        let cell = row[col];\r\n        if (col === 'revenue') cell = formatCurrency(cell);\r\n        return String(cell) === String(val);\r\n      })\r\n    );\r\n\r\n  // 4️⃣ Regenerate filteredProjects when raw data or filters change\r\n  useEffect(() => {\r\n    setFilteredProjects(applyFilters(projects, columnFilters));\r\n  }, [projects, columnFilters]);\r\n\r\n  // 5️⃣ Initialize / destroy DataTable on filteredProjects change\r\n  useEffect(() => {\r\n    const $tbl = $(tableRef.current);\r\n    if (!loading) {\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n      }\r\n      $tbl.DataTable({\r\n        paging: true,\r\n        searching: true,\r\n        ordering: true,\r\n        info: true,\r\n        autoWidth: false\r\n      });\r\n    }\r\n    return () => {\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n      }\r\n    };\r\n  }, [loading, filteredProjects]);\r\n\r\n  // Handler to update one column’s filter\r\n  const handleFilterChange = (col, val) => {\r\n    setColumnFilters((prev) => ({\r\n      ...prev,\r\n      [col]: val === 'All' ? null : val\r\n    }));\r\n  };\r\n\r\n  // Download CSV of the **filtered** view\r\n  const handleDownloadData = () => {\r\n    if (!filteredProjects.length) return;\r\n\r\n    const headers = [\r\n      'Project ID',\r\n      'Project Name',\r\n      'Total Associates',\r\n      'Company Hours',\r\n      'Client Hours',\r\n      'Variance Hours',\r\n      'Revenue'\r\n    ];\r\n    const rows = filteredProjects.map((p) => [\r\n      p.projectId,\r\n      p.projectName,\r\n      p.totalAssociatesCount,\r\n      p.totalCompanyHours,\r\n      p.totalClientHours,\r\n      p.varianceHours,\r\n      formatCurrency(p.revenue)\r\n    ]);\r\n\r\n    const csvContent =\r\n      [headers.join(','), ...rows.map((r) => r.map((c) => `\"${c}\"`).join(','))].join('\\n');\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const fname = `Projects_Account_${activeAccountId}_${getMonthName(activeMonth)}_${activeYear}.csv`;\r\n    a.href = url;\r\n    a.download = fname;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Build breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    ...(activeSbu\r\n      ? [\r\n          {\r\n            name: `${activeSbu} SBU Level`,\r\n            page: 'sbu',\r\n            state: { month: activeMonth, year: activeYear, sbu: activeSbu }\r\n          }\r\n        ]\r\n      : []),\r\n    {\r\n      name: 'Account Level',\r\n      page: 'accounts',\r\n      state: { month: activeMonth, year: activeYear, sbu: activeSbu }\r\n    },\r\n    ...(activeProjectType\r\n      ? [\r\n          {\r\n            name: `${activeProjectType} Project Type`,\r\n            page: `accounts/${activeAccountId}/project-types`,\r\n            state: {\r\n              month: activeMonth,\r\n              year: activeYear,\r\n              sbu: activeSbu,\r\n              accId: activeAccountId\r\n            }\r\n          }\r\n        ]\r\n      : []),\r\n    {\r\n      name: `Projects (${activeAccountName})`,\r\n      page: `accounts/${activeAccountId}/projects`\r\n    }\r\n  ].filter(Boolean);\r\n\r\n  // 6️⃣ Render states\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() =>\r\n            navigate('/accounts', {\r\n              state: { month: activeMonth, year: activeYear, sbu: activeSbu }\r\n            })\r\n          }\r\n        >\r\n          Go to Account Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 7️⃣ Main render\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif'\"\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1200px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem'\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h2 className=\"mb-0 fw-semibold text-dark\">\r\n            📁 Project Level Overview{' '}\r\n            {activeAccountName && `for ${activeAccountName}`}\r\n          </h2>\r\n          {filteredProjects.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n            >\r\n              Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"table-responsive rounded\">\r\n          <table\r\n            ref={tableRef}\r\n            className=\"display table table-hover align-middle table-borderless mb-0\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            <thead\r\n              className=\"text-white\"\r\n              style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\r\n            >\r\n              <tr>\r\n                <th>\r\n                  Project ID\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    value={columnFilters.projectId || 'All'}\r\n                    onChange={(e) => handleFilterChange('projectId', e.target.value)}\r\n                  >\r\n                    {getUniqueOptions('projectId').map((opt) => (\r\n                      <option key={opt} value={opt}>\r\n                        {opt}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Project Name\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    value={columnFilters.projectName || 'All'}\r\n                    onChange={(e) => handleFilterChange('projectName', e.target.value)}\r\n                  >\r\n                    {getUniqueOptions('projectName').map((opt) => (\r\n                      <option key={opt} value={opt}>\r\n                        {opt}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Total Associates\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    value={columnFilters.totalAssociatesCount || 'All'}\r\n                    onChange={(e) =>\r\n                      handleFilterChange('totalAssociatesCount', e.target.value)\r\n                    }\r\n                  >\r\n                    {getUniqueOptions('totalAssociatesCount').map((opt) => (\r\n                      <option key={opt} value={opt}>\r\n                        {opt}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Company Hours\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    value={columnFilters.totalCompanyHours || 'All'}\r\n                    onChange={(e) =>\r\n                      handleFilterChange('totalCompanyHours', e.target.value)\r\n                    }\r\n                  >\r\n                    {getUniqueOptions('totalCompanyHours').map((opt) => (\r\n                      <option key={opt} value={opt}>\r\n                        {opt}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Client Hours\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    value={columnFilters.totalClientHours || 'All'}\r\n                    onChange={(e) =>\r\n                      handleFilterChange('totalClientHours', e.target.value)\r\n                    }\r\n                  >\r\n                    {getUniqueOptions('totalClientHours').map((opt) => (\r\n                      <option key={opt} value={opt}>\r\n                        {opt}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Variance Hours\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    value={columnFilters.varianceHours || 'All'}\r\n                    onChange={(e) =>\r\n                      handleFilterChange('varianceHours', e.target.value)\r\n                    }\r\n                  >\r\n                    {getUniqueOptions('varianceHours').map((opt) => (\r\n                      <option key={opt} value={opt}>\r\n                        {opt}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Revenue\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    value={columnFilters.revenue || 'All'}\r\n                    onChange={(e) => handleFilterChange('revenue', e.target.value)}\r\n                  >\r\n                    {getUniqueOptions('revenue').map((opt) => (\r\n                      <option key={opt} value={opt}>\r\n                        {opt}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th className=\"text-center\">View</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredProjects.map((p) => (\r\n                <tr key={p.projectId}>\r\n                  <td>{p.projectId}</td>\r\n                  <td>{p.projectName}</td>\r\n                  <td>{p.totalAssociatesCount}</td>\r\n                  <td>{p.totalCompanyHours}</td>\r\n                  <td>{p.totalClientHours}</td>\r\n                  <td>{p.varianceHours}</td>\r\n                  <td>{formatCurrency(p.revenue)}</td>\r\n                  <td className=\"text-center\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                      onClick={() =>\r\n                        navigate(`/projects/${p.projectId}/associates`, {\r\n                          state: {\r\n                            projectId: p.projectId,\r\n                            projectName: p.projectName,\r\n                            accountId: p.accountId,\r\n                            accountName: p.accountName,\r\n                            month: activeMonth,\r\n                            year: activeYear,\r\n                            sbu: activeSbu,\r\n                            projectType: activeProjectType\r\n                          }\r\n                        })\r\n                      }\r\n                    >\r\n                      🔍\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}