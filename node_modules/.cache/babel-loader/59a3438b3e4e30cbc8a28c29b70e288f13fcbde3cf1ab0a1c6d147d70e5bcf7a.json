{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// good non integrated\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import DashboardCard from './DashboardCard';\n// import DashboardMetric from './DashboardMetric';\n// import dashboardData from '../../data/dashboard.json';\n// import DatePicker from 'react-datepicker'; // Import DatePicker\n// // REMEMBER: The CSS import for react-datepicker should be in App.js or index.js\n// // import 'react-datepicker/dist/react-datepicker.css'; \n\n// const Dashboard = () => {\n//   const navigate = useNavigate();\n//   const [message, setMessage] = useState('');\n//   const [showMessageBox, setShowMessageBox] = useState(false);\n//   const [showRevenueOptions, setShowRevenueOptions] = useState(false);\n//   // Removed showGetDataMonthYearPopup and selectedDateGetData states\n//   const [showViewPastDataPopup, setShowViewPastDataPopup] = useState(false); // State for View Past Data popup\n\n//   const [selectedDateViewPast, setSelectedDateViewPast] = useState(null); // Date for View Past Data popup\n\n//   const { header, metrics, cards, revenuePopup } = dashboardData;\n\n//   useEffect(() => {\n//     const link = document.createElement('link');\n//     link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n//     link.rel = 'stylesheet';\n//     document.head.appendChild(link);\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\n//   }, []);\n\n//   const showMessage = (msg) => {\n//     setMessage(msg);\n//     setShowMessageBox(true);\n//   };\n\n//   const hideMessage = () => setShowMessageBox(false);\n//   const toggleRevenueOptions = () => setShowRevenueOptions(prev => !prev);\n\n//   // Corrected navigation for View Past Data to go to Account Level\n//   const handleViewPastData = () => {\n//     if (!selectedDateViewPast) {\n//       alert('Please select both a month and a year to View Past Data.');\n//       return;\n//     }\n//     setShowViewPastDataPopup(false);\n//     // CORRECTED: Navigate to the Account Level\n//     navigate('/accounts'); \n//   };\n\n//   // Determine if any popup is open to show the backdrop\n//   const isPopupOpen = showMessageBox || showRevenueOptions || showViewPastDataPopup;\n\n//   return (\n//     <div\n//       className=\"position-relative min-vh-100 d-flex justify-content-center align-items-center px-3\"\n//       style={{\n//         background: 'radial-gradient(circle at center, #f8f9fa 60%, #e0e0e0 100%)',\n//         overflow: 'hidden'\n//       }}\n//     >\n//       {isPopupOpen && (\n//         <div\n//           className=\"position-fixed top-0 start-0 w-100 h-100 bg-dark bg-opacity-25\"\n//           style={{ backdropFilter: 'blur(3px)', zIndex: 1 }}\n//         />\n//       )}\n\n//       <div\n//         className=\"card rounded-4 shadow-lg w-100\"\n//         style={{ maxWidth: '1100px', zIndex: 2, backgroundColor: 'rgba(255,255,255,0.95)' }}\n//       >\n//         <div className=\"card-body\">\n//           <h2 className=\"text-center fw-bold text-dark mb-2\">{header.title}</h2>\n//           <p className=\"text-center text-muted mb-4\">{header.subtitle}</p>\n\n//           <div className=\"card bg-light border-0 shadow-sm p-4 mb-4 rounded-3\">\n//             <div className=\"row g-4\">\n//               {cards.map((card, index) => (\n//                 <DashboardCard\n//                   key={index}\n//                   title={card.title}\n//                   description={card.description}\n//                   icon={card.icon}\n//                   onClick={\n//                     card.title === 'Revenue Forecast'\n//                       ? toggleRevenueOptions // This opens the first popup\n//                       : () => showMessage(`Navigating to ${card.title}`)\n//                   }\n//                 />\n//               ))}\n//             </div>\n//           </div>\n\n//           <div className=\"card bg-light border-0 shadow-sm p-4 rounded-3\">\n//             <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4\">\n//               {metrics.map((metric, index) => (\n//                 <DashboardMetric key={index} value={metric.value} label={metric.label} />\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//       {showMessageBox && (\n//         <div\n//           className=\"position-fixed top-50 start-50 translate-middle bg-dark text-white p-4 rounded shadow text-center\"\n//           style={{ zIndex: 999 }}\n//         >\n//           <p className=\"mb-3\">{message}</p>\n//           <button className=\"btn btn-light btn-sm\" onClick={hideMessage}>Close</button>\n//         </div>\n//       )}\n\n//       {/* First popup: Revenue Forecast Options */}\n//       {showRevenueOptions && (\n//         <div\n//           className=\"position-fixed top-50 start-50 translate-middle bg-white p-4 rounded shadow text-center\"\n//           style={{ zIndex: 999 }}\n//         >\n//           <h5 className=\"fw-bold mb-3 text-dark\">{revenuePopup.title}</h5>\n//           {revenuePopup.buttons.map((btn, i) => (\n//             <button\n//               key={i}\n//               className={`btn btn-outline-${btn.variant} w-100 mb-2`}\n//               onClick={() => {\n//                 if (btn.action === 'upload') {\n//                   toggleRevenueOptions(); // Close this popup\n//                   navigate('/upload'); // Navigate to upload page\n//                 } else if (btn.action === 'viewPastData') { // Action for View Past Data\n//                   toggleRevenueOptions(); // Close this popup\n//                   setSelectedDateViewPast(null); // Reset selected date for this popup\n//                   setShowViewPastDataPopup(true); // Open the \"View Past Data\" Month/Year selection popup\n//                 } else { // cancel\n//                   toggleRevenueOptions(); // Close this popup\n//                 }\n//               }}\n//             >\n//               {btn.text}\n//             </button>\n//           ))}\n//         </div>\n//       )}\n\n//       {/* New popup: Month/Year Selection for \"View Past Data\" */}\n//       {showViewPastDataPopup && (\n//         <div\n//           className=\"position-fixed top-50 start-50 translate-middle bg-white p-4 rounded shadow\"\n//           style={{ zIndex: 999, minWidth: '360px' }}\n//         >\n//           <h5 className=\"fw-bold mb-3 text-center\">Select Month and Year to View Past Data</h5>\n//           <div className=\"mb-3 text-center\">\n//             <DatePicker\n//               selected={selectedDateViewPast}\n//               onChange={(date) => setSelectedDateViewPast(date)}\n//               dateFormat=\"MM/yyyy\"\n//               showMonthYearPicker\n//               className=\"form-control text-center\" // Apply Bootstrap styling\n//               placeholderText=\"Select Month & Year\"\n//             />\n//           </div>\n//           <button className=\"btn btn-primary w-100 mb-2\" onClick={handleViewPastData}>\n//             Go\n//           </button>\n//           <button className=\"btn btn-outline-secondary w-100\" onClick={() => setShowViewPastDataPopup(false)}>\n//             Cancel\n//           </button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport DashboardCard from './DashboardCard';\nimport DashboardMetric from './DashboardMetric';\nimport DatePicker from 'react-datepicker';\nimport dashboardData from '../../data/dashboard.json';\n// Remember to import 'react-datepicker/dist/react-datepicker.css' in App.js or index.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // UI state\n  const [message, setMessage] = useState('');\n  const [showMessageBox, setShowMessageBox] = useState(false);\n  const [showRevenueOptions, setShowRevenueOptions] = useState(false);\n  const [showViewPastDataPopup, setShowViewPastDataPopup] = useState(false);\n  const [selectedDateViewPast, setSelectedDateViewPast] = useState(null);\n\n  // Destructure JSON data\n  const {\n    header,\n    metrics,\n    cards,\n    accountOptions,\n    revenuePopup,\n    viewPastDataPopup,\n    messageBox\n  } = dashboardData;\n\n  // Load Poppins font once\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Helpers\n  const showMessage = msg => {\n    setMessage(msg);\n    setShowMessageBox(true);\n  };\n  const hideMessage = () => setShowMessageBox(false);\n  const toggleRevenueOptions = () => setShowRevenueOptions(v => !v);\n\n  // Card click logic\n  const handleCardClick = card => {\n    switch (card.title) {\n      case 'Revenue Forecast':\n        return toggleRevenueOptions();\n      case 'Financial Management':\n        const names = Object.keys(accountOptions);\n        return showMessage(`Available Accounts: ${names.join(', ')}`);\n      default:\n        return showMessage(`Navigating to ${card.title}`);\n    }\n  };\n\n  // View Past Data handler\n  const handleViewPastData = () => {\n    if (!selectedDateViewPast) {\n      alert(viewPastDataPopup.alertMessage);\n      return;\n    }\n    const month = selectedDateViewPast.getMonth() + 1;\n    const year = selectedDateViewPast.getFullYear();\n    setShowViewPastDataPopup(false);\n    navigate('/accounts', {\n      state: {\n        month,\n        year\n      }\n    });\n  };\n\n  // Dark backdrop when any popup is open\n  const isPopupOpen = showMessageBox || showRevenueOptions || showViewPastDataPopup;\n\n  // DatePicker maxDate = last day of previous month\n  const today = new Date();\n  const lastDayOfPreviousMonth = new Date(today.getFullYear(), today.getMonth(), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-relative min-vh-100 d-flex justify-content-center align-items-center px-3\",\n    style: {\n      background: 'radial-gradient(circle at center, #f8f9fa 60%, #e0e0e0 100%)',\n      overflow: 'hidden'\n    },\n    children: [isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-fixed top-0 start-0 w-100 h-100 bg-dark bg-opacity-25\",\n      style: {\n        backdropFilter: 'blur(3px)',\n        zIndex: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card rounded-4 shadow-lg w-100\",\n      style: {\n        maxWidth: '1100px',\n        zIndex: 2,\n        backgroundColor: 'rgba(255,255,255,0.95)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center fw-bold text-dark mb-2\",\n          children: header.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-muted mb-4\",\n          children: header.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-light border-0 shadow-sm p-4 mb-4 rounded-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row g-4\",\n            children: cards.map((card, i) => /*#__PURE__*/_jsxDEV(DashboardCard, {\n              title: card.title,\n              description: card.description,\n              icon: card.icon,\n              onClick: () => handleCardClick(card)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card bg-light border-0 shadow-sm p-4 rounded-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4\",\n            children: metrics.map((m, i) => /*#__PURE__*/_jsxDEV(DashboardMetric, {\n              value: m.value,\n              label: m.label\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), showMessageBox && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-fixed top-50 start-50 translate-middle bg-dark text-white p-4 rounded shadow text-center\",\n      style: {\n        zIndex: 999\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-3\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-light btn-sm\",\n        onClick: hideMessage,\n        children: messageBox.closeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this), showRevenueOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-fixed top-50 start-50 translate-middle bg-white p-4 rounded shadow text-center\",\n      style: {\n        zIndex: 999\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"fw-bold mb-3 text-dark\",\n        children: revenuePopup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), revenuePopup.buttons.map((btn, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-outline-${btn.variant} w-100 mb-2`,\n        onClick: () => {\n          if (btn.action === 'upload') {\n            toggleRevenueOptions();\n            navigate('/upload');\n          } else if (btn.action === 'viewPastData') {\n            toggleRevenueOptions();\n            setSelectedDateViewPast(null);\n            setShowViewPastDataPopup(true);\n          } else {\n            toggleRevenueOptions();\n          }\n        },\n        children: btn.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), showViewPastDataPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-fixed top-50 start-50 translate-middle bg-white p-4 rounded shadow\",\n      style: {\n        zIndex: 999,\n        minWidth: '360px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"fw-bold mb-3 text-center\",\n        children: viewPastDataPopup.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 text-center\",\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: selectedDateViewPast,\n          onChange: d => setSelectedDateViewPast(d),\n          dateFormat: viewPastDataPopup.dateFormat,\n          showMonthYearPicker: true,\n          maxDate: lastDayOfPreviousMonth,\n          className: \"form-control text-center\",\n          placeholderText: viewPastDataPopup.placeholderText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary w-100 mb-2\",\n        onClick: handleViewPastData,\n        disabled: !selectedDateViewPast,\n        children: viewPastDataPopup.goButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-outline-secondary w-100\",\n        onClick: () => setShowViewPastDataPopup(false),\n        children: viewPastDataPopup.cancelButtonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"eQjgUM0713vp7mhncIxuwilPKzM=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","DashboardCard","DashboardMetric","DatePicker","dashboardData","jsxDEV","_jsxDEV","Dashboard","_s","navigate","message","setMessage","showMessageBox","setShowMessageBox","showRevenueOptions","setShowRevenueOptions","showViewPastDataPopup","setShowViewPastDataPopup","selectedDateViewPast","setSelectedDateViewPast","header","metrics","cards","accountOptions","revenuePopup","viewPastDataPopup","messageBox","link","document","createElement","href","rel","head","appendChild","body","style","fontFamily","showMessage","msg","hideMessage","toggleRevenueOptions","v","handleCardClick","card","title","names","Object","keys","join","handleViewPastData","alert","alertMessage","month","getMonth","year","getFullYear","state","isPopupOpen","today","Date","lastDayOfPreviousMonth","className","background","overflow","children","backdropFilter","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","backgroundColor","subtitle","map","i","description","icon","onClick","m","value","label","closeText","buttons","btn","variant","action","text","minWidth","selected","onChange","d","dateFormat","showMonthYearPicker","maxDate","placeholderText","disabled","goButtonText","cancelButtonText","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Dashboard/Dashboard.js"],"sourcesContent":["// good non integrated\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import DashboardCard from './DashboardCard';\r\n// import DashboardMetric from './DashboardMetric';\r\n// import dashboardData from '../../data/dashboard.json';\r\n// import DatePicker from 'react-datepicker'; // Import DatePicker\r\n// // REMEMBER: The CSS import for react-datepicker should be in App.js or index.js\r\n// // import 'react-datepicker/dist/react-datepicker.css'; \r\n\r\n// const Dashboard = () => {\r\n//   const navigate = useNavigate();\r\n//   const [message, setMessage] = useState('');\r\n//   const [showMessageBox, setShowMessageBox] = useState(false);\r\n//   const [showRevenueOptions, setShowRevenueOptions] = useState(false);\r\n//   // Removed showGetDataMonthYearPopup and selectedDateGetData states\r\n//   const [showViewPastDataPopup, setShowViewPastDataPopup] = useState(false); // State for View Past Data popup\r\n\r\n//   const [selectedDateViewPast, setSelectedDateViewPast] = useState(null); // Date for View Past Data popup\r\n\r\n//   const { header, metrics, cards, revenuePopup } = dashboardData;\r\n\r\n//   useEffect(() => {\r\n//     const link = document.createElement('link');\r\n//     link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n//     link.rel = 'stylesheet';\r\n//     document.head.appendChild(link);\r\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n//   }, []);\r\n\r\n//   const showMessage = (msg) => {\r\n//     setMessage(msg);\r\n//     setShowMessageBox(true);\r\n//   };\r\n\r\n//   const hideMessage = () => setShowMessageBox(false);\r\n//   const toggleRevenueOptions = () => setShowRevenueOptions(prev => !prev);\r\n\r\n//   // Corrected navigation for View Past Data to go to Account Level\r\n//   const handleViewPastData = () => {\r\n//     if (!selectedDateViewPast) {\r\n//       alert('Please select both a month and a year to View Past Data.');\r\n//       return;\r\n//     }\r\n//     setShowViewPastDataPopup(false);\r\n//     // CORRECTED: Navigate to the Account Level\r\n//     navigate('/accounts'); \r\n//   };\r\n\r\n//   // Determine if any popup is open to show the backdrop\r\n//   const isPopupOpen = showMessageBox || showRevenueOptions || showViewPastDataPopup;\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"position-relative min-vh-100 d-flex justify-content-center align-items-center px-3\"\r\n//       style={{\r\n//         background: 'radial-gradient(circle at center, #f8f9fa 60%, #e0e0e0 100%)',\r\n//         overflow: 'hidden'\r\n//       }}\r\n//     >\r\n//       {isPopupOpen && (\r\n//         <div\r\n//           className=\"position-fixed top-0 start-0 w-100 h-100 bg-dark bg-opacity-25\"\r\n//           style={{ backdropFilter: 'blur(3px)', zIndex: 1 }}\r\n//         />\r\n//       )}\r\n\r\n//       <div\r\n//         className=\"card rounded-4 shadow-lg w-100\"\r\n//         style={{ maxWidth: '1100px', zIndex: 2, backgroundColor: 'rgba(255,255,255,0.95)' }}\r\n//       >\r\n//         <div className=\"card-body\">\r\n//           <h2 className=\"text-center fw-bold text-dark mb-2\">{header.title}</h2>\r\n//           <p className=\"text-center text-muted mb-4\">{header.subtitle}</p>\r\n\r\n//           <div className=\"card bg-light border-0 shadow-sm p-4 mb-4 rounded-3\">\r\n//             <div className=\"row g-4\">\r\n//               {cards.map((card, index) => (\r\n//                 <DashboardCard\r\n//                   key={index}\r\n//                   title={card.title}\r\n//                   description={card.description}\r\n//                   icon={card.icon}\r\n//                   onClick={\r\n//                     card.title === 'Revenue Forecast'\r\n//                       ? toggleRevenueOptions // This opens the first popup\r\n//                       : () => showMessage(`Navigating to ${card.title}`)\r\n//                   }\r\n//                 />\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"card bg-light border-0 shadow-sm p-4 rounded-3\">\r\n//             <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4\">\r\n//               {metrics.map((metric, index) => (\r\n//                 <DashboardMetric key={index} value={metric.value} label={metric.label} />\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {showMessageBox && (\r\n//         <div\r\n//           className=\"position-fixed top-50 start-50 translate-middle bg-dark text-white p-4 rounded shadow text-center\"\r\n//           style={{ zIndex: 999 }}\r\n//         >\r\n//           <p className=\"mb-3\">{message}</p>\r\n//           <button className=\"btn btn-light btn-sm\" onClick={hideMessage}>Close</button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* First popup: Revenue Forecast Options */}\r\n//       {showRevenueOptions && (\r\n//         <div\r\n//           className=\"position-fixed top-50 start-50 translate-middle bg-white p-4 rounded shadow text-center\"\r\n//           style={{ zIndex: 999 }}\r\n//         >\r\n//           <h5 className=\"fw-bold mb-3 text-dark\">{revenuePopup.title}</h5>\r\n//           {revenuePopup.buttons.map((btn, i) => (\r\n//             <button\r\n//               key={i}\r\n//               className={`btn btn-outline-${btn.variant} w-100 mb-2`}\r\n//               onClick={() => {\r\n//                 if (btn.action === 'upload') {\r\n//                   toggleRevenueOptions(); // Close this popup\r\n//                   navigate('/upload'); // Navigate to upload page\r\n//                 } else if (btn.action === 'viewPastData') { // Action for View Past Data\r\n//                   toggleRevenueOptions(); // Close this popup\r\n//                   setSelectedDateViewPast(null); // Reset selected date for this popup\r\n//                   setShowViewPastDataPopup(true); // Open the \"View Past Data\" Month/Year selection popup\r\n//                 } else { // cancel\r\n//                   toggleRevenueOptions(); // Close this popup\r\n//                 }\r\n//               }}\r\n//             >\r\n//               {btn.text}\r\n//             </button>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* New popup: Month/Year Selection for \"View Past Data\" */}\r\n//       {showViewPastDataPopup && (\r\n//         <div\r\n//           className=\"position-fixed top-50 start-50 translate-middle bg-white p-4 rounded shadow\"\r\n//           style={{ zIndex: 999, minWidth: '360px' }}\r\n//         >\r\n//           <h5 className=\"fw-bold mb-3 text-center\">Select Month and Year to View Past Data</h5>\r\n//           <div className=\"mb-3 text-center\">\r\n//             <DatePicker\r\n//               selected={selectedDateViewPast}\r\n//               onChange={(date) => setSelectedDateViewPast(date)}\r\n//               dateFormat=\"MM/yyyy\"\r\n//               showMonthYearPicker\r\n//               className=\"form-control text-center\" // Apply Bootstrap styling\r\n//               placeholderText=\"Select Month & Year\"\r\n//             />\r\n//           </div>\r\n//           <button className=\"btn btn-primary w-100 mb-2\" onClick={handleViewPastData}>\r\n//             Go\r\n//           </button>\r\n//           <button className=\"btn btn-outline-secondary w-100\" onClick={() => setShowViewPastDataPopup(false)}>\r\n//             Cancel\r\n//           </button>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DashboardCard from './DashboardCard';\r\nimport DashboardMetric from './DashboardMetric';\r\nimport DatePicker from 'react-datepicker';\r\nimport dashboardData from '../../data/dashboard.json';\r\n// Remember to import 'react-datepicker/dist/react-datepicker.css' in App.js or index.js\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // UI state\r\n  const [message, setMessage]                           = useState('');\r\n  const [showMessageBox, setShowMessageBox]             = useState(false);\r\n  const [showRevenueOptions, setShowRevenueOptions]     = useState(false);\r\n  const [showViewPastDataPopup, setShowViewPastDataPopup] = useState(false);\r\n  const [selectedDateViewPast, setSelectedDateViewPast]   = useState(null);\r\n\r\n  // Destructure JSON data\r\n  const {\r\n    header,\r\n    metrics,\r\n    cards,\r\n    accountOptions,\r\n    revenuePopup,\r\n    viewPastDataPopup,\r\n    messageBox\r\n  } = dashboardData;\r\n\r\n  // Load Poppins font once\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href  = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel   = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Helpers\r\n  const showMessage = (msg) => {\r\n    setMessage(msg);\r\n    setShowMessageBox(true);\r\n  };\r\n  const hideMessage = () => setShowMessageBox(false);\r\n  const toggleRevenueOptions = () => setShowRevenueOptions(v => !v);\r\n\r\n  // Card click logic\r\n  const handleCardClick = (card) => {\r\n    switch (card.title) {\r\n      case 'Revenue Forecast':\r\n        return toggleRevenueOptions();\r\n\r\n      case 'Financial Management':\r\n        const names = Object.keys(accountOptions);\r\n        return showMessage(`Available Accounts: ${names.join(', ')}`);\r\n\r\n      default:\r\n        return showMessage(`Navigating to ${card.title}`);\r\n    }\r\n  };\r\n\r\n  // View Past Data handler\r\n  const handleViewPastData = () => {\r\n    if (!selectedDateViewPast) {\r\n      alert(viewPastDataPopup.alertMessage);\r\n      return;\r\n    }\r\n    const month = selectedDateViewPast.getMonth() + 1;\r\n    const year  = selectedDateViewPast.getFullYear();\r\n    setShowViewPastDataPopup(false);\r\n    navigate('/accounts', { state: { month, year } });\r\n  };\r\n\r\n  // Dark backdrop when any popup is open\r\n  const isPopupOpen = showMessageBox || showRevenueOptions || showViewPastDataPopup;\r\n\r\n  // DatePicker maxDate = last day of previous month\r\n  const today                  = new Date();\r\n  const lastDayOfPreviousMonth = new Date(today.getFullYear(), today.getMonth(), 0);\r\n\r\n  return (\r\n    <div\r\n      className=\"position-relative min-vh-100 d-flex justify-content-center align-items-center px-3\"\r\n      style={{\r\n        background: 'radial-gradient(circle at center, #f8f9fa 60%, #e0e0e0 100%)',\r\n        overflow:  'hidden'\r\n      }}\r\n    >\r\n      {isPopupOpen && (\r\n        <div\r\n          className=\"position-fixed top-0 start-0 w-100 h-100 bg-dark bg-opacity-25\"\r\n          style={{ backdropFilter: 'blur(3px)', zIndex: 1 }}\r\n        />\r\n      )}\r\n\r\n      <div\r\n        className=\"card rounded-4 shadow-lg w-100\"\r\n        style={{\r\n          maxWidth:       '1100px',\r\n          zIndex:         2,\r\n          backgroundColor:'rgba(255,255,255,0.95)'\r\n        }}\r\n      >\r\n        <div className=\"card-body\">\r\n          <h2 className=\"text-center fw-bold text-dark mb-2\">\r\n            {header.title}\r\n          </h2>\r\n          <p className=\"text-center text-muted mb-4\">\r\n            {header.subtitle}\r\n          </p>\r\n\r\n          {/* CARDS */}\r\n          <div className=\"card bg-light border-0 shadow-sm p-4 mb-4 rounded-3\">\r\n            <div className=\"row g-4\">\r\n              {cards.map((card, i) => (\r\n                <DashboardCard\r\n                  key={i}\r\n                  title={card.title}\r\n                  description={card.description}\r\n                  icon={card.icon}\r\n                  onClick={() => handleCardClick(card)}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* METRICS */}\r\n          <div className=\"card bg-light border-0 shadow-sm p-4 rounded-3\">\r\n            <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-4 g-4\">\r\n              {metrics.map((m, i) => (\r\n                <DashboardMetric key={i} value={m.value} label={m.label} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* MESSAGE POPUP */}\r\n      {showMessageBox && (\r\n        <div\r\n          className=\"position-fixed top-50 start-50 translate-middle bg-dark text-white p-4 rounded shadow text-center\"\r\n          style={{ zIndex: 999 }}\r\n        >\r\n          <p className=\"mb-3\">{message}</p>\r\n          <button className=\"btn btn-light btn-sm\" onClick={hideMessage}>\r\n            {messageBox.closeText}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* REVENUE OPTIONS POPUP */}\r\n      {showRevenueOptions && (\r\n        <div\r\n          className=\"position-fixed top-50 start-50 translate-middle bg-white p-4 rounded shadow text-center\"\r\n          style={{ zIndex: 999 }}\r\n        >\r\n          <h5 className=\"fw-bold mb-3 text-dark\">\r\n            {revenuePopup.title}\r\n          </h5>\r\n          {revenuePopup.buttons.map((btn, i) => (\r\n            <button\r\n              key={i}\r\n              className={`btn btn-outline-${btn.variant} w-100 mb-2`}\r\n              onClick={() => {\r\n                if (btn.action === 'upload') {\r\n                  toggleRevenueOptions();\r\n                  navigate('/upload');\r\n                } else if (btn.action === 'viewPastData') {\r\n                  toggleRevenueOptions();\r\n                  setSelectedDateViewPast(null);\r\n                  setShowViewPastDataPopup(true);\r\n                } else {\r\n                  toggleRevenueOptions();\r\n                }\r\n              }}\r\n            >\r\n              {btn.text}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* VIEW PAST DATA POPUP */}\r\n      {showViewPastDataPopup && (\r\n        <div\r\n          className=\"position-fixed top-50 start-50 translate-middle bg-white p-4 rounded shadow\"\r\n          style={{ zIndex: 999, minWidth: '360px' }}\r\n        >\r\n          <h5 className=\"fw-bold mb-3 text-center\">\r\n            {viewPastDataPopup.title}\r\n          </h5>\r\n          <div className=\"mb-3 text-center\">\r\n            <DatePicker\r\n              selected={selectedDateViewPast}\r\n              onChange={(d) => setSelectedDateViewPast(d)}\r\n              dateFormat={viewPastDataPopup.dateFormat}\r\n              showMonthYearPicker\r\n              maxDate={lastDayOfPreviousMonth}\r\n              className=\"form-control text-center\"\r\n              placeholderText={viewPastDataPopup.placeholderText}\r\n            />\r\n          </div>\r\n          <button\r\n            className=\"btn btn-primary w-100 mb-2\"\r\n            onClick={handleViewPastData}\r\n            disabled={!selectedDateViewPast}\r\n          >\r\n            {viewPastDataPopup.goButtonText}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-secondary w-100\"\r\n            onClick={() => setShowViewPastDataPopup(false)}\r\n          >\r\n            {viewPastDataPopup.cancelButtonText}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,aAAa,MAAM,2BAA2B;AACrD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAA6Bb,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACc,c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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}