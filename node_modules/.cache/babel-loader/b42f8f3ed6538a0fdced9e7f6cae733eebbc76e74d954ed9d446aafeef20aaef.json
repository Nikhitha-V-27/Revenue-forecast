{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const dataTableInstance = useRef(null); // Ref to store the stable DataTable instance\n\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n  const [activeSbu, setActiveSbu] = useState(null);\n  const [activeProjectType, setActiveProjectType] = useState(null);\n  const [columnFilters, setColumnFilters] = useState({});\n  const [filteredProjects, setFilteredProjects] = useState([]);\n  const BACKEND_URL = 'http://localhost:8081';\n  const formatCurrency = (value = 0) => value.toLocaleString(commonData.currencySettings.locale, {\n    style: 'currency',\n    currency: commonData.currencySettings.currency,\n    minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\n    maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\n  });\n  const getMonthName = monthNumber => {\n    if (!monthNumber) return '';\n    const date = new Date();\n    date.setMonth(monthNumber - 1);\n    return date.toLocaleString('en-US', {\n      month: 'long'\n    });\n  };\n  const handleDownloadData = () => {\n    if (filteredProjects.length === 0) {\n      console.log('No data to download.');\n      return;\n    }\n    const headers = [\"Project ID\", \"Project Name\", \"Total Associates\", \"Company Hours\", \"Client Hours\", \"Variance Hours\", \"Revenue\"];\n    const csvRows = filteredProjects.map(project => [`\"${project.projectId}\"`, `\"${project.projectName}\"`, project.totalAssociatesCount, project.totalCompanyHours, project.totalClientHours, project.varianceHours, `\"${formatCurrency(project.revenue)}\"`].join(','));\n    const csvContent = [headers.join(','), ...csvRows].join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    const monthName = getMonthName(activeMonth);\n    const fileName = `Projects_Account_${activeAccountId}_${monthName}_${activeYear}.csv`;\n    link.setAttribute('href', url);\n    link.setAttribute('download', fileName);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  const getUniqueOptions = columnKey => {\n    const options = projects.map(project => project[columnKey]);\n    const uniqueOptions = [...new Set(options)].sort((a, b) => {\n      if (typeof a === 'number' && typeof b === 'number') {\n        return a - b;\n      }\n      return String(a).localeCompare(String(b));\n    });\n    return ['All', ...uniqueOptions];\n  };\n  const handleFilterChange = (columnKey, value) => {\n    setColumnFilters(prevFilters => ({\n      ...prevFilters,\n      [columnKey]: value === 'All' ? null : value\n    }));\n  };\n  const applyFilters = (projectsArray, filters) => {\n    return projectsArray.filter(project => {\n      return Object.keys(filters).every(columnKey => {\n        const filterValue = filters[columnKey];\n        if (filterValue === null || filterValue === undefined) {\n          return true; // No filter applied for this column\n        }\n        const projectValue = project[columnKey];\n        // Compare values as strings to handle number/string mismatches\n        return String(projectValue).toLowerCase() === String(filterValue).toLowerCase();\n      });\n    });\n  };\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    return () => {\n      document.head.removeChild(link);\n    };\n  }, []);\n  useEffect(() => {\n    var _location$state$month, _location$state, _location$state$year, _location$state2, _location$state$accou, _location$state3, _location$state$sbu, _location$state4, _location$state$proje, _location$state5;\n    // Fetching logic remains the same...\n    const fetchProjectData = async (month, year, accId, projectType) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const payload = {\n          month,\n          year,\n          accId,\n          projectType\n        };\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!resp.ok) {\n          const errText = await resp.text();\n          throw new Error(`status: ${resp.status}, message: ${errText || resp.statusText}`);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setProjects(list);\n        if (list.length > 0 && list[0].accountName) {\n          setActiveAccountName(list[0].accountName);\n        } else {\n          const storedName = sessionStorage.getItem('lastFetchedProjectAccountName');\n          setActiveAccountName(storedName || accId);\n        }\n      } catch (e) {\n        console.error('Error fetching project data:', e);\n        setError(`Failed to load project data: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    let monthToUse = (_location$state$month = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month) !== null && _location$state$month !== void 0 ? _location$state$month : sessionStorage.getItem('lastFetchedProjectMonth');\n    let yearToUse = (_location$state$year = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year) !== null && _location$state$year !== void 0 ? _location$state$year : sessionStorage.getItem('lastFetchedProjectYear');\n    let accountIdToUse = urlAccountId;\n    let accountNameToUse = (_location$state$accou = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.accountName) !== null && _location$state$accou !== void 0 ? _location$state$accou : sessionStorage.getItem('lastFetchedProjectAccountName');\n    let sbuToUse = (_location$state$sbu = (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.sbu) !== null && _location$state$sbu !== void 0 ? _location$state$sbu : sessionStorage.getItem('lastFetchedProjectSbu');\n    let projectTypeToUse = (_location$state$proje = (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.projectType) !== null && _location$state$proje !== void 0 ? _location$state$proje : sessionStorage.getItem('lastFetchedProjectType');\n    monthToUse = monthToUse ? parseInt(monthToUse, 10) : null;\n    yearToUse = yearToUse ? parseInt(yearToUse, 10) : null;\n    if (monthToUse && yearToUse && accountIdToUse) {\n      setActiveMonth(monthToUse);\n      setActiveYear(yearToUse);\n      setActiveAccountId(accountIdToUse);\n      setActiveAccountName(accountNameToUse || 'N/A');\n      setActiveSbu(sbuToUse);\n      setActiveProjectType(projectTypeToUse);\n      sessionStorage.setItem('lastFetchedProjectMonth', monthToUse);\n      sessionStorage.setItem('lastFetchedProjectYear', yearToUse);\n      sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\n      if (accountNameToUse) sessionStorage.setItem('lastFetchedProjectAccountName', accountNameToUse);\n      if (sbuToUse) sessionStorage.setItem('lastFetchedProjectSbu', sbuToUse);\n      if (projectTypeToUse) sessionStorage.setItem('lastFetchedProjectType', projectTypeToUse);\n      fetchProjectData(monthToUse, yearToUse, accountIdToUse, projectTypeToUse);\n    } else {\n      setError('Missing month, year, or Account ID. Please navigate here with all parameters.');\n      setLoading(false);\n    }\n  }, [location.state, urlAccountId]);\n  useEffect(() => {\n    setFilteredProjects(applyFilters(projects, columnFilters));\n  }, [projects, columnFilters]);\n\n  // THIS IS THE KEY FIX: Initialize and Update DataTable correctly\n  useEffect(() => {\n    if (loading) return;\n\n    // Make navigation function accessible to the string-based onclick handler\n    window.handleViewAssociates = (projectId, projectName, accountId, accountName) => {\n      navigate(`/projects/${projectId}/associates`, {\n        state: {\n          projectId,\n          projectName,\n          accountId,\n          accountName,\n          month: activeMonth,\n          year: activeYear,\n          sbu: activeSbu,\n          projectType: activeProjectType\n        }\n      });\n    };\n    const tableData = filteredProjects.map(project => [project.projectId, project.projectName, project.totalAssociatesCount, project.totalCompanyHours, project.totalClientHours, project.varianceHours, formatCurrency(project.revenue),\n    // The button is now just a string, its click handler is global\n    `<button class=\"btn btn-sm btn-outline-primary rounded-circle\" onclick=\"window.handleViewAssociates('${project.projectId}', '${project.projectName}', '${project.accountId}', '${project.accountName}')\" title=\"View Associates\">🔍</button>`]);\n\n    // If the instance already exists, just update the data\n    if (dataTableInstance.current) {\n      const dt = dataTableInstance.current;\n      dt.clear();\n      dt.rows.add(tableData);\n      dt.draw();\n    } else {\n      // Otherwise, initialize it for the first time\n      const $tbl = $(tableRef.current);\n      dataTableInstance.current = $tbl.DataTable({\n        data: tableData,\n        // Provide data directly\n        columns: [\n        // Define columns\n        {\n          title: \"Project ID\"\n        }, {\n          title: \"Project Name\"\n        }, {\n          title: \"Total Associates\"\n        }, {\n          title: \"Company Hours\"\n        }, {\n          title: \"Client Hours\"\n        }, {\n          title: \"Variance Hours\"\n        }, {\n          title: \"Revenue\"\n        }, {\n          title: \"View\",\n          orderable: false,\n          className: \"text-center\"\n        }],\n        paging: true,\n        searching: true,\n        // This is the general search box\n        ordering: true,\n        info: true,\n        autoWidth: false,\n        destroy: true // Important for re-initialization on HMR in dev\n      });\n    }\n\n    // Cleanup on unmount\n    return () => {\n      delete window.handleViewAssociates;\n    };\n  }, [loading, filteredProjects, navigate, activeMonth, activeYear, activeSbu, activeProjectType]);\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }] : []), {\n    name: 'Account Level',\n    page: `accounts`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }, ...(activeProjectType ? [{\n    name: `${activeProjectType} Project Type`,\n    page: `accounts/${activeAccountId}/project-types`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu,\n      accId: activeAccountId\n    }\n  }] : []), {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }].filter(Boolean);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate('/accounts', {\n          state: {\n            month: activeMonth,\n            year: activeYear,\n            sbu: activeSbu\n          }\n        }),\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1200px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0 fw-semibold text-dark\",\n          children: [\"\\uD83D\\uDCC1 Project Level Overview \", activeAccountId ? `for ${activeAccountName}` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), projects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Project Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-borderless mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #3b82f6, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Project ID\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('projectId', e.target.value),\n                  value: columnFilters.projectId || 'All',\n                  children: getUniqueOptions('projectId').map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Project Name\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('projectName', e.target.value),\n                  value: columnFilters.projectName || 'All',\n                  children: getUniqueOptions('projectName').map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Total Associates\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('totalAssociatesCount', e.target.value),\n                  value: columnFilters.totalAssociatesCount || 'All',\n                  children: getUniqueOptions('totalAssociatesCount').map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Company Hours\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('totalCompanyHours', e.target.value),\n                  value: columnFilters.totalCompanyHours || 'All',\n                  children: getUniqueOptions('totalCompanyHours').map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Client Hours\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('totalClientHours', e.target.value),\n                  value: columnFilters.totalClientHours || 'All',\n                  children: getUniqueOptions('totalClientHours').map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Variance Hours\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('varianceHours', e.target.value),\n                  value: columnFilters.varianceHours || 'All',\n                  children: getUniqueOptions('varianceHours').map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: option,\n                    children: option\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Revenue\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('revenue', e.target.value),\n                  value: columnFilters.revenue || 'All',\n                  children: getUniqueOptions('revenue').map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: formatCurrency(option),\n                    children: formatCurrency(option)\n                  }, option, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"ImAQrVFvSH1tz/ajtjiL93hY6Rk=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ProjectLevel;\nexport default ProjectLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useParams","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","ProjectLevel","_s","navigate","accountId","urlAccountId","location","tableRef","dataTableInstance","projects","setProjects","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","activeSbu","setActiveSbu","activeProjectType","setActiveProjectType","columnFilters","setColumnFilters","filteredProjects","setFilteredProjects","BACKEND_URL","formatCurrency","value","toLocaleString","currencySettings","locale","style","currency","minimumFractionDigits","maximumFractionDigits","getMonthName","monthNumber","date","Date","setMonth","month","handleDownloadData","length","console","log","headers","csvRows","map","project","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","join","csvContent","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","monthName","fileName","setAttribute","body","appendChild","click","removeChild","revokeObjectURL","getUniqueOptions","columnKey","options","uniqueOptions","Set","sort","a","b","String","localeCompare","handleFilterChange","prevFilters","applyFilters","projectsArray","filters","filter","Object","keys","every","filterValue","undefined","projectValue","toLowerCase","href","rel","head","_location$state$month","_location$state","_location$state$year","_location$state2","_location$state$accou","_location$state3","_location$state$sbu","_location$state4","_location$state$proje","_location$state5","fetchProjectData","year","accId","projectType","payload","resp","fetch","method","JSON","stringify","ok","errText","text","Error","status","statusText","data","json","list","Array","isArray","Boolean","accountName","storedName","sessionStorage","getItem","e","message","monthToUse","state","yearToUse","accountIdToUse","accountNameToUse","sbuToUse","sbu","projectTypeToUse","parseInt","setItem","window","handleViewAssociates","tableData","current","dt","clear","rows","add","draw","$tbl","DataTable","columns","title","orderable","className","paging","searching","ordering","info","autoWidth","destroy","breadcrumbPath","name","page","children","role","_jsxFileName","lineNumber","columnNumber","onClick","background","fontFamily","maxWidth","backgroundColor","borderRadius","path","ref","width","onChange","target","option","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/ProjectLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\nconst ProjectLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { accountId: urlAccountId } = useParams();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n  const dataTableInstance = useRef(null); // Ref to store the stable DataTable instance\r\n\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeAccountId, setActiveAccountId] = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n  const [activeProjectType, setActiveProjectType] = useState(null);\r\n  const [columnFilters, setColumnFilters] = useState({});\r\n  const [filteredProjects, setFilteredProjects] = useState([]);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(commonData.currencySettings.locale, {\r\n      style: 'currency',\r\n      currency: commonData.currencySettings.currency,\r\n      minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\r\n      maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\r\n    });\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    if (!monthNumber) return '';\r\n    const date = new Date();\r\n    date.setMonth(monthNumber - 1);\r\n    return date.toLocaleString('en-US', { month: 'long' });\r\n  };\r\n\r\n  const handleDownloadData = () => {\r\n    if (filteredProjects.length === 0) {\r\n      console.log('No data to download.');\r\n      return;\r\n    }\r\n    const headers = [\r\n      \"Project ID\", \"Project Name\", \"Total Associates\", \"Company Hours\",\r\n      \"Client Hours\", \"Variance Hours\", \"Revenue\"\r\n    ];\r\n    const csvRows = filteredProjects.map(project => [\r\n      `\"${project.projectId}\"`,\r\n      `\"${project.projectName}\"`,\r\n      project.totalAssociatesCount,\r\n      project.totalCompanyHours,\r\n      project.totalClientHours,\r\n      project.varianceHours,\r\n      `\"${formatCurrency(project.revenue)}\"`\r\n    ].join(','));\r\n    const csvContent = [headers.join(','), ...csvRows].join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n    const url = URL.createObjectURL(blob);\r\n    const monthName = getMonthName(activeMonth);\r\n    const fileName = `Projects_Account_${activeAccountId}_${monthName}_${activeYear}.csv`;\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', fileName);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const getUniqueOptions = (columnKey) => {\r\n    const options = projects.map(project => project[columnKey]);\r\n    const uniqueOptions = [...new Set(options)].sort((a, b) => {\r\n      if (typeof a === 'number' && typeof b === 'number') {\r\n        return a - b;\r\n      }\r\n      return String(a).localeCompare(String(b));\r\n    });\r\n    return ['All', ...uniqueOptions];\r\n  };\r\n\r\n  const handleFilterChange = (columnKey, value) => {\r\n    setColumnFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      [columnKey]: value === 'All' ? null : value\r\n    }));\r\n  };\r\n\r\n  const applyFilters = (projectsArray, filters) => {\r\n    return projectsArray.filter(project => {\r\n      return Object.keys(filters).every(columnKey => {\r\n        const filterValue = filters[columnKey];\r\n        if (filterValue === null || filterValue === undefined) {\r\n          return true; // No filter applied for this column\r\n        }\r\n        const projectValue = project[columnKey];\r\n        // Compare values as strings to handle number/string mismatches\r\n        return String(projectValue).toLowerCase() === String(filterValue).toLowerCase();\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    return () => {\r\n        document.head.removeChild(link);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetching logic remains the same...\r\n    const fetchProjectData = async (month, year, accId, projectType) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const payload = { month, year, accId, projectType };\r\n            const resp = await fetch(`${BACKEND_URL}/api/project`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(payload)\r\n            });\r\n            if (!resp.ok) {\r\n                const errText = await resp.text();\r\n                throw new Error(`status: ${resp.status}, message: ${errText || resp.statusText}`);\r\n            }\r\n            const data = await resp.json();\r\n            const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n            setProjects(list);\r\n            if (list.length > 0 && list[0].accountName) {\r\n                setActiveAccountName(list[0].accountName);\r\n            } else {\r\n                const storedName = sessionStorage.getItem('lastFetchedProjectAccountName');\r\n                setActiveAccountName(storedName || accId);\r\n            }\r\n        } catch (e) {\r\n            console.error('Error fetching project data:', e);\r\n            setError(`Failed to load project data: ${e.message}`);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    let monthToUse = location.state?.month ?? sessionStorage.getItem('lastFetchedProjectMonth');\r\n    let yearToUse = location.state?.year ?? sessionStorage.getItem('lastFetchedProjectYear');\r\n    let accountIdToUse = urlAccountId;\r\n    let accountNameToUse = location.state?.accountName ?? sessionStorage.getItem('lastFetchedProjectAccountName');\r\n    let sbuToUse = location.state?.sbu ?? sessionStorage.getItem('lastFetchedProjectSbu');\r\n    let projectTypeToUse = location.state?.projectType ?? sessionStorage.getItem('lastFetchedProjectType');\r\n\r\n    monthToUse = monthToUse ? parseInt(monthToUse, 10) : null;\r\n    yearToUse = yearToUse ? parseInt(yearToUse, 10) : null;\r\n\r\n    if (monthToUse && yearToUse && accountIdToUse) {\r\n        setActiveMonth(monthToUse);\r\n        setActiveYear(yearToUse);\r\n        setActiveAccountId(accountIdToUse);\r\n        setActiveAccountName(accountNameToUse || 'N/A');\r\n        setActiveSbu(sbuToUse);\r\n        setActiveProjectType(projectTypeToUse);\r\n\r\n        sessionStorage.setItem('lastFetchedProjectMonth', monthToUse);\r\n        sessionStorage.setItem('lastFetchedProjectYear', yearToUse);\r\n        sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\r\n        if (accountNameToUse) sessionStorage.setItem('lastFetchedProjectAccountName', accountNameToUse);\r\n        if (sbuToUse) sessionStorage.setItem('lastFetchedProjectSbu', sbuToUse);\r\n        if (projectTypeToUse) sessionStorage.setItem('lastFetchedProjectType', projectTypeToUse);\r\n        \r\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse, projectTypeToUse);\r\n    } else {\r\n        setError('Missing month, year, or Account ID. Please navigate here with all parameters.');\r\n        setLoading(false);\r\n    }\r\n  }, [location.state, urlAccountId]);\r\n\r\n  useEffect(() => {\r\n    setFilteredProjects(applyFilters(projects, columnFilters));\r\n  }, [projects, columnFilters]);\r\n\r\n  // THIS IS THE KEY FIX: Initialize and Update DataTable correctly\r\n  useEffect(() => {\r\n    if (loading) return;\r\n\r\n    // Make navigation function accessible to the string-based onclick handler\r\n    window.handleViewAssociates = (projectId, projectName, accountId, accountName) => {\r\n      navigate(`/projects/${projectId}/associates`, {\r\n        state: { projectId, projectName, accountId, accountName, month: activeMonth, year: activeYear, sbu: activeSbu, projectType: activeProjectType }\r\n      });\r\n    };\r\n\r\n    const tableData = filteredProjects.map(project => [\r\n        project.projectId,\r\n        project.projectName,\r\n        project.totalAssociatesCount,\r\n        project.totalCompanyHours,\r\n        project.totalClientHours,\r\n        project.varianceHours,\r\n        formatCurrency(project.revenue),\r\n        // The button is now just a string, its click handler is global\r\n        `<button class=\"btn btn-sm btn-outline-primary rounded-circle\" onclick=\"window.handleViewAssociates('${project.projectId}', '${project.projectName}', '${project.accountId}', '${project.accountName}')\" title=\"View Associates\">🔍</button>`\r\n    ]);\r\n\r\n    // If the instance already exists, just update the data\r\n    if (dataTableInstance.current) {\r\n      const dt = dataTableInstance.current;\r\n      dt.clear();\r\n      dt.rows.add(tableData);\r\n      dt.draw();\r\n    } else { // Otherwise, initialize it for the first time\r\n      const $tbl = $(tableRef.current);\r\n      dataTableInstance.current = $tbl.DataTable({\r\n        data: tableData, // Provide data directly\r\n        columns: [ // Define columns\r\n          { title: \"Project ID\" },\r\n          { title: \"Project Name\" },\r\n          { title: \"Total Associates\" },\r\n          { title: \"Company Hours\" },\r\n          { title: \"Client Hours\" },\r\n          { title: \"Variance Hours\" },\r\n          { title: \"Revenue\" },\r\n          { title: \"View\", orderable: false, className: \"text-center\" }\r\n        ],\r\n        paging: true,\r\n        searching: true, // This is the general search box\r\n        ordering: true,\r\n        info: true,\r\n        autoWidth: false,\r\n        destroy: true, // Important for re-initialization on HMR in dev\r\n      });\r\n    }\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n        delete window.handleViewAssociates;\r\n    };\r\n  }, [loading, filteredProjects, navigate, activeMonth, activeYear, activeSbu, activeProjectType]);\r\n\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    ...(activeSbu ? [{ name: `${activeSbu} SBU Level`, page: 'sbu', state: { month: activeMonth, year: activeYear, sbu: activeSbu } }] : []),\r\n    { name: 'Account Level', page: `accounts`, state: { month: activeMonth, year: activeYear, sbu: activeSbu } },\r\n    ...(activeProjectType ? [{ name: `${activeProjectType} Project Type`, page: `accounts/${activeAccountId}/project-types`, state: { month: activeMonth, year: activeYear, sbu: activeSbu, accId: activeAccountId } }] : []),\r\n    { name: `Projects (${activeAccountName})`, page: `accounts/${activeAccountId}/projects` }\r\n  ].filter(Boolean);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() => navigate('/accounts', { state: { month: activeMonth, year: activeYear, sbu: activeSbu } })}\r\n        >\r\n          Go to Account Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\"\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1200px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem'\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h2 className=\"mb-0 fw-semibold text-dark\">\r\n            📁 Project Level Overview {activeAccountId ? `for ${activeAccountName}` : ''}\r\n          </h2>\r\n          {projects.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n              title=\"Download Project Data\"\r\n            >\r\n              <i className=\"bi bi-download me-2\"></i> Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"table-responsive rounded\">\r\n          <table\r\n            ref={tableRef}\r\n            className=\"display table table-hover align-middle table-borderless mb-0\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            {/* The THEAD contains the filters, but the TBODY is now empty, as DataTables will populate it */}\r\n            <thead\r\n              className=\"text-white\"\r\n              style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\r\n            >\r\n              <tr>\r\n                <th>\r\n                  Project ID\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) => handleFilterChange('projectId', e.target.value)}\r\n                    value={columnFilters.projectId || 'All'}\r\n                  >\r\n                    {getUniqueOptions('projectId').map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Project Name\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) => handleFilterChange('projectName', e.target.value)}\r\n                    value={columnFilters.projectName || 'All'}\r\n                  >\r\n                    {getUniqueOptions('projectName').map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Total Associates\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) => handleFilterChange('totalAssociatesCount', e.target.value)}\r\n                    value={columnFilters.totalAssociatesCount || 'All'}\r\n                  >\r\n                    {getUniqueOptions('totalAssociatesCount').map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Company Hours\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) => handleFilterChange('totalCompanyHours', e.target.value)}\r\n                    value={columnFilters.totalCompanyHours || 'All'}\r\n                  >\r\n                    {getUniqueOptions('totalCompanyHours').map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Client Hours\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) => handleFilterChange('totalClientHours', e.target.value)}\r\n                    value={columnFilters.totalClientHours || 'All'}\r\n                  >\r\n                    {getUniqueOptions('totalClientHours').map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Variance Hours\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) => handleFilterChange('varianceHours', e.target.value)}\r\n                    value={columnFilters.varianceHours || 'All'}\r\n                  >\r\n                    {getUniqueOptions('varianceHours').map(option => (\r\n                      <option key={option} value={option}>{option}</option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Revenue\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) => handleFilterChange('revenue', e.target.value)}\r\n                    value={columnFilters.revenue || 'All'}\r\n                  >\r\n                    {getUniqueOptions('revenue').map(option => (\r\n                      <option key={option} value={formatCurrency(option)}>{formatCurrency(option)}</option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th className=\"text-center\">View</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* This is intentionally left empty. DataTables will populate it. */}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLevel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}