{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Details\\\\ProjectTypeLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Table, Alert, Spinner, Button } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectTypeLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  // Extract accId, month, and year from the navigation state\n  const {\n    accId,\n    month,\n    year,\n    sbu\n  } = location.state || {};\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // Build Intl.NumberFormat from commonData\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatter = new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Convert exponent strings like \"e7\" â†’ 10^7, then format\n  const formatValue = val => {\n    if (typeof val === 'string') {\n      const m = val.match(/^e(\\d+)$/i);\n      if (m) {\n        val = Math.pow(10, Number(m[1]));\n      } else if (!isNaN(val)) {\n        val = Number(val);\n      }\n    }\n\n    // Apply currency formatting if it's a number and finite\n    if (typeof val === 'number' && isFinite(val)) {\n      // Heuristic: if the column name implies revenue, format as currency.\n      // This is a simple check; refine if your data has other numeric fields not to be formatted.\n      // For this component, assuming totalRevenueByType should be formatted.\n      // If your backend response keys are different, adjust the `columns` filter or this logic.\n      return formatter.format(val);\n    }\n    return val;\n  };\n\n  // Helper to get month name\n  const getMonthName = m => new Date(year, m - 1).toLocaleString('en-US', {\n    month: 'long'\n  });\n  useEffect(() => {\n    // Ensure all required parameters are available before fetching\n    if (!accId || !month || !year) {\n      setError('Missing Account ID, month, or year. Please navigate here with those parameters.');\n      setLoading(false);\n      return;\n    }\n    const fetchProjectTypeData = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        const payload = {\n          accId: accId,\n          month: Number(month),\n          year: Number(year)\n        };\n        const resp = await axios.post('http://localhost:8081/api/project-type-level', payload);\n        setData(resp.data);\n      } catch (err) {\n        var _err$response;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjectTypeData();\n  }, [accId, month, year]); // Re-run effect when these parameters change\n\n  // Dynamically determine columns from the first data object\n  // Exclude any fields that should not be displayed directly in the table\n  const columns = data.length ? Object.keys(data[0]).filter(col => {\n    // Example: if your backend returns 'id' that you don't want to show\n    return col.toLowerCase() !== 'id';\n  }) : [];\n\n  // Append a 'View' column to the headers\n  const headerCols = [...columns, 'View'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: [{\n          name: 'SBU Level',\n          page: 'sbu'\n        }, {\n          name: 'Account Level',\n          page: `accounts`\n        },\n        // Assuming /accounts is the route to AccountLevel\n        {\n          name: 'Project Type Level',\n          page: `accounts/${accId}/project-types`\n        } // Placeholder route\n        ]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        className: \"ps-0 mb-4\",\n        onClick: () => navigate(-1),\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          className: \"feather feather-chevron-left me-2\",\n          children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n            points: \"15 18 9 12 15 6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), \"Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 fw-semibold text-dark\",\n        children: [\"\\uD83D\\uDCCA Project Type Overview for Account \", accId, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary\",\n          children: [\"(\", getMonthName(month), \" \", year, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center my-5\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Project Type Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/accounts', {\n            state: {\n              month,\n              year,\n              sbu\n            }\n          }) // Navigate back to Account Level\n          ,\n          children: \"Go to Account Level\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: headerCols.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatValue(row[col])\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  variant: \"primary\",\n                  onClick: () =>\n                  // Navigate to Project Level, passing relevant data\n                  navigate(`/accounts/${accId}/projects`, {\n                    state: {\n                      accId,\n                      month,\n                      year,\n                      sbu,\n                      projectType: row.projectType // Pass the project type for further filtering\n                    }\n                  }),\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectTypeLevel, \"izPjiQX4wLvSKkpxTpZL6QnTXwE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ProjectTypeLevel;\nexport default ProjectTypeLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectTypeLevel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Table","Alert","Spinner","Button","useLocation","useNavigate","Breadcrumbs","commonData","jsxDEV","_jsxDEV","ProjectTypeLevel","_s","navigate","location","accId","month","year","sbu","state","data","setData","loading","setLoading","error","setError","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatter","Intl","NumberFormat","style","formatValue","val","m","match","Math","pow","Number","isNaN","isFinite","format","getMonthName","Date","toLocaleString","fetchProjectTypeData","payload","resp","post","err","_err$response","response","message","columns","length","Object","keys","filter","col","toLowerCase","headerCols","className","background","fontFamily","children","maxWidth","backgroundColor","borderRadius","path","name","page","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","animation","role","map","row","idx","size","projectType","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Details/ProjectTypeLevel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Table,\r\n  Alert,\r\n  Spinner,\r\n  Button\r\n} from 'react-bootstrap';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\nconst ProjectTypeLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  // Extract accId, month, and year from the navigation state\r\n  const { accId, month, year, sbu } = location.state || {}; \r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Build Intl.NumberFormat from commonData\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  } = commonData.currencySettings;\r\n\r\n  const formatter = new Intl.NumberFormat(locale, {\r\n    style: 'currency',\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  });\r\n\r\n  // Convert exponent strings like \"e7\" â†’ 10^7, then format\r\n  const formatValue = (val) => {\r\n    if (typeof val === 'string') {\r\n      const m = val.match(/^e(\\d+)$/i);\r\n      if (m) {\r\n        val = Math.pow(10, Number(m[1]));\r\n      } else if (!isNaN(val)) {\r\n        val = Number(val);\r\n      }\r\n    }\r\n\r\n    // Apply currency formatting if it's a number and finite\r\n    if (typeof val === 'number' && isFinite(val)) {\r\n      // Heuristic: if the column name implies revenue, format as currency.\r\n      // This is a simple check; refine if your data has other numeric fields not to be formatted.\r\n      // For this component, assuming totalRevenueByType should be formatted.\r\n      // If your backend response keys are different, adjust the `columns` filter or this logic.\r\n      return formatter.format(val);\r\n    }\r\n    return val;\r\n  };\r\n\r\n  // Helper to get month name\r\n  const getMonthName = (m) =>\r\n    new Date(year, m - 1).toLocaleString('en-US', { month: 'long' });\r\n\r\n  useEffect(() => {\r\n    // Ensure all required parameters are available before fetching\r\n    if (!accId || !month || !year) {\r\n      setError('Missing Account ID, month, or year. Please navigate here with those parameters.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const fetchProjectTypeData = async () => {\r\n      setLoading(true);\r\n      setError('');\r\n      try {\r\n        const payload = {\r\n          accId: accId,\r\n          month: Number(month),\r\n          year: Number(year)\r\n        };\r\n        const resp = await axios.post(\r\n          'http://localhost:8081/api/project-type-level',\r\n          payload\r\n        );\r\n        setData(resp.data);\r\n      } catch (err) {\r\n        setError(err.response?.data || err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProjectTypeData();\r\n  }, [accId, month, year]); // Re-run effect when these parameters change\r\n\r\n  // Dynamically determine columns from the first data object\r\n  // Exclude any fields that should not be displayed directly in the table\r\n  const columns = data.length\r\n    ? Object.keys(data[0]).filter((col) => {\r\n        // Example: if your backend returns 'id' that you don't want to show\r\n        return col.toLowerCase() !== 'id'; \r\n      })\r\n    : [];\r\n\r\n  // Append a 'View' column to the headers\r\n  const headerCols = [...columns, 'View'];\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        {/* Breadcrumbs for Project Type Level */}\r\n        <Breadcrumbs path={[\r\n          { name: 'SBU Level', page: 'sbu' },\r\n          { name: 'Account Level', page: `accounts` }, // Assuming /accounts is the route to AccountLevel\r\n          { name: 'Project Type Level', page: `accounts/${accId}/project-types` } // Placeholder route\r\n        ]} />\r\n\r\n        <Button variant=\"link\" className=\"ps-0 mb-4\" onClick={() => navigate(-1)}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-chevron-left me-2\">\r\n              <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n          </svg>\r\n          Back\r\n        </Button>\r\n\r\n        <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n          ðŸ“Š Project Type Overview for Account {accId}{' '}\r\n          <span className=\"text-primary\">\r\n            ({getMonthName(month)} {year})\r\n          </span>\r\n        </h2>\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center my-5\">\r\n            <Spinner animation=\"border\" role=\"status\" className=\"me-2\" />\r\n            <p className=\"ms-3 text-primary\">Loading Project Type Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/accounts', { state: { month, year, sbu } })} // Navigate back to Account Level\r\n            >\r\n              Go to Account Level\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  {headerCols.map((col) => (\r\n                    <th key={col}>{col}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((row, idx) => (\r\n                  <tr key={idx}>\r\n                    {columns.map((col) => (\r\n                      <td key={col}>{formatValue(row[col])}</td>\r\n                    ))}\r\n\r\n                    <td className=\"text-center\">\r\n                      <Button\r\n                        size=\"sm\"\r\n                        variant=\"primary\"\r\n                        onClick={() =>\r\n                          // Navigate to Project Level, passing relevant data\r\n                          navigate(`/accounts/${accId}/projects`, {\r\n                            state: { \r\n                              accId,\r\n                              month, \r\n                              year,\r\n                              sbu,\r\n                              projectType: row.projectType // Pass the project type for further filtering\r\n                            }\r\n                          })\r\n                        }\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectTypeLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}