{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\AccountLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\n\n// Utility to convert month number to month name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const date = new Date();\n  date.setMonth(monthNumber - 1);\n  return date.toLocaleString('en-US', {\n    month: 'long'\n  });\n};\nconst AccountLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const dataTableInstance = useRef(null); // Ref to hold the DataTable instance\n\n  // UI state\n  const [accounts, setAccounts] = useState([]);\n  const [commentsMap, setCommentsMap] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [commentInput, setCommentInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Active filters\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeMonthName, setActiveMonthName] = useState(null);\n  const [activeSbu, setActiveSbu] = useState(null);\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (value = 0) => value.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Load Poppins font\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch accounts when filters change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            monthNameParam,\n            sbu\n          })\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(txt || resp.statusText);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setAccounts(list);\n\n        // seed comments map\n        const initMap = {};\n        list.forEach(acc => {\n          if (acc.accountComment) {\n            initMap[acc.accountId] = acc.accountComment;\n          }\n        });\n        setCommentsMap(initMap);\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load accounts: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Read from React state, sessionStorage, or URL query\n    const qs = new URLSearchParams(location.search);\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let s = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.sbu;\n    if (!m) {\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\n      const qm = qs.get('month');\n      m = sm !== null && sm !== void 0 ? sm : qm;\n    }\n    if (!y) {\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\n      const qy = qs.get('year');\n      y = sy !== null && sy !== void 0 ? sy : qy;\n    }\n    if (!s) {\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\n      const qsS = qs.get('sbu');\n      s = ss !== null && ss !== void 0 ? ss : qsS;\n    }\n\n    // Normalize numeric values\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && s) {\n      const mn = getMonthName(m);\n      // only refetch if any filter changed or first load\n      if (m !== activeMonth || y !== activeYear || s !== activeSbu || accounts.length === 0) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveMonthName(mn);\n        setActiveSbu(s);\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\n        fetchAccountData(m, y, mn, s);\n      }\n    } else {\n      setError('Missing month, year or SBU. Please navigate here with those parameters.');\n      setLoading(false);\n    }\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\n\n  // Initialize & destroy DataTable\n  useEffect(() => {\n    if (!loading && accounts.length > 0 && tableRef.current) {\n      const $tbl = $(tableRef.current);\n      // Destroy existing DataTable instance if it exists\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        dataTableInstance.current.destroy();\n      }\n\n      // Initialize DataTable\n      dataTableInstance.current = $tbl.DataTable({\n        paging: true,\n        searching: true,\n        // Global search\n        ordering: true,\n        // Global ordering, column-specific control below\n        info: true,\n        autoWidth: false,\n        data: accounts,\n        // Pass the accounts data\n        columns: [{\n          data: 'accountId',\n          orderable: false\n        },\n        // Set to false to remove sorting arrows for filtering\n        {\n          data: 'accountName',\n          orderable: false\n        },\n        // Set to false to remove sorting arrows for filtering\n        {\n          data: 'totalProjects',\n          orderable: true\n        }, {\n          data: 'totalRevenue',\n          orderable: true,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'forecastNetRevenue',\n          orderable: true,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'difference',\n          orderable: true,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'accountComment',\n          orderable: false,\n          // Comment column not sortable\n          className: 'text-center',\n          render: function (data, type, row) {\n            // The button will be managed by React, but DataTables renders it initially\n            return `\n                <button class=\"btn btn-sm btn-outline-secondary comment-btn\" data-account-id=\"${row.accountId}\">\n                  üí¨\n                </button>\n              `;\n          }\n        }, {\n          data: null,\n          orderable: false,\n          // View button column not sortable\n          className: 'text-center',\n          render: function (data, type, row) {\n            return `\n                <button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" data-account-id=\"${row.accountId}\">\n                  üîç\n                </button>\n              `;\n          }\n        }],\n        order: [],\n        // Remove default sorting to prevent initial sorting on disabled columns\n        initComplete: function () {\n          // Setup column filters\n          const api = this.api();\n          const footerRow = $('tfoot tr'); // Reference to the tfoot row\n\n          api.columns().every(function (colIdx) {\n            const column = this;\n            const columnDataSrc = column.dataSrc(); // Get the data property name for this column\n\n            // Create a new th element for the filter input/dropdown\n            const filterTh = footerRow.find('th').eq(colIdx); // Get the existing th for this column index\n\n            // Apply filter inputs for specific columns\n            if (columnDataSrc === 'accountId' || columnDataSrc === 'accountName') {\n              // Clear existing content and append the input\n              filterTh.empty().append($('<input type=\"text\" class=\"form-control form-control-sm rounded-md shadow-sm border border-slate-300 focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50\" placeholder=\"Search...\" />').on('keyup change clear', function () {\n                if (column.search() !== this.value) {\n                  column.search(this.value).draw();\n                }\n              }));\n            } else {\n              // For other columns, ensure the th is empty or contains specific content if needed\n              filterTh.empty(); // Ensure other filter cells are empty\n            }\n          });\n\n          // Re-attach event listeners for dynamically rendered buttons (comments and view)\n          // DataTables re-renders rows, so we need delegated event listeners on the table body\n          $tbl.off('click', '.comment-btn').on('click', '.comment-btn', function () {\n            const accId = $(this).data('account-id');\n            openCommentModal(accId);\n          });\n          $tbl.off('click', '.view-btn').on('click', '.view-btn', function () {\n            const accId = $(this).data('account-id');\n            navigate(`/accounts/${accId}/project-types`, {\n              state: {\n                accId: accId,\n                month: activeMonth,\n                year: activeYear,\n                monthName: activeMonthName,\n                sbu: activeSbu\n              }\n            });\n          });\n        }\n      });\n    }\n\n    // Cleanup function to destroy DataTable instance and event listeners\n    return () => {\n      if (dataTableInstance.current) {\n        dataTableInstance.current.destroy();\n        dataTableInstance.current = null;\n      }\n      // Remove delegated event listeners to prevent memory leaks\n      // Ensure we target the table element for event listener removal\n      $(tableRef.current).off('click', '.comment-btn');\n      $(tableRef.current).off('click', '.view-btn');\n    };\n  }, [loading, accounts, activeMonth, activeYear, activeMonthName, activeSbu]); // Dependencies for DataTable effect\n\n  // Open comment modal\n  const openCommentModal = accId => {\n    setCurrentAccountId(accId);\n    setCommentInput(commentsMap[accId] || '');\n    setModalVisible(true);\n  };\n\n  // Save or update comment\n  const saveComment = async () => {\n    try {\n      const dto = {\n        accId: currentAccountId,\n        month: activeMonth,\n        year: activeYear,\n        comment: commentInput\n      };\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dto)\n      });\n      if (!resp.ok) {\n        throw new Error(await resp.text());\n      }\n      // update local maps\n      setCommentsMap(m => ({\n        ...m,\n        [currentAccountId]: commentInput\n      }));\n      setAccounts(list => list.map(acc => acc.accountId === currentAccountId ? {\n        ...acc,\n        accountComment: commentInput\n      } : acc));\n      setModalVisible(false);\n    } catch (e) {\n      // Use a custom message box instead of alert()\n      // For this example, keep it simple. In a real app, use a custom modal/toast.\n      alert('Error saving comment: ' + e.message);\n    }\n  };\n\n  // Dynamic breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  },\n  // Always starts with Dashboard\n  {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  },\n  // Added this line\n  ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu'\n  }] : []),\n  // Conditionally add SBU Level\n  {\n    name: 'Account Level',\n    page: 'accounts'\n  }].filter(Boolean); // Filter out any null/undefined entries if activeSbu is not set\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 fw-semibold text-dark\",\n        children: [\"\\uD83C\\uDFE2 Account Level Overview \\u2013 \", activeSbu, activeMonthName && activeYear && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ms-2 text-primary\",\n          children: [\"(\", activeMonthName, \" \", activeYear, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Account Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload'),\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Forecast Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Revenue Difference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: accounts.map(acc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.totalProjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.totalRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.forecastNetRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.difference)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-secondary comment-btn\" // Added class for delegation\n                  ,\n                  \"data-account-id\": acc.accountId // Data attribute to get ID\n                  ,\n                  children: \"\\uD83D\\uDCAC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle view-btn\" // Added class for delegation\n                  ,\n                  \"data-account-id\": acc.accountId // Data attribute to get ID\n                  ,\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this)]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      style: {\n        backgroundColor: '#00000066'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"Comment for \", currentAccountId, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setModalVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setModalVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: saveComment,\n              disabled: !commentInput.trim(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountLevel, \"DqYWF/b6Op7DkL+sdB5eC1jNQo8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AccountLevel;\nexport default AccountLevel;\nvar _c;\n$RefreshReg$(_c, \"AccountLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","AccountLevel","_s","navigate","location","tableRef","dataTableInstance","accounts","setAccounts","commentsMap","setCommentsMap","modalVisible","setModalVisible","currentAccountId","setCurrentAccountId","commentInput","setCommentInput","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeMonthName","setActiveMonthName","activeSbu","setActiveSbu","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","value","style","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","_location$state3","fetchAccountData","year","monthNameParam","sbu","resp","fetch","method","headers","JSON","stringify","ok","txt","text","Error","statusText","data","json","list","Array","isArray","filter","Boolean","initMap","forEach","acc","accountComment","accountId","e","console","message","qs","URLSearchParams","search","m","state","y","s","sm","sessionStorage","getItem","qm","get","sy","qy","ss","qsS","parseInt","mn","length","setItem","toString","current","$tbl","fn","DataTable","isDataTable","destroy","paging","searching","ordering","info","autoWidth","columns","orderable","render","className","type","row","order","initComplete","api","footerRow","every","colIdx","column","columnDataSrc","dataSrc","filterTh","find","eq","empty","append","on","draw","off","accId","openCommentModal","monthName","saveComment","dto","comment","map","alert","breadcrumbPath","name","page","background","children","maxWidth","backgroundColor","borderRadius","path","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","ref","width","accountName","totalProjects","totalRevenue","forecastNetRevenue","difference","rows","onChange","target","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/AccountLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\n// Utility to convert month number to month name\r\nconst getMonthName = (monthNumber) => {\r\n  const date = new Date();\r\n  date.setMonth(monthNumber - 1);\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n};\r\n\r\nconst AccountLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n  const dataTableInstance = useRef(null); // Ref to hold the DataTable instance\r\n\r\n  // UI state\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Active filters\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeMonthName, setActiveMonthName] = useState(null);\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits,\r\n  } = commonData.currencySettings;\r\n\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits,\r\n    });\r\n\r\n  // Load Poppins font\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch accounts when filters change\r\n  useEffect(() => {\r\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, monthNameParam, sbu }),\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(txt || resp.statusText);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setAccounts(list);\r\n\r\n        // seed comments map\r\n        const initMap = {};\r\n        list.forEach((acc) => {\r\n          if (acc.accountComment) {\r\n            initMap[acc.accountId] = acc.accountComment;\r\n          }\r\n        });\r\n        setCommentsMap(initMap);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load accounts: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Read from React state, sessionStorage, or URL query\r\n    const qs = new URLSearchParams(location.search);\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    let s = location.state?.sbu;\r\n\r\n    if (!m) {\r\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\r\n      const qm = qs.get('month');\r\n      m = sm ?? qm;\r\n    }\r\n    if (!y) {\r\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\r\n      const qy = qs.get('year');\r\n      y = sy ?? qy;\r\n    }\r\n    if (!s) {\r\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\r\n      const qsS = qs.get('sbu');\r\n      s = ss ?? qsS;\r\n    }\r\n\r\n    // Normalize numeric values\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && s) {\r\n      const mn = getMonthName(m);\r\n      // only refetch if any filter changed or first load\r\n      if (\r\n        m !== activeMonth ||\r\n        y !== activeYear ||\r\n        s !== activeSbu ||\r\n        accounts.length === 0\r\n      ) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveMonthName(mn);\r\n        setActiveSbu(s);\r\n\r\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\r\n\r\n        fetchAccountData(m, y, mn, s);\r\n      }\r\n    } else {\r\n      setError(\r\n        'Missing month, year or SBU. Please navigate here with those parameters.'\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\r\n\r\n  // Initialize & destroy DataTable\r\n  useEffect(() => {\r\n    if (!loading && accounts.length > 0 && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n      // Destroy existing DataTable instance if it exists\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        dataTableInstance.current.destroy();\r\n      }\r\n\r\n      // Initialize DataTable\r\n      dataTableInstance.current = $tbl.DataTable({\r\n        paging: true,\r\n        searching: true, // Global search\r\n        ordering: true, // Global ordering, column-specific control below\r\n        info: true,\r\n        autoWidth: false,\r\n        data: accounts, // Pass the accounts data\r\n        columns: [\r\n          { data: 'accountId', orderable: false }, // Set to false to remove sorting arrows for filtering\r\n          { data: 'accountName', orderable: false }, // Set to false to remove sorting arrows for filtering\r\n          { data: 'totalProjects', orderable: true },\r\n          { data: 'totalRevenue', orderable: true, render: (data) => formatCurrency(data) },\r\n          { data: 'forecastNetRevenue', orderable: true, render: (data) => formatCurrency(data) },\r\n          { data: 'difference', orderable: true, render: (data) => formatCurrency(data) },\r\n          {\r\n            data: 'accountComment',\r\n            orderable: false, // Comment column not sortable\r\n            className: 'text-center',\r\n            render: function (data, type, row) {\r\n              // The button will be managed by React, but DataTables renders it initially\r\n              return `\r\n                <button class=\"btn btn-sm btn-outline-secondary comment-btn\" data-account-id=\"${row.accountId}\">\r\n                  üí¨\r\n                </button>\r\n              `;\r\n            }\r\n          },\r\n          {\r\n            data: null,\r\n            orderable: false, // View button column not sortable\r\n            className: 'text-center',\r\n            render: function (data, type, row) {\r\n              return `\r\n                <button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" data-account-id=\"${row.accountId}\">\r\n                  üîç\r\n                </button>\r\n              `;\r\n            }\r\n          },\r\n        ],\r\n        order: [], // Remove default sorting to prevent initial sorting on disabled columns\r\n        initComplete: function () {\r\n          // Setup column filters\r\n          const api = this.api();\r\n          const footerRow = $('tfoot tr'); // Reference to the tfoot row\r\n\r\n          api.columns().every(function (colIdx) {\r\n            const column = this;\r\n            const columnDataSrc = column.dataSrc(); // Get the data property name for this column\r\n\r\n            // Create a new th element for the filter input/dropdown\r\n            const filterTh = footerRow.find('th').eq(colIdx); // Get the existing th for this column index\r\n\r\n            // Apply filter inputs for specific columns\r\n            if (columnDataSrc === 'accountId' || columnDataSrc === 'accountName') {\r\n              // Clear existing content and append the input\r\n              filterTh.empty().append(\r\n                $('<input type=\"text\" class=\"form-control form-control-sm rounded-md shadow-sm border border-slate-300 focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50\" placeholder=\"Search...\" />')\r\n                  .on('keyup change clear', function () {\r\n                    if (column.search() !== this.value) {\r\n                      column.search(this.value).draw();\r\n                    }\r\n                  })\r\n              );\r\n            } else {\r\n              // For other columns, ensure the th is empty or contains specific content if needed\r\n              filterTh.empty(); // Ensure other filter cells are empty\r\n            }\r\n          });\r\n\r\n          // Re-attach event listeners for dynamically rendered buttons (comments and view)\r\n          // DataTables re-renders rows, so we need delegated event listeners on the table body\r\n          $tbl.off('click', '.comment-btn').on('click', '.comment-btn', function() {\r\n            const accId = $(this).data('account-id');\r\n            openCommentModal(accId);\r\n          });\r\n\r\n          $tbl.off('click', '.view-btn').on('click', '.view-btn', function() {\r\n            const accId = $(this).data('account-id');\r\n            navigate(`/accounts/${accId}/project-types`, {\r\n              state: {\r\n                accId: accId,\r\n                month: activeMonth,\r\n                year: activeYear,\r\n                monthName: activeMonthName,\r\n                sbu: activeSbu,\r\n              },\r\n            });\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    // Cleanup function to destroy DataTable instance and event listeners\r\n    return () => {\r\n      if (dataTableInstance.current) {\r\n        dataTableInstance.current.destroy();\r\n        dataTableInstance.current = null;\r\n      }\r\n      // Remove delegated event listeners to prevent memory leaks\r\n      // Ensure we target the table element for event listener removal\r\n      $(tableRef.current).off('click', '.comment-btn');\r\n      $(tableRef.current).off('click', '.view-btn');\r\n    };\r\n  }, [loading, accounts, activeMonth, activeYear, activeMonthName, activeSbu]); // Dependencies for DataTable effect\r\n\r\n  // Open comment modal\r\n  const openCommentModal = (accId) => {\r\n    setCurrentAccountId(accId);\r\n    setCommentInput(commentsMap[accId] || '');\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // Save or update comment\r\n  const saveComment = async () => {\r\n    try {\r\n      const dto = {\r\n        accId: currentAccountId,\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        comment: commentInput,\r\n      };\r\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dto),\r\n      });\r\n      if (!resp.ok) {\r\n        throw new Error(await resp.text());\r\n      }\r\n      // update local maps\r\n      setCommentsMap((m) => ({ ...m, [currentAccountId]: commentInput }));\r\n      setAccounts((list) =>\r\n        list.map((acc) =>\r\n          acc.accountId === currentAccountId\r\n            ? { ...acc, accountComment: commentInput }\r\n            : acc\r\n        )\r\n      );\r\n      setModalVisible(false);\r\n    } catch (e) {\r\n      // Use a custom message box instead of alert()\r\n      // For this example, keep it simple. In a real app, use a custom modal/toast.\r\n      alert('Error saving comment: ' + e.message);\r\n    }\r\n  };\r\n\r\n  // Dynamic breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' }, // Always starts with Dashboard\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' }, // Added this line\r\n    ...(activeSbu ? [{ name: `${activeSbu} SBU Level`, page: 'sbu' }] : []), // Conditionally add SBU Level\r\n    { name: 'Account Level', page: 'accounts' },\r\n  ].filter(Boolean); // Filter out any null/undefined entries if activeSbu is not set\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n          üè¢ Account Level Overview ‚Äì {activeSbu}\r\n          {activeMonthName && activeYear && (\r\n            <span className=\"ms-2 text-primary\">\r\n              ({activeMonthName} {activeYear})\r\n            </span>\r\n          )}\r\n        </h2>\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\" />\r\n            <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')}\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              ref={tableRef}\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th>Account ID</th>\r\n                  <th>Account Name</th>\r\n                  <th>Total Projects</th>\r\n                  <th>Total Revenue</th>\r\n                  <th>Forecast Revenue</th>\r\n                  <th>Revenue Difference</th>\r\n                  <th className=\"text-center\">Comment</th>\r\n                  <th className=\"text-center\">View</th>\r\n                </tr>\r\n              </thead>\r\n              {/* TFOOT for column filters */}\r\n              <tfoot>\r\n                <tr>\r\n                  {/* These <th> elements will be dynamically populated by DataTables' initComplete */}\r\n                  {/* They need to exist for DataTables to append the filters */}\r\n                  <th></th> {/* Account ID Filter */}\r\n                  <th></th> {/* Account Name Filter */}\r\n                  <th></th> {/* Total Projects */}\r\n                  <th></th> {/* Total Revenue */}\r\n                  <th></th> {/* Forecast Revenue */}\r\n                  <th></th> {/* Revenue Difference */}\r\n                  <th></th> {/* Comment */}\r\n                  <th></th> {/* View */}\r\n                </tr>\r\n              </tfoot>\r\n              <tbody>\r\n                {accounts.map((acc) => (\r\n                  <tr key={acc.accountId}>\r\n                    <td>{acc.accountId}</td>\r\n                    <td>{acc.accountName}</td>\r\n                    <td>{acc.totalProjects}</td>\r\n                    <td>{formatCurrency(acc.totalRevenue)}</td>\r\n                    <td>{formatCurrency(acc.forecastNetRevenue)}</td>\r\n                    <td>{formatCurrency(acc.difference)}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-secondary comment-btn\" // Added class for delegation\r\n                        data-account-id={acc.accountId} // Data attribute to get ID\r\n                      >\r\n                        üí¨\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" // Added class for delegation\r\n                        data-account-id={acc.accountId} // Data attribute to get ID\r\n                      >\r\n                        üîç\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {modalVisible && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: '#00000066' }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">\r\n                  Comment for {currentAccountId} {/* Changed from üí¨ Comment for */}\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModalVisible(false)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  value={commentInput}\r\n                  onChange={(e) => setCommentInput(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setModalVisible(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={saveComment}\r\n                  disabled={!commentInput.trim()}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountLevel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAO,gBAAgB;AACvB,OAAO,qDAAqD;AAC5D,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,UAAU,MAAM,4BAA4B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAIC,WAAW,IAAK;EACpC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvBD,IAAI,CAACE,QAAQ,CAACH,WAAW,GAAG,CAAC,CAAC;EAC9B,OAAOC,IAAI,CAACG,cAAc,CAAC,OAAO,EAAE;IAAEC,KAAK,EAAE;EAAO,CAAC,CAAC;AACxD,CAAC;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMsB,iBAAiB,GAAGtB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;EACA,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC2B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACqC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACuC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACyC,SAAS,EAAEC,YAAY,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAM2C,WAAW,GAAG,uBAAuB;;EAE3C;EACA,MAAM;IACJC,MAAM;IACNC,QAAQ;IACRC,qBAAqB;IACrBC;EACF,CAAC,GAAG1C,UAAU,CAAC2C,gBAAgB;EAE/B,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAG,CAAC,KAC/BA,KAAK,CAACrC,cAAc,CAAC+B,MAAM,EAAE;IAC3BO,KAAK,EAAE,UAAU;IACjBN,QAAQ;IACRC,qBAAqB;IACrBC;EACF,CAAC,CAAC;;EAEJ;EACAhD,SAAS,CAAC,MAAM;IACd,MAAMqD,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAC3CF,IAAI,CAACG,IAAI,GACP,gFAAgF;IAClFH,IAAI,CAACI,GAAG,GAAG,YAAY;IACvBH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;IAC/BC,QAAQ,CAACM,IAAI,CAACR,KAAK,CAACS,UAAU,GAAG,uBAAuB;EAC1D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7D,SAAS,CAAC,MAAM;IAAA,IAAA8D,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;IACd,MAAMC,gBAAgB,GAAG,MAAAA,CAAOlD,KAAK,EAAEmD,IAAI,EAAEC,cAAc,EAAEC,GAAG,KAAK;MACnEnC,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF,MAAMkC,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAG1B,WAAW,cAAc,EAAE;UACrD2B,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CZ,IAAI,EAAEa,IAAI,CAACC,SAAS,CAAC;YAAE3D,KAAK;YAAEmD,IAAI;YAAEC,cAAc;YAAEC;UAAI,CAAC;QAC3D,CAAC,CAAC;QACF,IAAI,CAACC,IAAI,CAACM,EAAE,EAAE;UACZ,MAAMC,GAAG,GAAG,MAAMP,IAAI,CAACQ,IAAI,CAAC,CAAC;UAC7B,MAAM,IAAIC,KAAK,CAACF,GAAG,IAAIP,IAAI,CAACU,UAAU,CAAC;QACzC;QACA,MAAMC,IAAI,GAAG,MAAMX,IAAI,CAACY,IAAI,CAAC,CAAC;QAC9B,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC,CAACK,MAAM,CAACC,OAAO,CAAC;QAChE/D,WAAW,CAAC2D,IAAI,CAAC;;QAEjB;QACA,MAAMK,OAAO,GAAG,CAAC,CAAC;QAClBL,IAAI,CAACM,OAAO,CAAEC,GAAG,IAAK;UACpB,IAAIA,GAAG,CAACC,cAAc,EAAE;YACtBH,OAAO,CAACE,GAAG,CAACE,SAAS,CAAC,GAAGF,GAAG,CAACC,cAAc;UAC7C;QACF,CAAC,CAAC;QACFjE,cAAc,CAAC8D,OAAO,CAAC;MACzB,CAAC,CAAC,OAAOK,CAAC,EAAE;QACVC,OAAO,CAAC3D,KAAK,CAAC0D,CAAC,CAAC;QAChBzD,QAAQ,CAAC,4BAA4ByD,CAAC,CAACE,OAAO,EAAE,CAAC;MACnD,CAAC,SAAS;QACR7D,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;;IAED;IACA,MAAM8D,EAAE,GAAG,IAAIC,eAAe,CAAC7E,QAAQ,CAAC8E,MAAM,CAAC;IAC/C,IAAIC,CAAC,IAAApC,eAAA,GAAG3C,QAAQ,CAACgF,KAAK,cAAArC,eAAA,uBAAdA,eAAA,CAAgB/C,KAAK;IAC7B,IAAIqF,CAAC,IAAArC,gBAAA,GAAG5C,QAAQ,CAACgF,KAAK,cAAApC,gBAAA,uBAAdA,gBAAA,CAAgBG,IAAI;IAC5B,IAAImC,CAAC,IAAArC,gBAAA,GAAG7C,QAAQ,CAACgF,KAAK,cAAAnC,gBAAA,uBAAdA,gBAAA,CAAgBI,GAAG;IAE3B,IAAI,CAAC8B,CAAC,EAAE;MACN,MAAMI,EAAE,GAAGC,cAAc,CAACC,OAAO,CAAC,yBAAyB,CAAC;MAC5D,MAAMC,EAAE,GAAGV,EAAE,CAACW,GAAG,CAAC,OAAO,CAAC;MAC1BR,CAAC,GAAGI,EAAE,aAAFA,EAAE,cAAFA,EAAE,GAAIG,EAAE;IACd;IACA,IAAI,CAACL,CAAC,EAAE;MACN,MAAMO,EAAE,GAAGJ,cAAc,CAACC,OAAO,CAAC,wBAAwB,CAAC;MAC3D,MAAMI,EAAE,GAAGb,EAAE,CAACW,GAAG,CAAC,MAAM,CAAC;MACzBN,CAAC,GAAGO,EAAE,aAAFA,EAAE,cAAFA,EAAE,GAAIC,EAAE;IACd;IACA,IAAI,CAACP,CAAC,EAAE;MACN,MAAMQ,EAAE,GAAGN,cAAc,CAACC,OAAO,CAAC,uBAAuB,CAAC;MAC1D,MAAMM,GAAG,GAAGf,EAAE,CAACW,GAAG,CAAC,KAAK,CAAC;MACzBL,CAAC,GAAGQ,EAAE,aAAFA,EAAE,cAAFA,EAAE,GAAIC,GAAG;IACf;;IAEA;IACAZ,CAAC,GAAGA,CAAC,GAAGa,QAAQ,CAACb,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;IAC9BE,CAAC,GAAGA,CAAC,GAAGW,QAAQ,CAACX,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI;IAE9B,IAAIF,CAAC,IAAIE,CAAC,IAAIC,CAAC,EAAE;MACf,MAAMW,EAAE,GAAGvG,YAAY,CAACyF,CAAC,CAAC;MAC1B;MACA,IACEA,CAAC,KAAK9D,WAAW,IACjBgE,CAAC,KAAK9D,UAAU,IAChB+D,CAAC,KAAK3D,SAAS,IACfpB,QAAQ,CAAC2F,MAAM,KAAK,CAAC,EACrB;QACA5E,cAAc,CAAC6D,CAAC,CAAC;QACjB3D,aAAa,CAAC6D,CAAC,CAAC;QAChB3D,kBAAkB,CAACuE,EAAE,CAAC;QACtBrE,YAAY,CAAC0D,CAAC,CAAC;QAEfE,cAAc,CAACW,OAAO,CAAC,yBAAyB,EAAEhB,CAAC,CAACiB,QAAQ,CAAC,CAAC,CAAC;QAC/DZ,cAAc,CAACW,OAAO,CAAC,wBAAwB,EAAEd,CAAC,CAACe,QAAQ,CAAC,CAAC,CAAC;QAC9DZ,cAAc,CAACW,OAAO,CAAC,uBAAuB,EAAEb,CAAC,CAAC;QAElDpC,gBAAgB,CAACiC,CAAC,EAAEE,CAAC,EAAEY,EAAE,EAAEX,CAAC,CAAC;MAC/B;IACF,CAAC,MAAM;MACLlE,QAAQ,CACN,yEACF,CAAC;MACDF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACd,QAAQ,CAACgF,KAAK,EAAEhF,QAAQ,CAAC8E,MAAM,EAAE7D,WAAW,EAAEE,UAAU,EAAEI,SAAS,EAAEpB,QAAQ,CAAC2F,MAAM,CAAC,CAAC;;EAE1F;EACAjH,SAAS,CAAC,MAAM;IACd,IAAI,CAACgC,OAAO,IAAIV,QAAQ,CAAC2F,MAAM,GAAG,CAAC,IAAI7F,QAAQ,CAACgG,OAAO,EAAE;MACvD,MAAMC,IAAI,GAAGjH,CAAC,CAACgB,QAAQ,CAACgG,OAAO,CAAC;MAChC;MACA,IAAIhH,CAAC,CAACkH,EAAE,CAACC,SAAS,CAACC,WAAW,CAACH,IAAI,CAAC,EAAE;QACpChG,iBAAiB,CAAC+F,OAAO,CAACK,OAAO,CAAC,CAAC;MACrC;;MAEA;MACApG,iBAAiB,CAAC+F,OAAO,GAAGC,IAAI,CAACE,SAAS,CAAC;QACzCG,MAAM,EAAE,IAAI;QACZC,SAAS,EAAE,IAAI;QAAE;QACjBC,QAAQ,EAAE,IAAI;QAAE;QAChBC,IAAI,EAAE,IAAI;QACVC,SAAS,EAAE,KAAK;QAChB9C,IAAI,EAAE1D,QAAQ;QAAE;QAChByG,OAAO,EAAE,CACP;UAAE/C,IAAI,EAAE,WAAW;UAAEgD,SAAS,EAAE;QAAM,CAAC;QAAE;QACzC;UAAEhD,IAAI,EAAE,aAAa;UAAEgD,SAAS,EAAE;QAAM,CAAC;QAAE;QAC3C;UAAEhD,IAAI,EAAE,eAAe;UAAEgD,SAAS,EAAE;QAAK,CAAC,EAC1C;UAAEhD,IAAI,EAAE,cAAc;UAAEgD,SAAS,EAAE,IAAI;UAAEC,MAAM,EAAGjD,IAAI,IAAK9B,cAAc,CAAC8B,IAAI;QAAE,CAAC,EACjF;UAAEA,IAAI,EAAE,oBAAoB;UAAEgD,SAAS,EAAE,IAAI;UAAEC,MAAM,EAAGjD,IAAI,IAAK9B,cAAc,CAAC8B,IAAI;QAAE,CAAC,EACvF;UAAEA,IAAI,EAAE,YAAY;UAAEgD,SAAS,EAAE,IAAI;UAAEC,MAAM,EAAGjD,IAAI,IAAK9B,cAAc,CAAC8B,IAAI;QAAE,CAAC,EAC/E;UACEA,IAAI,EAAE,gBAAgB;UACtBgD,SAAS,EAAE,KAAK;UAAE;UAClBE,SAAS,EAAE,aAAa;UACxBD,MAAM,EAAE,SAAAA,CAAUjD,IAAI,EAAEmD,IAAI,EAAEC,GAAG,EAAE;YACjC;YACA,OAAO;AACrB,gGAAgGA,GAAG,CAACzC,SAAS;AAC7G;AACA;AACA,eAAe;UACH;QACF,CAAC,EACD;UACEX,IAAI,EAAE,IAAI;UACVgD,SAAS,EAAE,KAAK;UAAE;UAClBE,SAAS,EAAE,aAAa;UACxBD,MAAM,EAAE,SAAAA,CAAUjD,IAAI,EAAEmD,IAAI,EAAEC,GAAG,EAAE;YACjC,OAAO;AACrB,0GAA0GA,GAAG,CAACzC,SAAS;AACvH;AACA;AACA,eAAe;UACH;QACF,CAAC,CACF;QACD0C,KAAK,EAAE,EAAE;QAAE;QACXC,YAAY,EAAE,SAAAA,CAAA,EAAY;UACxB;UACA,MAAMC,GAAG,GAAG,IAAI,CAACA,GAAG,CAAC,CAAC;UACtB,MAAMC,SAAS,GAAGpI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;;UAEjCmI,GAAG,CAACR,OAAO,CAAC,CAAC,CAACU,KAAK,CAAC,UAAUC,MAAM,EAAE;YACpC,MAAMC,MAAM,GAAG,IAAI;YACnB,MAAMC,aAAa,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;;YAExC;YACA,MAAMC,QAAQ,GAAGN,SAAS,CAACO,IAAI,CAAC,IAAI,CAAC,CAACC,EAAE,CAACN,MAAM,CAAC,CAAC,CAAC;;YAElD;YACA,IAAIE,aAAa,KAAK,WAAW,IAAIA,aAAa,KAAK,aAAa,EAAE;cACpE;cACAE,QAAQ,CAACG,KAAK,CAAC,CAAC,CAACC,MAAM,CACrB9I,CAAC,CAAC,4MAA4M,CAAC,CAC5M+I,EAAE,CAAC,oBAAoB,EAAE,YAAY;gBACpC,IAAIR,MAAM,CAAC1C,MAAM,CAAC,CAAC,KAAK,IAAI,CAAC9C,KAAK,EAAE;kBAClCwF,MAAM,CAAC1C,MAAM,CAAC,IAAI,CAAC9C,KAAK,CAAC,CAACiG,IAAI,CAAC,CAAC;gBAClC;cACF,CAAC,CACL,CAAC;YACH,CAAC,MAAM;cACL;cACAN,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB;UACF,CAAC,CAAC;;UAEF;UACA;UACA5B,IAAI,CAACgC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC,CAACF,EAAE,CAAC,OAAO,EAAE,cAAc,EAAE,YAAW;YACvE,MAAMG,KAAK,GAAGlJ,CAAC,CAAC,IAAI,CAAC,CAAC4E,IAAI,CAAC,YAAY,CAAC;YACxCuE,gBAAgB,CAACD,KAAK,CAAC;UACzB,CAAC,CAAC;UAEFjC,IAAI,CAACgC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAACF,EAAE,CAAC,OAAO,EAAE,WAAW,EAAE,YAAW;YACjE,MAAMG,KAAK,GAAGlJ,CAAC,CAAC,IAAI,CAAC,CAAC4E,IAAI,CAAC,YAAY,CAAC;YACxC9D,QAAQ,CAAC,aAAaoI,KAAK,gBAAgB,EAAE;cAC3CnD,KAAK,EAAE;gBACLmD,KAAK,EAAEA,KAAK;gBACZvI,KAAK,EAAEqB,WAAW;gBAClB8B,IAAI,EAAE5B,UAAU;gBAChBkH,SAAS,EAAEhH,eAAe;gBAC1B4B,GAAG,EAAE1B;cACP;YACF,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;;IAEA;IACA,OAAO,MAAM;MACX,IAAIrB,iBAAiB,CAAC+F,OAAO,EAAE;QAC7B/F,iBAAiB,CAAC+F,OAAO,CAACK,OAAO,CAAC,CAAC;QACnCpG,iBAAiB,CAAC+F,OAAO,GAAG,IAAI;MAClC;MACA;MACA;MACAhH,CAAC,CAACgB,QAAQ,CAACgG,OAAO,CAAC,CAACiC,GAAG,CAAC,OAAO,EAAE,cAAc,CAAC;MAChDjJ,CAAC,CAACgB,QAAQ,CAACgG,OAAO,CAAC,CAACiC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC;IAC/C,CAAC;EACH,CAAC,EAAE,CAACrH,OAAO,EAAEV,QAAQ,EAAEc,WAAW,EAAEE,UAAU,EAAEE,eAAe,EAAEE,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE9E;EACA,MAAM6G,gBAAgB,GAAID,KAAK,IAAK;IAClCzH,mBAAmB,CAACyH,KAAK,CAAC;IAC1BvH,eAAe,CAACP,WAAW,CAAC8H,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC3H,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;;EAED;EACA,MAAM8H,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG;QACVJ,KAAK,EAAE1H,gBAAgB;QACvBb,KAAK,EAAEqB,WAAW;QAClB8B,IAAI,EAAE5B,UAAU;QAChBqH,OAAO,EAAE7H;MACX,CAAC;MACD,MAAMuC,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAG1B,WAAW,sBAAsB,EAAE;QAC7D2B,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CZ,IAAI,EAAEa,IAAI,CAACC,SAAS,CAACgF,GAAG;MAC1B,CAAC,CAAC;MACF,IAAI,CAACrF,IAAI,CAACM,EAAE,EAAE;QACZ,MAAM,IAAIG,KAAK,CAAC,MAAMT,IAAI,CAACQ,IAAI,CAAC,CAAC,CAAC;MACpC;MACA;MACApD,cAAc,CAAEyE,CAAC,KAAM;QAAE,GAAGA,CAAC;QAAE,CAACtE,gBAAgB,GAAGE;MAAa,CAAC,CAAC,CAAC;MACnEP,WAAW,CAAE2D,IAAI,IACfA,IAAI,CAAC0E,GAAG,CAAEnE,GAAG,IACXA,GAAG,CAACE,SAAS,KAAK/D,gBAAgB,GAC9B;QAAE,GAAG6D,GAAG;QAAEC,cAAc,EAAE5D;MAAa,CAAC,GACxC2D,GACN,CACF,CAAC;MACD9D,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC,CAAC,OAAOiE,CAAC,EAAE;MACV;MACA;MACAiE,KAAK,CAAC,wBAAwB,GAAGjE,CAAC,CAACE,OAAO,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAMgE,cAAc,GAAG,CACrB;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAG,CAAC;EAAE;EACrC;IAAED,IAAI,EAAE,+BAA+B;IAAEC,IAAI,EAAE;EAAS,CAAC;EAAE;EAC3D,IAAItH,SAAS,GAAG,CAAC;IAAEqH,IAAI,EAAE,GAAGrH,SAAS,YAAY;IAAEsH,IAAI,EAAE;EAAM,CAAC,CAAC,GAAG,EAAE,CAAC;EAAE;EACzE;IAAED,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAW,CAAC,CAC5C,CAAC3E,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;;EAEnB,oBACE9E,OAAA;IACE0H,SAAS,EAAC,4DAA4D;IACtE9E,KAAK,EAAE;MACL6G,UAAU,EAAE,oDAAoD;MAChEpG,UAAU,EAAE;IACd,CAAE;IAAAqG,QAAA,gBAEF1J,OAAA;MACE0H,SAAS,EAAC,8BAA8B;MACxC9E,KAAK,EAAE;QACL+G,QAAQ,EAAE,QAAQ;QAClBC,eAAe,EAAE,WAAW;QAC5BC,YAAY,EAAE;MAChB,CAAE;MAAAH,QAAA,gBAEF1J,OAAA,CAACH,WAAW;QAACiK,IAAI,EAAER;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAErClK,OAAA;QAAI0H,SAAS,EAAC,wCAAwC;QAAAgC,QAAA,GAAC,6CACzB,EAACxH,SAAS,EACrCF,eAAe,IAAIF,UAAU,iBAC5B9B,OAAA;UAAM0H,SAAS,EAAC,mBAAmB;UAAAgC,QAAA,GAAC,GACjC,EAAC1H,eAAe,EAAC,GAAC,EAACF,UAAU,EAAC,GACjC;QAAA;UAAAiI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAEJ1I,OAAO,gBACNxB,OAAA;QAAK0H,SAAS,EAAC,kDAAkD;QAAAgC,QAAA,gBAC/D1J,OAAA;UAAK0H,SAAS,EAAC,6BAA6B;UAACyC,IAAI,EAAC;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7DlK,OAAA;UAAG0H,SAAS,EAAC,mBAAmB;UAAAgC,QAAA,EAAC;QAAuB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,GACJxI,KAAK,gBACP1B,OAAA;QAAK0H,SAAS,EAAC,0EAA0E;QAAAgC,QAAA,gBACvF1J,OAAA;UAAG0H,SAAS,EAAC,MAAM;UAAAgC,QAAA,GAAC,SAAO,EAAChI,KAAK;QAAA;UAAAqI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtClK,OAAA;UACE0H,SAAS,EAAC,sBAAsB;UAChC0C,OAAO,EAAEA,CAAA,KAAM1J,QAAQ,CAAC,SAAS,CAAE;UAAAgJ,QAAA,EACpC;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,gBAENlK,OAAA;QAAK0H,SAAS,EAAC,0BAA0B;QAAAgC,QAAA,eACvC1J,OAAA;UACEqK,GAAG,EAAEzJ,QAAS;UACd8G,SAAS,EAAC,4DAA4D;UACtE9E,KAAK,EAAE;YAAE0H,KAAK,EAAE;UAAO,CAAE;UAAAZ,QAAA,gBAEzB1J,OAAA;YACE0H,SAAS,EAAC,YAAY;YACtB9E,KAAK,EAAE;cACL6G,UAAU,EAAE;YACd,CAAE;YAAAC,QAAA,eAEF1J,OAAA;cAAA0J,QAAA,gBACE1J,OAAA;gBAAA0J,QAAA,EAAI;cAAU;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnBlK,OAAA;gBAAA0J,QAAA,EAAI;cAAY;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrBlK,OAAA;gBAAA0J,QAAA,EAAI;cAAc;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvBlK,OAAA;gBAAA0J,QAAA,EAAI;cAAa;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtBlK,OAAA;gBAAA0J,QAAA,EAAI;cAAgB;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzBlK,OAAA;gBAAA0J,QAAA,EAAI;cAAkB;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC3BlK,OAAA;gBAAI0H,SAAS,EAAC,aAAa;gBAAAgC,QAAA,EAAC;cAAO;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACxClK,OAAA;gBAAI0H,SAAS,EAAC,aAAa;gBAAAgC,QAAA,EAAC;cAAI;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAERlK,OAAA;YAAA0J,QAAA,eACE1J,OAAA;cAAA0J,QAAA,gBAGE1J,OAAA;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,eACVlK,OAAA;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,eACVlK,OAAA;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,eACVlK,OAAA;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,eACVlK,OAAA;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,eACVlK,OAAA;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,eACVlK,OAAA;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,eACVlK,OAAA;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRlK,OAAA;YAAA0J,QAAA,EACG5I,QAAQ,CAACsI,GAAG,CAAEnE,GAAG,iBAChBjF,OAAA;cAAA0J,QAAA,gBACE1J,OAAA;gBAAA0J,QAAA,EAAKzE,GAAG,CAACE;cAAS;gBAAA4E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxBlK,OAAA;gBAAA0J,QAAA,EAAKzE,GAAG,CAACsF;cAAW;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1BlK,OAAA;gBAAA0J,QAAA,EAAKzE,GAAG,CAACuF;cAAa;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5BlK,OAAA;gBAAA0J,QAAA,EAAKhH,cAAc,CAACuC,GAAG,CAACwF,YAAY;cAAC;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3ClK,OAAA;gBAAA0J,QAAA,EAAKhH,cAAc,CAACuC,GAAG,CAACyF,kBAAkB;cAAC;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACjDlK,OAAA;gBAAA0J,QAAA,EAAKhH,cAAc,CAACuC,GAAG,CAAC0F,UAAU;cAAC;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACzClK,OAAA;gBAAI0H,SAAS,EAAC,aAAa;gBAAAgC,QAAA,eACzB1J,OAAA;kBACE0H,SAAS,EAAC,8CAA8C,CAAC;kBAAA;kBACzD,mBAAiBzC,GAAG,CAACE,SAAU,CAAC;kBAAA;kBAAAuE,QAAA,EACjC;gBAED;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLlK,OAAA;gBAAI0H,SAAS,EAAC,aAAa;gBAAAgC,QAAA,eACzB1J,OAAA;kBACE0H,SAAS,EAAC,wDAAwD,CAAC;kBAAA;kBACnE,mBAAiBzC,GAAG,CAACE,SAAU,CAAC;kBAAA;kBAAAuE,QAAA,EACjC;gBAED;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GAtBEjF,GAAG,CAACE,SAAS;cAAA4E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAuBlB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAELhJ,YAAY,iBACXlB,OAAA;MACE0H,SAAS,EAAC,yBAAyB;MACnC9E,KAAK,EAAE;QAAEgH,eAAe,EAAE;MAAY,CAAE;MAAAF,QAAA,eAExC1J,OAAA;QAAK0H,SAAS,EAAC,oCAAoC;QAAAgC,QAAA,eACjD1J,OAAA;UAAK0H,SAAS,EAAC,eAAe;UAAAgC,QAAA,gBAC5B1J,OAAA;YAAK0H,SAAS,EAAC,cAAc;YAAAgC,QAAA,gBAC3B1J,OAAA;cAAI0H,SAAS,EAAC,aAAa;cAAAgC,QAAA,GAAC,cACd,EAACtI,gBAAgB,EAAC,GAAC;YAAA;cAAA2I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACLlK,OAAA;cACE2H,IAAI,EAAC,QAAQ;cACbD,SAAS,EAAC,WAAW;cACrB0C,OAAO,EAAEA,CAAA,KAAMjJ,eAAe,CAAC,KAAK;YAAE;cAAA4I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNlK,OAAA;YAAK0H,SAAS,EAAC,YAAY;YAAAgC,QAAA,eACzB1J,OAAA;cACE0H,SAAS,EAAC,cAAc;cACxBkD,IAAI,EAAC,GAAG;cACRjI,KAAK,EAAErB,YAAa;cACpBuJ,QAAQ,EAAGzF,CAAC,IAAK7D,eAAe,CAAC6D,CAAC,CAAC0F,MAAM,CAACnI,KAAK;YAAE;cAAAoH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNlK,OAAA;YAAK0H,SAAS,EAAC,cAAc;YAAAgC,QAAA,gBAC3B1J,OAAA;cACE0H,SAAS,EAAC,mBAAmB;cAC7B0C,OAAO,EAAEA,CAAA,KAAMjJ,eAAe,CAAC,KAAK,CAAE;cAAAuI,QAAA,EACvC;YAED;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTlK,OAAA;cACE0H,SAAS,EAAC,iBAAiB;cAC3B0C,OAAO,EAAEnB,WAAY;cACrB8B,QAAQ,EAAE,CAACzJ,YAAY,CAAC0J,IAAI,CAAC,CAAE;cAAAtB,QAAA,EAChC;YAED;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzJ,EAAA,CAhdID,YAAY;EAAA,QACCd,WAAW,EACXC,WAAW;AAAA;AAAAsL,EAAA,GAFxBzK,YAAY;AAkdlB,eAAeA,YAAY;AAAC,IAAAyK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}