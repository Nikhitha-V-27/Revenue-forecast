{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\n// src/components/Details/ProjectLevel.js\n\n// src/components/ProjectTypeLevel.js\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import $ from 'jquery';\n// import 'datatables.net';\n// import 'datatables.net-dt/css/dataTables.dataTables.min.css';\n// import Breadcrumbs from '../Breadcrumbs';\n// import commonData from '../../data/commonData.json';\n\n// const ProjectTypeLevel = () => {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const tableRef = useRef(null);\n\n//   // state passed from AccountLevel\n//   const { accountId, month, year, monthName } = location.state || {};\n\n//   const [rows, setRows] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   const { locale, currency, minimumFractionDigits, maximumFractionDigits } =\n//     commonData.currencySettings;\n\n//   const formatCurrency = (v = 0) =>\n//     v.toLocaleString(locale, {\n//       style: 'currency',\n//       currency,\n//       minimumFractionDigits,\n//       maximumFractionDigits,\n//     });\n\n//   // load Google font\n//   useEffect(() => {\n//     const link = document.createElement('link');\n//     link.href =\n//       'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n//     link.rel = 'stylesheet';\n//     document.head.appendChild(link);\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\n//   }, []);\n\n//   // fetch project‐type summary from backend\n//   useEffect(() => {\n//     if (!accountId || !month || !year) {\n//       setError('Missing account or date. Please go back.');\n//       setLoading(false);\n//       return;\n//     }\n\n//     const fetchData = async () => {\n//       setLoading(true);\n//       try {\n//         const resp = await fetch(\n//           'http://localhost:8081/api/project-type-level',\n//           {\n//             method: 'POST',\n//             headers: { 'Content-Type': 'application/json' },\n//             body: JSON.stringify({ accId: accountId, month, year }),\n//           }\n//         );\n//         if (!resp.ok) {\n//           const txt = await resp.text();\n//           throw new Error(txt || resp.statusText);\n//         }\n//         const result = await resp.json();\n//         setRows(Array.isArray(result) ? result : []);\n//       } catch (e) {\n//         console.error(e);\n//         setError('Failed to load data: ' + e.message);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, [accountId, month, year]);\n\n//   // initialize DataTable\n//   useEffect(() => {\n//     if (!loading && rows.length && tableRef.current) {\n//       const $tbl = $(tableRef.current);\n//       if ($.fn.DataTable.isDataTable($tbl)) {\n//         $tbl.DataTable().destroy();\n//       }\n//       $tbl.DataTable({\n//         paging: true,\n//         searching: true,\n//         ordering: true,\n//         info: true,\n//         autoWidth: false,\n//       });\n//     }\n//     return () => {\n//       if (tableRef.current) {\n//         const $tbl = $(tableRef.current);\n//         if ($.fn.DataTable.isDataTable($tbl)) {\n//           $tbl.DataTable().destroy();\n//         }\n//       }\n//     };\n//   }, [loading, rows]);\n\n//   const breadcrumbPath = [\n//     { name: 'PMO Dashboard', page: '' },\n//     { name: 'Revenue Forecast – Early View', page: 'upload' },\n//     { name: 'Account Level', page: 'accounts' },\n//     { name: 'Project Type Level', page: '' },\n//   ];\n\n//   return (\n//     <div\n//       className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\n//       style={{ background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)' }}\n//     >\n//       <div\n//         className=\"card shadow p-4 p-md-5 w-100\"\n//         style={{ maxWidth: '1100px', backgroundColor: '#ffffffdd', borderRadius: '1rem' }}\n//       >\n//         <Breadcrumbs path={breadcrumbPath} />\n//         <h2 className=\"text-center mb-4 fw-semibold text-dark\">\n//           📊 Project Type Overview for {accountId}{' '}\n//           {monthName && year && (\n//             <span className=\"ms-2 text-primary\">\n//               ({monthName} {year})\n//             </span>\n//           )}\n//         </h2>\n\n//         {loading ? (\n//           <div className=\"d-flex justify-content-center align-items-center\">\n//             <div className=\"spinner-border text-primary\" role=\"status\" />\n//             <p className=\"ms-3 text-primary\">Loading project types...</p>\n//           </div>\n//         ) : error ? (\n//           <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\n//             <p className=\"fs-4\">{error}</p>\n//             <button className=\"btn btn-primary mt-3\" onClick={() => navigate(-1)}>\n//               Go Back\n//             </button>\n//           </div>\n//         ) : (\n//           <div className=\"table-responsive rounded\">\n//             <table\n//               ref={tableRef}\n//               className=\"display table table-hover align-middle table-bordered mb-0\"\n//               style={{ width: '100%' }}\n//             >\n//               <thead className=\"text-white\" style={{ background: 'linear-gradient(to right, #1d4ed8, #2563eb)' }}>\n//                 <tr>\n//                   <th>Project Type</th>\n//                   <th>Total Revenue</th>\n//                   <th>Forecast Revenue</th>\n//                   <th>Difference</th>\n//                   <th className=\"text-center\">View</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {rows.map((r) => (\n//                   <tr key={r.projectType}>\n//                     <td>{r.projectType}</td>\n//                     <td>{formatCurrency(r.totalRevenue)}</td>\n//                     <td>{formatCurrency(r.forecastNetRevenue)}</td>\n//                     <td className={r.difference < 0 ? 'text-danger' : 'text-success'}>\n//                       {r.difference > 0 ? '+' : ''}\n//                       {r.difference.toFixed(2)}\n//                     </td>\n//                     <td className=\"text-center\">\n//                       <button\n//                         className=\"btn btn-sm btn-outline-primary rounded-pill px-3\"\n//                         onClick={() =>\n//                           navigate(`/project-level`, {\n//                             state: {\n//                               accountId,\n//                               projectType: r.projectType,\n//                               month,\n//                               year,\n//                               monthName,\n//                             },\n//                           })\n//                         }\n//                       >\n//                         View\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ProjectTypeLevel;\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency settings\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (value = 0) => value.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Placeholder download logic\n  const handleDownloadData = () => {\n    alert('Download Project Data button clicked!');\n    // Implement actual CSV/Excel download here\n  };\n\n  // Load Poppins font\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch project data when context changes\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchProjectData = async (month, year, accId) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            accId\n          })\n        });\n        if (!resp.ok) {\n          const errText = await resp.text();\n          throw new Error(`status: ${resp.status}, message: ${errText || resp.statusText}`);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setProjects(list);\n\n        // Derive accountName from response or sessionStorage\n        if (list.length > 0 && list[0].accountName) {\n          setActiveAccountName(list[0].accountName);\n        } else {\n          const storedName = sessionStorage.getItem('lastFetchedProjectAccountName');\n          setActiveAccountName(storedName || accId);\n        }\n      } catch (e) {\n        console.error('Error fetching project data:', e);\n        setError(`Failed to load project data: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Determine context from location.state, URL, or sessionStorage\n    let monthToUse = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let yearToUse = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let accountIdToUse = urlAccountId;\n    let accountNameToUse = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.accountName;\n    if (!monthToUse || !yearToUse || !accountNameToUse) {\n      const sm = sessionStorage.getItem('lastFetchedProjectMonth');\n      const sy = sessionStorage.getItem('lastFetchedProjectYear');\n      const sa = sessionStorage.getItem('lastFetchedProjectAccountId');\n      const san = sessionStorage.getItem('lastFetchedProjectAccountName');\n      if (sm && sy && sa) {\n        monthToUse = parseInt(sm, 10);\n        yearToUse = parseInt(sy, 10);\n        accountIdToUse = sa;\n        accountNameToUse = san;\n      }\n    }\n    if (monthToUse && yearToUse && accountIdToUse) {\n      if (monthToUse !== activeMonth || yearToUse !== activeYear || accountIdToUse !== activeAccountId || projects.length === 0) {\n        setActiveMonth(monthToUse);\n        setActiveYear(yearToUse);\n        setActiveAccountId(accountIdToUse);\n        if (accountNameToUse) {\n          setActiveAccountName(accountNameToUse);\n        }\n        // Persist context\n        sessionStorage.setItem('lastFetchedProjectMonth', monthToUse.toString());\n        sessionStorage.setItem('lastFetchedProjectYear', yearToUse.toString());\n        sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\n        if (accountNameToUse) {\n          sessionStorage.setItem('lastFetchedProjectAccountName', accountNameToUse);\n        }\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse);\n      } else {\n        setLoading(false);\n      }\n    } else {\n      setError('Missing project context (month, year, or account ID). Please go back.');\n      setLoading(false);\n    }\n  }, [location.state, urlAccountId, activeMonth, activeYear, activeAccountId, projects.length]);\n\n  // Initialize / destroy DataTable when projects load\n  useEffect(() => {\n    if (!loading && projects.length > 0 && tableRef.current) {\n      const $tbl = $(tableRef.current);\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n      }\n      $tbl.DataTable({\n        paging: true,\n        searching: true,\n        ordering: true,\n        info: true,\n        autoWidth: false\n      });\n    }\n    return () => {\n      if (tableRef.current) {\n        const $tbl = $(tableRef.current);\n        if ($.fn.DataTable.isDataTable($tbl)) {\n          $tbl.DataTable().destroy();\n        }\n      }\n    };\n  }, [loading, projects]);\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, {\n    name: 'Account Level',\n    page: 'accounts'\n  }, {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate('/accounts'),\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1200px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0 fw-semibold text-dark\",\n          children: [\"\\uD83D\\uDCC1 Project Level Overview\", ' ', activeAccountId ? `for ${activeAccountName}` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), projects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Project Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-borderless mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #3b82f6, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Associates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Company Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Client Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variance Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.projectId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.totalAssociatesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.totalCompanyHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.totalClientHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.varianceHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(project.revenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/projects/${project.projectId}/associates`, {\n                    state: {\n                      projectId: project.projectId,\n                      projectName: project.projectName,\n                      accountId: project.accountId,\n                      accountName: project.accountName,\n                      month: activeMonth,\n                      year: activeYear\n                    }\n                  }),\n                  title: \"View Associates\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this)]\n            }, project.projectId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 410,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"7CQgiQXulVF0DQdoH0NFyZg/bnk=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ProjectLevel;\nexport default ProjectLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useParams","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","ProjectLevel","_s","navigate","accountId","urlAccountId","location","tableRef","projects","setProjects","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","value","toLocaleString","style","handleDownloadData","alert","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","_location$state3","fetchProjectData","month","year","accId","resp","fetch","method","headers","JSON","stringify","ok","errText","text","Error","status","statusText","data","json","list","Array","isArray","filter","Boolean","length","accountName","storedName","sessionStorage","getItem","e","console","message","monthToUse","state","yearToUse","accountIdToUse","accountNameToUse","sm","sy","sa","san","parseInt","setItem","toString","current","$tbl","fn","DataTable","isDataTable","destroy","paging","searching","ordering","info","autoWidth","breadcrumbPath","name","page","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","maxWidth","backgroundColor","borderRadius","path","title","ref","width","map","project","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Details/ProjectLevel.js"],"sourcesContent":["\r\n// src/components/Details/ProjectLevel.js\r\n\r\n// src/components/ProjectTypeLevel.js\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n// import $ from 'jquery';\r\n// import 'datatables.net';\r\n// import 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\n// import Breadcrumbs from '../Breadcrumbs';\r\n// import commonData from '../../data/commonData.json';\r\n\r\n// const ProjectTypeLevel = () => {\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const tableRef = useRef(null);\r\n\r\n//   // state passed from AccountLevel\r\n//   const { accountId, month, year, monthName } = location.state || {};\r\n\r\n//   const [rows, setRows] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const { locale, currency, minimumFractionDigits, maximumFractionDigits } =\r\n//     commonData.currencySettings;\r\n\r\n//   const formatCurrency = (v = 0) =>\r\n//     v.toLocaleString(locale, {\r\n//       style: 'currency',\r\n//       currency,\r\n//       minimumFractionDigits,\r\n//       maximumFractionDigits,\r\n//     });\r\n\r\n//   // load Google font\r\n//   useEffect(() => {\r\n//     const link = document.createElement('link');\r\n//     link.href =\r\n//       'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n//     link.rel = 'stylesheet';\r\n//     document.head.appendChild(link);\r\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n//   }, []);\r\n\r\n//   // fetch project‐type summary from backend\r\n//   useEffect(() => {\r\n//     if (!accountId || !month || !year) {\r\n//       setError('Missing account or date. Please go back.');\r\n//       setLoading(false);\r\n//       return;\r\n//     }\r\n\r\n//     const fetchData = async () => {\r\n//       setLoading(true);\r\n//       try {\r\n//         const resp = await fetch(\r\n//           'http://localhost:8081/api/project-type-level',\r\n//           {\r\n//             method: 'POST',\r\n//             headers: { 'Content-Type': 'application/json' },\r\n//             body: JSON.stringify({ accId: accountId, month, year }),\r\n//           }\r\n//         );\r\n//         if (!resp.ok) {\r\n//           const txt = await resp.text();\r\n//           throw new Error(txt || resp.statusText);\r\n//         }\r\n//         const result = await resp.json();\r\n//         setRows(Array.isArray(result) ? result : []);\r\n//       } catch (e) {\r\n//         console.error(e);\r\n//         setError('Failed to load data: ' + e.message);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [accountId, month, year]);\r\n\r\n//   // initialize DataTable\r\n//   useEffect(() => {\r\n//     if (!loading && rows.length && tableRef.current) {\r\n//       const $tbl = $(tableRef.current);\r\n//       if ($.fn.DataTable.isDataTable($tbl)) {\r\n//         $tbl.DataTable().destroy();\r\n//       }\r\n//       $tbl.DataTable({\r\n//         paging: true,\r\n//         searching: true,\r\n//         ordering: true,\r\n//         info: true,\r\n//         autoWidth: false,\r\n//       });\r\n//     }\r\n//     return () => {\r\n//       if (tableRef.current) {\r\n//         const $tbl = $(tableRef.current);\r\n//         if ($.fn.DataTable.isDataTable($tbl)) {\r\n//           $tbl.DataTable().destroy();\r\n//         }\r\n//       }\r\n//     };\r\n//   }, [loading, rows]);\r\n\r\n//   const breadcrumbPath = [\r\n//     { name: 'PMO Dashboard', page: '' },\r\n//     { name: 'Revenue Forecast – Early View', page: 'upload' },\r\n//     { name: 'Account Level', page: 'accounts' },\r\n//     { name: 'Project Type Level', page: '' },\r\n//   ];\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n//       style={{ background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)' }}\r\n//     >\r\n//       <div\r\n//         className=\"card shadow p-4 p-md-5 w-100\"\r\n//         style={{ maxWidth: '1100px', backgroundColor: '#ffffffdd', borderRadius: '1rem' }}\r\n//       >\r\n//         <Breadcrumbs path={breadcrumbPath} />\r\n//         <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n//           📊 Project Type Overview for {accountId}{' '}\r\n//           {monthName && year && (\r\n//             <span className=\"ms-2 text-primary\">\r\n//               ({monthName} {year})\r\n//             </span>\r\n//           )}\r\n//         </h2>\r\n\r\n//         {loading ? (\r\n//           <div className=\"d-flex justify-content-center align-items-center\">\r\n//             <div className=\"spinner-border text-primary\" role=\"status\" />\r\n//             <p className=\"ms-3 text-primary\">Loading project types...</p>\r\n//           </div>\r\n//         ) : error ? (\r\n//           <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n//             <p className=\"fs-4\">{error}</p>\r\n//             <button className=\"btn btn-primary mt-3\" onClick={() => navigate(-1)}>\r\n//               Go Back\r\n//             </button>\r\n//           </div>\r\n//         ) : (\r\n//           <div className=\"table-responsive rounded\">\r\n//             <table\r\n//               ref={tableRef}\r\n//               className=\"display table table-hover align-middle table-bordered mb-0\"\r\n//               style={{ width: '100%' }}\r\n//             >\r\n//               <thead className=\"text-white\" style={{ background: 'linear-gradient(to right, #1d4ed8, #2563eb)' }}>\r\n//                 <tr>\r\n//                   <th>Project Type</th>\r\n//                   <th>Total Revenue</th>\r\n//                   <th>Forecast Revenue</th>\r\n//                   <th>Difference</th>\r\n//                   <th className=\"text-center\">View</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {rows.map((r) => (\r\n//                   <tr key={r.projectType}>\r\n//                     <td>{r.projectType}</td>\r\n//                     <td>{formatCurrency(r.totalRevenue)}</td>\r\n//                     <td>{formatCurrency(r.forecastNetRevenue)}</td>\r\n//                     <td className={r.difference < 0 ? 'text-danger' : 'text-success'}>\r\n//                       {r.difference > 0 ? '+' : ''}\r\n//                       {r.difference.toFixed(2)}\r\n//                     </td>\r\n//                     <td className=\"text-center\">\r\n//                       <button\r\n//                         className=\"btn btn-sm btn-outline-primary rounded-pill px-3\"\r\n//                         onClick={() =>\r\n//                           navigate(`/project-level`, {\r\n//                             state: {\r\n//                               accountId,\r\n//                               projectType: r.projectType,\r\n//                               month,\r\n//                               year,\r\n//                               monthName,\r\n//                             },\r\n//                           })\r\n//                         }\r\n//                       >\r\n//                         View\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ProjectTypeLevel;\r\n\r\n\r\n \r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n \r\nconst ProjectLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { accountId: urlAccountId } = useParams();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n \r\n  const [projects, setProjects]       = useState([]);\r\n  const [loading, setLoading]         = useState(true);\r\n  const [error, setError]             = useState(null);\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear]   = useState(null);\r\n  const [activeAccountId, setActiveAccountId]   = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n \r\n  const BACKEND_URL = 'http://localhost:8081';\r\n \r\n  // Currency settings\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  } = commonData.currencySettings;\r\n \r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits\r\n    });\r\n \r\n  // Placeholder download logic\r\n  const handleDownloadData = () => {\r\n    alert('Download Project Data button clicked!');\r\n    // Implement actual CSV/Excel download here\r\n  };\r\n \r\n  // Load Poppins font\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n \r\n  // Fetch project data when context changes\r\n  useEffect(() => {\r\n    const fetchProjectData = async (month, year, accId) => {\r\n      setLoading(true);\r\n      setError(null);\r\n \r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, accId })\r\n        });\r\n        if (!resp.ok) {\r\n          const errText = await resp.text();\r\n          throw new Error(`status: ${resp.status}, message: ${errText || resp.statusText}`);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setProjects(list);\r\n \r\n        // Derive accountName from response or sessionStorage\r\n        if (list.length > 0 && list[0].accountName) {\r\n          setActiveAccountName(list[0].accountName);\r\n        } else {\r\n          const storedName = sessionStorage.getItem('lastFetchedProjectAccountName');\r\n          setActiveAccountName(storedName || accId);\r\n        }\r\n      } catch (e) {\r\n        console.error('Error fetching project data:', e);\r\n        setError(`Failed to load project data: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n \r\n    // Determine context from location.state, URL, or sessionStorage\r\n    let monthToUse     = location.state?.month;\r\n    let yearToUse      = location.state?.year;\r\n    let accountIdToUse = urlAccountId;\r\n    let accountNameToUse = location.state?.accountName;\r\n \r\n    if (!monthToUse || !yearToUse || !accountNameToUse) {\r\n      const sm  = sessionStorage.getItem('lastFetchedProjectMonth');\r\n      const sy  = sessionStorage.getItem('lastFetchedProjectYear');\r\n      const sa  = sessionStorage.getItem('lastFetchedProjectAccountId');\r\n      const san = sessionStorage.getItem('lastFetchedProjectAccountName');\r\n      if (sm && sy && sa) {\r\n        monthToUse      = parseInt(sm, 10);\r\n        yearToUse       = parseInt(sy, 10);\r\n        accountIdToUse  = sa;\r\n        accountNameToUse = san;\r\n      }\r\n    }\r\n \r\n    if (monthToUse && yearToUse && accountIdToUse) {\r\n      if (\r\n        monthToUse !== activeMonth ||\r\n        yearToUse  !== activeYear ||\r\n        accountIdToUse !== activeAccountId ||\r\n        projects.length === 0\r\n      ) {\r\n        setActiveMonth(monthToUse);\r\n        setActiveYear(yearToUse);\r\n        setActiveAccountId(accountIdToUse);\r\n        if (accountNameToUse) {\r\n          setActiveAccountName(accountNameToUse);\r\n        }\r\n        // Persist context\r\n        sessionStorage.setItem('lastFetchedProjectMonth', monthToUse.toString());\r\n        sessionStorage.setItem('lastFetchedProjectYear', yearToUse.toString());\r\n        sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\r\n        if (accountNameToUse) {\r\n          sessionStorage.setItem('lastFetchedProjectAccountName', accountNameToUse);\r\n        }\r\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setError('Missing project context (month, year, or account ID). Please go back.');\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    location.state,\r\n    urlAccountId,\r\n    activeMonth,\r\n    activeYear,\r\n    activeAccountId,\r\n    projects.length\r\n  ]);\r\n \r\n  // Initialize / destroy DataTable when projects load\r\n  useEffect(() => {\r\n    if (!loading && projects.length > 0 && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n      }\r\n      $tbl.DataTable({\r\n        paging:    true,\r\n        searching: true,\r\n        ordering:  true,\r\n        info:      true,\r\n        autoWidth: false\r\n      });\r\n    }\r\n    return () => {\r\n      if (tableRef.current) {\r\n        const $tbl = $(tableRef.current);\r\n        if ($.fn.DataTable.isDataTable($tbl)) {\r\n          $tbl.DataTable().destroy();\r\n        }\r\n      }\r\n    };\r\n  }, [loading, projects]);\r\n \r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    { name: 'Account Level', page: 'accounts' },\r\n    {\r\n      name: `Projects (${activeAccountName})`,\r\n      page: `accounts/${activeAccountId}/projects`\r\n    }\r\n  ];\r\n \r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n \r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() => navigate('/accounts')}\r\n        >\r\n          Go to Account Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n \r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\"\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth:      '1200px',\r\n          backgroundColor:'#ffffffdd',\r\n          borderRadius:  '1rem'\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n \r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h2 className=\"mb-0 fw-semibold text-dark\">\r\n            📁 Project Level Overview{' '}\r\n            {activeAccountId ? `for ${activeAccountName}` : ''}\r\n          </h2>\r\n          {projects.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n              title=\"Download Project Data\"\r\n            >\r\n              <i className=\"bi bi-download me-2\"></i> Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n \r\n        <div className=\"table-responsive rounded\">\r\n          <table\r\n            ref={tableRef}\r\n            className=\"display table table-hover align-middle table-borderless mb-0\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            <thead\r\n              className=\"text-white\"\r\n              style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\r\n            >\r\n              <tr>\r\n                <th>Project ID</th>\r\n                <th>Project Name</th>\r\n                <th>Account ID</th>\r\n                <th>Account Name</th>\r\n                <th>Total Associates</th>\r\n                <th>Company Hours</th>\r\n                <th>Client Hours</th>\r\n                <th>Variance Hours</th>\r\n                <th>Revenue</th>\r\n                <th className=\"text-center\">View</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {projects.map(project => (\r\n                <tr key={project.projectId}>\r\n                  <td>{project.projectId}</td>\r\n                  <td>{project.projectName}</td>\r\n                  <td>{project.accountId}</td>\r\n                  <td>{project.accountName}</td>\r\n                  <td>{project.totalAssociatesCount}</td>\r\n                  <td>{project.totalCompanyHours}</td>\r\n                  <td>{project.totalClientHours}</td>\r\n                  <td>{project.varianceHours}</td>\r\n                  <td>{formatCurrency(project.revenue)}</td>\r\n                  <td className=\"text-center\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                      onClick={() =>\r\n                        navigate(\r\n                          `/projects/${project.projectId}/associates`,\r\n                          {\r\n                            state: {\r\n                              projectId:   project.projectId,\r\n                              projectName: project.projectName,\r\n                              accountId:   project.accountId,\r\n                              accountName: project.accountName,\r\n                              month:       activeMonth,\r\n                              year:        activeYear\r\n                            }\r\n                          }\r\n                        )\r\n                      }\r\n                      title=\"View Associates\"\r\n                    >\r\n                      🔍\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default ProjectLevel;\r\n \r\n "],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}