{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Details\\\\SbuLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Table, Alert, Spinner, Button } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SbuLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    month,\n    year\n  } = useLocation().state || {};\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // 1) Build your Intl.NumberFormat right here from commonData\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatter = new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // 2) Convert exponent strings like \"e7\" → 10^7, then format\n  const formatValue = val => {\n    if (typeof val === 'string') {\n      const m = val.match(/^e(\\d+)$/i);\n      if (m) {\n        val = Math.pow(10, Number(m[1]));\n      } else if (!isNaN(val)) {\n        val = Number(val);\n      }\n    }\n\n    // Check if the value is a number and not NaN/Infinity before formatting as currency\n    if (typeof val === 'number' && isFinite(val)) {\n      return formatter.format(val);\n    }\n    return val; // Return original value if not a number or not meant for currency formatting\n  };\n\n  // helper to get month name\n  const getMonthName = m => new Date(year, m - 1).toLocaleString('en-US', {\n    month: 'long'\n  });\n  useEffect(() => {\n    if (!month || !year) {\n      setError('Month and year missing. Go back and select a period.');\n      setLoading(false);\n      return;\n    }\n    const fetchSbu = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        const payload = {\n          month: Number(month),\n          year: Number(year),\n          monthNameParam: getMonthName(month).toLowerCase()\n        };\n        const resp = await axios.post('http://localhost:8081/api/sbu', payload);\n        setData(resp.data);\n      } catch (err) {\n        var _err$response;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSbu();\n  }, [month, year]);\n\n  // Filter out specific revenue fields for display in the table,\n  // assuming your backend response might include these as separate fields\n  const columns = data.length ? Object.keys(data[0]).filter(col => {\n    const lc = col.toLowerCase();\n    return lc !== 'revenue' &&\n    // Example: if your backend returns a generic 'revenue' field\n    lc !== 'sburevenue' &&\n    // Example: if your backend returns 'sbuRevenue'\n    lc !== 'totalsburevenue' // Example: if your backend returns 'totalSbuRevenue'\n    ;\n  }) : [];\n\n  // Append a 'View' column to the headers\n  const headerCols = [...columns, 'View'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: [{\n          name: 'SBU Level',\n          page: 'sbu'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"link\",\n        className: \"ps-0 mb-4\",\n        onClick: () => navigate(-1),\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          className: \"feather feather-chevron-left me-2\",\n          children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n            points: \"15 18 9 12 15 6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), \"Back\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 fw-semibold text-dark\",\n        children: [\"\\uD83C\\uDFE2 SBU Summary for\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-primary\",\n          children: [getMonthName(month), \" \", year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center my-5\",\n        children: [/*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          role: \"status\",\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading SBU Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload') // Assuming /upload is the starting point for data selection\n          ,\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: headerCols.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: col\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatValue(row[col])\n              }, col, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 23\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  variant: \"primary\",\n                  onClick: () => navigate('/accounts', {\n                    state: {\n                      month,\n                      year,\n                      // IMPORTANT: Use the actual SBU name/title field from your backend response\n                      // For example, if your backend returns 'sbuName' for the SBU title:\n                      sbu: row.sbuName // Assuming 'sbuName' is the field for SBU title\n                      // If it's 'title', 'name', or something else, adjust accordingly.\n                    }\n                  }),\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(SbuLevel, \"TYwVLPnslVpEk7yPc/h0eOaC6p8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SbuLevel;\nexport default SbuLevel;\nvar _c;\n$RefreshReg$(_c, \"SbuLevel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Table","Alert","Spinner","Button","useLocation","useNavigate","Breadcrumbs","commonData","jsxDEV","_jsxDEV","SbuLevel","_s","navigate","month","year","state","data","setData","loading","setLoading","error","setError","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatter","Intl","NumberFormat","style","formatValue","val","m","match","Math","pow","Number","isNaN","isFinite","format","getMonthName","Date","toLocaleString","fetchSbu","payload","monthNameParam","toLowerCase","resp","post","err","_err$response","response","message","columns","length","Object","keys","filter","col","lc","headerCols","className","background","fontFamily","children","maxWidth","backgroundColor","borderRadius","path","name","page","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","animation","role","map","row","idx","size","sbu","sbuName","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Details/SbuLevel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n  Container,\r\n  Table,\r\n  Alert,\r\n  Spinner,\r\n  Button\r\n} from 'react-bootstrap'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport Breadcrumbs from '../Breadcrumbs'\r\nimport commonData from '../../data/commonData.json'\r\n\r\nconst SbuLevel = () => {\r\n  const navigate = useNavigate()\r\n  const { month, year } = useLocation().state || {}\r\n\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  // 1) Build your Intl.NumberFormat right here from commonData\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  } = commonData.currencySettings\r\n\r\n  const formatter = new Intl.NumberFormat(locale, {\r\n    style: 'currency',\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  })\r\n\r\n  // 2) Convert exponent strings like \"e7\" → 10^7, then format\r\n  const formatValue = (val) => {\r\n    if (typeof val === 'string') {\r\n      const m = val.match(/^e(\\d+)$/i)\r\n      if (m) {\r\n        val = Math.pow(10, Number(m[1]))\r\n      } else if (!isNaN(val)) {\r\n        val = Number(val)\r\n      }\r\n    }\r\n\r\n    // Check if the value is a number and not NaN/Infinity before formatting as currency\r\n    if (typeof val === 'number' && isFinite(val)) {\r\n      return formatter.format(val)\r\n    }\r\n    return val // Return original value if not a number or not meant for currency formatting\r\n  }\r\n\r\n  // helper to get month name\r\n  const getMonthName = (m) =>\r\n    new Date(year, m - 1).toLocaleString('en-US', { month: 'long' })\r\n\r\n  useEffect(() => {\r\n    if (!month || !year) {\r\n      setError('Month and year missing. Go back and select a period.')\r\n      setLoading(false)\r\n      return\r\n    }\r\n\r\n    const fetchSbu = async () => {\r\n      setLoading(true)\r\n      setError('')\r\n      try {\r\n        const payload = {\r\n          month: Number(month),\r\n          year: Number(year),\r\n          monthNameParam: getMonthName(month).toLowerCase()\r\n        }\r\n        const resp = await axios.post(\r\n          'http://localhost:8081/api/sbu',\r\n          payload\r\n        )\r\n        setData(resp.data)\r\n      } catch (err) {\r\n        setError(err.response?.data || err.message)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchSbu()\r\n  }, [month, year])\r\n\r\n  // Filter out specific revenue fields for display in the table,\r\n  // assuming your backend response might include these as separate fields\r\n  const columns = data.length\r\n    ? Object.keys(data[0]).filter((col) => {\r\n        const lc = col.toLowerCase()\r\n        return (\r\n          lc !== 'revenue' && // Example: if your backend returns a generic 'revenue' field\r\n          lc !== 'sburevenue' && // Example: if your backend returns 'sbuRevenue'\r\n          lc !== 'totalsburevenue' // Example: if your backend returns 'totalSbuRevenue'\r\n        )\r\n      })\r\n    : []\r\n\r\n  // Append a 'View' column to the headers\r\n  const headerCols = [...columns, 'View']\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={[{ name: 'SBU Level', page: 'sbu' }]} />\r\n\r\n        <Button variant=\"link\" className=\"ps-0 mb-4\" onClick={() => navigate(-1)}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-chevron-left me-2\">\r\n              <polyline points=\"15 18 9 12 15 6\"></polyline>\r\n          </svg>\r\n          Back\r\n        </Button>\r\n\r\n        <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n          🏢 SBU Summary for{' '}\r\n          <span className=\"text-primary\">\r\n            {getMonthName(month)} {year}\r\n          </span>\r\n        </h2>\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center my-5\">\r\n            <Spinner animation=\"border\" role=\"status\" className=\"me-2\" />\r\n            <p className=\"ms-3 text-primary\">Loading SBU Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')} // Assuming /upload is the starting point for data selection\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  {headerCols.map((col) => (\r\n                    <th key={col}>{col}</th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {data.map((row, idx) => (\r\n                  <tr key={idx}>\r\n                    {columns.map((col) => (\r\n                      <td key={col}>{formatValue(row[col])}</td>\r\n                    ))}\r\n\r\n                    <td className=\"text-center\">\r\n                      <Button\r\n                        size=\"sm\"\r\n                        variant=\"primary\"\r\n                        onClick={() =>\r\n                          navigate('/accounts', {\r\n                            state: { \r\n                              month, \r\n                              year, \r\n                              // IMPORTANT: Use the actual SBU name/title field from your backend response\r\n                              // For example, if your backend returns 'sbuName' for the SBU title:\r\n                              sbu: row.sbuName // Assuming 'sbuName' is the field for SBU title\r\n                              // If it's 'title', 'name', or something else, adjust accordingly.\r\n                            }\r\n                          })\r\n                        }\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SbuLevel\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}