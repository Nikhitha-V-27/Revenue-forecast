{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\AccountLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport * as XLSX from 'xlsx'; // Import XLSX for Excel export\nimport { saveAs } from 'file-saver'; // Import saveAs for triggering file download\n\n// Utility to convert month number to month name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const date = new Date();\n  date.setMonth(monthNumber - 1);\n  return date.toLocaleString('en-US', {\n    month: 'long'\n  });\n};\n\n// Filterable columns (indices from 0 to 5)\nconst FILTERABLE_COL_INDICES = [0, 1, 2, 3, 4, 5];\nconst AccountLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const tableInstanceRef = useRef(null); // Ref to hold the DataTable instance\n  const dropdownRef = useRef(null); // Ref for the filter dropdown\n\n  // UI state\n  const [accounts, setAccounts] = useState([]);\n  const [commentsMap, setCommentsMap] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [commentInput, setCommentInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Active filters\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeMonthName, setActiveMonthName] = useState(null);\n  const [activeSbu, setActiveSbu] = useState(null);\n\n  // Dropdown filter state\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [dropdownColIdx, setDropdownColIdx] = useState(null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const [dropdownValues, setDropdownValues] = useState([]); // Unique values for the current dropdown\n  const [tempSelections, setTempSelections] = useState(new Set()); // Selections in the open dropdown\n  const [listQuery, setListQuery] = useState(''); // Search query for values within the dropdown\n  const [columnSelections, setColumnSelections] = useState({}); // { [colIdx]: Set<string> } - Applied filters\n\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (value = 0) => value.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  /**\r\n   * Handles the \"Download Data\" button click.\r\n   * Generates an Excel (XLSX) file from the filtered 'accounts' data and triggers a download.\r\n   */\n  const handleDownloadData = () => {\n    // Get the currently filtered data from DataTables\n    const dataToExport = tableInstanceRef.current ? tableInstanceRef.current.rows({\n      search: 'applied'\n    }).data().toArray() : accounts; // Fallback to all accounts if DataTable isn't initialized or no filter applied\n\n    if (dataToExport.length === 0) {\n      console.log('No data to download after applying filters.');\n      // Optionally, show a user-friendly message here\n      return;\n    }\n    const headers = ['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference', 'Comment'];\n    const dataForExcel = dataToExport.map(account => ({\n      'Account ID': account.accountId,\n      'Account Name': account.accountName,\n      'Total Projects': account.totalProjects,\n      'Total Revenue': formatCurrency(account.totalRevenue),\n      'Forecast Revenue': formatCurrency(account.forecastNetRevenue),\n      'Revenue Difference': formatCurrency(account.difference),\n      'Comment': account.accountComment || ''\n    }));\n    const wb = XLSX.utils.book_new();\n    const ws = XLSX.utils.json_to_sheet(dataForExcel, {\n      header: headers\n    });\n    XLSX.utils.book_append_sheet(wb, ws, 'Account Data');\n    const excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const dataBlob = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    const monthName = getMonthName(activeMonth);\n    const filename = `Account_Data_${activeSbu}_${monthName}_${activeYear}.xlsx`;\n    saveAs(dataBlob, filename);\n    console.log('Downloading filtered account data in Excel format!');\n  };\n\n  // Load Poppins font + inject custom CSS for filter icons/dropdown\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n\n    // Inject CSS to hide DataTables sorting arrows and style custom filters\n    const style = document.createElement('style');\n    style.innerHTML = `\n      table.dataTable thead .sorting,\n      table.dataTable thead .sorting_asc,\n      table.dataTable thead .sorting_desc,\n      table.dataTable thead .sorting_asc_disabled,\n      table.dataTable thead .sorting_desc_disabled {\n        background-image: none !important;\n        cursor: default !important;\n      }\n      .filter-icon-btn {\n        border: none;\n        background: transparent;\n        padding: 2px;\n        margin-left: 8px;\n        cursor: pointer;\n        display: inline-flex;\n        align-items: center;\n        vertical-align: middle; /* Align icon vertically with text */\n      }\n      .filter-icon-btn svg { fill: #6b7280; } /* Default icon color */\n      .filter-icon-btn.active svg { fill: #1d4ed8; } /* Active filter icon color */\n      .excel-filter-dropdown {\n        position: absolute;\n        z-index: 2000;\n        width: 260px;\n        background: #fff;\n        border: 1px solid #e5e7eb;\n        border-radius: 8px;\n        box-shadow: 0 10px 25px rgba(0,0,0,0.1);\n        font-family: 'Poppins', sans-serif; /* Ensure dropdown uses Poppins */\n      }\n      .excel-filter-header {\n        padding: 10px 12px;\n        border-bottom: 1px solid #f1f5f9;\n        background: #f8fafc;\n        border-top-left-radius: 8px;\n        border-top-right-radius: 8px;\n      }\n      .excel-filter-body {\n        max-height: 240px;\n        overflow-y: auto; /* Enable vertical scrolling */\n        padding: 8px 12px;\n      }\n      .excel-filter-footer {\n        display: flex;\n        justify-content: flex-end;\n        gap: 8px;\n        padding: 10px 12px;\n        border-top: 1px solid #f1f5f9;\n      }\n      .form-check-label {\n        margin-bottom: 0; /* Remove default margin for checkboxes */\n        cursor: pointer;\n      }\n    `;\n    document.head.appendChild(style);\n  }, []);\n\n  // Fetch accounts when filters change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const payload = {\n          month,\n          year,\n          monthNameParam,\n          sbu\n        };\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(txt || resp.statusText);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setAccounts(list);\n\n        // seed comments map\n        const initMap = {};\n        list.forEach(acc => {\n          if (acc.accountComment) {\n            initMap[acc.accountId] = acc.accountComment;\n          }\n        });\n        setCommentsMap(initMap);\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load accounts: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Read from React state, sessionStorage, or URL query\n    const qs = new URLSearchParams(location.search);\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let s = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.sbu;\n    if (!m) {\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\n      const qm = qs.get('month');\n      m = sm !== null && sm !== void 0 ? sm : qm;\n    }\n    if (!y) {\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\n      const qy = qs.get('year');\n      y = sy !== null && sy !== void 0 ? sy : qy;\n    }\n    if (!s) {\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\n      const qsS = qs.get('sbu');\n      s = ss !== null && ss !== void 0 ? ss : qsS;\n    }\n\n    // Normalize numeric values\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && s) {\n      const mn = getMonthName(m);\n      if (m !== activeMonth || y !== activeYear || s !== activeSbu || accounts.length === 0) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveMonthName(mn);\n        setActiveSbu(s);\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\n        fetchAccountData(m, y, mn, s);\n      }\n    } else {\n      setError('Missing month, year or SBU. Please navigate here with those parameters.');\n      setLoading(false);\n    }\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\n\n  // Initialize & destroy DataTable (ordering disabled; arrows hidden). Re-apply filters after init.\n  useEffect(() => {\n    if (!loading && accounts.length > 0 && tableRef.current) {\n      const $tbl = $(tableRef.current);\n\n      // Destroy existing DataTable instance if it exists\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        tableInstanceRef.current.destroy();\n      }\n\n      // Initialize DataTable\n      const instance = $tbl.DataTable({\n        paging: true,\n        searching: true,\n        // Global search\n        ordering: false,\n        // Disable all default sorting arrows\n        info: true,\n        autoWidth: false,\n        data: accounts,\n        // Pass the accounts data\n        columns: [{\n          data: 'accountId',\n          orderable: false\n        },\n        // Set to false to remove sorting arrows\n        {\n          data: 'accountName',\n          orderable: false\n        },\n        // Already false, kept as is\n        {\n          data: 'totalProjects',\n          orderable: false\n        }, {\n          data: 'totalRevenue',\n          orderable: false,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'forecastNetRevenue',\n          orderable: false,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'difference',\n          orderable: false,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'accountComment',\n          orderable: false,\n          // Comment column not sortable\n          className: 'text-center',\n          render: function (data, type, row) {\n            return `\n                <button class=\"btn btn-sm btn-outline-secondary comment-btn\" data-account-id=\"${row.accountId}\">\n                  💬\n                </button>\n              `;\n          }\n        }, {\n          data: null,\n          orderable: false,\n          // View button column not sortable\n          className: 'text-center',\n          render: function (data, type, row) {\n            return `\n                <button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" data-account-id=\"${row.accountId}\">\n                  🔍\n                </button>\n              `;\n          }\n        }],\n        order: [] // Remove default sorting to prevent initial sorting on disabled columns\n        // No initComplete for column inputs, as we're using custom dropdowns\n      });\n      tableInstanceRef.current = instance;\n      // Re-apply any previously selected filters after DataTables is initialized\n      applyDataTablesFilters(instance);\n\n      // Re-attach event listeners for dynamically rendered buttons (comments and view)\n      // DataTables re-renders rows, so we need delegated event listeners on the table body\n      $tbl.off('click', '.comment-btn').on('click', '.comment-btn', function () {\n        const accId = $(this).data('account-id');\n        openCommentModal(accId);\n      });\n      $tbl.off('click', '.view-btn').on('click', '.view-btn', function () {\n        const accId = $(this).data('account-id');\n        navigate(`/accounts/${accId}/project-types`, {\n          state: {\n            accId: accId,\n            month: activeMonth,\n            year: activeYear,\n            monthName: activeMonthName,\n            sbu: activeSbu\n          }\n        });\n      });\n    }\n\n    // Cleanup function to destroy DataTable instance and event listeners\n    return () => {\n      if (tableInstanceRef.current) {\n        tableInstanceRef.current.destroy();\n        tableInstanceRef.current = null;\n      }\n      // Remove delegated event listeners to prevent memory leaks\n      // Ensure we target the table element for event listener removal\n      $(tableRef.current).off('click', '.comment-btn');\n      $(tableRef.current).off('click', '.view-btn');\n    };\n    // Re-run effect if loading state changes or accounts data changes (for re-initialization)\n  }, [loading, accounts, activeMonth, activeYear, activeMonthName, activeSbu]);\n\n  // Close dropdown on outside click or Esc key press\n  useEffect(() => {\n    if (!dropdownOpen) return;\n    const onDocClick = e => {\n      // Check if click is inside the dropdown or the filter icon button\n      if (dropdownRef.current && dropdownRef.current.contains(e.target)) return;\n      if ($(e.target).closest('.filter-icon-btn').length) return;\n      setDropdownOpen(false);\n    };\n    const onKeyDown = e => {\n      if (e.key === 'Escape') setDropdownOpen(false);\n    };\n    document.addEventListener('mousedown', onDocClick);\n    document.addEventListener('keydown', onKeyDown);\n    return () => {\n      document.removeEventListener('mousedown', onDocClick);\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [dropdownOpen]);\n\n  // Helpers: Get cell's displayed value and unique values for a column\n  const getCellDisplayValue = (acc, colIdx) => {\n    var _acc$accountId, _acc$accountName, _acc$totalProjects, _acc$totalRevenue, _acc$forecastNetReven, _acc$difference;\n    switch (colIdx) {\n      case 0:\n        return String((_acc$accountId = acc.accountId) !== null && _acc$accountId !== void 0 ? _acc$accountId : '');\n      case 1:\n        return String((_acc$accountName = acc.accountName) !== null && _acc$accountName !== void 0 ? _acc$accountName : '');\n      case 2:\n        return String((_acc$totalProjects = acc.totalProjects) !== null && _acc$totalProjects !== void 0 ? _acc$totalProjects : '');\n      case 3:\n        return formatCurrency((_acc$totalRevenue = acc.totalRevenue) !== null && _acc$totalRevenue !== void 0 ? _acc$totalRevenue : 0);\n      case 4:\n        return formatCurrency((_acc$forecastNetReven = acc.forecastNetRevenue) !== null && _acc$forecastNetReven !== void 0 ? _acc$forecastNetReven : 0);\n      case 5:\n        return formatCurrency((_acc$difference = acc.difference) !== null && _acc$difference !== void 0 ? _acc$difference : 0);\n      default:\n        return '';\n    }\n  };\n  const getUniqueValuesForColumn = colIdx => {\n    const set = new Set();\n    accounts.forEach(acc => {\n      set.add(getCellDisplayValue(acc, colIdx));\n    });\n    return Array.from(set).sort((a, b) => String(a).localeCompare(String(b), undefined, {\n      numeric: true\n    }));\n  };\n\n  // Check if a column has an active filter applied (some but not all values selected)\n  const isColumnFiltered = colIdx => {\n    if (!FILTERABLE_COL_INDICES.includes(colIdx)) return false;\n    const appliedSet = columnSelections[colIdx];\n    if (!appliedSet) return false; // No filter applied\n    const uniqueVals = getUniqueValuesForColumn(colIdx);\n    // Filter is active if some values are selected but not all\n    return appliedSet.size > 0 && appliedSet.size < uniqueVals.length;\n  };\n\n  // Open dropdown for a column\n  const openFilterDropdown = (event, colIdx) => {\n    if (!FILTERABLE_COL_INDICES.includes(colIdx)) return;\n    const rect = event.currentTarget.getBoundingClientRect(); // Get position of the clicked header button\n    const uniqueValues = getUniqueValuesForColumn(colIdx);\n\n    // Initialize tempSelections based on current applied filter or all unique values\n    const appliedSet = columnSelections[colIdx];\n    const initialSet = appliedSet && appliedSet.size > 0 ? new Set(appliedSet) : new Set(uniqueValues);\n    setDropdownValues(uniqueValues);\n    setTempSelections(initialSet);\n    setListQuery(''); // Clear dropdown search query\n    setDropdownColIdx(colIdx);\n    setDropdownPosition({\n      top: rect.bottom + window.scrollY + 4,\n      // Position below the clicked header\n      left: rect.left + window.scrollX\n    });\n    setDropdownOpen(true);\n  };\n\n  // Dropdown interactions\n  const toggleTempSelection = value => {\n    const next = new Set(tempSelections);\n    if (next.has(value)) next.delete(value);else next.add(value);\n    setTempSelections(next);\n  };\n  const selectAllTemp = () => setTempSelections(new Set(dropdownValues));\n  const clearAllTemp = () => setTempSelections(new Set());\n\n  // Apply filter to DataTable\n  const applyFilter = () => {\n    if (dropdownColIdx == null || !tableInstanceRef.current) return;\n\n    // Update the columnSelections state with the new temp selections\n    setColumnSelections(prev => ({\n      ...prev,\n      [dropdownColIdx]: new Set(tempSelections)\n    }));\n\n    // Re-apply all filters via DataTables\n    applyDataTablesFilters(tableInstanceRef.current, {\n      overrideColIdx: dropdownColIdx,\n      overrideSet: new Set(tempSelections)\n    });\n    setDropdownOpen(false); // Close dropdown\n  };\n\n  // Reset filter for the current column\n  const resetFilter = () => {\n    if (dropdownColIdx == null || !tableInstanceRef.current) return;\n\n    // Remove the filter for this column from state\n    setColumnSelections(prev => {\n      const next = {\n        ...prev\n      };\n      delete next[dropdownColIdx];\n      return next;\n    });\n\n    // Clear the filter for this column in DataTables and redraw\n    tableInstanceRef.current.column(dropdownColIdx).search('').draw();\n    setDropdownOpen(false); // Close dropdown\n  };\n\n  // Apply all active column filters to DataTables instance\n  const applyDataTablesFilters = (instance, options = {}) => {\n    FILTERABLE_COL_INDICES.forEach(colIdx => {\n      const uniqueValues = getUniqueValuesForColumn(colIdx);\n      const appliedSet = options.overrideColIdx === colIdx ? options.overrideSet // Use override for the currently changed column\n      : columnSelections[colIdx]; // Otherwise, use the stored selection\n\n      // If no selections, all selected, or the column is not filterable by this mechanism, clear its filter\n      if (!appliedSet || appliedSet.size === 0 || appliedSet.size === uniqueValues.length) {\n        instance.column(colIdx).search('', false, false, true); // Clear filter\n      } else {\n        // Build a regex to match any of the selected values\n        const escaped = Array.from(appliedSet).map(v => $.fn.dataTable.util.escapeRegex(String(v)));\n        const regex = `^(${escaped.join('|')})$`; // Match exactly one of the selected values\n        instance.column(colIdx).search(regex, true, false, true); // Apply regex filter\n      }\n    });\n    instance.draw(); // Redraw the table to apply filters\n  };\n\n  // Close dropdown on outside click or Esc key press\n  useEffect(() => {\n    if (!dropdownOpen) return;\n    const onDocClick = e => {\n      // Check if click is inside the dropdown or the filter icon button\n      if (dropdownRef.current && dropdownRef.current.contains(e.target)) return;\n      if ($(e.target).closest('.filter-icon-btn').length) return;\n      setDropdownOpen(false);\n    };\n    const onKeyDown = e => {\n      if (e.key === 'Escape') setDropdownOpen(false);\n    };\n    document.addEventListener('mousedown', onDocClick);\n    document.addEventListener('keydown', onKeyDown);\n    return () => {\n      document.removeEventListener('mousedown', onDocClick);\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [dropdownOpen]);\n\n  // Define breadcrumb path for navigation\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  },\n  // Always starts with Dashboard\n  {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  },\n  // Added this line\n  ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu'\n  }] : []),\n  // Conditionally add SBU Level\n  {\n    name: 'Account Level',\n    page: 'accounts'\n  }].filter(Boolean);\n\n  // Hamburger icon component\n  const HamburgerIcon = ({\n    active\n  }) => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"14\",\n    height: \"14\",\n    viewBox: \"0 0 24 24\",\n    \"aria-hidden\": \"true\",\n    style: {\n      verticalAlign: 'middle',\n      fill: active ? '#1d4ed8' : '#6b7280'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M3 6h18v2H3zM3 11h18v2H3zM3 16h18v2H3z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 553,\n    columnNumber: 5\n  }, this);\n\n  // Filter dropdown filtered list (based on internal search query)\n  const filteredDropdownValues = dropdownValues.filter(v => String(v).toLowerCase().includes(listQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0 fw-semibold text-dark\",\n          children: [\"\\uD83C\\uDFE2 Account Level Overview \\u2013 \", activeSbu, activeMonthName && activeYear && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2 text-primary\",\n            children: [\"(\", activeMonthName, \" \", activeYear, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Account Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Account Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload'),\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: ['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference', 'Comment', 'View'].map((title, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex justify-content-between align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 25\n                  }, this), FILTERABLE_COL_INDICES.includes(idx) && /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: 'filter-icon-btn ' + (isColumnFiltered(idx) ? 'active' : ''),\n                    onClick: e => openFilterDropdown(e, idx),\n                    title: \"Filter\",\n                    children: /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n                      active: isColumnFiltered(idx)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 654,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 645,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 23\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: accounts.map(acc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: getCellDisplayValue(acc, 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 665,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getCellDisplayValue(acc, 1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getCellDisplayValue(acc, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getCellDisplayValue(acc, 3)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getCellDisplayValue(acc, 4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getCellDisplayValue(acc, 5)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-secondary comment-btn\",\n                  \"data-account-id\": acc.accountId,\n                  children: \"\\uD83D\\uDCAC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 672,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle view-btn\",\n                  \"data-account-id\": acc.accountId,\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 680,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 21\n              }, this)]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this), dropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dropdownRef,\n      className: \"excel-filter-dropdown\",\n      style: {\n        top: dropdownPosition.top,\n        left: dropdownPosition.left\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-filter-header\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control form-control-sm\",\n          placeholder: \"Search values...\",\n          value: listQuery,\n          onChange: e => setListQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-filter-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-outline-secondary\",\n            onClick: selectAllTemp,\n            children: \"Select All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-sm btn-outline-secondary\",\n            onClick: clearAllTemp,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this), filteredDropdownValues.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-muted small px-3 py-1\",\n          children: \"No values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 15\n        }, this) : filteredDropdownValues.map(val => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"checkbox\",\n            id: `chk-${dropdownColIdx}-${val}`,\n            checked: tempSelections.has(val),\n            onChange: () => toggleTempSelection(val)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: `chk-${dropdownColIdx}-${val}`,\n            style: {\n              userSelect: 'none'\n            },\n            children: val\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 19\n          }, this)]\n        }, val, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"excel-filter-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-light\",\n          onClick: resetFilter,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-sm btn-primary\",\n          onClick: applyFilter,\n          children: \"Apply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 9\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      style: {\n        backgroundColor: '#00000066'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"Comment for \", currentAccountId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setModalVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setModalVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: saveComment,\n              disabled: !commentInput.trim(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 564,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountLevel, \"yRSf9SfwjXVM3//8vM2g6U3uLPc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AccountLevel;\nexport default AccountLevel;\nvar _c;\n$RefreshReg$(_c, \"AccountLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","$","Breadcrumbs","commonData","XLSX","saveAs","jsxDEV","_jsxDEV","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","FILTERABLE_COL_INDICES","AccountLevel","_s","navigate","location","tableRef","tableInstanceRef","dropdownRef","accounts","setAccounts","commentsMap","setCommentsMap","modalVisible","setModalVisible","currentAccountId","setCurrentAccountId","commentInput","setCommentInput","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeMonthName","setActiveMonthName","activeSbu","setActiveSbu","dropdownOpen","setDropdownOpen","dropdownColIdx","setDropdownColIdx","dropdownPosition","setDropdownPosition","top","left","dropdownValues","setDropdownValues","tempSelections","setTempSelections","Set","listQuery","setListQuery","columnSelections","setColumnSelections","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","value","style","handleDownloadData","dataToExport","current","rows","search","data","toArray","length","console","log","headers","dataForExcel","map","account","accountId","accountName","totalProjects","totalRevenue","forecastNetRevenue","difference","accountComment","wb","utils","book_new","ws","json_to_sheet","header","book_append_sheet","excelBuffer","write","bookType","type","dataBlob","Blob","monthName","filename","link","document","createElement","href","rel","head","appendChild","body","fontFamily","innerHTML","_location$state","_location$state2","_location$state3","fetchAccountData","year","monthNameParam","sbu","payload","resp","fetch","method","JSON","stringify","ok","txt","text","Error","statusText","json","list","Array","isArray","filter","Boolean","initMap","forEach","acc","e","message","qs","URLSearchParams","m","state","y","s","sm","sessionStorage","getItem","qm","get","sy","qy","ss","qsS","parseInt","mn","setItem","toString","$tbl","fn","DataTable","isDataTable","destroy","instance","paging","searching","ordering","info","autoWidth","columns","orderable","render","className","row","order","applyDataTablesFilters","off","on","accId","openCommentModal","onDocClick","contains","target","closest","onKeyDown","key","addEventListener","removeEventListener","getCellDisplayValue","colIdx","_acc$accountId","_acc$accountName","_acc$totalProjects","_acc$totalRevenue","_acc$forecastNetReven","_acc$difference","String","getUniqueValuesForColumn","set","add","from","sort","a","b","localeCompare","undefined","numeric","isColumnFiltered","includes","appliedSet","uniqueVals","size","openFilterDropdown","event","rect","currentTarget","getBoundingClientRect","uniqueValues","initialSet","bottom","window","scrollY","scrollX","toggleTempSelection","next","has","delete","selectAllTemp","clearAllTemp","applyFilter","prev","overrideColIdx","overrideSet","resetFilter","column","draw","options","escaped","v","dataTable","util","escapeRegex","regex","join","breadcrumbPath","name","page","HamburgerIcon","active","width","height","viewBox","verticalAlign","fill","children","d","fileName","_jsxFileName","lineNumber","columnNumber","filteredDropdownValues","toLowerCase","background","maxWidth","backgroundColor","borderRadius","path","onClick","title","role","ref","idx","placeholder","onChange","val","id","checked","htmlFor","userSelect","saveComment","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/AccountLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\nimport * as XLSX from 'xlsx'; // Import XLSX for Excel export\r\nimport { saveAs } from 'file-saver'; // Import saveAs for triggering file download\r\n\r\n// Utility to convert month number to month name\r\nconst getMonthName = (monthNumber) => {\r\n  const date = new Date();\r\n  date.setMonth(monthNumber - 1);\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n};\r\n\r\n// Filterable columns (indices from 0 to 5)\r\nconst FILTERABLE_COL_INDICES = [0, 1, 2, 3, 4, 5];\r\n\r\nconst AccountLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n  const tableInstanceRef = useRef(null); // Ref to hold the DataTable instance\r\n  const dropdownRef = useRef(null); // Ref for the filter dropdown\r\n\r\n  // UI state\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Active filters\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeMonthName, setActiveMonthName] = useState(null);\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n\r\n  // Dropdown filter state\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n  const [dropdownColIdx, setDropdownColIdx] = useState(null);\r\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0 });\r\n  const [dropdownValues, setDropdownValues] = useState([]); // Unique values for the current dropdown\r\n  const [tempSelections, setTempSelections] = useState(new Set()); // Selections in the open dropdown\r\n  const [listQuery, setListQuery] = useState(''); // Search query for values within the dropdown\r\n  const [columnSelections, setColumnSelections] = useState({}); // { [colIdx]: Set<string> } - Applied filters\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits,\r\n  } = commonData.currencySettings;\r\n\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits,\r\n    });\r\n\r\n  /**\r\n   * Handles the \"Download Data\" button click.\r\n   * Generates an Excel (XLSX) file from the filtered 'accounts' data and triggers a download.\r\n   */\r\n  const handleDownloadData = () => {\r\n    // Get the currently filtered data from DataTables\r\n    const dataToExport = tableInstanceRef.current\r\n      ? tableInstanceRef.current.rows({ search: 'applied' }).data().toArray()\r\n      : accounts; // Fallback to all accounts if DataTable isn't initialized or no filter applied\r\n\r\n    if (dataToExport.length === 0) {\r\n      console.log('No data to download after applying filters.');\r\n      // Optionally, show a user-friendly message here\r\n      return;\r\n    }\r\n\r\n    const headers = [\r\n      'Account ID',\r\n      'Account Name',\r\n      'Total Projects',\r\n      'Total Revenue',\r\n      'Forecast Revenue',\r\n      'Revenue Difference',\r\n      'Comment',\r\n    ];\r\n\r\n    const dataForExcel = dataToExport.map((account) => ({\r\n      'Account ID': account.accountId,\r\n      'Account Name': account.accountName,\r\n      'Total Projects': account.totalProjects,\r\n      'Total Revenue': formatCurrency(account.totalRevenue),\r\n      'Forecast Revenue': formatCurrency(account.forecastNetRevenue),\r\n      'Revenue Difference': formatCurrency(account.difference),\r\n      'Comment': account.accountComment || '',\r\n    }));\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    const ws = XLSX.utils.json_to_sheet(dataForExcel, { header: headers });\r\n\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Account Data');\r\n\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const dataBlob = new Blob([excelBuffer], {\r\n      type: 'application/octet-stream',\r\n    });\r\n\r\n    const monthName = getMonthName(activeMonth);\r\n    const filename = `Account_Data_${activeSbu}_${monthName}_${activeYear}.xlsx`;\r\n    saveAs(dataBlob, filename);\r\n\r\n    console.log('Downloading filtered account data in Excel format!');\r\n  };\r\n\r\n\r\n  // Load Poppins font + inject custom CSS for filter icons/dropdown\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n\r\n    // Inject CSS to hide DataTables sorting arrows and style custom filters\r\n    const style = document.createElement('style');\r\n    style.innerHTML = `\r\n      table.dataTable thead .sorting,\r\n      table.dataTable thead .sorting_asc,\r\n      table.dataTable thead .sorting_desc,\r\n      table.dataTable thead .sorting_asc_disabled,\r\n      table.dataTable thead .sorting_desc_disabled {\r\n        background-image: none !important;\r\n        cursor: default !important;\r\n      }\r\n      .filter-icon-btn {\r\n        border: none;\r\n        background: transparent;\r\n        padding: 2px;\r\n        margin-left: 8px;\r\n        cursor: pointer;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        vertical-align: middle; /* Align icon vertically with text */\r\n      }\r\n      .filter-icon-btn svg { fill: #6b7280; } /* Default icon color */\r\n      .filter-icon-btn.active svg { fill: #1d4ed8; } /* Active filter icon color */\r\n      .excel-filter-dropdown {\r\n        position: absolute;\r\n        z-index: 2000;\r\n        width: 260px;\r\n        background: #fff;\r\n        border: 1px solid #e5e7eb;\r\n        border-radius: 8px;\r\n        box-shadow: 0 10px 25px rgba(0,0,0,0.1);\r\n        font-family: 'Poppins', sans-serif; /* Ensure dropdown uses Poppins */\r\n      }\r\n      .excel-filter-header {\r\n        padding: 10px 12px;\r\n        border-bottom: 1px solid #f1f5f9;\r\n        background: #f8fafc;\r\n        border-top-left-radius: 8px;\r\n        border-top-right-radius: 8px;\r\n      }\r\n      .excel-filter-body {\r\n        max-height: 240px;\r\n        overflow-y: auto; /* Enable vertical scrolling */\r\n        padding: 8px 12px;\r\n      }\r\n      .excel-filter-footer {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        gap: 8px;\r\n        padding: 10px 12px;\r\n        border-top: 1px solid #f1f5f9;\r\n      }\r\n      .form-check-label {\r\n        margin-bottom: 0; /* Remove default margin for checkboxes */\r\n        cursor: pointer;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }, []);\r\n\r\n  // Fetch accounts when filters change\r\n  useEffect(() => {\r\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const payload = { month, year, monthNameParam, sbu };\r\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload),\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(txt || resp.statusText);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setAccounts(list);\r\n\r\n        // seed comments map\r\n        const initMap = {};\r\n        list.forEach((acc) => {\r\n          if (acc.accountComment) {\r\n            initMap[acc.accountId] = acc.accountComment;\r\n          }\r\n        });\r\n        setCommentsMap(initMap);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load accounts: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Read from React state, sessionStorage, or URL query\r\n    const qs = new URLSearchParams(location.search);\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    let s = location.state?.sbu;\r\n\r\n    if (!m) {\r\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\r\n      const qm = qs.get('month');\r\n      m = sm ?? qm;\r\n    }\r\n    if (!y) {\r\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\r\n      const qy = qs.get('year');\r\n      y = sy ?? qy;\r\n    }\r\n    if (!s) {\r\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\r\n      const qsS = qs.get('sbu');\r\n      s = ss ?? qsS;\r\n    }\r\n\r\n    // Normalize numeric values\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && s) {\r\n      const mn = getMonthName(m);\r\n      if (\r\n        m !== activeMonth ||\r\n        y !== activeYear ||\r\n        s !== activeSbu ||\r\n        accounts.length === 0\r\n      ) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveMonthName(mn);\r\n        setActiveSbu(s);\r\n\r\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\r\n\r\n        fetchAccountData(m, y, mn, s);\r\n      }\r\n    } else {\r\n      setError(\r\n        'Missing month, year or SBU. Please navigate here with those parameters.'\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\r\n\r\n  // Initialize & destroy DataTable (ordering disabled; arrows hidden). Re-apply filters after init.\r\n  useEffect(() => {\r\n    if (!loading && accounts.length > 0 && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n\r\n      // Destroy existing DataTable instance if it exists\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        tableInstanceRef.current.destroy();\r\n      }\r\n\r\n      // Initialize DataTable\r\n      const instance = $tbl.DataTable({\r\n        paging: true,\r\n        searching: true, // Global search\r\n        ordering: false, // Disable all default sorting arrows\r\n        info: true,\r\n        autoWidth: false,\r\n        data: accounts, // Pass the accounts data\r\n        columns: [\r\n          { data: 'accountId', orderable: false }, // Set to false to remove sorting arrows\r\n          { data: 'accountName', orderable: false }, // Already false, kept as is\r\n          { data: 'totalProjects', orderable: false },\r\n          { data: 'totalRevenue', orderable: false, render: (data) => formatCurrency(data) },\r\n          { data: 'forecastNetRevenue', orderable: false, render: (data) => formatCurrency(data) },\r\n          { data: 'difference', orderable: false, render: (data) => formatCurrency(data) },\r\n          {\r\n            data: 'accountComment',\r\n            orderable: false, // Comment column not sortable\r\n            className: 'text-center',\r\n            render: function (data, type, row) {\r\n              return `\r\n                <button class=\"btn btn-sm btn-outline-secondary comment-btn\" data-account-id=\"${row.accountId}\">\r\n                  💬\r\n                </button>\r\n              `;\r\n            }\r\n          },\r\n          {\r\n            data: null,\r\n            orderable: false, // View button column not sortable\r\n            className: 'text-center',\r\n            render: function (data, type, row) {\r\n              return `\r\n                <button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" data-account-id=\"${row.accountId}\">\r\n                  🔍\r\n                </button>\r\n              `;\r\n            }\r\n          },\r\n        ],\r\n        order: [], // Remove default sorting to prevent initial sorting on disabled columns\r\n        // No initComplete for column inputs, as we're using custom dropdowns\r\n      });\r\n\r\n      tableInstanceRef.current = instance;\r\n      // Re-apply any previously selected filters after DataTables is initialized\r\n      applyDataTablesFilters(instance);\r\n\r\n      // Re-attach event listeners for dynamically rendered buttons (comments and view)\r\n      // DataTables re-renders rows, so we need delegated event listeners on the table body\r\n      $tbl.off('click', '.comment-btn').on('click', '.comment-btn', function() {\r\n        const accId = $(this).data('account-id');\r\n        openCommentModal(accId);\r\n      });\r\n\r\n      $tbl.off('click', '.view-btn').on('click', '.view-btn', function() {\r\n        const accId = $(this).data('account-id');\r\n        navigate(`/accounts/${accId}/project-types`, {\r\n          state: {\r\n            accId: accId,\r\n            month: activeMonth,\r\n            year: activeYear,\r\n            monthName: activeMonthName,\r\n            sbu: activeSbu,\r\n          },\r\n        });\r\n      });\r\n    }\r\n\r\n    // Cleanup function to destroy DataTable instance and event listeners\r\n    return () => {\r\n      if (tableInstanceRef.current) {\r\n        tableInstanceRef.current.destroy();\r\n        tableInstanceRef.current = null;\r\n      }\r\n      // Remove delegated event listeners to prevent memory leaks\r\n      // Ensure we target the table element for event listener removal\r\n      $(tableRef.current).off('click', '.comment-btn');\r\n      $(tableRef.current).off('click', '.view-btn');\r\n    };\r\n    // Re-run effect if loading state changes or accounts data changes (for re-initialization)\r\n  }, [loading, accounts, activeMonth, activeYear, activeMonthName, activeSbu]);\r\n\r\n  // Close dropdown on outside click or Esc key press\r\n  useEffect(() => {\r\n    if (!dropdownOpen) return;\r\n    const onDocClick = (e) => {\r\n      // Check if click is inside the dropdown or the filter icon button\r\n      if (dropdownRef.current && dropdownRef.current.contains(e.target)) return;\r\n      if ($(e.target).closest('.filter-icon-btn').length) return;\r\n      setDropdownOpen(false);\r\n    };\r\n    const onKeyDown = (e) => {\r\n      if (e.key === 'Escape') setDropdownOpen(false);\r\n    };\r\n    document.addEventListener('mousedown', onDocClick);\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => {\r\n      document.removeEventListener('mousedown', onDocClick);\r\n      document.removeEventListener('keydown', onKeyDown);\r\n    };\r\n  }, [dropdownOpen]);\r\n\r\n  // Helpers: Get cell's displayed value and unique values for a column\r\n  const getCellDisplayValue = (acc, colIdx) => {\r\n    switch (colIdx) {\r\n      case 0: return String(acc.accountId ?? '');\r\n      case 1: return String(acc.accountName ?? '');\r\n      case 2: return String(acc.totalProjects ?? '');\r\n      case 3: return formatCurrency(acc.totalRevenue ?? 0);\r\n      case 4: return formatCurrency(acc.forecastNetRevenue ?? 0);\r\n      case 5: return formatCurrency(acc.difference ?? 0);\r\n      default: return '';\r\n    }\r\n  };\r\n\r\n  const getUniqueValuesForColumn = (colIdx) => {\r\n    const set = new Set();\r\n    accounts.forEach((acc) => {\r\n      set.add(getCellDisplayValue(acc, colIdx));\r\n    });\r\n    return Array.from(set).sort((a, b) =>\r\n      String(a).localeCompare(String(b), undefined, { numeric: true })\r\n    );\r\n  };\r\n\r\n  // Check if a column has an active filter applied (some but not all values selected)\r\n  const isColumnFiltered = (colIdx) => {\r\n    if (!FILTERABLE_COL_INDICES.includes(colIdx)) return false;\r\n    const appliedSet = columnSelections[colIdx];\r\n    if (!appliedSet) return false; // No filter applied\r\n    const uniqueVals = getUniqueValuesForColumn(colIdx);\r\n    // Filter is active if some values are selected but not all\r\n    return appliedSet.size > 0 && appliedSet.size < uniqueVals.length;\r\n  };\r\n\r\n  // Open dropdown for a column\r\n  const openFilterDropdown = (event, colIdx) => {\r\n    if (!FILTERABLE_COL_INDICES.includes(colIdx)) return;\r\n\r\n    const rect = event.currentTarget.getBoundingClientRect(); // Get position of the clicked header button\r\n    const uniqueValues = getUniqueValuesForColumn(colIdx);\r\n\r\n    // Initialize tempSelections based on current applied filter or all unique values\r\n    const appliedSet = columnSelections[colIdx];\r\n    const initialSet =\r\n      appliedSet && appliedSet.size > 0 ? new Set(appliedSet) : new Set(uniqueValues);\r\n\r\n    setDropdownValues(uniqueValues);\r\n    setTempSelections(initialSet);\r\n    setListQuery(''); // Clear dropdown search query\r\n    setDropdownColIdx(colIdx);\r\n    setDropdownPosition({\r\n      top: rect.bottom + window.scrollY + 4, // Position below the clicked header\r\n      left: rect.left + window.scrollX,\r\n    });\r\n    setDropdownOpen(true);\r\n  };\r\n\r\n  // Dropdown interactions\r\n  const toggleTempSelection = (value) => {\r\n    const next = new Set(tempSelections);\r\n    if (next.has(value)) next.delete(value);\r\n    else next.add(value);\r\n    setTempSelections(next);\r\n  };\r\n  const selectAllTemp = () => setTempSelections(new Set(dropdownValues));\r\n  const clearAllTemp = () => setTempSelections(new Set());\r\n\r\n  // Apply filter to DataTable\r\n  const applyFilter = () => {\r\n    if (dropdownColIdx == null || !tableInstanceRef.current) return;\r\n\r\n    // Update the columnSelections state with the new temp selections\r\n    setColumnSelections((prev) => ({\r\n      ...prev,\r\n      [dropdownColIdx]: new Set(tempSelections),\r\n    }));\r\n\r\n    // Re-apply all filters via DataTables\r\n    applyDataTablesFilters(tableInstanceRef.current, {\r\n      overrideColIdx: dropdownColIdx,\r\n      overrideSet: new Set(tempSelections),\r\n    });\r\n\r\n    setDropdownOpen(false); // Close dropdown\r\n  };\r\n\r\n  // Reset filter for the current column\r\n  const resetFilter = () => {\r\n    if (dropdownColIdx == null || !tableInstanceRef.current) return;\r\n\r\n    // Remove the filter for this column from state\r\n    setColumnSelections((prev) => {\r\n      const next = { ...prev };\r\n      delete next[dropdownColIdx];\r\n      return next;\r\n    });\r\n\r\n    // Clear the filter for this column in DataTables and redraw\r\n    tableInstanceRef.current.column(dropdownColIdx).search('').draw();\r\n\r\n    setDropdownOpen(false); // Close dropdown\r\n  };\r\n\r\n  // Apply all active column filters to DataTables instance\r\n  const applyDataTablesFilters = (instance, options = {}) => {\r\n    FILTERABLE_COL_INDICES.forEach((colIdx) => {\r\n      const uniqueValues = getUniqueValuesForColumn(colIdx);\r\n      const appliedSet =\r\n        options.overrideColIdx === colIdx\r\n          ? options.overrideSet // Use override for the currently changed column\r\n          : columnSelections[colIdx]; // Otherwise, use the stored selection\r\n\r\n      // If no selections, all selected, or the column is not filterable by this mechanism, clear its filter\r\n      if (!appliedSet || appliedSet.size === 0 || appliedSet.size === uniqueValues.length) {\r\n        instance.column(colIdx).search('', false, false, true); // Clear filter\r\n      } else {\r\n        // Build a regex to match any of the selected values\r\n        const escaped = Array.from(appliedSet).map((v) =>\r\n          $.fn.dataTable.util.escapeRegex(String(v))\r\n        );\r\n        const regex = `^(${escaped.join('|')})$`; // Match exactly one of the selected values\r\n        instance.column(colIdx).search(regex, true, false, true); // Apply regex filter\r\n      }\r\n    });\r\n\r\n    instance.draw(); // Redraw the table to apply filters\r\n  };\r\n\r\n  // Close dropdown on outside click or Esc key press\r\n  useEffect(() => {\r\n    if (!dropdownOpen) return;\r\n    const onDocClick = (e) => {\r\n      // Check if click is inside the dropdown or the filter icon button\r\n      if (dropdownRef.current && dropdownRef.current.contains(e.target)) return;\r\n      if ($(e.target).closest('.filter-icon-btn').length) return;\r\n      setDropdownOpen(false);\r\n    };\r\n    const onKeyDown = (e) => {\r\n      if (e.key === 'Escape') setDropdownOpen(false);\r\n    };\r\n    document.addEventListener('mousedown', onDocClick);\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => {\r\n      document.removeEventListener('mousedown', onDocClick);\r\n      document.removeEventListener('keydown', onKeyDown);\r\n    };\r\n  }, [dropdownOpen]);\r\n\r\n  // Define breadcrumb path for navigation\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' }, // Always starts with Dashboard\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' }, // Added this line\r\n    ...(activeSbu ? [{ name: `${activeSbu} SBU Level`, page: 'sbu' }] : []), // Conditionally add SBU Level\r\n    { name: 'Account Level', page: 'accounts' },\r\n  ].filter(Boolean);\r\n\r\n  // Hamburger icon component\r\n  const HamburgerIcon = ({ active }) => (\r\n    <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" style={{ verticalAlign: 'middle', fill: active ? '#1d4ed8' : '#6b7280' }}>\r\n      <path d=\"M3 6h18v2H3zM3 11h18v2H3zM3 16h18v2H3z\" />\r\n    </svg>\r\n  );\r\n\r\n  // Filter dropdown filtered list (based on internal search query)\r\n  const filteredDropdownValues = dropdownValues.filter((v) =>\r\n    String(v).toLowerCase().includes(listQuery.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h2 className=\"mb-0 fw-semibold text-dark\">\r\n            🏢 Account Level Overview – {activeSbu}\r\n            {activeMonthName && activeYear && (\r\n              <span className=\"ms-2 text-primary\">\r\n                ({activeMonthName} {activeYear})\r\n              </span>\r\n            )}\r\n          </h2>\r\n          {/* Download button, visible only if accounts are loaded */}\r\n          {accounts.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n              title=\"Download Account Data\"\r\n            >\r\n              <i className=\"bi bi-download me-2\"></i> Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\" />\r\n            <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')}\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              ref={tableRef}\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  {[\r\n                    'Account ID',\r\n                    'Account Name',\r\n                    'Total Projects',\r\n                    'Total Revenue',\r\n                    'Forecast Revenue',\r\n                    'Revenue Difference',\r\n                    'Comment',\r\n                    'View',\r\n                  ].map((title, idx) => (\r\n                    <th key={idx}>\r\n                      <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <span>{title}</span>\r\n                        {FILTERABLE_COL_INDICES.includes(idx) && (\r\n                          <button\r\n                            type=\"button\"\r\n                            className={\r\n                              'filter-icon-btn ' +\r\n                              (isColumnFiltered(idx) ? 'active' : '')\r\n                            }\r\n                            onClick={(e) => openFilterDropdown(e, idx)}\r\n                            title=\"Filter\"\r\n                          >\r\n                            <HamburgerIcon active={isColumnFiltered(idx)} />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {accounts.map((acc) => (\r\n                  <tr key={acc.accountId}>\r\n                    <td>{getCellDisplayValue(acc, 0)}</td>\r\n                    <td>{getCellDisplayValue(acc, 1)}</td>\r\n                    <td>{getCellDisplayValue(acc, 2)}</td>\r\n                    <td>{getCellDisplayValue(acc, 3)}</td>\r\n                    <td>{getCellDisplayValue(acc, 4)}</td>\r\n                    <td>{getCellDisplayValue(acc, 5)}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-secondary comment-btn\"\r\n                        data-account-id={acc.accountId}\r\n                      >\r\n                        💬\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle view-btn\"\r\n                        data-account-id={acc.accountId}\r\n                      >\r\n                        🔍\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Hamburger-style Filter Dropdown */}\r\n      {dropdownOpen && (\r\n        <div\r\n          ref={dropdownRef}\r\n          className=\"excel-filter-dropdown\"\r\n          style={{ top: dropdownPosition.top, left: dropdownPosition.left }}\r\n        >\r\n          <div className=\"excel-filter-header\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-sm\"\r\n              placeholder=\"Search values...\"\r\n              value={listQuery}\r\n              onChange={(e) => setListQuery(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"excel-filter-body\">\r\n            <div className=\"d-flex justify-content-between mb-2\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-outline-secondary\"\r\n                onClick={selectAllTemp}\r\n              >\r\n                Select All\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-sm btn-outline-secondary\"\r\n                onClick={clearAllTemp}\r\n              >\r\n                Clear\r\n              </button>\r\n            </div>\r\n\r\n            {filteredDropdownValues.length === 0 ? (\r\n              <div className=\"text-muted small px-3 py-1\">No values</div>\r\n            ) : (\r\n              filteredDropdownValues.map((val) => (\r\n                <div key={val} className=\"form-check\">\r\n                  <input\r\n                    className=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id={`chk-${dropdownColIdx}-${val}`}\r\n                    checked={tempSelections.has(val)}\r\n                    onChange={() => toggleTempSelection(val)}\r\n                  />\r\n                  <label\r\n                    className=\"form-check-label\"\r\n                    htmlFor={`chk-${dropdownColIdx}-${val}`}\r\n                    style={{ userSelect: 'none' }}\r\n                  >\r\n                    {val}\r\n                  </label>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          <div className=\"excel-filter-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm btn-light\"\r\n              onClick={resetFilter}\r\n            >\r\n              Reset\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm btn-primary\"\r\n              onClick={applyFilter}\r\n            >\r\n              Apply\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {modalVisible && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: '#00000066' }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Comment for {currentAccountId}</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModalVisible(false)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  value={commentInput}\r\n                  onChange={(e) => setCommentInput(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" onClick={() => setModalVisible(false)}>\r\n                  Cancel\r\n                </button>\r\n                <button className=\"btn btn-primary\" onClick={saveComment} disabled={!commentInput.trim()}>\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}