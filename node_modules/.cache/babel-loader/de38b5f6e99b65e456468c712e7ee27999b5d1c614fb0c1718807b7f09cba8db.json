{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\AccountLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\n\n// Utility to convert month number to month name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const date = new Date();\n  date.setMonth(monthNumber - 1);\n  return date.toLocaleString('en-US', {\n    month: 'long'\n  });\n};\nconst AccountLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tableRef = useRef(null);\n\n  // UI state\n  const [accounts, setAccounts] = useState([]);\n  const [commentsMap, setCommentsMap] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [commentInput, setCommentInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [notification, setNotification] = useState({\n    message: '',\n    type: ''\n  });\n\n  // Active filters\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeMonthName, setActiveMonthName] = useState(null);\n  const [activeSbu, setActiveSbu] = useState(null);\n\n  // Column filters & options\n  const [columnFilters, setColumnFilters] = useState({\n    accountId: new Set(),\n    accountName: new Set(),\n    totalProjects: new Set(),\n    totalRevenue: new Set(),\n    forecastNetRevenue: new Set(),\n    difference: new Set()\n  });\n  const [filterOptions, setFilterOptions] = useState({});\n  const [visibleFilterDropdown, setVisibleFilterDropdown] = useState(null);\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (value = 0) => value.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Load Poppins font\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch account data when filters change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\n      setLoading(true);\n      setError(null);\n      setAccounts([]);\n      setFilterOptions({});\n      setColumnFilters({\n        accountId: new Set(),\n        accountName: new Set(),\n        totalProjects: new Set(),\n        totalRevenue: new Set(),\n        forecastNetRevenue: new Set(),\n        difference: new Set()\n      });\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            monthNameParam,\n            sbu\n          })\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(txt || resp.statusText);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setAccounts(list);\n\n        // initialize comments map\n        const initMap = {};\n        list.forEach(acc => {\n          if (acc.accountComment) {\n            initMap[acc.accountId] = acc.accountComment;\n          }\n        });\n        setCommentsMap(initMap);\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load accounts: ${e.message}`);\n        setNotification({\n          message: `Failed to load accounts: ${e.message}`,\n          type: 'error'\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Read filters from state, sessionStorage or URL\n    const qs = new URLSearchParams(location.search);\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let s = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.sbu;\n    if (!m) {\n      var _sessionStorage$getIt;\n      m = (_sessionStorage$getIt = sessionStorage.getItem('lastFetchedAccountMonth')) !== null && _sessionStorage$getIt !== void 0 ? _sessionStorage$getIt : qs.get('month');\n    }\n    if (!y) {\n      var _sessionStorage$getIt2;\n      y = (_sessionStorage$getIt2 = sessionStorage.getItem('lastFetchedAccountYear')) !== null && _sessionStorage$getIt2 !== void 0 ? _sessionStorage$getIt2 : qs.get('year');\n    }\n    if (!s) {\n      var _sessionStorage$getIt3;\n      s = (_sessionStorage$getIt3 = sessionStorage.getItem('lastFetchedAccountSbu')) !== null && _sessionStorage$getIt3 !== void 0 ? _sessionStorage$getIt3 : qs.get('sbu');\n    }\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && s) {\n      const mn = getMonthName(m);\n      if (m !== activeMonth || y !== activeYear || s !== activeSbu || accounts.length === 0) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveMonthName(mn);\n        setActiveSbu(s);\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\n        fetchAccountData(m, y, mn, s);\n      }\n    } else {\n      setError('Missing month, year or SBU. Please navigate here with those parameters.');\n      setLoading(false);\n    }\n  }, [location.state, location.search]);\n\n  // Build filter options when data loads\n  useEffect(() => {\n    if (!accounts.length) return;\n    const options = {};\n    const cols = ['accountId', 'accountName', 'totalProjects', 'totalRevenue', 'forecastNetRevenue', 'difference'];\n    cols.forEach(col => {\n      if (col === 'totalRevenue' || col === 'forecastNetRevenue' || col === 'difference') {\n        options[col] = [...new Set(accounts.map(acc => formatCurrency(acc[col])))].sort();\n      } else {\n        options[col] = [...new Set(accounts.map(acc => acc[col]))].sort();\n      }\n    });\n    setFilterOptions(options);\n  }, [accounts, formatCurrency]);\n\n  // Initialize and destroy DataTable with custom filter logic\n  useEffect(() => {\n    const $tbl = $(tableRef.current);\n    if (!loading && tableRef.current) {\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n        $.fn.dataTable.ext.search.pop();\n      }\n\n      // custom filter fn\n      const customFilter = (settings, data, idx) => {\n        const row = accounts[idx];\n        for (const key in columnFilters) {\n          const sel = columnFilters[key];\n          if (sel.size) {\n            let val = row[key];\n            if (key === 'totalRevenue' || key === 'forecastNetRevenue' || key === 'difference') {\n              val = formatCurrency(val);\n            }\n            if (!sel.has(val)) return false;\n          }\n        }\n        return true;\n      };\n      $.fn.dataTable.ext.search.push(customFilter);\n      const dt = $tbl.DataTable({\n        paging: true,\n        searching: false,\n        ordering: false,\n        info: true,\n        autoWidth: false\n      });\n      dt.draw();\n    }\n    return () => {\n      if (tableRef.current && $.fn.DataTable.isDataTable($(tableRef.current))) {\n        $(tableRef.current).DataTable().destroy();\n        $.fn.dataTable.ext.search.pop();\n      }\n    };\n  }, [loading, accounts, columnFilters, formatCurrency]);\n\n  // Download current view as .xls\n  const handleDownloadExcel = () => {\n    const $tbl = $(tableRef.current);\n    let headers = [];\n    let rows = [];\n    if ($.fn.DataTable.isDataTable($tbl)) {\n      const dt = $tbl.DataTable();\n      headers = $tbl.find('thead th').slice(0, 6).map(function () {\n        return $(this).text().trim().replace(/≡/g, '').trim();\n      }).get();\n      const nodes = dt.rows({\n        search: 'applied',\n        filter: 'applied'\n      }).nodes().toArray();\n      rows = nodes.map(tr => Array.from(tr.cells).slice(0, 6).map(td => td.textContent.trim()));\n    } else {\n      headers = ['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference'];\n      rows = accounts.map(acc => [acc.accountId, acc.accountName, acc.totalProjects, formatCurrency(acc.totalRevenue), formatCurrency(acc.forecastNetRevenue), formatCurrency(acc.difference)]);\n    }\n    const theadHtml = '<tr>' + headers.map(h => `<th>${h.replace(/&/g, '&amp;').replace(/</g, '&lt;')}</th>`).join('') + '</tr>';\n    const tbodyHtml = rows.map(r => '<tr>' + r.map(v => `<td>${String(v).replace(/&/g, '&amp;').replace(/</g, '&lt;')}</td>`).join('') + '</tr>').join('');\n    const html = `<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" ` + `xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ` + `xmlns=\"http://www.w3.org/TR/REC-html40\">` + `<head>` + `<!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets>` + `<x:ExcelWorksheet><x:Name>AccountLevel</x:Name>` + `<x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions>` + `</x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]-->` + `</head><body><table border=\"1\"><thead>${theadHtml}</thead><tbody>${tbodyHtml}</tbody></table></body></html>`;\n    const blob = new Blob([html], {\n      type: 'application/vnd.ms-excel;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    const fileName = `AccountLevel_${activeSbu || 'All'}_${activeMonthName || ''}${activeYear || ''}.xls`;\n    a.href = url;\n    a.download = fileName.replace(/\\s+/g, '_');\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  // Comment modal handlers\n  const openCommentModal = accId => {\n    setCurrentAccountId(accId);\n    setCommentInput(commentsMap[accId] || '');\n    setModalVisible(true);\n  };\n  const saveComment = async () => {\n    try {\n      const dto = {\n        accId: currentAccountId,\n        month: activeMonth,\n        year: activeYear,\n        comment: commentInput\n      };\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dto)\n      });\n      if (!resp.ok) throw new Error(await resp.text());\n      setCommentsMap(m => ({\n        ...m,\n        [currentAccountId]: commentInput\n      }));\n      setAccounts(list => list.map(acc => acc.accountId === currentAccountId ? {\n        ...acc,\n        accountComment: commentInput\n      } : acc));\n      setModalVisible(false);\n      setNotification({\n        message: 'Comment saved successfully!',\n        type: 'success'\n      });\n      setTimeout(() => setNotification({\n        message: '',\n        type: ''\n      }), 3000);\n    } catch (e) {\n      setNotification({\n        message: 'Error saving comment: ' + e.message,\n        type: 'error'\n      });\n    }\n  };\n\n  // Column filter handlers\n  const handleFilterChange = (col, val, checked) => {\n    setColumnFilters(prev => {\n      const next = new Set(prev[col]);\n      if (checked) next.add(val);else next.delete(val);\n      return {\n        ...prev,\n        [col]: next\n      };\n    });\n  };\n  const toggleFilterDropdown = col => setVisibleFilterDropdown(v => v === col ? null : col);\n  const clearFilter = col => setColumnFilters(prev => ({\n    ...prev,\n    [col]: new Set()\n  }));\n\n  // Breadcrumbs\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      monthName: activeMonthName,\n      sbu: activeSbu\n    }\n  }] : []), {\n    name: 'Account Level',\n    page: 'accounts'\n  }].filter(Boolean);\n\n  // Render header cell with filter\n  const renderFilterableHeader = (columnKey, headerText) => /*#__PURE__*/_jsxDEV(\"th\", {\n    style: {\n      position: 'relative',\n      paddingRight: '30px'\n    },\n    children: [headerText, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-sm text-dark\",\n      onClick: () => toggleFilterDropdown(columnKey),\n      style: {\n        position: 'absolute',\n        right: '5px',\n        top: '50%',\n        transform: 'translateY(-50%)',\n        fontSize: '1.2rem',\n        padding: '0 5px',\n        backgroundColor: 'transparent',\n        border: 'none'\n      },\n      title: `Filter by ${headerText}`,\n      children: \"\\u2261\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), visibleFilterDropdown === columnKey && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-dropdown bg-white shadow rounded p-2\",\n      style: {\n        position: 'absolute',\n        zIndex: 1000,\n        top: '100%',\n        left: 0,\n        width: '220px',\n        maxHeight: '250px',\n        overflowY: 'auto',\n        border: '1px solid #ccc',\n        boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n      },\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"fw-bold\",\n          children: [\"Filter \", headerText]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-outline-danger\",\n          onClick: () => clearFilter(columnKey),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), filterOptions[columnKey] && filterOptions[columnKey].length > 0 ? filterOptions[columnKey].map(opt => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: \"form-check-input\",\n          id: `filter-${columnKey}-${opt}`,\n          onChange: e => handleFilterChange(columnKey, opt, e.target.checked),\n          checked: columnFilters[columnKey].has(opt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: `filter-${columnKey}-${opt}`,\n          children: opt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 17\n        }, this)]\n      }, opt, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted\",\n        children: \"No options available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3 mb-md-0 fw-semibold text-dark\",\n          children: [\"\\uD83C\\uDFE2 Account Level Overview \\u2013 \", activeSbu, activeMonthName && activeYear && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2 text-primary\",\n            children: [\"(\", activeMonthName, \" \", activeYear, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDownloadExcel,\n          disabled: loading || !!error,\n          title: \"Download current table view as Excel\",\n          className: \"btn\",\n          style: {\n            backgroundColor: '#ffffff',\n            border: '1px solid #198754',\n            color: '#198754'\n          },\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 9\n      }, this), notification.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${notification.type === 'error' ? 'danger' : 'success'} mb-3`,\n        role: \"alert\",\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Account Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload'),\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [renderFilterableHeader('accountId', 'Account ID'), renderFilterableHeader('accountName', 'Account Name'), renderFilterableHeader('totalProjects', 'Total Projects'), renderFilterableHeader('totalRevenue', 'Total Revenue'), renderFilterableHeader('forecastNetRevenue', 'Forecast Revenue'), renderFilterableHeader('difference', 'Revenue Difference'), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: accounts.map(acc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.totalProjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.totalRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.forecastNetRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.difference)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-secondary\",\n                  onClick: () => openCommentModal(acc.accountId),\n                  children: \"\\uD83D\\uDCAC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/accounts/${acc.accountId}/project-types`, {\n                    state: {\n                      accId: acc.accountId,\n                      month: activeMonth,\n                      year: activeYear,\n                      monthName: activeMonthName,\n                      sbu: activeSbu\n                    }\n                  }),\n                  title: \"View Project Types\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 21\n              }, this)]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      style: {\n        backgroundColor: '#00000066'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"\\uD83D\\uDCAC Comment for \", currentAccountId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setModalVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setModalVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: saveComment,\n              disabled: !commentInput.trim(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 479,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountLevel, \"640d3SJvdOPommw1QllqlTOk7cc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AccountLevel;\nexport default AccountLevel;\nvar _c;\n$RefreshReg$(_c, \"AccountLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","AccountLevel","_s","navigate","location","tableRef","accounts","setAccounts","commentsMap","setCommentsMap","modalVisible","setModalVisible","currentAccountId","setCurrentAccountId","commentInput","setCommentInput","loading","setLoading","error","setError","notification","setNotification","message","type","activeMonth","setActiveMonth","activeYear","setActiveYear","activeMonthName","setActiveMonthName","activeSbu","setActiveSbu","columnFilters","setColumnFilters","accountId","Set","accountName","totalProjects","totalRevenue","forecastNetRevenue","difference","filterOptions","setFilterOptions","visibleFilterDropdown","setVisibleFilterDropdown","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","value","style","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","_location$state3","fetchAccountData","year","monthNameParam","sbu","resp","fetch","method","headers","JSON","stringify","ok","txt","text","Error","statusText","data","json","list","Array","isArray","filter","Boolean","initMap","forEach","acc","accountComment","e","console","qs","URLSearchParams","search","m","state","y","s","_sessionStorage$getIt","sessionStorage","getItem","get","_sessionStorage$getIt2","_sessionStorage$getIt3","parseInt","mn","length","setItem","toString","options","cols","col","map","sort","$tbl","current","fn","DataTable","isDataTable","destroy","dataTable","ext","pop","customFilter","settings","idx","row","key","sel","size","val","has","push","dt","paging","searching","ordering","info","autoWidth","draw","handleDownloadExcel","rows","find","slice","trim","replace","nodes","toArray","tr","from","cells","td","textContent","theadHtml","h","join","tbodyHtml","r","v","String","html","blob","Blob","url","URL","createObjectURL","a","fileName","download","click","remove","revokeObjectURL","openCommentModal","accId","saveComment","dto","comment","setTimeout","handleFilterChange","checked","prev","next","add","delete","toggleFilterDropdown","clearFilter","breadcrumbPath","name","page","monthName","renderFilterableHeader","columnKey","headerText","position","paddingRight","children","className","onClick","right","top","transform","fontSize","padding","backgroundColor","border","title","_jsxFileName","lineNumber","columnNumber","zIndex","left","width","maxHeight","overflowY","boxShadow","stopPropagation","opt","id","onChange","target","htmlFor","background","maxWidth","borderRadius","path","disabled","color","role","ref","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/AccountLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\n// Utility to convert month number to month name\r\nconst getMonthName = (monthNumber) => {\r\n  const date = new Date();\r\n  date.setMonth(monthNumber - 1);\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n};\r\n\r\nconst AccountLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  // UI state\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [notification, setNotification] = useState({ message: '', type: '' });\r\n\r\n  // Active filters\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeMonthName, setActiveMonthName] = useState(null);\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n\r\n  // Column filters & options\r\n  const [columnFilters, setColumnFilters] = useState({\r\n    accountId: new Set(),\r\n    accountName: new Set(),\r\n    totalProjects: new Set(),\r\n    totalRevenue: new Set(),\r\n    forecastNetRevenue: new Set(),\r\n    difference: new Set(),\r\n  });\r\n  const [filterOptions, setFilterOptions] = useState({});\r\n  const [visibleFilterDropdown, setVisibleFilterDropdown] = useState(null);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits,\r\n  } = commonData.currencySettings;\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits,\r\n    });\r\n\r\n  // Load Poppins font\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch account data when filters change\r\n  useEffect(() => {\r\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\r\n      setLoading(true);\r\n      setError(null);\r\n      setAccounts([]);\r\n      setFilterOptions({});\r\n      setColumnFilters({\r\n        accountId: new Set(),\r\n        accountName: new Set(),\r\n        totalProjects: new Set(),\r\n        totalRevenue: new Set(),\r\n        forecastNetRevenue: new Set(),\r\n        difference: new Set(),\r\n      });\r\n\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, monthNameParam, sbu }),\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(txt || resp.statusText);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setAccounts(list);\r\n\r\n        // initialize comments map\r\n        const initMap = {};\r\n        list.forEach((acc) => {\r\n          if (acc.accountComment) {\r\n            initMap[acc.accountId] = acc.accountComment;\r\n          }\r\n        });\r\n        setCommentsMap(initMap);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load accounts: ${e.message}`);\r\n        setNotification({ message: `Failed to load accounts: ${e.message}`, type: 'error' });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Read filters from state, sessionStorage or URL\r\n    const qs = new URLSearchParams(location.search);\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    let s = location.state?.sbu;\r\n\r\n    if (!m) {\r\n      m = sessionStorage.getItem('lastFetchedAccountMonth') ?? qs.get('month');\r\n    }\r\n    if (!y) {\r\n      y = sessionStorage.getItem('lastFetchedAccountYear') ?? qs.get('year');\r\n    }\r\n    if (!s) {\r\n      s = sessionStorage.getItem('lastFetchedAccountSbu') ?? qs.get('sbu');\r\n    }\r\n\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && s) {\r\n      const mn = getMonthName(m);\r\n      if (\r\n        m !== activeMonth ||\r\n        y !== activeYear ||\r\n        s !== activeSbu ||\r\n        accounts.length === 0\r\n      ) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveMonthName(mn);\r\n        setActiveSbu(s);\r\n\r\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\r\n\r\n        fetchAccountData(m, y, mn, s);\r\n      }\r\n    } else {\r\n      setError(\r\n        'Missing month, year or SBU. Please navigate here with those parameters.'\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, location.search]);\r\n\r\n  // Build filter options when data loads\r\n  useEffect(() => {\r\n    if (!accounts.length) return;\r\n\r\n    const options = {};\r\n    const cols = [\r\n      'accountId',\r\n      'accountName',\r\n      'totalProjects',\r\n      'totalRevenue',\r\n      'forecastNetRevenue',\r\n      'difference',\r\n    ];\r\n\r\n    cols.forEach((col) => {\r\n      if (col === 'totalRevenue' || col === 'forecastNetRevenue' || col === 'difference') {\r\n        options[col] = [\r\n          ...new Set(accounts.map((acc) => formatCurrency(acc[col]))),\r\n        ].sort();\r\n      } else {\r\n        options[col] = [...new Set(accounts.map((acc) => acc[col]))].sort();\r\n      }\r\n    });\r\n\r\n    setFilterOptions(options);\r\n  }, [accounts, formatCurrency]);\r\n\r\n  // Initialize and destroy DataTable with custom filter logic\r\n  useEffect(() => {\r\n    const $tbl = $(tableRef.current);\r\n    if (!loading && tableRef.current) {\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n        $.fn.dataTable.ext.search.pop();\r\n      }\r\n\r\n      // custom filter fn\r\n      const customFilter = (settings, data, idx) => {\r\n        const row = accounts[idx];\r\n        for (const key in columnFilters) {\r\n          const sel = columnFilters[key];\r\n          if (sel.size) {\r\n            let val = row[key];\r\n            if (\r\n              key === 'totalRevenue' ||\r\n              key === 'forecastNetRevenue' ||\r\n              key === 'difference'\r\n            ) {\r\n              val = formatCurrency(val);\r\n            }\r\n            if (!sel.has(val)) return false;\r\n          }\r\n        }\r\n        return true;\r\n      };\r\n\r\n      $.fn.dataTable.ext.search.push(customFilter);\r\n\r\n      const dt = $tbl.DataTable({\r\n        paging: true,\r\n        searching: false,\r\n        ordering: false,\r\n        info: true,\r\n        autoWidth: false,\r\n      });\r\n\r\n      dt.draw();\r\n    }\r\n\r\n    return () => {\r\n      if (tableRef.current && $.fn.DataTable.isDataTable($(tableRef.current))) {\r\n        $(tableRef.current).DataTable().destroy();\r\n        $.fn.dataTable.ext.search.pop();\r\n      }\r\n    };\r\n  }, [loading, accounts, columnFilters, formatCurrency]);\r\n\r\n  // Download current view as .xls\r\n  const handleDownloadExcel = () => {\r\n    const $tbl = $(tableRef.current);\r\n    let headers = [];\r\n    let rows = [];\r\n\r\n    if ($.fn.DataTable.isDataTable($tbl)) {\r\n      const dt = $tbl.DataTable();\r\n      headers = $tbl\r\n        .find('thead th')\r\n        .slice(0, 6)\r\n        .map(function () {\r\n          return $(this).text().trim().replace(/≡/g, '').trim();\r\n        })\r\n        .get();\r\n\r\n      const nodes = dt\r\n        .rows({ search: 'applied', filter: 'applied' })\r\n        .nodes()\r\n        .toArray();\r\n\r\n      rows = nodes.map((tr) =>\r\n        Array.from(tr.cells)\r\n          .slice(0, 6)\r\n          .map((td) => td.textContent.trim())\r\n      );\r\n    } else {\r\n      headers = [\r\n        'Account ID',\r\n        'Account Name',\r\n        'Total Projects',\r\n        'Total Revenue',\r\n        'Forecast Revenue',\r\n        'Revenue Difference',\r\n      ];\r\n      rows = accounts.map((acc) => [\r\n        acc.accountId,\r\n        acc.accountName,\r\n        acc.totalProjects,\r\n        formatCurrency(acc.totalRevenue),\r\n        formatCurrency(acc.forecastNetRevenue),\r\n        formatCurrency(acc.difference),\r\n      ]);\r\n    }\r\n\r\n    const theadHtml =\r\n      '<tr>' +\r\n      headers\r\n        .map((h) => `<th>${h.replace(/&/g, '&amp;').replace(/</g, '&lt;')}</th>`)\r\n        .join('') +\r\n      '</tr>';\r\n    const tbodyHtml = rows\r\n      .map(\r\n        (r) =>\r\n          '<tr>' +\r\n          r\r\n            .map((v) => `<td>${String(v).replace(/&/g, '&amp;').replace(/</g, '&lt;')}</td>`)\r\n            .join('') +\r\n          '</tr>'\r\n      )\r\n      .join('');\r\n\r\n    const html =\r\n      `<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" ` +\r\n      `xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ` +\r\n      `xmlns=\"http://www.w3.org/TR/REC-html40\">` +\r\n      `<head>` +\r\n      `<!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets>` +\r\n      `<x:ExcelWorksheet><x:Name>AccountLevel</x:Name>` +\r\n      `<x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions>` +\r\n      `</x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]-->` +\r\n      `</head><body><table border=\"1\"><thead>${theadHtml}</thead><tbody>${tbodyHtml}</tbody></table></body></html>`;\r\n\r\n    const blob = new Blob([html], { type: 'application/vnd.ms-excel;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const fileName = `AccountLevel_${activeSbu || 'All'}_${activeMonthName || ''}${activeYear || ''}.xls`;\r\n    a.href = url;\r\n    a.download = fileName.replace(/\\s+/g, '_');\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Comment modal handlers\r\n  const openCommentModal = (accId) => {\r\n    setCurrentAccountId(accId);\r\n    setCommentInput(commentsMap[accId] || '');\r\n    setModalVisible(true);\r\n  };\r\n  const saveComment = async () => {\r\n    try {\r\n      const dto = {\r\n        accId: currentAccountId,\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        comment: commentInput,\r\n      };\r\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dto),\r\n      });\r\n      if (!resp.ok) throw new Error(await resp.text());\r\n      setCommentsMap((m) => ({ ...m, [currentAccountId]: commentInput }));\r\n      setAccounts((list) =>\r\n        list.map((acc) =>\r\n          acc.accountId === currentAccountId\r\n            ? { ...acc, accountComment: commentInput }\r\n            : acc\r\n        )\r\n      );\r\n      setModalVisible(false);\r\n      setNotification({ message: 'Comment saved successfully!', type: 'success' });\r\n      setTimeout(() => setNotification({ message: '', type: '' }), 3000);\r\n    } catch (e) {\r\n      setNotification({ message: 'Error saving comment: ' + e.message, type: 'error' });\r\n    }\r\n  };\r\n\r\n  // Column filter handlers\r\n  const handleFilterChange = (col, val, checked) => {\r\n    setColumnFilters((prev) => {\r\n      const next = new Set(prev[col]);\r\n      if (checked) next.add(val);\r\n      else next.delete(val);\r\n      return { ...prev, [col]: next };\r\n    });\r\n  };\r\n  const toggleFilterDropdown = (col) =>\r\n    setVisibleFilterDropdown((v) => (v === col ? null : col));\r\n  const clearFilter = (col) =>\r\n    setColumnFilters((prev) => ({ ...prev, [col]: new Set() }));\r\n\r\n  // Breadcrumbs\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    ...(activeSbu\r\n      ? [\r\n          {\r\n            name: `${activeSbu} SBU Level`,\r\n            page: 'sbu',\r\n            state: {\r\n              month: activeMonth,\r\n              year: activeYear,\r\n              monthName: activeMonthName,\r\n              sbu: activeSbu,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    { name: 'Account Level', page: 'accounts' },\r\n  ].filter(Boolean);\r\n\r\n  // Render header cell with filter\r\n  const renderFilterableHeader = (columnKey, headerText) => (\r\n    <th style={{ position: 'relative', paddingRight: '30px' }}>\r\n      {headerText}\r\n      <button\r\n        className=\"btn btn-sm text-dark\"\r\n        onClick={() => toggleFilterDropdown(columnKey)}\r\n        style={{\r\n          position: 'absolute',\r\n          right: '5px',\r\n          top: '50%',\r\n          transform: 'translateY(-50%)',\r\n          fontSize: '1.2rem',\r\n          padding: '0 5px',\r\n          backgroundColor: 'transparent',\r\n          border: 'none',\r\n        }}\r\n        title={`Filter by ${headerText}`}\r\n      >\r\n        ≡\r\n      </button>\r\n\r\n      {visibleFilterDropdown === columnKey && (\r\n        <div\r\n          className=\"filter-dropdown bg-white shadow rounded p-2\"\r\n          style={{\r\n            position: 'absolute',\r\n            zIndex: 1000,\r\n            top: '100%',\r\n            left: 0,\r\n            width: '220px',\r\n            maxHeight: '250px',\r\n            overflowY: 'auto',\r\n            border: '1px solid #ccc',\r\n            boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n          }}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <div className=\"d-flex justify-content-between align-items-center mb-2\">\r\n            <span className=\"fw-bold\">Filter {headerText}</span>\r\n            <button\r\n              className=\"btn btn-sm btn-outline-danger\"\r\n              onClick={() => clearFilter(columnKey)}\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n\r\n          {filterOptions[columnKey] && filterOptions[columnKey].length > 0 ? (\r\n            filterOptions[columnKey].map((opt) => (\r\n              <div key={opt} className=\"form-check\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"form-check-input\"\r\n                  id={`filter-${columnKey}-${opt}`}\r\n                  onChange={(e) =>\r\n                    handleFilterChange(columnKey, opt, e.target.checked)\r\n                  }\r\n                  checked={columnFilters[columnKey].has(opt)}\r\n                />\r\n                <label\r\n                  className=\"form-check-label\"\r\n                  htmlFor={`filter-${columnKey}-${opt}`}\r\n                >\r\n                  {opt}\r\n                </label>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-muted\">No options available</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </th>\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\">\r\n          <h2 className=\"mb-3 mb-md-0 fw-semibold text-dark\">\r\n            🏢 Account Level Overview – {activeSbu}\r\n            {activeMonthName && activeYear && (\r\n              <span className=\"ms-2 text-primary\">\r\n                ({activeMonthName} {activeYear})\r\n              </span>\r\n            )}\r\n          </h2>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleDownloadExcel}\r\n            disabled={loading || !!error}\r\n            title=\"Download current table view as Excel\"\r\n            className=\"btn\"\r\n            style={{\r\n              backgroundColor: '#ffffff',\r\n              border: '1px solid #198754',\r\n              color: '#198754',\r\n            }}\r\n          >\r\n            Download\r\n          </button>\r\n        </div>\r\n\r\n        {notification.message && (\r\n          <div\r\n            className={`alert alert-${\r\n              notification.type === 'error' ? 'danger' : 'success'\r\n            } mb-3`}\r\n            role=\"alert\"\r\n          >\r\n            {notification.message}\r\n          </div>\r\n        )}\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\" />\r\n            <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')}\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              ref={tableRef}\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  {renderFilterableHeader('accountId', 'Account ID')}\r\n                  {renderFilterableHeader('accountName', 'Account Name')}\r\n                  {renderFilterableHeader('totalProjects', 'Total Projects')}\r\n                  {renderFilterableHeader('totalRevenue', 'Total Revenue')}\r\n                  {renderFilterableHeader(\r\n                    'forecastNetRevenue',\r\n                    'Forecast Revenue'\r\n                  )}\r\n                  {renderFilterableHeader('difference', 'Revenue Difference')}\r\n                  <th className=\"text-center\">Comment</th>\r\n                  <th className=\"text-center\">View</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {accounts.map((acc) => (\r\n                  <tr key={acc.accountId}>\r\n                    <td>{acc.accountId}</td>\r\n                    <td>{acc.accountName}</td>\r\n                    <td>{acc.totalProjects}</td>\r\n                    <td>{formatCurrency(acc.totalRevenue)}</td>\r\n                    <td>{formatCurrency(acc.forecastNetRevenue)}</td>\r\n                    <td>{formatCurrency(acc.difference)}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-secondary\"\r\n                        onClick={() => openCommentModal(acc.accountId)}\r\n                      >\r\n                        💬\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                        onClick={() =>\r\n                          navigate(\r\n                            `/accounts/${acc.accountId}/project-types`,\r\n                            {\r\n                              state: {\r\n                                accId: acc.accountId,\r\n                                month: activeMonth,\r\n                                year: activeYear,\r\n                                monthName: activeMonthName,\r\n                                sbu: activeSbu,\r\n                              },\r\n                            }\r\n                          )\r\n                        }\r\n                        title=\"View Project Types\"\r\n                      >\r\n                        🔍\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Comment Modal */}\r\n      {modalVisible && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: '#00000066' }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">💬 Comment for {currentAccountId}</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModalVisible(false)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  value={commentInput}\r\n                  onChange={(e) => setCommentInput(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setModalVisible(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={saveComment}\r\n                  disabled={!commentInput.trim()}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}