{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\DateLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    projectId: urlProjectId,\n    associateId: urlAssociateId\n  } = useParams();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const dataTableInstance = useRef(null);\n  const hasFetchedRef = useRef(false); // Prevent multiple API calls\n\n  const [dailyHours, setDailyHours] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeProjectId, setActiveProjectId] = useState(null);\n  const [activeProjectName, setActiveProjectName] = useState('Loading...');\n  const [activeAssociateId, setActiveAssociateId] = useState(null);\n  const [activeAssociateName, setActiveAssociateName] = useState('Loading...');\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n  const [activeSbu, setActiveSbu] = useState(null);\n  const [activeProjectType, setActiveProjectType] = useState(null);\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (val = 0) => val.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Load Poppins font once\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch daily hours data (guarded by hasFetchedRef)\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3, _location$state4, _location$state5, _location$state6, _location$state7, _location$state8;\n    if (hasFetchedRef.current) return;\n    hasFetchedRef.current = true;\n    const fetchDailyHoursData = async (month, year, projId, assocId) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/date-level`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            projectId: projId,\n            associateId: assocId\n          })\n        });\n        if (!response.ok) {\n          const errText = await response.text();\n          throw new Error(`status: ${response.status}, message: ${errText || response.statusText}`);\n        }\n        const data = await response.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setDailyHours(list);\n        if (list.length > 0) {\n          setActiveProjectName(list[0].projectName || projId);\n          setActiveAssociateName(list[0].associateName || assocId);\n          setActiveAccountName(list[0].accountName || activeAccountName);\n          setActiveAccountId(list[0].accountId || activeAccountId);\n        }\n      } catch (err) {\n        console.error('Error fetching daily hours data:', err);\n        setError(`Failed to load daily hours data: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Derive context from location.state, URL params, or sessionStorage\n    let monthToUse = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let yearToUse = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let projectIdToUse = urlProjectId;\n    let associateIdToUse = urlAssociateId;\n    let projectNameToUse = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.projectName;\n    let associateNameToUse = (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.associateName;\n    let accountIdToUse = (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.accountId;\n    let accountNameToUse = (_location$state6 = location.state) === null || _location$state6 === void 0 ? void 0 : _location$state6.accountName;\n    let sbuToUse = (_location$state7 = location.state) === null || _location$state7 === void 0 ? void 0 : _location$state7.sbu;\n    let projectTypeToUse = (_location$state8 = location.state) === null || _location$state8 === void 0 ? void 0 : _location$state8.projectType;\n    if (!monthToUse) monthToUse = sessionStorage.getItem('lastFetchedDateMonth');\n    if (!yearToUse) yearToUse = sessionStorage.getItem('lastFetchedDateYear');\n    if (!projectNameToUse) projectNameToUse = sessionStorage.getItem('lastFetchedDateProjectName');\n    if (!associateNameToUse) associateNameToUse = sessionStorage.getItem('lastFetchedDateAssociateName');\n    if (!accountIdToUse) accountIdToUse = sessionStorage.getItem('lastFetchedDateAccountId');\n    if (!accountNameToUse) accountNameToUse = sessionStorage.getItem('lastFetchedDateAccountName');\n    if (!sbuToUse) sbuToUse = sessionStorage.getItem('lastFetchedDateSbu');\n    if (!projectTypeToUse) projectTypeToUse = sessionStorage.getItem('lastFetchedDateProjectType');\n    monthToUse = monthToUse ? parseInt(monthToUse, 10) : null;\n    yearToUse = yearToUse ? parseInt(yearToUse, 10) : null;\n\n    // Only fetch if context is valid\n    if (monthToUse && yearToUse && projectIdToUse && associateIdToUse && projectNameToUse && associateNameToUse && accountIdToUse && accountNameToUse) {\n      // Check for context change\n      if (monthToUse !== activeMonth || yearToUse !== activeYear || projectIdToUse !== activeProjectId || associateIdToUse !== activeAssociateId || accountIdToUse !== activeAccountId || sbuToUse !== activeSbu || projectTypeToUse !== activeProjectType) {\n        setActiveMonth(monthToUse);\n        setActiveYear(yearToUse);\n        setActiveProjectId(projectIdToUse);\n        setActiveAssociateId(associateIdToUse);\n        setActiveProjectName(projectNameToUse);\n        setActiveAssociateName(associateNameToUse);\n        setActiveAccountId(accountIdToUse);\n        setActiveAccountName(accountNameToUse);\n        setActiveSbu(sbuToUse);\n        setActiveProjectType(projectTypeToUse);\n        sessionStorage.setItem('lastFetchedDateMonth', monthToUse.toString());\n        sessionStorage.setItem('lastFetchedDateYear', yearToUse.toString());\n        sessionStorage.setItem('lastFetchedDateProjectId', projectIdToUse);\n        sessionStorage.setItem('lastFetchedDateAssociateId', associateIdToUse);\n        sessionStorage.setItem('lastFetchedDateProjectName', projectNameToUse);\n        sessionStorage.setItem('lastFetchedDateAssociateName', associateNameToUse);\n        sessionStorage.setItem('lastFetchedDateAccountId', accountIdToUse);\n        sessionStorage.setItem('lastFetchedDateAccountName', accountNameToUse);\n        if (sbuToUse) {\n          sessionStorage.setItem('lastFetchedDateSbu', sbuToUse);\n        }\n        if (projectTypeToUse) {\n          sessionStorage.setItem('lastFetchedDateProjectType', projectTypeToUse);\n        }\n        fetchDailyHoursData(monthToUse, yearToUse, projectIdToUse, associateIdToUse);\n      } else {\n        setLoading(false);\n      }\n    } else {\n      setError('Missing daily hours context. Please go back and select an associate.');\n      setLoading(false);\n    }\n  }, [location.state, urlProjectId, urlAssociateId, activeMonth, activeYear, activeProjectId, activeAssociateId, activeAccountId, activeSbu, activeProjectType]);\n\n  // Initialize & update DataTable\n  useEffect(() => {\n    const tableEl = tableRef.current;\n    if (tableEl && !dataTableInstance.current) {\n      dataTableInstance.current = $(tableEl).DataTable({\n        paging: true,\n        searching: true,\n        ordering: true,\n        info: true,\n        autoWidth: false,\n        data: dailyHours,\n        columns: [{\n          data: 'date'\n        }, {\n          data: 'associateId'\n        }, {\n          data: 'associateName'\n        }, {\n          data: 'projectId'\n        }, {\n          data: 'projectName'\n        }, {\n          data: 'companyHours'\n        }, {\n          data: 'clientHours'\n        }, {\n          data: 'varianceTimeUnits',\n          render: (data, type, row) => {\n            const variance = data != null ? data : row.companyHours - row.clientHours;\n            let className = '';\n            if (variance > 0) className = 'text-danger';else if (variance < 0) className = 'text-primary';else className = 'text-success';\n            return `<span class=\"fw-semibold ${className}\">${variance}</span>`;\n          }\n        }, {\n          data: 'comparisonResult'\n        }]\n      });\n    } else if (dataTableInstance.current && !loading) {\n      dataTableInstance.current.clear().rows.add(dailyHours).draw();\n    }\n    return () => {\n      if (dataTableInstance.current) {\n        dataTableInstance.current.destroy();\n        dataTableInstance.current = null;\n      }\n    };\n  }, [loading, dailyHours]);\n\n  // Build breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }] : []), {\n    name: 'Account Level',\n    page: `accounts`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }, ...(activeProjectType ? [{\n    name: `${activeProjectType} Project Type`,\n    page: `accounts/${activeAccountId}/project-types`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu,\n      accId: activeAccountId\n    }\n  }] : []), {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu,\n      accId: activeAccountId,\n      accountName: activeAccountName,\n      projectType: activeProjectType\n    }\n  }, {\n    name: `Associates (${activeProjectName})`,\n    page: `projects/${activeProjectId}/associates`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      projectId: activeProjectId,\n      projectName: activeProjectName,\n      accountId: activeAccountId,\n      accountName: activeAccountName,\n      sbu: activeSbu,\n      projectType: activeProjectType\n    }\n  }, {\n    name: `Daily View (${activeAssociateName})`,\n    page: `projects/${activeProjectId}/associates/${activeAssociateId}/daily`\n  }].filter(Boolean);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Daily Hours Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate(`/projects/${activeProjectId}/associates`, {\n          state: {\n            month: activeMonth,\n            year: activeYear,\n            projectId: activeProjectId,\n            projectName: activeProjectName,\n            accountId: activeAccountId,\n            accountName: activeAccountName,\n            sbu: activeSbu,\n            projectType: activeProjectType\n          }\n        }),\n        children: \"Go to Associate Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f8fafc, #e0e7ef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 w-100\",\n      style: {\n        maxWidth: '950px',\n        backgroundColor: '#ffffffee',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 fw-semibold text-dark\",\n        children: [\"\\uD83D\\uDCC5 Daily Hours \\u2013 \", activeAssociateName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover table-borderless align-middle mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                background: 'linear-gradient(to right, #60a5fa, #3b82f6)',\n                color: 'white'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Associate ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Associate Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Company Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Client Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variance Time Units\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Comparison Result\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n_s(DateLevel, \"BT6yLPslgmrlani2bwu+WZpBLas=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = DateLevel;\nexport default DateLevel;\nvar _c;\n$RefreshReg$(_c, \"DateLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useParams","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","DateLevel","_s","navigate","projectId","urlProjectId","associateId","urlAssociateId","location","tableRef","dataTableInstance","hasFetchedRef","dailyHours","setDailyHours","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeProjectId","setActiveProjectId","activeProjectName","setActiveProjectName","activeAssociateId","setActiveAssociateId","activeAssociateName","setActiveAssociateName","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","activeSbu","setActiveSbu","activeProjectType","setActiveProjectType","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","val","toLocaleString","style","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","_location$state6","_location$state7","_location$state8","current","fetchDailyHoursData","month","year","projId","assocId","response","fetch","method","headers","JSON","stringify","ok","errText","text","Error","status","statusText","data","json","list","Array","isArray","filter","Boolean","length","projectName","associateName","accountName","accountId","err","console","message","monthToUse","state","yearToUse","projectIdToUse","associateIdToUse","projectNameToUse","associateNameToUse","accountIdToUse","accountNameToUse","sbuToUse","sbu","projectTypeToUse","projectType","sessionStorage","getItem","parseInt","setItem","toString","tableEl","DataTable","paging","searching","ordering","info","autoWidth","columns","render","type","row","variance","companyHours","clientHours","className","clear","rows","add","draw","destroy","breadcrumbPath","name","page","accId","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","maxWidth","backgroundColor","borderRadius","path","ref","width","color","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/DateLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\nconst DateLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { projectId: urlProjectId, associateId: urlAssociateId } = useParams();\r\n  const location = useLocation();\r\n\r\n  const tableRef = useRef(null);\r\n  const dataTableInstance = useRef(null);\r\n  const hasFetchedRef = useRef(false); // Prevent multiple API calls\r\n\r\n  const [dailyHours, setDailyHours] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeProjectId, setActiveProjectId] = useState(null);\r\n  const [activeProjectName, setActiveProjectName] = useState('Loading...');\r\n  const [activeAssociateId, setActiveAssociateId] = useState(null);\r\n  const [activeAssociateName, setActiveAssociateName] = useState('Loading...');\r\n  const [activeAccountId, setActiveAccountId] = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n  const [activeProjectType, setActiveProjectType] = useState(null);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  } = commonData.currencySettings;\r\n  const formatCurrency = (val = 0) =>\r\n    val.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits\r\n    });\r\n\r\n  // Load Poppins font once\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch daily hours data (guarded by hasFetchedRef)\r\n  useEffect(() => {\r\n    if (hasFetchedRef.current) return;\r\n    hasFetchedRef.current = true;\r\n\r\n    const fetchDailyHoursData = async (month, year, projId, assocId) => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(`${BACKEND_URL}/api/date-level`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, projectId: projId, associateId: assocId })\r\n        });\r\n        if (!response.ok) {\r\n          const errText = await response.text();\r\n          throw new Error(`status: ${response.status}, message: ${errText || response.statusText}`);\r\n        }\r\n        const data = await response.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setDailyHours(list);\r\n\r\n        if (list.length > 0) {\r\n          setActiveProjectName(list[0].projectName || projId);\r\n          setActiveAssociateName(list[0].associateName || assocId);\r\n          setActiveAccountName(list[0].accountName || activeAccountName);\r\n          setActiveAccountId(list[0].accountId || activeAccountId);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching daily hours data:', err);\r\n        setError(`Failed to load daily hours data: ${err.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Derive context from location.state, URL params, or sessionStorage\r\n    let monthToUse = location.state?.month;\r\n    let yearToUse = location.state?.year;\r\n    let projectIdToUse = urlProjectId;\r\n    let associateIdToUse = urlAssociateId;\r\n    let projectNameToUse = location.state?.projectName;\r\n    let associateNameToUse = location.state?.associateName;\r\n    let accountIdToUse = location.state?.accountId;\r\n    let accountNameToUse = location.state?.accountName;\r\n    let sbuToUse = location.state?.sbu;\r\n    let projectTypeToUse = location.state?.projectType;\r\n\r\n    if (!monthToUse)   monthToUse   = sessionStorage.getItem('lastFetchedDateMonth');\r\n    if (!yearToUse)    yearToUse    = sessionStorage.getItem('lastFetchedDateYear');\r\n    if (!projectNameToUse) projectNameToUse = sessionStorage.getItem('lastFetchedDateProjectName');\r\n    if (!associateNameToUse) associateNameToUse = sessionStorage.getItem('lastFetchedDateAssociateName');\r\n    if (!accountIdToUse) accountIdToUse = sessionStorage.getItem('lastFetchedDateAccountId');\r\n    if (!accountNameToUse) accountNameToUse = sessionStorage.getItem('lastFetchedDateAccountName');\r\n    if (!sbuToUse)     sbuToUse     = sessionStorage.getItem('lastFetchedDateSbu');\r\n    if (!projectTypeToUse) projectTypeToUse = sessionStorage.getItem('lastFetchedDateProjectType');\r\n\r\n    monthToUse = monthToUse ? parseInt(monthToUse, 10) : null;\r\n    yearToUse  = yearToUse  ? parseInt(yearToUse, 10) : null;\r\n\r\n    // Only fetch if context is valid\r\n    if (\r\n      monthToUse &&\r\n      yearToUse &&\r\n      projectIdToUse &&\r\n      associateIdToUse &&\r\n      projectNameToUse &&\r\n      associateNameToUse &&\r\n      accountIdToUse &&\r\n      accountNameToUse\r\n    ) {\r\n      // Check for context change\r\n      if (\r\n        monthToUse !== activeMonth ||\r\n        yearToUse !== activeYear ||\r\n        projectIdToUse !== activeProjectId ||\r\n        associateIdToUse !== activeAssociateId ||\r\n        accountIdToUse !== activeAccountId ||\r\n        sbuToUse !== activeSbu ||\r\n        projectTypeToUse !== activeProjectType\r\n      ) {\r\n        setActiveMonth(monthToUse);\r\n        setActiveYear(yearToUse);\r\n        setActiveProjectId(projectIdToUse);\r\n        setActiveAssociateId(associateIdToUse);\r\n        setActiveProjectName(projectNameToUse);\r\n        setActiveAssociateName(associateNameToUse);\r\n        setActiveAccountId(accountIdToUse);\r\n        setActiveAccountName(accountNameToUse);\r\n        setActiveSbu(sbuToUse);\r\n        setActiveProjectType(projectTypeToUse);\r\n\r\n        sessionStorage.setItem('lastFetchedDateMonth', monthToUse.toString());\r\n        sessionStorage.setItem('lastFetchedDateYear', yearToUse.toString());\r\n        sessionStorage.setItem('lastFetchedDateProjectId', projectIdToUse);\r\n        sessionStorage.setItem('lastFetchedDateAssociateId', associateIdToUse);\r\n        sessionStorage.setItem('lastFetchedDateProjectName', projectNameToUse);\r\n        sessionStorage.setItem('lastFetchedDateAssociateName', associateNameToUse);\r\n        sessionStorage.setItem('lastFetchedDateAccountId', accountIdToUse);\r\n        sessionStorage.setItem('lastFetchedDateAccountName', accountNameToUse);\r\n        if (sbuToUse) {\r\n          sessionStorage.setItem('lastFetchedDateSbu', sbuToUse);\r\n        }\r\n        if (projectTypeToUse) {\r\n          sessionStorage.setItem('lastFetchedDateProjectType', projectTypeToUse);\r\n        }\r\n\r\n        fetchDailyHoursData(monthToUse, yearToUse, projectIdToUse, associateIdToUse);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setError('Missing daily hours context. Please go back and select an associate.');\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    location.state,\r\n    urlProjectId,\r\n    urlAssociateId,\r\n    activeMonth,\r\n    activeYear,\r\n    activeProjectId,\r\n    activeAssociateId,\r\n    activeAccountId,\r\n    activeSbu,\r\n    activeProjectType\r\n  ]);\r\n\r\n  // Initialize & update DataTable\r\n  useEffect(() => {\r\n    const tableEl = tableRef.current;\r\n\r\n    if (tableEl && !dataTableInstance.current) {\r\n      dataTableInstance.current = $(tableEl).DataTable({\r\n        paging: true,\r\n        searching: true,\r\n        ordering: true,\r\n        info: true,\r\n        autoWidth: false,\r\n        data: dailyHours,\r\n        columns: [\r\n          { data: 'date' },\r\n          { data: 'associateId' },\r\n          { data: 'associateName' },\r\n          { data: 'projectId' },\r\n          { data: 'projectName' },\r\n          { data: 'companyHours' },\r\n          { data: 'clientHours' },\r\n          {\r\n            data: 'varianceTimeUnits',\r\n            render: (data, type, row) => {\r\n              const variance = data != null ? data : row.companyHours - row.clientHours;\r\n              let className = '';\r\n              if (variance > 0) className = 'text-danger';\r\n              else if (variance < 0) className = 'text-primary';\r\n              else className = 'text-success';\r\n              return `<span class=\"fw-semibold ${className}\">${variance}</span>`;\r\n            }\r\n          },\r\n          { data: 'comparisonResult' }\r\n        ]\r\n      });\r\n    } else if (dataTableInstance.current && !loading) {\r\n      dataTableInstance.current.clear().rows.add(dailyHours).draw();\r\n    }\r\n\r\n    return () => {\r\n      if (dataTableInstance.current) {\r\n        dataTableInstance.current.destroy();\r\n        dataTableInstance.current = null;\r\n      }\r\n    };\r\n  }, [loading, dailyHours]);\r\n\r\n  // Build breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    ...(activeSbu\r\n      ? [\r\n          {\r\n            name: `${activeSbu} SBU Level`,\r\n            page: 'sbu',\r\n            state: { month: activeMonth, year: activeYear, sbu: activeSbu }\r\n          }\r\n        ]\r\n      : []),\r\n    {\r\n      name: 'Account Level',\r\n      page: `accounts`,\r\n      state: { month: activeMonth, year: activeYear, sbu: activeSbu }\r\n    },\r\n    ...(activeProjectType\r\n      ? [\r\n          {\r\n            name: `${activeProjectType} Project Type`,\r\n            page: `accounts/${activeAccountId}/project-types`,\r\n            state: {\r\n              month: activeMonth,\r\n              year: activeYear,\r\n              sbu: activeSbu,\r\n              accId: activeAccountId\r\n            }\r\n          }\r\n        ]\r\n      : []),\r\n    {\r\n      name: `Projects (${activeAccountName})`,\r\n      page: `accounts/${activeAccountId}/projects`,\r\n      state: {\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        sbu: activeSbu,\r\n        accId: activeAccountId,\r\n        accountName: activeAccountName,\r\n        projectType: activeProjectType\r\n      }\r\n    },\r\n    {\r\n      name: `Associates (${activeProjectName})`,\r\n      page: `projects/${activeProjectId}/associates`,\r\n      state: {\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        projectId: activeProjectId,\r\n        projectName: activeProjectName,\r\n        accountId: activeAccountId,\r\n        accountName: activeAccountName,\r\n        sbu: activeSbu,\r\n        projectType: activeProjectType\r\n      }\r\n    },\r\n    {\r\n      name: `Daily View (${activeAssociateName})`,\r\n      page: `projects/${activeProjectId}/associates/${activeAssociateId}/daily`\r\n    }\r\n  ].filter(Boolean);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Daily Hours Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() =>\r\n            navigate(`/projects/${activeProjectId}/associates`, {\r\n              state: {\r\n                month: activeMonth,\r\n                year: activeYear,\r\n                projectId: activeProjectId,\r\n                projectName: activeProjectName,\r\n                accountId: activeAccountId,\r\n                accountName: activeAccountName,\r\n                sbu: activeSbu,\r\n                projectType: activeProjectType\r\n              }\r\n            })\r\n          }\r\n        >\r\n          Go to Associate Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f8fafc, #e0e7ef)',\r\n        fontFamily: \"'Poppins', sans-serif\"\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 w-100\"\r\n        style={{\r\n          maxWidth: '950px',\r\n          backgroundColor: '#ffffffee',\r\n          borderRadius: '1rem'\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n          📅 Daily Hours – {activeAssociateName}\r\n        </h2>\r\n\r\n        <div className=\"table-responsive rounded\">\r\n          <table\r\n            ref={tableRef}\r\n            className=\"display table table-hover table-borderless align-middle mb-0\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            <thead>\r\n              <tr\r\n                style={{\r\n                  background: 'linear-gradient(to right, #60a5fa, #3b82f6)',\r\n                  color: 'white'\r\n                }}\r\n              >\r\n                <th>Date</th>\r\n                <th>Associate ID</th>\r\n                <th>Associate Name</th>\r\n                <th>Project ID</th>\r\n                <th>Project Name</th>\r\n                <th>Company Hours</th>\r\n                <th>Client Hours</th>\r\n                <th>Variance Time Units</th>\r\n                <th>Comparison Result</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody />\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}