{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport Breadcrumbs from \"../Breadcrumbs\";\nimport commonData from \"../../data/commonData.json\";\n\n// The backend URL remains the same.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = \"http://localhost:8081\";\n\n// A new, pure React component for pagination controls.\nconst Pagination = ({\n  itemsPerPage,\n  totalItems,\n  paginate,\n  currentPage\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  if (pageNumbers.length <= 1) {\n    return null; // Don't show pagination if there's only one page.\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"mt-4 d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination rounded-pill\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage === 1 ? \"disabled\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => paginate(currentPage - 1),\n          href: \"#!\",\n          className: \"page-link\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage === number ? \"active\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => paginate(number),\n          href: \"#!\",\n          className: \"page-link\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `page-item ${currentPage === pageNumbers.length ? \"disabled\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => paginate(currentPage + 1),\n          href: \"#!\",\n          className: \"page-link\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n\n  // State management remains mostly the same, but no more tableRef.\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState(\"Loading...\");\n  const [activeSbu, setActiveSbu] = useState(null);\n  const [activeProjectType, setActiveProjectType] = useState(null);\n  const [columnFilters, setColumnFilters] = useState({});\n\n  // New state for React-based pagination.\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10); // You can make this dynamic if you want.\n\n  // Helper functions are unchanged.\n  const formatCurrency = (value = 0) => value.toLocaleString(commonData.currencySettings.locale, {\n    style: \"currency\",\n    currency: commonData.currencySettings.currency,\n    minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\n    maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\n  });\n  const getMonthName = monthNumber => {\n    if (!monthNumber) return \"\";\n    const date = new Date();\n    date.setMonth(monthNumber - 1);\n    return date.toLocaleString(\"en-US\", {\n      month: \"long\"\n    });\n  };\n\n  // ✅ CORE LOGIC CHANGE: Filtering is now done in React using useMemo for efficiency.\n  // This creates a new `filteredProjects` array whenever the original projects or filters change.\n  const filteredProjects = useMemo(() => {\n    let filteredData = [...projects];\n    Object.entries(columnFilters).forEach(([key, value]) => {\n      // If a filter value is present (not \"All\" or null)\n      if (value) {\n        filteredData = filteredData.filter(project => {\n          const projectValue = project[key];\n          if (projectValue === null || projectValue === undefined) {\n            return false;\n          }\n          // Specific logic for revenue column\n          if (key === \"revenue\") {\n            return formatCurrency(projectValue) === String(value);\n          }\n          // Logic for all other columns\n          return String(projectValue).toLowerCase() === String(value).toLowerCase();\n        });\n      }\n    });\n    return filteredData;\n  }, [projects, columnFilters]);\n\n  // This function is now used for both CSV and can be simplified.\n  const handleDownloadData = () => {\n    if (filteredProjects.length === 0) {\n      console.log(\"No data to download.\");\n      return;\n    }\n    const headers = [\"Project ID\", \"Project Name\", \"Total Associates\", \"Company Hours\", \"Client Hours\", \"Variance Hours\", \"Revenue\"];\n    const csvRows = filteredProjects.map(project => {\n      return [`\"${project.projectId}\"`, `\"${project.projectName}\"`, project.totalAssociatesCount, project.totalCompanyHours, project.totalClientHours, project.varianceHours, `\"${formatCurrency(project.revenue)}\"`].join(\",\");\n    });\n    const csvContent = [headers.join(\",\"), ...csvRows].join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    const link = document.createElement(\"a\");\n    const url = URL.createObjectURL(blob);\n    const monthName = getMonthName(activeMonth);\n    const fileName = `Projects_Account_${activeAccountId}_${monthName}_${activeYear}.csv`;\n    link.setAttribute(\"href\", url);\n    link.setAttribute(\"download\", fileName);\n    link.style.visibility = \"hidden\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  const getUniqueOptions = columnKey => {\n    if (!projects || projects.length === 0) {\n      return [\"All\"];\n    }\n    const options = projects.map(project => {\n      const value = project[columnKey];\n      return columnKey === \"revenue\" ? formatCurrency(value) : String(value);\n    });\n    const uniqueOptions = [...new Set(options)].sort((a, b) => {\n      const isNumericColumn = [\"totalAssociatesCount\", \"totalCompanyHours\", \"totalClientHours\", \"varianceHours\"].includes(columnKey);\n      if (isNumericColumn) {\n        return Number(a) - Number(b);\n      }\n      if (columnKey === \"revenue\") {\n        const numA = parseFloat(a.replace(/[^0-9.-]+/g, \"\"));\n        const numB = parseFloat(b.replace(/[^0-9.-]+/g, \"\"));\n        return numA - numB;\n      }\n      return a.localeCompare(b);\n    });\n    return [\"All\", ...uniqueOptions];\n  };\n  const handleFilterChange = (columnKey, value) => {\n    setColumnFilters(prevFilters => ({\n      ...prevFilters,\n      [columnKey]: value === \"All\" ? null : value\n    }));\n    setCurrentPage(1); // Reset to the first page whenever a filter changes.\n  };\n\n  // Data fetching logic is solid and remains unchanged.\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3, _location$state4, _location$state5;\n    const fetchProjectData = async (month, year, accId, projectType) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const payload = {\n          month,\n          year,\n          accId,\n          projectType\n        };\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!resp.ok) {\n          const errText = await resp.text();\n          throw new Error(`status: ${resp.status}, message: ${errText || resp.statusText}`);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : data ? [data] : [];\n        setProjects(list);\n        setColumnFilters({});\n        if (list.length > 0 && list[0].accountName) {\n          setActiveAccountName(list[0].accountName);\n        } else {\n          const storedName = sessionStorage.getItem(\"lastFetchedProjectAccountName\");\n          setActiveAccountName(storedName || accId);\n        }\n      } catch (e) {\n        console.error(\"Error fetching project data:\", e);\n        setError(`Failed to load project data: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    let monthToUse = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month) || sessionStorage.getItem(\"lastFetchedProjectMonth\");\n    let yearToUse = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year) || sessionStorage.getItem(\"lastFetchedProjectYear\");\n    let accountIdToUse = urlAccountId;\n    let accountNameToUse = ((_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.accountName) || sessionStorage.getItem(\"lastFetchedProjectAccountName\");\n    let sbuToUse = ((_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.sbu) || sessionStorage.getItem(\"lastFetchedProjectSbu\");\n    let projectTypeToUse = ((_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.projectType) || sessionStorage.getItem(\"lastFetchedProjectType\");\n    monthToUse = monthToUse ? parseInt(monthToUse, 10) : null;\n    yearToUse = yearToUse ? parseInt(yearToUse, 10) : null;\n    if (monthToUse && yearToUse && accountIdToUse) {\n      const hasParamsChanged = monthToUse !== activeMonth || yearToUse !== activeYear || accountIdToUse !== activeAccountId || sbuToUse !== activeSbu || projectTypeToUse !== activeProjectType;\n      if (activeMonth === null || hasParamsChanged) {\n        setActiveMonth(monthToUse);\n        setActiveYear(yearToUse);\n        setActiveAccountId(accountIdToUse);\n        if (accountNameToUse) setActiveAccountName(accountNameToUse);\n        setActiveSbu(sbuToUse);\n        setActiveProjectType(projectTypeToUse);\n        sessionStorage.setItem(\"lastFetchedProjectMonth\", monthToUse.toString());\n        sessionStorage.setItem(\"lastFetchedProjectYear\", yearToUse.toString());\n        sessionStorage.setItem(\"lastFetchedProjectAccountId\", accountIdToUse);\n        if (accountNameToUse) sessionStorage.setItem(\"lastFetchedProjectAccountName\", accountNameToUse);\n        if (sbuToUse) sessionStorage.setItem(\"lastFetchedProjectSbu\", sbuToUse);\n        if (projectTypeToUse) sessionStorage.setItem(\"lastFetchedProjectType\", projectTypeToUse);\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse, projectTypeToUse);\n      }\n    } else {\n      setError(\"Missing month, year, or Account ID. Please navigate here with all parameters.\");\n      setLoading(false);\n    }\n  }, [location.state, urlAccountId, activeMonth, activeYear, activeAccountId, activeSbu, activeProjectType]);\n\n  // Font loading is unchanged.\n  useEffect(() => {\n    const link = document.createElement(\"link\");\n    link.href = \"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap\";\n    link.rel = \"stylesheet\";\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Pagination logic\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = filteredProjects.slice(indexOfFirstItem, indexOfLastItem);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // Breadcrumb path logic is unchanged.\n  const breadcrumbPath = [{\n    name: \"PMO Dashboard\",\n    page: \"\"\n  }, {\n    name: \"Revenue Forecast - Early View\",\n    page: \"upload\"\n  }, ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: \"sbu\",\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }] : []), {\n    name: \"Account Level\",\n    page: `accounts`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }, ...(activeProjectType ? [{\n    name: `${activeProjectType} Project Type`,\n    page: `accounts/${activeAccountId}/project-types`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu,\n      accId: activeAccountId\n    }\n  }] : []), {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }].filter(Boolean);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate(\"/accounts\", {\n          state: {\n            month: activeMonth,\n            year: activeYear,\n            sbu: activeSbu\n          }\n        }),\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: \"linear-gradient(to bottom right, #f5f7fa, #e9ecef)\",\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: \"1200px\",\n        backgroundColor: \"#ffffffdd\",\n        borderRadius: \"1rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0 fw-semibold text-dark\",\n          children: [\"\\uD83D\\uDCC1 Project Level Overview\", \" \", activeAccountId ? `for ${activeAccountName}` : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), projects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Project Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover align-middle table-borderless mb-0\",\n          style: {\n            width: \"100%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: \"linear-gradient(to right, #3b82f6, #2563eb)\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Project ID\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange(\"projectId\", e.target.value),\n                  value: columnFilters.projectId || \"All\",\n                  children: getUniqueOptions(\"projectId\").map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: o,\n                    children: o\n                  }, o, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Project Name\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange(\"projectName\", e.target.value),\n                  value: columnFilters.projectName || \"All\",\n                  children: getUniqueOptions(\"projectName\").map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: o,\n                    children: o\n                  }, o, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Total Associates\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange(\"totalAssociatesCount\", e.target.value),\n                  value: columnFilters.totalAssociatesCount || \"All\",\n                  children: getUniqueOptions(\"totalAssociatesCount\").map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: o,\n                    children: o\n                  }, o, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Company Hours\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange(\"totalCompanyHours\", e.target.value),\n                  value: columnFilters.totalCompanyHours || \"All\",\n                  children: getUniqueOptions(\"totalCompanyHours\").map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: o,\n                    children: o\n                  }, o, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Client Hours\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange(\"totalClientHours\", e.target.value),\n                  value: columnFilters.totalClientHours || \"All\",\n                  children: getUniqueOptions(\"totalClientHours\").map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: o,\n                    children: o\n                  }, o, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Variance Hours\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange(\"varianceHours\", e.target.value),\n                  value: columnFilters.varianceHours || \"All\",\n                  children: getUniqueOptions(\"varianceHours\").map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: o,\n                    children: o\n                  }, o, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Revenue\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange(\"revenue\", e.target.value),\n                  value: columnFilters.revenue || \"All\",\n                  children: getUniqueOptions(\"revenue\").map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: o,\n                    children: o\n                  }, o, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 534,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: currentItems.length > 0 ? currentItems.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.projectId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.totalAssociatesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.totalCompanyHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.totalClientHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.varianceHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(project.revenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/projects/${project.projectId}/associates`, {\n                    state: {\n                      ...project,\n                      month: activeMonth,\n                      year: activeYear,\n                      sbu: activeSbu,\n                      projectType: activeProjectType\n                    }\n                  }),\n                  title: \"View Associates\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 21\n              }, this)]\n            }, project.projectId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"8\",\n                className: \"text-center p-4\",\n                children: \"No matching projects found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        itemsPerPage: itemsPerPage,\n        totalItems: filteredProjects.length,\n        paginate: paginate,\n        currentPage: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"xJ78LF0nKFi+XowwPjEBzRy8ut8=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c2 = ProjectLevel;\nexport default ProjectLevel;\nvar _c, _c2;\n$RefreshReg$(_c, \"Pagination\");\n$RefreshReg$(_c2, \"ProjectLevel\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useNavigate","useParams","useLocation","Breadcrumbs","commonData","jsxDEV","_jsxDEV","BACKEND_URL","Pagination","itemsPerPage","totalItems","paginate","currentPage","pageNumbers","i","Math","ceil","push","length","className","children","onClick","href","fileName","_jsxFileName","lineNumber","columnNumber","map","number","_c","ProjectLevel","_s","navigate","accountId","urlAccountId","location","projects","setProjects","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","activeSbu","setActiveSbu","activeProjectType","setActiveProjectType","columnFilters","setColumnFilters","setCurrentPage","formatCurrency","value","toLocaleString","currencySettings","locale","style","currency","minimumFractionDigits","maximumFractionDigits","getMonthName","monthNumber","date","Date","setMonth","month","filteredProjects","filteredData","Object","entries","forEach","key","filter","project","projectValue","undefined","String","toLowerCase","handleDownloadData","console","log","headers","csvRows","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","join","csvContent","blob","Blob","type","link","document","createElement","url","URL","createObjectURL","monthName","setAttribute","visibility","body","appendChild","click","removeChild","revokeObjectURL","getUniqueOptions","columnKey","options","uniqueOptions","Set","sort","a","b","isNumericColumn","includes","Number","numA","parseFloat","replace","numB","localeCompare","handleFilterChange","prevFilters","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","fetchProjectData","year","accId","projectType","payload","resp","fetch","method","JSON","stringify","ok","errText","text","Error","status","statusText","data","json","list","Array","isArray","accountName","storedName","sessionStorage","getItem","e","message","monthToUse","state","yearToUse","accountIdToUse","accountNameToUse","sbuToUse","sbu","projectTypeToUse","parseInt","hasParamsChanged","setItem","toString","rel","head","fontFamily","indexOfLastItem","indexOfFirstItem","currentItems","slice","pageNumber","breadcrumbPath","name","page","Boolean","role","background","maxWidth","backgroundColor","borderRadius","path","title","width","onChange","target","o","colSpan","_c2","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/ProjectLevel.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\r\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\r\nimport Breadcrumbs from \"../Breadcrumbs\";\r\nimport commonData from \"../../data/commonData.json\";\r\n \r\n// The backend URL remains the same.\r\nconst BACKEND_URL = \"http://localhost:8081\";\r\n \r\n// A new, pure React component for pagination controls.\r\nconst Pagination = ({ itemsPerPage, totalItems, paginate, currentPage }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n \r\n  if (pageNumbers.length <= 1) {\r\n    return null; // Don't show pagination if there's only one page.\r\n  }\r\n \r\n  return (\r\n    <nav className=\"mt-4 d-flex justify-content-center\">\r\n      <ul className=\"pagination rounded-pill\">\r\n        <li className={`page-item ${currentPage === 1 ? \"disabled\" : \"\"}`}>\r\n          <a\r\n            onClick={() => paginate(currentPage - 1)}\r\n            href=\"#!\"\r\n            className=\"page-link\"\r\n          >\r\n            Previous\r\n          </a>\r\n        </li>\r\n        {pageNumbers.map((number) => (\r\n          <li\r\n            key={number}\r\n            className={`page-item ${currentPage === number ? \"active\" : \"\"}`}\r\n          >\r\n            <a onClick={() => paginate(number)} href=\"#!\" className=\"page-link\">\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n        <li\r\n          className={`page-item ${\r\n            currentPage === pageNumbers.length ? \"disabled\" : \"\"\r\n          }`}\r\n        >\r\n          <a\r\n            onClick={() => paginate(currentPage + 1)}\r\n            href=\"#!\"\r\n            className=\"page-link\"\r\n          >\r\n            Next\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n \r\nconst ProjectLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { accountId: urlAccountId } = useParams();\r\n  const location = useLocation();\r\n \r\n  // State management remains mostly the same, but no more tableRef.\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeAccountId, setActiveAccountId] = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState(\"Loading...\");\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n  const [activeProjectType, setActiveProjectType] = useState(null);\r\n  const [columnFilters, setColumnFilters] = useState({});\r\n \r\n  // New state for React-based pagination.\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10); // You can make this dynamic if you want.\r\n \r\n  // Helper functions are unchanged.\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(commonData.currencySettings.locale, {\r\n      style: \"currency\",\r\n      currency: commonData.currencySettings.currency,\r\n      minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\r\n      maximumFractionDigits: commonData.currencySettings.maximumFractionDigits,\r\n    });\r\n \r\n  const getMonthName = (monthNumber) => {\r\n    if (!monthNumber) return \"\";\r\n    const date = new Date();\r\n    date.setMonth(monthNumber - 1);\r\n    return date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  };\r\n \r\n  // ✅ CORE LOGIC CHANGE: Filtering is now done in React using useMemo for efficiency.\r\n  // This creates a new `filteredProjects` array whenever the original projects or filters change.\r\n  const filteredProjects = useMemo(() => {\r\n    let filteredData = [...projects];\r\n    Object.entries(columnFilters).forEach(([key, value]) => {\r\n      // If a filter value is present (not \"All\" or null)\r\n      if (value) {\r\n        filteredData = filteredData.filter((project) => {\r\n          const projectValue = project[key];\r\n          if (projectValue === null || projectValue === undefined) {\r\n            return false;\r\n          }\r\n          // Specific logic for revenue column\r\n          if (key === \"revenue\") {\r\n            return formatCurrency(projectValue) === String(value);\r\n          }\r\n          // Logic for all other columns\r\n          return (\r\n            String(projectValue).toLowerCase() === String(value).toLowerCase()\r\n          );\r\n        });\r\n      }\r\n    });\r\n    return filteredData;\r\n  }, [projects, columnFilters]);\r\n \r\n  // This function is now used for both CSV and can be simplified.\r\n  const handleDownloadData = () => {\r\n    if (filteredProjects.length === 0) {\r\n      console.log(\"No data to download.\");\r\n      return;\r\n    }\r\n    const headers = [\r\n      \"Project ID\",\r\n      \"Project Name\",\r\n      \"Total Associates\",\r\n      \"Company Hours\",\r\n      \"Client Hours\",\r\n      \"Variance Hours\",\r\n      \"Revenue\",\r\n    ];\r\n    const csvRows = filteredProjects.map((project) => {\r\n      return [\r\n        `\"${project.projectId}\"`,\r\n        `\"${project.projectName}\"`,\r\n        project.totalAssociatesCount,\r\n        project.totalCompanyHours,\r\n        project.totalClientHours,\r\n        project.varianceHours,\r\n        `\"${formatCurrency(project.revenue)}\"`,\r\n      ].join(\",\");\r\n    });\r\n    const csvContent = [headers.join(\",\"), ...csvRows].join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    const link = document.createElement(\"a\");\r\n    const url = URL.createObjectURL(blob);\r\n    const monthName = getMonthName(activeMonth);\r\n    const fileName = `Projects_Account_${activeAccountId}_${monthName}_${activeYear}.csv`;\r\n    link.setAttribute(\"href\", url);\r\n    link.setAttribute(\"download\", fileName);\r\n    link.style.visibility = \"hidden\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n \r\n  const getUniqueOptions = (columnKey) => {\r\n    if (!projects || projects.length === 0) {\r\n      return [\"All\"];\r\n    }\r\n    const options = projects.map((project) => {\r\n      const value = project[columnKey];\r\n      return columnKey === \"revenue\" ? formatCurrency(value) : String(value);\r\n    });\r\n    const uniqueOptions = [...new Set(options)].sort((a, b) => {\r\n      const isNumericColumn = [\r\n        \"totalAssociatesCount\",\r\n        \"totalCompanyHours\",\r\n        \"totalClientHours\",\r\n        \"varianceHours\",\r\n      ].includes(columnKey);\r\n      if (isNumericColumn) {\r\n        return Number(a) - Number(b);\r\n      }\r\n      if (columnKey === \"revenue\") {\r\n        const numA = parseFloat(a.replace(/[^0-9.-]+/g, \"\"));\r\n        const numB = parseFloat(b.replace(/[^0-9.-]+/g, \"\"));\r\n        return numA - numB;\r\n      }\r\n      return a.localeCompare(b);\r\n    });\r\n    return [\"All\", ...uniqueOptions];\r\n  };\r\n \r\n  const handleFilterChange = (columnKey, value) => {\r\n    setColumnFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      [columnKey]: value === \"All\" ? null : value,\r\n    }));\r\n    setCurrentPage(1); // Reset to the first page whenever a filter changes.\r\n  };\r\n \r\n  // Data fetching logic is solid and remains unchanged.\r\n  useEffect(() => {\r\n    const fetchProjectData = async (month, year, accId, projectType) => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const payload = { month, year, accId, projectType };\r\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(payload),\r\n        });\r\n        if (!resp.ok) {\r\n          const errText = await resp.text();\r\n          throw new Error(\r\n            `status: ${resp.status}, message: ${errText || resp.statusText}`\r\n          );\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : data ? [data] : [];\r\n        setProjects(list);\r\n        setColumnFilters({});\r\n        if (list.length > 0 && list[0].accountName) {\r\n          setActiveAccountName(list[0].accountName);\r\n        } else {\r\n          const storedName = sessionStorage.getItem(\r\n            \"lastFetchedProjectAccountName\"\r\n          );\r\n          setActiveAccountName(storedName || accId);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error fetching project data:\", e);\r\n        setError(`Failed to load project data: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n \r\n    let monthToUse =\r\n      location.state?.month ||\r\n      sessionStorage.getItem(\"lastFetchedProjectMonth\");\r\n    let yearToUse =\r\n      location.state?.year || sessionStorage.getItem(\"lastFetchedProjectYear\");\r\n    let accountIdToUse = urlAccountId;\r\n    let accountNameToUse =\r\n      location.state?.accountName ||\r\n      sessionStorage.getItem(\"lastFetchedProjectAccountName\");\r\n    let sbuToUse =\r\n      location.state?.sbu || sessionStorage.getItem(\"lastFetchedProjectSbu\");\r\n    let projectTypeToUse =\r\n      location.state?.projectType ||\r\n      sessionStorage.getItem(\"lastFetchedProjectType\");\r\n \r\n    monthToUse = monthToUse ? parseInt(monthToUse, 10) : null;\r\n    yearToUse = yearToUse ? parseInt(yearToUse, 10) : null;\r\n \r\n    if (monthToUse && yearToUse && accountIdToUse) {\r\n      const hasParamsChanged =\r\n        monthToUse !== activeMonth ||\r\n        yearToUse !== activeYear ||\r\n        accountIdToUse !== activeAccountId ||\r\n        sbuToUse !== activeSbu ||\r\n        projectTypeToUse !== activeProjectType;\r\n      if (activeMonth === null || hasParamsChanged) {\r\n        setActiveMonth(monthToUse);\r\n        setActiveYear(yearToUse);\r\n        setActiveAccountId(accountIdToUse);\r\n        if (accountNameToUse) setActiveAccountName(accountNameToUse);\r\n        setActiveSbu(sbuToUse);\r\n        setActiveProjectType(projectTypeToUse);\r\n \r\n        sessionStorage.setItem(\r\n          \"lastFetchedProjectMonth\",\r\n          monthToUse.toString()\r\n        );\r\n        sessionStorage.setItem(\"lastFetchedProjectYear\", yearToUse.toString());\r\n        sessionStorage.setItem(\"lastFetchedProjectAccountId\", accountIdToUse);\r\n        if (accountNameToUse)\r\n          sessionStorage.setItem(\r\n            \"lastFetchedProjectAccountName\",\r\n            accountNameToUse\r\n          );\r\n        if (sbuToUse) sessionStorage.setItem(\"lastFetchedProjectSbu\", sbuToUse);\r\n        if (projectTypeToUse)\r\n          sessionStorage.setItem(\"lastFetchedProjectType\", projectTypeToUse);\r\n \r\n        fetchProjectData(\r\n          monthToUse,\r\n          yearToUse,\r\n          accountIdToUse,\r\n          projectTypeToUse\r\n        );\r\n      }\r\n    } else {\r\n      setError(\r\n        \"Missing month, year, or Account ID. Please navigate here with all parameters.\"\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    location.state,\r\n    urlAccountId,\r\n    activeMonth,\r\n    activeYear,\r\n    activeAccountId,\r\n    activeSbu,\r\n    activeProjectType,\r\n  ]);\r\n \r\n  // Font loading is unchanged.\r\n  useEffect(() => {\r\n    const link = document.createElement(\"link\");\r\n    link.href =\r\n      \"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap\";\r\n    link.rel = \"stylesheet\";\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n \r\n  // Pagination logic\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = filteredProjects.slice(\r\n    indexOfFirstItem,\r\n    indexOfLastItem\r\n  );\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n \r\n  // Breadcrumb path logic is unchanged.\r\n  const breadcrumbPath = [\r\n    { name: \"PMO Dashboard\", page: \"\" },\r\n    { name: \"Revenue Forecast - Early View\", page: \"upload\" },\r\n    ...(activeSbu\r\n      ? [\r\n          {\r\n            name: `${activeSbu} SBU Level`,\r\n            page: \"sbu\",\r\n            state: { month: activeMonth, year: activeYear, sbu: activeSbu },\r\n          },\r\n        ]\r\n      : []),\r\n    {\r\n      name: \"Account Level\",\r\n      page: `accounts`,\r\n      state: { month: activeMonth, year: activeYear, sbu: activeSbu },\r\n    },\r\n    ...(activeProjectType\r\n      ? [\r\n          {\r\n            name: `${activeProjectType} Project Type`,\r\n            page: `accounts/${activeAccountId}/project-types`,\r\n            state: {\r\n              month: activeMonth,\r\n              year: activeYear,\r\n              sbu: activeSbu,\r\n              accId: activeAccountId,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    {\r\n      name: `Projects (${activeAccountName})`,\r\n      page: `accounts/${activeAccountId}/projects`,\r\n    },\r\n  ].filter(Boolean);\r\n \r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n \r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() =>\r\n            navigate(\"/accounts\", {\r\n              state: { month: activeMonth, year: activeYear, sbu: activeSbu },\r\n            })\r\n          }\r\n        >\r\n          Go to Account Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n \r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: \"linear-gradient(to bottom right, #f5f7fa, #e9ecef)\",\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: \"1200px\",\r\n          backgroundColor: \"#ffffffdd\",\r\n          borderRadius: \"1rem\",\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h2 className=\"mb-0 fw-semibold text-dark\">\r\n            📁 Project Level Overview{\" \"}\r\n            {activeAccountId ? `for ${activeAccountName}` : \"\"}\r\n          </h2>\r\n          {projects.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n              title=\"Download Project Data\"\r\n            >\r\n              <i className=\"bi bi-download me-2\"></i> Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className=\"table-responsive rounded\">\r\n          {/* The table no longer needs a ref or any DataTables-specific classes. */}\r\n          <table\r\n            className=\"table table-hover align-middle table-borderless mb-0\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <thead\r\n              className=\"text-white\"\r\n              style={{\r\n                background: \"linear-gradient(to right, #3b82f6, #2563eb)\",\r\n              }}\r\n            >\r\n              <tr>\r\n                <th>\r\n                  Project ID{\" \"}\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) =>\r\n                      handleFilterChange(\"projectId\", e.target.value)\r\n                    }\r\n                    value={columnFilters.projectId || \"All\"}\r\n                  >\r\n                    {getUniqueOptions(\"projectId\").map((o) => (\r\n                      <option key={o} value={o}>\r\n                        {o}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Project Name{\" \"}\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) =>\r\n                      handleFilterChange(\"projectName\", e.target.value)\r\n                    }\r\n                    value={columnFilters.projectName || \"All\"}\r\n                  >\r\n                    {getUniqueOptions(\"projectName\").map((o) => (\r\n                      <option key={o} value={o}>\r\n                        {o}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Total Associates{\" \"}\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) =>\r\n                      handleFilterChange(\"totalAssociatesCount\", e.target.value)\r\n                    }\r\n                    value={columnFilters.totalAssociatesCount || \"All\"}\r\n                  >\r\n                    {getUniqueOptions(\"totalAssociatesCount\").map((o) => (\r\n                      <option key={o} value={o}>\r\n                        {o}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Company Hours{\" \"}\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) =>\r\n                      handleFilterChange(\"totalCompanyHours\", e.target.value)\r\n                    }\r\n                    value={columnFilters.totalCompanyHours || \"All\"}\r\n                  >\r\n                    {getUniqueOptions(\"totalCompanyHours\").map((o) => (\r\n                      <option key={o} value={o}>\r\n                        {o}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Client Hours{\" \"}\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) =>\r\n                      handleFilterChange(\"totalClientHours\", e.target.value)\r\n                    }\r\n                    value={columnFilters.totalClientHours || \"All\"}\r\n                  >\r\n                    {getUniqueOptions(\"totalClientHours\").map((o) => (\r\n                      <option key={o} value={o}>\r\n                        {o}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Variance Hours{\" \"}\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) =>\r\n                      handleFilterChange(\"varianceHours\", e.target.value)\r\n                    }\r\n                    value={columnFilters.varianceHours || \"All\"}\r\n                  >\r\n                    {getUniqueOptions(\"varianceHours\").map((o) => (\r\n                      <option key={o} value={o}>\r\n                        {o}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th>\r\n                  Revenue{\" \"}\r\n                  <select\r\n                    className=\"form-select form-select-sm mt-1\"\r\n                    onChange={(e) =>\r\n                      handleFilterChange(\"revenue\", e.target.value)\r\n                    }\r\n                    value={columnFilters.revenue || \"All\"}\r\n                  >\r\n                    {getUniqueOptions(\"revenue\").map((o) => (\r\n                      <option key={o} value={o}>\r\n                        {o}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </th>\r\n                <th className=\"text-center\">View</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* We now map over the `currentItems` which is the paginated and filtered list. */}\r\n              {currentItems.length > 0 ? (\r\n                currentItems.map((project) => (\r\n                  <tr key={project.projectId}>\r\n                    <td>{project.projectId}</td>\r\n                    <td>{project.projectName}</td>\r\n                    <td>{project.totalAssociatesCount}</td>\r\n                    <td>{project.totalCompanyHours}</td>\r\n                    <td>{project.totalClientHours}</td>\r\n                    <td>{project.varianceHours}</td>\r\n                    <td>{formatCurrency(project.revenue)}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                        onClick={() =>\r\n                          navigate(\r\n                            `/projects/${project.projectId}/associates`,\r\n                            {\r\n                              state: {\r\n                                ...project,\r\n                                month: activeMonth,\r\n                                year: activeYear,\r\n                                sbu: activeSbu,\r\n                                projectType: activeProjectType,\r\n                              },\r\n                            }\r\n                          )\r\n                        }\r\n                        title=\"View Associates\"\r\n                      >\r\n                        🔍\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"8\" className=\"text-center p-4\">\r\n                    No matching projects found.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        {/* Render the new pagination component */}\r\n        <Pagination\r\n          itemsPerPage={itemsPerPage}\r\n          totalItems={filteredProjects.length}\r\n          paginate={paginate}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default ProjectLevel;\r\n \r\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,UAAU,MAAM,4BAA4B;;AAEnD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,uBAAuB;;AAE3C;AACA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,YAAY;EAAEC,UAAU;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAC1E,MAAMC,WAAW,GAAG,EAAE;EACtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACN,UAAU,GAAGD,YAAY,CAAC,EAAEK,CAAC,EAAE,EAAE;IAC9DD,WAAW,CAACI,IAAI,CAACH,CAAC,CAAC;EACrB;EAEA,IAAID,WAAW,CAACK,MAAM,IAAI,CAAC,EAAE;IAC3B,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEZ,OAAA;IAAKa,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eACjDd,OAAA;MAAIa,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACrCd,OAAA;QAAIa,SAAS,EAAE,aAAaP,WAAW,KAAK,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;QAAAQ,QAAA,eAChEd,OAAA;UACEe,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACC,WAAW,GAAG,CAAC,CAAE;UACzCU,IAAI,EAAC,IAAI;UACTH,SAAS,EAAC,WAAW;UAAAC,QAAA,EACtB;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EACJb,WAAW,CAACc,GAAG,CAAEC,MAAM,iBACtBtB,OAAA;QAEEa,SAAS,EAAE,aAAaP,WAAW,KAAKgB,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAAR,QAAA,eAEjEd,OAAA;UAAGe,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACiB,MAAM,CAAE;UAACN,IAAI,EAAC,IAAI;UAACH,SAAS,EAAC,WAAW;UAAAC,QAAA,EAChEQ;QAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC,GALCE,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT,CACL,CAAC,eACFpB,OAAA;QACEa,SAAS,EAAE,aACTP,WAAW,KAAKC,WAAW,CAACK,MAAM,GAAG,UAAU,GAAG,EAAE,EACnD;QAAAE,QAAA,eAEHd,OAAA;UACEe,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACC,WAAW,GAAG,CAAC,CAAE;UACzCU,IAAI,EAAC,IAAI;UACTH,SAAS,EAAC,WAAW;UAAAC,QAAA,EACtB;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACG,EAAA,GAhDIrB,UAAU;AAkDhB,MAAMsB,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGhC,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEiC,SAAS,EAAEC;EAAa,CAAC,GAAGjC,SAAS,CAAC,CAAC;EAC/C,MAAMkC,QAAQ,GAAGjC,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0C,KAAK,EAAEC,QAAQ,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC4C,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC8C,UAAU,EAAEC,aAAa,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACgD,eAAe,EAAEC,kBAAkB,CAAC,GAAGjD,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACkD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnD,QAAQ,CAAC,YAAY,CAAC;EACxE,MAAM,CAACoD,SAAS,EAAEC,YAAY,CAAC,GAAGrD,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvD,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACwD,aAAa,EAAEC,gBAAgB,CAAC,GAAGzD,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAM,CAACc,WAAW,EAAE4C,cAAc,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACW,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAErC;EACA,MAAM2D,cAAc,GAAGA,CAACC,KAAK,GAAG,CAAC,KAC/BA,KAAK,CAACC,cAAc,CAACvD,UAAU,CAACwD,gBAAgB,CAACC,MAAM,EAAE;IACvDC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE3D,UAAU,CAACwD,gBAAgB,CAACG,QAAQ;IAC9CC,qBAAqB,EAAE5D,UAAU,CAACwD,gBAAgB,CAACI,qBAAqB;IACxEC,qBAAqB,EAAE7D,UAAU,CAACwD,gBAAgB,CAACK;EACrD,CAAC,CAAC;EAEJ,MAAMC,YAAY,GAAIC,WAAW,IAAK;IACpC,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE;IAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvBD,IAAI,CAACE,QAAQ,CAACH,WAAW,GAAG,CAAC,CAAC;IAC9B,OAAOC,IAAI,CAACT,cAAc,CAAC,OAAO,EAAE;MAAEY,KAAK,EAAE;IAAO,CAAC,CAAC;EACxD,CAAC;;EAED;EACA;EACA,MAAMC,gBAAgB,GAAGzE,OAAO,CAAC,MAAM;IACrC,IAAI0E,YAAY,GAAG,CAAC,GAAGrC,QAAQ,CAAC;IAChCsC,MAAM,CAACC,OAAO,CAACrB,aAAa,CAAC,CAACsB,OAAO,CAAC,CAAC,CAACC,GAAG,EAAEnB,KAAK,CAAC,KAAK;MACtD;MACA,IAAIA,KAAK,EAAE;QACTe,YAAY,GAAGA,YAAY,CAACK,MAAM,CAAEC,OAAO,IAAK;UAC9C,MAAMC,YAAY,GAAGD,OAAO,CAACF,GAAG,CAAC;UACjC,IAAIG,YAAY,KAAK,IAAI,IAAIA,YAAY,KAAKC,SAAS,EAAE;YACvD,OAAO,KAAK;UACd;UACA;UACA,IAAIJ,GAAG,KAAK,SAAS,EAAE;YACrB,OAAOpB,cAAc,CAACuB,YAAY,CAAC,KAAKE,MAAM,CAACxB,KAAK,CAAC;UACvD;UACA;UACA,OACEwB,MAAM,CAACF,YAAY,CAAC,CAACG,WAAW,CAAC,CAAC,KAAKD,MAAM,CAACxB,KAAK,CAAC,CAACyB,WAAW,CAAC,CAAC;QAEtE,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IACF,OAAOV,YAAY;EACrB,CAAC,EAAE,CAACrC,QAAQ,EAAEkB,aAAa,CAAC,CAAC;;EAE7B;EACA,MAAM8B,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIZ,gBAAgB,CAACtD,MAAM,KAAK,CAAC,EAAE;MACjCmE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC;IACF;IACA,MAAMC,OAAO,GAAG,CACd,YAAY,EACZ,cAAc,EACd,kBAAkB,EAClB,eAAe,EACf,cAAc,EACd,gBAAgB,EAChB,SAAS,CACV;IACD,MAAMC,OAAO,GAAGhB,gBAAgB,CAAC7C,GAAG,CAAEoD,OAAO,IAAK;MAChD,OAAO,CACL,IAAIA,OAAO,CAACU,SAAS,GAAG,EACxB,IAAIV,OAAO,CAACW,WAAW,GAAG,EAC1BX,OAAO,CAACY,oBAAoB,EAC5BZ,OAAO,CAACa,iBAAiB,EACzBb,OAAO,CAACc,gBAAgB,EACxBd,OAAO,CAACe,aAAa,EACrB,IAAIrC,cAAc,CAACsB,OAAO,CAACgB,OAAO,CAAC,GAAG,CACvC,CAACC,IAAI,CAAC,GAAG,CAAC;IACb,CAAC,CAAC;IACF,MAAMC,UAAU,GAAG,CAACV,OAAO,CAACS,IAAI,CAAC,GAAG,CAAC,EAAE,GAAGR,OAAO,CAAC,CAACQ,IAAI,CAAC,IAAI,CAAC;IAC7D,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,UAAU,CAAC,EAAE;MAAEG,IAAI,EAAE;IAA0B,CAAC,CAAC;IACxE,MAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACxC,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;IACrC,MAAMS,SAAS,GAAGzC,YAAY,CAACxB,WAAW,CAAC;IAC3C,MAAMnB,QAAQ,GAAG,oBAAoBuB,eAAe,IAAI6D,SAAS,IAAI/D,UAAU,MAAM;IACrFyD,IAAI,CAACO,YAAY,CAAC,MAAM,EAAEJ,GAAG,CAAC;IAC9BH,IAAI,CAACO,YAAY,CAAC,UAAU,EAAErF,QAAQ,CAAC;IACvC8E,IAAI,CAACvC,KAAK,CAAC+C,UAAU,GAAG,QAAQ;IAChCP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACV,IAAI,CAAC;IAC/BA,IAAI,CAACW,KAAK,CAAC,CAAC;IACZV,QAAQ,CAACQ,IAAI,CAACG,WAAW,CAACZ,IAAI,CAAC;IAC/BI,GAAG,CAACS,eAAe,CAACV,GAAG,CAAC;EAC1B,CAAC;EAED,MAAMW,gBAAgB,GAAIC,SAAS,IAAK;IACtC,IAAI,CAAChF,QAAQ,IAAIA,QAAQ,CAAClB,MAAM,KAAK,CAAC,EAAE;MACtC,OAAO,CAAC,KAAK,CAAC;IAChB;IACA,MAAMmG,OAAO,GAAGjF,QAAQ,CAACT,GAAG,CAAEoD,OAAO,IAAK;MACxC,MAAMrB,KAAK,GAAGqB,OAAO,CAACqC,SAAS,CAAC;MAChC,OAAOA,SAAS,KAAK,SAAS,GAAG3D,cAAc,CAACC,KAAK,CAAC,GAAGwB,MAAM,CAACxB,KAAK,CAAC;IACxE,CAAC,CAAC;IACF,MAAM4D,aAAa,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACF,OAAO,CAAC,CAAC,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACzD,MAAMC,eAAe,GAAG,CACtB,sBAAsB,EACtB,mBAAmB,EACnB,kBAAkB,EAClB,eAAe,CAChB,CAACC,QAAQ,CAACR,SAAS,CAAC;MACrB,IAAIO,eAAe,EAAE;QACnB,OAAOE,MAAM,CAACJ,CAAC,CAAC,GAAGI,MAAM,CAACH,CAAC,CAAC;MAC9B;MACA,IAAIN,SAAS,KAAK,SAAS,EAAE;QAC3B,MAAMU,IAAI,GAAGC,UAAU,CAACN,CAAC,CAACO,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QACpD,MAAMC,IAAI,GAAGF,UAAU,CAACL,CAAC,CAACM,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QACpD,OAAOF,IAAI,GAAGG,IAAI;MACpB;MACA,OAAOR,CAAC,CAACS,aAAa,CAACR,CAAC,CAAC;IAC3B,CAAC,CAAC;IACF,OAAO,CAAC,KAAK,EAAE,GAAGJ,aAAa,CAAC;EAClC,CAAC;EAED,MAAMa,kBAAkB,GAAGA,CAACf,SAAS,EAAE1D,KAAK,KAAK;IAC/CH,gBAAgB,CAAE6E,WAAW,KAAM;MACjC,GAAGA,WAAW;MACd,CAAChB,SAAS,GAAG1D,KAAK,KAAK,KAAK,GAAG,IAAI,GAAGA;IACxC,CAAC,CAAC,CAAC;IACHF,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC;;EAED;EACA3D,SAAS,CAAC,MAAM;IAAA,IAAAwI,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;IACd,MAAMC,gBAAgB,GAAG,MAAAA,CAAOnE,KAAK,EAAEoE,IAAI,EAAEC,KAAK,EAAEC,WAAW,KAAK;MAClEtG,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MACd,IAAI;QACF,MAAMqG,OAAO,GAAG;UAAEvE,KAAK;UAAEoE,IAAI;UAAEC,KAAK;UAAEC;QAAY,CAAC;QACnD,MAAME,IAAI,GAAG,MAAMC,KAAK,CAAC,GAAGzI,WAAW,cAAc,EAAE;UACrD0I,MAAM,EAAE,MAAM;UACd1D,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CuB,IAAI,EAAEoC,IAAI,CAACC,SAAS,CAACL,OAAO;QAC9B,CAAC,CAAC;QACF,IAAI,CAACC,IAAI,CAACK,EAAE,EAAE;UACZ,MAAMC,OAAO,GAAG,MAAMN,IAAI,CAACO,IAAI,CAAC,CAAC;UACjC,MAAM,IAAIC,KAAK,CACb,WAAWR,IAAI,CAACS,MAAM,cAAcH,OAAO,IAAIN,IAAI,CAACU,UAAU,EAChE,CAAC;QACH;QACA,MAAMC,IAAI,GAAG,MAAMX,IAAI,CAACY,IAAI,CAAC,CAAC;QAC9B,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC,GAAG,EAAE;QAC5DrH,WAAW,CAACuH,IAAI,CAAC;QACjBrG,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACpB,IAAIqG,IAAI,CAAC1I,MAAM,GAAG,CAAC,IAAI0I,IAAI,CAAC,CAAC,CAAC,CAACG,WAAW,EAAE;UAC1C9G,oBAAoB,CAAC2G,IAAI,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC;QAC3C,CAAC,MAAM;UACL,MAAMC,UAAU,GAAGC,cAAc,CAACC,OAAO,CACvC,+BACF,CAAC;UACDjH,oBAAoB,CAAC+G,UAAU,IAAIpB,KAAK,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOuB,CAAC,EAAE;QACV9E,OAAO,CAAC7C,KAAK,CAAC,8BAA8B,EAAE2H,CAAC,CAAC;QAChD1H,QAAQ,CAAC,gCAAgC0H,CAAC,CAACC,OAAO,EAAE,CAAC;MACvD,CAAC,SAAS;QACR7H,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED,IAAI8H,UAAU,GACZ,EAAAhC,eAAA,GAAAlG,QAAQ,CAACmI,KAAK,cAAAjC,eAAA,uBAAdA,eAAA,CAAgB9D,KAAK,KACrB0F,cAAc,CAACC,OAAO,CAAC,yBAAyB,CAAC;IACnD,IAAIK,SAAS,GACX,EAAAjC,gBAAA,GAAAnG,QAAQ,CAACmI,KAAK,cAAAhC,gBAAA,uBAAdA,gBAAA,CAAgBK,IAAI,KAAIsB,cAAc,CAACC,OAAO,CAAC,wBAAwB,CAAC;IAC1E,IAAIM,cAAc,GAAGtI,YAAY;IACjC,IAAIuI,gBAAgB,GAClB,EAAAlC,gBAAA,GAAApG,QAAQ,CAACmI,KAAK,cAAA/B,gBAAA,uBAAdA,gBAAA,CAAgBwB,WAAW,KAC3BE,cAAc,CAACC,OAAO,CAAC,+BAA+B,CAAC;IACzD,IAAIQ,QAAQ,GACV,EAAAlC,gBAAA,GAAArG,QAAQ,CAACmI,KAAK,cAAA9B,gBAAA,uBAAdA,gBAAA,CAAgBmC,GAAG,KAAIV,cAAc,CAACC,OAAO,CAAC,uBAAuB,CAAC;IACxE,IAAIU,gBAAgB,GAClB,EAAAnC,gBAAA,GAAAtG,QAAQ,CAACmI,KAAK,cAAA7B,gBAAA,uBAAdA,gBAAA,CAAgBI,WAAW,KAC3BoB,cAAc,CAACC,OAAO,CAAC,wBAAwB,CAAC;IAElDG,UAAU,GAAGA,UAAU,GAAGQ,QAAQ,CAACR,UAAU,EAAE,EAAE,CAAC,GAAG,IAAI;IACzDE,SAAS,GAAGA,SAAS,GAAGM,QAAQ,CAACN,SAAS,EAAE,EAAE,CAAC,GAAG,IAAI;IAEtD,IAAIF,UAAU,IAAIE,SAAS,IAAIC,cAAc,EAAE;MAC7C,MAAMM,gBAAgB,GACpBT,UAAU,KAAK3H,WAAW,IAC1B6H,SAAS,KAAK3H,UAAU,IACxB4H,cAAc,KAAK1H,eAAe,IAClC4H,QAAQ,KAAKxH,SAAS,IACtB0H,gBAAgB,KAAKxH,iBAAiB;MACxC,IAAIV,WAAW,KAAK,IAAI,IAAIoI,gBAAgB,EAAE;QAC5CnI,cAAc,CAAC0H,UAAU,CAAC;QAC1BxH,aAAa,CAAC0H,SAAS,CAAC;QACxBxH,kBAAkB,CAACyH,cAAc,CAAC;QAClC,IAAIC,gBAAgB,EAAExH,oBAAoB,CAACwH,gBAAgB,CAAC;QAC5DtH,YAAY,CAACuH,QAAQ,CAAC;QACtBrH,oBAAoB,CAACuH,gBAAgB,CAAC;QAEtCX,cAAc,CAACc,OAAO,CACpB,yBAAyB,EACzBV,UAAU,CAACW,QAAQ,CAAC,CACtB,CAAC;QACDf,cAAc,CAACc,OAAO,CAAC,wBAAwB,EAAER,SAAS,CAACS,QAAQ,CAAC,CAAC,CAAC;QACtEf,cAAc,CAACc,OAAO,CAAC,6BAA6B,EAAEP,cAAc,CAAC;QACrE,IAAIC,gBAAgB,EAClBR,cAAc,CAACc,OAAO,CACpB,+BAA+B,EAC/BN,gBACF,CAAC;QACH,IAAIC,QAAQ,EAAET,cAAc,CAACc,OAAO,CAAC,uBAAuB,EAAEL,QAAQ,CAAC;QACvE,IAAIE,gBAAgB,EAClBX,cAAc,CAACc,OAAO,CAAC,wBAAwB,EAAEH,gBAAgB,CAAC;QAEpElC,gBAAgB,CACd2B,UAAU,EACVE,SAAS,EACTC,cAAc,EACdI,gBACF,CAAC;MACH;IACF,CAAC,MAAM;MACLnI,QAAQ,CACN,+EACF,CAAC;MACDF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CACDJ,QAAQ,CAACmI,KAAK,EACdpI,YAAY,EACZQ,WAAW,EACXE,UAAU,EACVE,eAAe,EACfI,SAAS,EACTE,iBAAiB,CAClB,CAAC;;EAEF;EACAvD,SAAS,CAAC,MAAM;IACd,MAAMwG,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;IAC3CF,IAAI,CAAC/E,IAAI,GACP,gFAAgF;IAClF+E,IAAI,CAAC4E,GAAG,GAAG,YAAY;IACvB3E,QAAQ,CAAC4E,IAAI,CAACnE,WAAW,CAACV,IAAI,CAAC;IAC/BC,QAAQ,CAACQ,IAAI,CAAChD,KAAK,CAACqH,UAAU,GAAG,uBAAuB;EAC1D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,eAAe,GAAGxK,WAAW,GAAGH,YAAY;EAClD,MAAM4K,gBAAgB,GAAGD,eAAe,GAAG3K,YAAY;EACvD,MAAM6K,YAAY,GAAG9G,gBAAgB,CAAC+G,KAAK,CACzCF,gBAAgB,EAChBD,eACF,CAAC;EACD,MAAMzK,QAAQ,GAAI6K,UAAU,IAAKhI,cAAc,CAACgI,UAAU,CAAC;;EAE3D;EACA,MAAMC,cAAc,GAAG,CACrB;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAG,CAAC,EACnC;IAAED,IAAI,EAAE,+BAA+B;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzD,IAAIzI,SAAS,GACT,CACE;IACEwI,IAAI,EAAE,GAAGxI,SAAS,YAAY;IAC9ByI,IAAI,EAAE,KAAK;IACXrB,KAAK,EAAE;MAAE/F,KAAK,EAAE7B,WAAW;MAAEiG,IAAI,EAAE/F,UAAU;MAAE+H,GAAG,EAAEzH;IAAU;EAChE,CAAC,CACF,GACD,EAAE,CAAC,EACP;IACEwI,IAAI,EAAE,eAAe;IACrBC,IAAI,EAAE,UAAU;IAChBrB,KAAK,EAAE;MAAE/F,KAAK,EAAE7B,WAAW;MAAEiG,IAAI,EAAE/F,UAAU;MAAE+H,GAAG,EAAEzH;IAAU;EAChE,CAAC,EACD,IAAIE,iBAAiB,GACjB,CACE;IACEsI,IAAI,EAAE,GAAGtI,iBAAiB,eAAe;IACzCuI,IAAI,EAAE,YAAY7I,eAAe,gBAAgB;IACjDwH,KAAK,EAAE;MACL/F,KAAK,EAAE7B,WAAW;MAClBiG,IAAI,EAAE/F,UAAU;MAChB+H,GAAG,EAAEzH,SAAS;MACd0F,KAAK,EAAE9F;IACT;EACF,CAAC,CACF,GACD,EAAE,CAAC,EACP;IACE4I,IAAI,EAAE,aAAa1I,iBAAiB,GAAG;IACvC2I,IAAI,EAAE,YAAY7I,eAAe;EACnC,CAAC,CACF,CAACgC,MAAM,CAAC8G,OAAO,CAAC;EAEjB,IAAItJ,OAAO,EAAE;IACX,oBACEhC,OAAA;MAAKa,SAAS,EAAC,6DAA6D;MAAAC,QAAA,gBAC1Ed,OAAA;QAAKa,SAAS,EAAC,6BAA6B;QAAC0K,IAAI,EAAC;MAAQ;QAAAtK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DpB,OAAA;QAAGa,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAEV;EAEA,IAAIc,KAAK,EAAE;IACT,oBACElC,OAAA;MAAKa,SAAS,EAAC,qFAAqF;MAAAC,QAAA,gBAClGd,OAAA;QAAGa,SAAS,EAAC,MAAM;QAAAC,QAAA,GAAC,SAAO,EAACoB,KAAK;MAAA;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtCpB,OAAA;QACEa,SAAS,EAAC,sBAAsB;QAChCE,OAAO,EAAEA,CAAA,KACPW,QAAQ,CAAC,WAAW,EAAE;UACpBsI,KAAK,EAAE;YAAE/F,KAAK,EAAE7B,WAAW;YAAEiG,IAAI,EAAE/F,UAAU;YAAE+H,GAAG,EAAEzH;UAAU;QAChE,CAAC,CACF;QAAA9B,QAAA,EACF;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;EAEA,oBACEpB,OAAA;IACEa,SAAS,EAAC,4DAA4D;IACtE2C,KAAK,EAAE;MACLgI,UAAU,EAAE,oDAAoD;MAChEX,UAAU,EAAE;IACd,CAAE;IAAA/J,QAAA,eAEFd,OAAA;MACEa,SAAS,EAAC,8BAA8B;MACxC2C,KAAK,EAAE;QACLiI,QAAQ,EAAE,QAAQ;QAClBC,eAAe,EAAE,WAAW;QAC5BC,YAAY,EAAE;MAChB,CAAE;MAAA7K,QAAA,gBAEFd,OAAA,CAACH,WAAW;QAAC+L,IAAI,EAAET;MAAe;QAAAlK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrCpB,OAAA;QAAKa,SAAS,EAAC,wDAAwD;QAAAC,QAAA,gBACrEd,OAAA;UAAIa,SAAS,EAAC,4BAA4B;UAAAC,QAAA,GAAC,qCAChB,EAAC,GAAG,EAC5B0B,eAAe,GAAG,OAAOE,iBAAiB,EAAE,GAAG,EAAE;QAAA;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,EACJU,QAAQ,CAAClB,MAAM,GAAG,CAAC,iBAClBZ,OAAA;UACEa,SAAS,EAAC,2CAA2C;UACrDE,OAAO,EAAE+D,kBAAmB;UAC5B+G,KAAK,EAAC,uBAAuB;UAAA/K,QAAA,gBAE7Bd,OAAA;YAAGa,SAAS,EAAC;UAAqB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,kBACzC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNpB,OAAA;QAAKa,SAAS,EAAC,0BAA0B;QAAAC,QAAA,eAEvCd,OAAA;UACEa,SAAS,EAAC,sDAAsD;UAChE2C,KAAK,EAAE;YAAEsI,KAAK,EAAE;UAAO,CAAE;UAAAhL,QAAA,gBAEzBd,OAAA;YACEa,SAAS,EAAC,YAAY;YACtB2C,KAAK,EAAE;cACLgI,UAAU,EAAE;YACd,CAAE;YAAA1K,QAAA,eAEFd,OAAA;cAAAc,QAAA,gBACEd,OAAA;gBAAAc,QAAA,GAAI,YACQ,EAAC,GAAG,eACdd,OAAA;kBACEa,SAAS,EAAC,iCAAiC;kBAC3CkL,QAAQ,EAAGlC,CAAC,IACVhC,kBAAkB,CAAC,WAAW,EAAEgC,CAAC,CAACmC,MAAM,CAAC5I,KAAK,CAC/C;kBACDA,KAAK,EAAEJ,aAAa,CAACmC,SAAS,IAAI,KAAM;kBAAArE,QAAA,EAEvC+F,gBAAgB,CAAC,WAAW,CAAC,CAACxF,GAAG,CAAE4K,CAAC,iBACnCjM,OAAA;oBAAgBoD,KAAK,EAAE6I,CAAE;oBAAAnL,QAAA,EACtBmL;kBAAC,GADSA,CAAC;oBAAAhL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEN,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLpB,OAAA;gBAAAc,QAAA,GAAI,cACU,EAAC,GAAG,eAChBd,OAAA;kBACEa,SAAS,EAAC,iCAAiC;kBAC3CkL,QAAQ,EAAGlC,CAAC,IACVhC,kBAAkB,CAAC,aAAa,EAAEgC,CAAC,CAACmC,MAAM,CAAC5I,KAAK,CACjD;kBACDA,KAAK,EAAEJ,aAAa,CAACoC,WAAW,IAAI,KAAM;kBAAAtE,QAAA,EAEzC+F,gBAAgB,CAAC,aAAa,CAAC,CAACxF,GAAG,CAAE4K,CAAC,iBACrCjM,OAAA;oBAAgBoD,KAAK,EAAE6I,CAAE;oBAAAnL,QAAA,EACtBmL;kBAAC,GADSA,CAAC;oBAAAhL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEN,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLpB,OAAA;gBAAAc,QAAA,GAAI,kBACc,EAAC,GAAG,eACpBd,OAAA;kBACEa,SAAS,EAAC,iCAAiC;kBAC3CkL,QAAQ,EAAGlC,CAAC,IACVhC,kBAAkB,CAAC,sBAAsB,EAAEgC,CAAC,CAACmC,MAAM,CAAC5I,KAAK,CAC1D;kBACDA,KAAK,EAAEJ,aAAa,CAACqC,oBAAoB,IAAI,KAAM;kBAAAvE,QAAA,EAElD+F,gBAAgB,CAAC,sBAAsB,CAAC,CAACxF,GAAG,CAAE4K,CAAC,iBAC9CjM,OAAA;oBAAgBoD,KAAK,EAAE6I,CAAE;oBAAAnL,QAAA,EACtBmL;kBAAC,GADSA,CAAC;oBAAAhL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEN,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLpB,OAAA;gBAAAc,QAAA,GAAI,eACW,EAAC,GAAG,eACjBd,OAAA;kBACEa,SAAS,EAAC,iCAAiC;kBAC3CkL,QAAQ,EAAGlC,CAAC,IACVhC,kBAAkB,CAAC,mBAAmB,EAAEgC,CAAC,CAACmC,MAAM,CAAC5I,KAAK,CACvD;kBACDA,KAAK,EAAEJ,aAAa,CAACsC,iBAAiB,IAAI,KAAM;kBAAAxE,QAAA,EAE/C+F,gBAAgB,CAAC,mBAAmB,CAAC,CAACxF,GAAG,CAAE4K,CAAC,iBAC3CjM,OAAA;oBAAgBoD,KAAK,EAAE6I,CAAE;oBAAAnL,QAAA,EACtBmL;kBAAC,GADSA,CAAC;oBAAAhL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEN,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLpB,OAAA;gBAAAc,QAAA,GAAI,cACU,EAAC,GAAG,eAChBd,OAAA;kBACEa,SAAS,EAAC,iCAAiC;kBAC3CkL,QAAQ,EAAGlC,CAAC,IACVhC,kBAAkB,CAAC,kBAAkB,EAAEgC,CAAC,CAACmC,MAAM,CAAC5I,KAAK,CACtD;kBACDA,KAAK,EAAEJ,aAAa,CAACuC,gBAAgB,IAAI,KAAM;kBAAAzE,QAAA,EAE9C+F,gBAAgB,CAAC,kBAAkB,CAAC,CAACxF,GAAG,CAAE4K,CAAC,iBAC1CjM,OAAA;oBAAgBoD,KAAK,EAAE6I,CAAE;oBAAAnL,QAAA,EACtBmL;kBAAC,GADSA,CAAC;oBAAAhL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEN,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLpB,OAAA;gBAAAc,QAAA,GAAI,gBACY,EAAC,GAAG,eAClBd,OAAA;kBACEa,SAAS,EAAC,iCAAiC;kBAC3CkL,QAAQ,EAAGlC,CAAC,IACVhC,kBAAkB,CAAC,eAAe,EAAEgC,CAAC,CAACmC,MAAM,CAAC5I,KAAK,CACnD;kBACDA,KAAK,EAAEJ,aAAa,CAACwC,aAAa,IAAI,KAAM;kBAAA1E,QAAA,EAE3C+F,gBAAgB,CAAC,eAAe,CAAC,CAACxF,GAAG,CAAE4K,CAAC,iBACvCjM,OAAA;oBAAgBoD,KAAK,EAAE6I,CAAE;oBAAAnL,QAAA,EACtBmL;kBAAC,GADSA,CAAC;oBAAAhL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEN,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLpB,OAAA;gBAAAc,QAAA,GAAI,SACK,EAAC,GAAG,eACXd,OAAA;kBACEa,SAAS,EAAC,iCAAiC;kBAC3CkL,QAAQ,EAAGlC,CAAC,IACVhC,kBAAkB,CAAC,SAAS,EAAEgC,CAAC,CAACmC,MAAM,CAAC5I,KAAK,CAC7C;kBACDA,KAAK,EAAEJ,aAAa,CAACyC,OAAO,IAAI,KAAM;kBAAA3E,QAAA,EAErC+F,gBAAgB,CAAC,SAAS,CAAC,CAACxF,GAAG,CAAE4K,CAAC,iBACjCjM,OAAA;oBAAgBoD,KAAK,EAAE6I,CAAE;oBAAAnL,QAAA,EACtBmL;kBAAC,GADSA,CAAC;oBAAAhL,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEN,CACT;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC,eACLpB,OAAA;gBAAIa,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAC;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRpB,OAAA;YAAAc,QAAA,EAEGkK,YAAY,CAACpK,MAAM,GAAG,CAAC,GACtBoK,YAAY,CAAC3J,GAAG,CAAEoD,OAAO,iBACvBzE,OAAA;cAAAc,QAAA,gBACEd,OAAA;gBAAAc,QAAA,EAAK2D,OAAO,CAACU;cAAS;gBAAAlE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5BpB,OAAA;gBAAAc,QAAA,EAAK2D,OAAO,CAACW;cAAW;gBAAAnE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9BpB,OAAA;gBAAAc,QAAA,EAAK2D,OAAO,CAACY;cAAoB;gBAAApE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvCpB,OAAA;gBAAAc,QAAA,EAAK2D,OAAO,CAACa;cAAiB;gBAAArE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpCpB,OAAA;gBAAAc,QAAA,EAAK2D,OAAO,CAACc;cAAgB;gBAAAtE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACnCpB,OAAA;gBAAAc,QAAA,EAAK2D,OAAO,CAACe;cAAa;gBAAAvE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAChCpB,OAAA;gBAAAc,QAAA,EAAKqC,cAAc,CAACsB,OAAO,CAACgB,OAAO;cAAC;gBAAAxE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC1CpB,OAAA;gBAAIa,SAAS,EAAC,aAAa;gBAAAC,QAAA,eACzBd,OAAA;kBACEa,SAAS,EAAC,+CAA+C;kBACzDE,OAAO,EAAEA,CAAA,KACPW,QAAQ,CACN,aAAa+C,OAAO,CAACU,SAAS,aAAa,EAC3C;oBACE6E,KAAK,EAAE;sBACL,GAAGvF,OAAO;sBACVR,KAAK,EAAE7B,WAAW;sBAClBiG,IAAI,EAAE/F,UAAU;sBAChB+H,GAAG,EAAEzH,SAAS;sBACd2F,WAAW,EAAEzF;oBACf;kBACF,CACF,CACD;kBACD+I,KAAK,EAAC,iBAAiB;kBAAA/K,QAAA,EACxB;gBAED;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACP,CAAC;YAAA,GA7BEqD,OAAO,CAACU,SAAS;cAAAlE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OA8BtB,CACL,CAAC,gBAEFpB,OAAA;cAAAc,QAAA,eACEd,OAAA;gBAAIkM,OAAO,EAAC,GAAG;gBAACrL,SAAS,EAAC,iBAAiB;gBAAAC,QAAA,EAAC;cAE5C;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UACL;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENpB,OAAA,CAACE,UAAU;QACTC,YAAY,EAAEA,YAAa;QAC3BC,UAAU,EAAE8D,gBAAgB,CAACtD,MAAO;QACpCP,QAAQ,EAAEA,QAAS;QACnBC,WAAW,EAAEA;MAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,CAriBID,YAAY;EAAA,QACC9B,WAAW,EACQC,SAAS,EAC5BC,WAAW;AAAA;AAAAuM,GAAA,GAHxB3K,YAAY;AAuiBlB,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAA4K,GAAA;AAAAC,YAAA,CAAA7K,EAAA;AAAA6K,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}