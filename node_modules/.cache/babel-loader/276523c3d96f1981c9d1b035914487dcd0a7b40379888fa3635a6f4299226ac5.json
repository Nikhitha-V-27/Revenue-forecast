{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = 'http://localhost:8081';\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n  const tableRef = useRef(null);\n\n  // State\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n  const [activeSbu, setActiveSbu] = useState(null);\n  const [activeProjectType, setActiveProjectType] = useState(null);\n  const [columnFilters, setColumnFilters] = useState({});\n\n  // Helpers\n  const formatCurrency = (value = 0) => value.toLocaleString(commonData.currencySettings.locale, {\n    style: 'currency',\n    currency: commonData.currencySettings.currency,\n    minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\n    maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\n  });\n  const getMonthName = monthNumber => {\n    if (!monthNumber) return '';\n    const date = new Date();\n    date.setMonth(monthNumber - 1);\n    return date.toLocaleString('en-US', {\n      month: 'long'\n    });\n  };\n  const applyFilters = (arr, filters) => arr.filter(proj => Object.entries(filters).every(([col, filterValue]) => {\n    if (filterValue == null) return true;\n    let val = proj[col];\n    if (col === 'revenue') val = formatCurrency(val);\n    return String(val).trim().toLowerCase() === String(filterValue).trim().toLowerCase();\n  }));\n  const getUniqueOptions = columnKey => {\n    const opts = projects.map(p => columnKey === 'revenue' ? formatCurrency(p[columnKey]) : p[columnKey]);\n    const uniq = Array.from(new Set(opts.map(String)));\n    uniq.sort((a, b) => {\n      const na = Number(a),\n        nb = Number(b);\n      return !isNaN(na) && !isNaN(nb) ? na - nb : a.localeCompare(b);\n    });\n    return ['All', ...uniq];\n  };\n\n  // Handlers\n  const handleDownloadData = () => {\n    if (!projects.length) return;\n    const headers = ['Project ID', 'Project Name', 'Total Associates', 'Company Hours', 'Client Hours', 'Variance Hours', 'Revenue'];\n    const rows = applyFilters(projects, columnFilters).map(p => [`\"${p.projectId}\"`, `\"${p.projectName}\"`, p.totalAssociatesCount, p.totalCompanyHours, p.totalClientHours, p.varianceHours, `\"${formatCurrency(p.revenue)}\"`].join(','));\n    const csv = [headers.join(','), ...rows].join('\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = `Projects_Account_${activeAccountId}_${getMonthName(activeMonth)}_${activeYear}.csv`;\n    a.style.visibility = 'hidden';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  const handleFilterChange = (col, val) => {\n    setColumnFilters(f => ({\n      ...f,\n      [col]: val === 'All' ? null : val\n    }));\n  };\n\n  // Load font once\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch data when params change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3, _location$state4, _location$state5;\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let acc = urlAccountId;\n    let accName = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.accountName;\n    let sbu = (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.sbu;\n    let pType = (_location$state5 = location.state) === null || _location$state5 === void 0 ? void 0 : _location$state5.projectType;\n    if (!m) m = sessionStorage.getItem('lastFetchedProjectMonth');\n    if (!y) y = sessionStorage.getItem('lastFetchedProjectYear');\n    if (!accName) accName = sessionStorage.getItem('lastFetchedProjectAccountName');\n    if (!sbu) sbu = sessionStorage.getItem('lastFetchedProjectSbu');\n    if (!pType) pType = sessionStorage.getItem('lastFetchedProjectType');\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (!(m && y && acc)) {\n      setError('Missing month, year, or Account ID. Please navigate here with all parameters.');\n      setLoading(false);\n      return;\n    }\n    const shouldFetch = m !== activeMonth || y !== activeYear || acc !== activeAccountId || sbu !== activeSbu || pType !== activeProjectType;\n    if (!shouldFetch) {\n      setLoading(false);\n      return;\n    }\n\n    // update state & session\n    setActiveMonth(m);\n    setActiveYear(y);\n    setActiveAccountId(acc);\n    sbu && setActiveSbu(sbu);\n    pType && setActiveProjectType(pType);\n    accName && setActiveAccountName(accName);\n    sessionStorage.setItem('lastFetchedProjectMonth', m);\n    sessionStorage.setItem('lastFetchedProjectYear', y);\n    sessionStorage.setItem('lastFetchedProjectAccountId', acc);\n    sbu && sessionStorage.setItem('lastFetchedProjectSbu', sbu);\n    pType && sessionStorage.setItem('lastFetchedProjectType', pType);\n    accName && sessionStorage.setItem('lastFetchedProjectAccountName', accName);\n\n    // fetch\n    (async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        var _list$;\n        const res = await fetch(`${BACKEND_URL}/api/project`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month: m,\n            year: y,\n            accId: acc,\n            projectType: pType\n          })\n        });\n        if (!res.ok) {\n          const txt = await res.text();\n          throw new Error(`status: ${res.status}, ${txt || res.statusText}`);\n        }\n        const json = await res.json();\n        const list = Array.isArray(json) ? json : [json].filter(Boolean);\n        setProjects(list);\n        setColumnFilters({});\n        if ((_list$ = list[0]) !== null && _list$ !== void 0 && _list$.accountName) {\n          setActiveAccountName(list[0].accountName);\n        }\n      } catch (e) {\n        setError(`Failed to fetch project data: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, [location.state, urlAccountId, activeMonth, activeYear, activeAccountId, activeSbu, activeProjectType]);\n\n  // Initialize / reinitialize DataTable\n  useEffect(() => {\n    if (!loading && projects.length && tableRef.current) {\n      const $tbl = $(tableRef.current);\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n      }\n      setTimeout(() => {\n        const dt = $tbl.DataTable({\n          paging: true,\n          searching: true,\n          ordering: false,\n          info: true,\n          autoWidth: false\n        });\n        tableRef.current.dataTableInstance = dt;\n      }, 0);\n    }\n    return () => {\n      var _tableRef$current;\n      if ((_tableRef$current = tableRef.current) !== null && _tableRef$current !== void 0 && _tableRef$current.dataTableInstance) {\n        tableRef.current.dataTableInstance.destroy();\n        tableRef.current.dataTableInstance = null;\n      }\n    };\n  }, [loading, projects]);\n\n  // Apply column filters via DataTables API\n  useEffect(() => {\n    var _tableRef$current2;\n    const inst = (_tableRef$current2 = tableRef.current) === null || _tableRef$current2 === void 0 ? void 0 : _tableRef$current2.dataTableInstance;\n    if (!inst) return;\n\n    // clear old filters\n    inst.columns().search('');\n\n    // mapping colKey → index\n    const colMap = {\n      projectId: 0,\n      projectName: 1,\n      totalAssociatesCount: 2,\n      totalCompanyHours: 3,\n      totalClientHours: 4,\n      varianceHours: 5,\n      revenue: 6\n    };\n    Object.entries(columnFilters).forEach(([col, val]) => {\n      if (val != null && colMap[col] != null) {\n        const idx = colMap[col];\n        const term = String(val).trim();\n        inst.column(idx).search(`^${term}$`, true, false);\n      }\n    });\n    inst.draw();\n  }, [columnFilters]);\n\n  // Breadcrumbs config\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, activeSbu && {\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }, {\n    name: 'Account Level',\n    page: 'accounts',\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu\n    }\n  }, activeProjectType && {\n    name: `${activeProjectType} Project Type`,\n    page: `accounts/${activeAccountId}/project-types`,\n    state: {\n      month: activeMonth,\n      year: activeYear,\n      sbu: activeSbu,\n      accId: activeAccountId\n    }\n  }, {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }].filter(Boolean);\n\n  // Renderers\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate('/accounts', {\n          state: {\n            month: activeMonth,\n            year: activeYear,\n            sbu: activeSbu\n          }\n        }),\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1200px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0 fw-semibold text-dark\",\n          children: [\"\\uD83D\\uDCC1 Project Level Overview\", ' ', activeAccountId ? `for ${activeAccountName}` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), projects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Project Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-borderless mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #3b82f6, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [[{\n                key: 'projectId',\n                label: 'Project ID'\n              }, {\n                key: 'projectName',\n                label: 'Project Name'\n              }, {\n                key: 'totalAssociatesCount',\n                label: 'Total Associates'\n              }, {\n                key: 'totalCompanyHours',\n                label: 'Company Hours'\n              }, {\n                key: 'totalClientHours',\n                label: 'Client Hours'\n              }, {\n                key: 'varianceHours',\n                label: 'Variance Hours'\n              }, {\n                key: 'revenue',\n                label: 'Revenue'\n              }].map(({\n                key,\n                label\n              }) => {\n                var _columnFilters$key;\n                return /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: [label, /*#__PURE__*/_jsxDEV(\"select\", {\n                    className: \"form-select form-select-sm mt-1\",\n                    onChange: e => handleFilterChange(key, e.target.value),\n                    value: (_columnFilters$key = columnFilters[key]) !== null && _columnFilters$key !== void 0 ? _columnFilters$key : 'All',\n                    children: getUniqueOptions(key).map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: opt,\n                      children: opt\n                    }, opt, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 408,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 21\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 19\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: projects.map(p => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.projectId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.totalAssociatesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.totalCompanyHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.totalClientHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p.varianceHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(p.revenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/projects/${p.projectId}/associates`, {\n                    state: {\n                      projectId: p.projectId,\n                      projectName: p.projectName,\n                      accountId: p.accountId,\n                      accountName: p.accountName,\n                      month: activeMonth,\n                      year: activeYear,\n                      sbu: activeSbu,\n                      projectType: activeProjectType\n                    }\n                  }),\n                  title: \"View Associates\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this)]\n            }, p.projectId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"6O6aTl7DTcAebSMhXQLD6/Qh8fE=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ProjectLevel;\nexport default ProjectLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useParams","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","BACKEND_URL","ProjectLevel","_s","navigate","accountId","urlAccountId","location","tableRef","projects","setProjects","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","activeSbu","setActiveSbu","activeProjectType","setActiveProjectType","columnFilters","setColumnFilters","formatCurrency","value","toLocaleString","currencySettings","locale","style","currency","minimumFractionDigits","maximumFractionDigits","getMonthName","monthNumber","date","Date","setMonth","month","applyFilters","arr","filters","filter","proj","Object","entries","every","col","filterValue","val","String","trim","toLowerCase","getUniqueOptions","columnKey","opts","map","p","uniq","Array","from","Set","sort","a","b","na","Number","nb","isNaN","localeCompare","handleDownloadData","length","headers","rows","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","join","csv","blob","Blob","type","document","createElement","href","URL","createObjectURL","download","visibility","body","appendChild","click","removeChild","handleFilterChange","f","link","rel","head","fontFamily","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","m","state","y","year","acc","accName","accountName","sbu","pType","projectType","sessionStorage","getItem","parseInt","shouldFetch","setItem","_list$","res","fetch","method","JSON","stringify","accId","ok","txt","text","Error","status","statusText","json","list","isArray","Boolean","e","message","current","$tbl","fn","DataTable","isDataTable","destroy","setTimeout","dt","paging","searching","ordering","info","autoWidth","dataTableInstance","_tableRef$current","_tableRef$current2","inst","columns","search","colMap","forEach","idx","term","column","draw","breadcrumbPath","name","page","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","maxWidth","backgroundColor","borderRadius","path","title","ref","width","key","label","_columnFilters$key","onChange","target","opt","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/ProjectLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\nconst BACKEND_URL = 'http://localhost:8081';\r\n\r\nconst ProjectLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { accountId: urlAccountId } = useParams();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  // State\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeAccountId, setActiveAccountId] = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n  const [activeProjectType, setActiveProjectType] = useState(null);\r\n  const [columnFilters, setColumnFilters] = useState({});\r\n\r\n  // Helpers\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(commonData.currencySettings.locale, {\r\n      style: 'currency',\r\n      currency: commonData.currencySettings.currency,\r\n      minimumFractionDigits:\r\n        commonData.currencySettings.minimumFractionDigits,\r\n      maximumFractionDigits:\r\n        commonData.currencySettings.maximumFractionDigits,\r\n    });\r\n\r\n  const getMonthName = (monthNumber) => {\r\n    if (!monthNumber) return '';\r\n    const date = new Date();\r\n    date.setMonth(monthNumber - 1);\r\n    return date.toLocaleString('en-US', { month: 'long' });\r\n  };\r\n\r\n  const applyFilters = (arr, filters) =>\r\n    arr.filter((proj) =>\r\n      Object.entries(filters).every(([col, filterValue]) => {\r\n        if (filterValue == null) return true;\r\n        let val = proj[col];\r\n        if (col === 'revenue') val = formatCurrency(val);\r\n        return String(val).trim().toLowerCase() ===\r\n               String(filterValue).trim().toLowerCase();\r\n      })\r\n    );\r\n\r\n  const getUniqueOptions = (columnKey) => {\r\n    const opts = projects.map((p) =>\r\n      columnKey === 'revenue' ? formatCurrency(p[columnKey]) : p[columnKey]\r\n    );\r\n    const uniq = Array.from(new Set(opts.map(String)));\r\n    uniq.sort((a, b) => {\r\n      const na = Number(a), nb = Number(b);\r\n      return !isNaN(na) && !isNaN(nb) ? na - nb : a.localeCompare(b);\r\n    });\r\n    return ['All', ...uniq];\r\n  };\r\n\r\n  // Handlers\r\n  const handleDownloadData = () => {\r\n    if (!projects.length) return;\r\n    const headers = [\r\n      'Project ID',\r\n      'Project Name',\r\n      'Total Associates',\r\n      'Company Hours',\r\n      'Client Hours',\r\n      'Variance Hours',\r\n      'Revenue',\r\n    ];\r\n    const rows = applyFilters(projects, columnFilters).map((p) => [\r\n      `\"${p.projectId}\"`,\r\n      `\"${p.projectName}\"`,\r\n      p.totalAssociatesCount,\r\n      p.totalCompanyHours,\r\n      p.totalClientHours,\r\n      p.varianceHours,\r\n      `\"${formatCurrency(p.revenue)}\"`,\r\n    ].join(','));\r\n    const csv = [headers.join(','), ...rows].join('\\n');\r\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\r\n    const a = document.createElement('a');\r\n    a.href = URL.createObjectURL(blob);\r\n    a.download = `Projects_Account_${activeAccountId}_${getMonthName(\r\n      activeMonth\r\n    )}_${activeYear}.csv`;\r\n    a.style.visibility = 'hidden';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const handleFilterChange = (col, val) => {\r\n    setColumnFilters((f) => ({\r\n      ...f,\r\n      [col]: val === 'All' ? null : val,\r\n    }));\r\n  };\r\n\r\n  // Load font once\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch data when params change\r\n  useEffect(() => {\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    let acc = urlAccountId;\r\n    let accName = location.state?.accountName;\r\n    let sbu = location.state?.sbu;\r\n    let pType = location.state?.projectType;\r\n\r\n    if (!m) m = sessionStorage.getItem('lastFetchedProjectMonth');\r\n    if (!y) y = sessionStorage.getItem('lastFetchedProjectYear');\r\n    if (!accName)\r\n      accName = sessionStorage.getItem('lastFetchedProjectAccountName');\r\n    if (!sbu) sbu = sessionStorage.getItem('lastFetchedProjectSbu');\r\n    if (!pType) pType = sessionStorage.getItem('lastFetchedProjectType');\r\n\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (!(m && y && acc)) {\r\n      setError(\r\n        'Missing month, year, or Account ID. Please navigate here with all parameters.'\r\n      );\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const shouldFetch =\r\n      m !== activeMonth ||\r\n      y !== activeYear ||\r\n      acc !== activeAccountId ||\r\n      sbu !== activeSbu ||\r\n      pType !== activeProjectType;\r\n\r\n    if (!shouldFetch) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    // update state & session\r\n    setActiveMonth(m);\r\n    setActiveYear(y);\r\n    setActiveAccountId(acc);\r\n    sbu && setActiveSbu(sbu);\r\n    pType && setActiveProjectType(pType);\r\n    accName && setActiveAccountName(accName);\r\n\r\n    sessionStorage.setItem('lastFetchedProjectMonth', m);\r\n    sessionStorage.setItem('lastFetchedProjectYear', y);\r\n    sessionStorage.setItem('lastFetchedProjectAccountId', acc);\r\n    sbu && sessionStorage.setItem('lastFetchedProjectSbu', sbu);\r\n    pType && sessionStorage.setItem('lastFetchedProjectType', pType);\r\n    accName && sessionStorage.setItem('lastFetchedProjectAccountName', accName);\r\n\r\n    // fetch\r\n    (async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const res = await fetch(`${BACKEND_URL}/api/project`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            month: m,\r\n            year: y,\r\n            accId: acc,\r\n            projectType: pType,\r\n          }),\r\n        });\r\n        if (!res.ok) {\r\n          const txt = await res.text();\r\n          throw new Error(`status: ${res.status}, ${txt || res.statusText}`);\r\n        }\r\n        const json = await res.json();\r\n        const list = Array.isArray(json) ? json : [json].filter(Boolean);\r\n        setProjects(list);\r\n        setColumnFilters({});\r\n        if (list[0]?.accountName) {\r\n          setActiveAccountName(list[0].accountName);\r\n        }\r\n      } catch (e) {\r\n        setError(`Failed to fetch project data: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [\r\n    location.state,\r\n    urlAccountId,\r\n    activeMonth,\r\n    activeYear,\r\n    activeAccountId,\r\n    activeSbu,\r\n    activeProjectType,\r\n  ]);\r\n\r\n  // Initialize / reinitialize DataTable\r\n  useEffect(() => {\r\n    if (!loading && projects.length && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n      }\r\n\r\n      setTimeout(() => {\r\n        const dt = $tbl.DataTable({\r\n          paging: true,\r\n          searching: true,\r\n          ordering: false,\r\n          info: true,\r\n          autoWidth: false,\r\n        });\r\n        tableRef.current.dataTableInstance = dt;\r\n      }, 0);\r\n    }\r\n\r\n    return () => {\r\n      if (tableRef.current?.dataTableInstance) {\r\n        tableRef.current.dataTableInstance.destroy();\r\n        tableRef.current.dataTableInstance = null;\r\n      }\r\n    };\r\n  }, [loading, projects]);\r\n\r\n  // Apply column filters via DataTables API\r\n  useEffect(() => {\r\n    const inst = tableRef.current?.dataTableInstance;\r\n    if (!inst) return;\r\n\r\n    // clear old filters\r\n    inst.columns().search('');\r\n\r\n    // mapping colKey → index\r\n    const colMap = {\r\n      projectId: 0,\r\n      projectName: 1,\r\n      totalAssociatesCount: 2,\r\n      totalCompanyHours: 3,\r\n      totalClientHours: 4,\r\n      varianceHours: 5,\r\n      revenue: 6,\r\n    };\r\n\r\n    Object.entries(columnFilters).forEach(([col, val]) => {\r\n      if (val != null && colMap[col] != null) {\r\n        const idx = colMap[col];\r\n        const term = String(val).trim();\r\n        inst.column(idx).search(`^${term}$`, true, false);\r\n      }\r\n    });\r\n\r\n    inst.draw();\r\n  }, [columnFilters]);\r\n\r\n  // Breadcrumbs config\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    {\r\n      name: 'Revenue Forecast - Early View',\r\n      page: 'upload',\r\n    },\r\n    activeSbu && {\r\n      name: `${activeSbu} SBU Level`,\r\n      page: 'sbu',\r\n      state: { month: activeMonth, year: activeYear, sbu: activeSbu },\r\n    },\r\n    {\r\n      name: 'Account Level',\r\n      page: 'accounts',\r\n      state: { month: activeMonth, year: activeYear, sbu: activeSbu },\r\n    },\r\n    activeProjectType && {\r\n      name: `${activeProjectType} Project Type`,\r\n      page: `accounts/${activeAccountId}/project-types`,\r\n      state: {\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        sbu: activeSbu,\r\n        accId: activeAccountId,\r\n      },\r\n    },\r\n    {\r\n      name: `Projects (${activeAccountName})`,\r\n      page: `accounts/${activeAccountId}/projects`,\r\n    },\r\n  ].filter(Boolean);\r\n\r\n  // Renderers\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() =>\r\n            navigate('/accounts', {\r\n              state: { month: activeMonth, year: activeYear, sbu: activeSbu },\r\n            })\r\n          }\r\n        >\r\n          Go to Account Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1200px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h2 className=\"mb-0 fw-semibold text-dark\">\r\n            📁 Project Level Overview{' '}\r\n            {activeAccountId ? `for ${activeAccountName}` : ''}\r\n          </h2>\r\n          {projects.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n              title=\"Download Project Data\"\r\n            >\r\n              <i className=\"bi bi-download me-2\" /> Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"table-responsive rounded\">\r\n          <table\r\n            ref={tableRef}\r\n            className=\"display table table-hover align-middle table-borderless mb-0\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            <thead\r\n              className=\"text-white\"\r\n              style={{\r\n                background: 'linear-gradient(to right, #3b82f6, #2563eb)',\r\n              }}\r\n            >\r\n              <tr>\r\n                {/*\r\n                  Each header has a <select> below for column-specific filtering\r\n                */}\r\n                {[\r\n                  { key: 'projectId', label: 'Project ID' },\r\n                  { key: 'projectName', label: 'Project Name' },\r\n                  {\r\n                    key: 'totalAssociatesCount',\r\n                    label: 'Total Associates',\r\n                  },\r\n                  { key: 'totalCompanyHours', label: 'Company Hours' },\r\n                  { key: 'totalClientHours', label: 'Client Hours' },\r\n                  { key: 'varianceHours', label: 'Variance Hours' },\r\n                  { key: 'revenue', label: 'Revenue' },\r\n                ].map(({ key, label }) => (\r\n                  <th key={key}>\r\n                    {label}\r\n                    <select\r\n                      className=\"form-select form-select-sm mt-1\"\r\n                      onChange={(e) =>\r\n                        handleFilterChange(key, e.target.value)\r\n                      }\r\n                      value={columnFilters[key] ?? 'All'}\r\n                    >\r\n                      {getUniqueOptions(key).map((opt) => (\r\n                        <option key={opt} value={opt}>\r\n                          {opt}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </th>\r\n                ))}\r\n                <th className=\"text-center\">View</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {projects.map((p) => (\r\n                <tr key={p.projectId}>\r\n                  <td>{p.projectId}</td>\r\n                  <td>{p.projectName}</td>\r\n                  <td>{p.totalAssociatesCount}</td>\r\n                  <td>{p.totalCompanyHours}</td>\r\n                  <td>{p.totalClientHours}</td>\r\n                  <td>{p.varianceHours}</td>\r\n                  <td>{formatCurrency(p.revenue)}</td>\r\n                  <td className=\"text-center\">\r\n                    <button\r\n                      className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                      onClick={() =>\r\n                        navigate(\r\n                          `/projects/${p.projectId}/associates`,\r\n                          {\r\n                            state: {\r\n                              projectId: p.projectId,\r\n                              projectName: p.projectName,\r\n                              accountId: p.accountId,\r\n                              accountName: p.accountName,\r\n                              month: activeMonth,\r\n                              year: activeYear,\r\n                              sbu: activeSbu,\r\n                              projectType: activeProjectType,\r\n                            },\r\n                          }\r\n                        )\r\n                      }\r\n                      title=\"View Associates\"\r\n                    >\r\n                      🔍\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}