{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\n// Assuming Breadcrumbs and commonData are available in the correct relative paths\n// import Breadcrumbs from '../Breadcrumbs'; // Uncomment if you have this component\n// import commonData from '../../data/commonData.json'; // Uncomment if you have this file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n\n  // Backend URL for API calls\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Mock commonData and Breadcrumbs if not available, for standalone execution\n  // In a real project, ensure these imports are correct.\n  const commonData = {\n    currencySettings: {\n      locale: 'en-US',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    }\n  };\n  const Breadcrumbs = ({\n    path\n  }) => /*#__PURE__*/_jsxDEV(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"breadcrumb\",\n      children: path.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `breadcrumb-item ${index === path.length - 1 ? 'active' : ''}`,\n        children: item.page ? /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `#${item.page}`,\n          className: \"text-decoration-none text-primary\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this) : item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  // Currency formatting function\n  const formatCurrency = (value = 0) => value.toLocaleString(commonData.currencySettings.locale, {\n    style: 'currency',\n    currency: commonData.currencySettings.currency,\n    minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\n    maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\n  });\n\n  // Placeholder download logic\n  const handleDownloadData = () => {\n    // In a real application, replace this with actual CSV/Excel download logic\n    console.log('Download Project Data button clicked!');\n    // Example: Trigger a backend endpoint to generate and download a file\n    // window.open(`${BACKEND_URL}/api/download-projects?month=${activeMonth}&year=${activeYear}&accountId=${activeAccountId}`);\n  };\n\n  // Load Poppins font from Google Fonts\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch project data when context (month, year, accountId) changes\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchProjectData = async (month, year, accId) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          // IMPORTANT: Added projectType to the request body as per API requirement\n          body: JSON.stringify({\n            month,\n            year,\n            accId,\n            projectType: \"BTM\"\n          })\n        });\n        if (!resp.ok) {\n          const errText = await resp.text();\n          throw new Error(`status: ${resp.status}, message: ${errText || resp.statusText}`);\n        }\n        const data = await resp.json();\n        // Ensure data is always an array for consistent processing\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setProjects(list);\n\n        // Derive accountName from response or sessionStorage\n        if (list.length > 0 && list[0].accountName) {\n          setActiveAccountName(list[0].accountName);\n        } else {\n          const storedName = sessionStorage.getItem('lastFetchedProjectAccountName');\n          setActiveAccountName(storedName || accId); // Fallback to accountId if name not found\n        }\n      } catch (e) {\n        console.error('Error fetching project data:', e);\n        setError(`Failed to load project data: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Determine context from location.state, URL params, or sessionStorage\n    let monthToUse = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let yearToUse = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let accountIdToUse = urlAccountId; // From URL params\n    let accountNameToUse = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.accountName;\n\n    // If context is missing from location.state, try sessionStorage\n    if (!monthToUse || !yearToUse || !accountIdToUse) {\n      const sm = sessionStorage.getItem('lastFetchedProjectMonth');\n      const sy = sessionStorage.getItem('lastFetchedProjectYear');\n      const sa = sessionStorage.getItem('lastFetchedProjectAccountId');\n      const san = sessionStorage.getItem('lastFetchedProjectAccountName');\n      if (sm && sy && sa) {\n        monthToUse = parseInt(sm, 10);\n        yearToUse = parseInt(sy, 10);\n        accountIdToUse = sa;\n        accountNameToUse = san;\n      }\n    }\n\n    // Only fetch data if all necessary context is available and it's a new context\n    if (monthToUse && yearToUse && accountIdToUse) {\n      if (monthToUse !== activeMonth || yearToUse !== activeYear || accountIdToUse !== activeAccountId || projects.length === 0 // Re-fetch if projects array is empty (e.g., first load)\n      ) {\n        setActiveMonth(monthToUse);\n        setActiveYear(yearToUse);\n        setActiveAccountId(accountIdToUse);\n        if (accountNameToUse) {\n          setActiveAccountName(accountNameToUse);\n        }\n\n        // Persist context to sessionStorage for future loads\n        sessionStorage.setItem('lastFetchedProjectMonth', monthToUse.toString());\n        sessionStorage.setItem('lastFetchedProjectYear', yearToUse.toString());\n        sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\n        if (accountNameToUse) {\n          sessionStorage.setItem('lastFetchedProjectAccountName', accountNameToUse);\n        }\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse);\n      } else {\n        // If context hasn't changed and projects are already loaded, just set loading to false\n        setLoading(false);\n      }\n    } else {\n      // If essential context is missing, show an error\n      setError('Missing project context (month, year, or account ID). Please go back.');\n      setLoading(false);\n    }\n  }, [location.state, urlAccountId, activeMonth, activeYear, activeAccountId, projects.length // Include projects.length to trigger re-fetch if data is cleared\n  ]);\n\n  // Initialize and destroy DataTable when projects data changes or component unmounts\n  useEffect(() => {\n    if (!loading && projects.length > 0 && tableRef.current) {\n      const $tbl = $(tableRef.current);\n      // Destroy existing DataTable instance if it exists\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n      }\n      // Initialize new DataTable instance\n      $tbl.DataTable({\n        paging: true,\n        searching: true,\n        ordering: true,\n        info: true,\n        autoWidth: false\n        // Responsive options for DataTables (requires DataTables Responsive extension)\n        // responsive: true\n      });\n    }\n\n    // Cleanup function to destroy DataTable when component unmounts or dependencies change\n    return () => {\n      if (tableRef.current) {\n        const $tbl = $(tableRef.current);\n        if ($.fn.DataTable.isDataTable($tbl)) {\n          $tbl.DataTable().destroy();\n        }\n      }\n    };\n  }, [loading, projects]); // Re-run effect when loading or projects data changes\n\n  // Define breadcrumb path for navigation\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, {\n    name: 'Account Level',\n    page: 'accounts'\n  }, {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }];\n\n  // Render loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate('/accounts') // Navigate back to account level\n        ,\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main component render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1200px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-0 fw-semibold text-dark\",\n          children: [\"\\uD83D\\uDCC1 Project Level Overview\", ' ', activeAccountId ? `for ${activeAccountName}` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), projects.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Project Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-borderless mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #3b82f6, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Associates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Company Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Client Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Variance Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.projectId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.totalAssociatesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.totalCompanyHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.totalClientHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: project.varianceHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(project.revenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/projects/${project.projectId}/associates`, {\n                    state: {\n                      projectId: project.projectId,\n                      projectName: project.projectName,\n                      accountId: project.accountId,\n                      accountName: project.accountName,\n                      month: activeMonth,\n                      year: activeYear\n                    }\n                  }),\n                  title: \"View Associates\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)]\n            }, project.projectId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"7CQgiQXulVF0DQdoH0NFyZg/bnk=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ProjectLevel;\nexport default ProjectLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useParams","useLocation","$","jsxDEV","_jsxDEV","ProjectLevel","_s","navigate","accountId","urlAccountId","location","tableRef","projects","setProjects","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","BACKEND_URL","commonData","currencySettings","locale","currency","minimumFractionDigits","maximumFractionDigits","Breadcrumbs","path","className","children","map","item","index","length","page","href","name","fileName","_jsxFileName","lineNumber","columnNumber","formatCurrency","value","toLocaleString","style","handleDownloadData","console","log","link","document","createElement","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","_location$state3","fetchProjectData","month","year","accId","resp","fetch","method","headers","JSON","stringify","projectType","ok","errText","text","Error","status","statusText","data","json","list","Array","isArray","filter","Boolean","accountName","storedName","sessionStorage","getItem","e","message","monthToUse","state","yearToUse","accountIdToUse","accountNameToUse","sm","sy","sa","san","parseInt","setItem","toString","current","$tbl","fn","DataTable","isDataTable","destroy","paging","searching","ordering","info","autoWidth","breadcrumbPath","role","onClick","background","maxWidth","backgroundColor","borderRadius","title","ref","width","project","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Details/ProjectLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\n// Assuming Breadcrumbs and commonData are available in the correct relative paths\r\n// import Breadcrumbs from '../Breadcrumbs'; // Uncomment if you have this component\r\n// import commonData from '../../data/commonData.json'; // Uncomment if you have this file\r\n\r\nconst ProjectLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { accountId: urlAccountId } = useParams();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeAccountId, setActiveAccountId] = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n\r\n  // Backend URL for API calls\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Mock commonData and Breadcrumbs if not available, for standalone execution\r\n  // In a real project, ensure these imports are correct.\r\n  const commonData = {\r\n    currencySettings: {\r\n      locale: 'en-US',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2\r\n    }\r\n  };\r\n\r\n  const Breadcrumbs = ({ path }) => (\r\n    <nav aria-label=\"breadcrumb\" className=\"mb-4\">\r\n      <ol className=\"breadcrumb\">\r\n        {path.map((item, index) => (\r\n          <li key={index} className={`breadcrumb-item ${index === path.length - 1 ? 'active' : ''}`}>\r\n            {item.page ? (\r\n              <a href={`#${item.page}`} className=\"text-decoration-none text-primary\">\r\n                {item.name}\r\n              </a>\r\n            ) : (\r\n              item.name\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </nav>\r\n  );\r\n\r\n\r\n  // Currency formatting function\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(commonData.currencySettings.locale, {\r\n      style: 'currency',\r\n      currency: commonData.currencySettings.currency,\r\n      minimumFractionDigits: commonData.currencySettings.minimumFractionDigits,\r\n      maximumFractionDigits: commonData.currencySettings.maximumFractionDigits\r\n    });\r\n\r\n  // Placeholder download logic\r\n  const handleDownloadData = () => {\r\n    // In a real application, replace this with actual CSV/Excel download logic\r\n    console.log('Download Project Data button clicked!');\r\n    // Example: Trigger a backend endpoint to generate and download a file\r\n    // window.open(`${BACKEND_URL}/api/download-projects?month=${activeMonth}&year=${activeYear}&accountId=${activeAccountId}`);\r\n  };\r\n\r\n  // Load Poppins font from Google Fonts\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch project data when context (month, year, accountId) changes\r\n  useEffect(() => {\r\n    const fetchProjectData = async (month, year, accId) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/project`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          // IMPORTANT: Added projectType to the request body as per API requirement\r\n          body: JSON.stringify({ month, year, accId, projectType: \"BTM\" })\r\n        });\r\n\r\n        if (!resp.ok) {\r\n          const errText = await resp.text();\r\n          throw new Error(`status: ${resp.status}, message: ${errText || resp.statusText}`);\r\n        }\r\n\r\n        const data = await resp.json();\r\n        // Ensure data is always an array for consistent processing\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setProjects(list);\r\n\r\n        // Derive accountName from response or sessionStorage\r\n        if (list.length > 0 && list[0].accountName) {\r\n          setActiveAccountName(list[0].accountName);\r\n        } else {\r\n          const storedName = sessionStorage.getItem('lastFetchedProjectAccountName');\r\n          setActiveAccountName(storedName || accId); // Fallback to accountId if name not found\r\n        }\r\n      } catch (e) {\r\n        console.error('Error fetching project data:', e);\r\n        setError(`Failed to load project data: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Determine context from location.state, URL params, or sessionStorage\r\n    let monthToUse = location.state?.month;\r\n    let yearToUse = location.state?.year;\r\n    let accountIdToUse = urlAccountId; // From URL params\r\n    let accountNameToUse = location.state?.accountName;\r\n\r\n    // If context is missing from location.state, try sessionStorage\r\n    if (!monthToUse || !yearToUse || !accountIdToUse) {\r\n      const sm = sessionStorage.getItem('lastFetchedProjectMonth');\r\n      const sy = sessionStorage.getItem('lastFetchedProjectYear');\r\n      const sa = sessionStorage.getItem('lastFetchedProjectAccountId');\r\n      const san = sessionStorage.getItem('lastFetchedProjectAccountName');\r\n\r\n      if (sm && sy && sa) {\r\n        monthToUse = parseInt(sm, 10);\r\n        yearToUse = parseInt(sy, 10);\r\n        accountIdToUse = sa;\r\n        accountNameToUse = san;\r\n      }\r\n    }\r\n\r\n    // Only fetch data if all necessary context is available and it's a new context\r\n    if (monthToUse && yearToUse && accountIdToUse) {\r\n      if (\r\n        monthToUse !== activeMonth ||\r\n        yearToUse !== activeYear ||\r\n        accountIdToUse !== activeAccountId ||\r\n        projects.length === 0 // Re-fetch if projects array is empty (e.g., first load)\r\n      ) {\r\n        setActiveMonth(monthToUse);\r\n        setActiveYear(yearToUse);\r\n        setActiveAccountId(accountIdToUse);\r\n        if (accountNameToUse) {\r\n          setActiveAccountName(accountNameToUse);\r\n        }\r\n\r\n        // Persist context to sessionStorage for future loads\r\n        sessionStorage.setItem('lastFetchedProjectMonth', monthToUse.toString());\r\n        sessionStorage.setItem('lastFetchedProjectYear', yearToUse.toString());\r\n        sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\r\n        if (accountNameToUse) {\r\n          sessionStorage.setItem('lastFetchedProjectAccountName', accountNameToUse);\r\n        }\r\n\r\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse);\r\n      } else {\r\n        // If context hasn't changed and projects are already loaded, just set loading to false\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      // If essential context is missing, show an error\r\n      setError('Missing project context (month, year, or account ID). Please go back.');\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    location.state,\r\n    urlAccountId,\r\n    activeMonth,\r\n    activeYear,\r\n    activeAccountId,\r\n    projects.length // Include projects.length to trigger re-fetch if data is cleared\r\n  ]);\r\n\r\n  // Initialize and destroy DataTable when projects data changes or component unmounts\r\n  useEffect(() => {\r\n    if (!loading && projects.length > 0 && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n      // Destroy existing DataTable instance if it exists\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n      }\r\n      // Initialize new DataTable instance\r\n      $tbl.DataTable({\r\n        paging: true,\r\n        searching: true,\r\n        ordering: true,\r\n        info: true,\r\n        autoWidth: false,\r\n        // Responsive options for DataTables (requires DataTables Responsive extension)\r\n        // responsive: true\r\n      });\r\n    }\r\n\r\n    // Cleanup function to destroy DataTable when component unmounts or dependencies change\r\n    return () => {\r\n      if (tableRef.current) {\r\n        const $tbl = $(tableRef.current);\r\n        if ($.fn.DataTable.isDataTable($tbl)) {\r\n          $tbl.DataTable().destroy();\r\n        }\r\n      }\r\n    };\r\n  }, [loading, projects]); // Re-run effect when loading or projects data changes\r\n\r\n  // Define breadcrumb path for navigation\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    { name: 'Account Level', page: 'accounts' },\r\n    {\r\n      name: `Projects (${activeAccountName})`,\r\n      page: `accounts/${activeAccountId}/projects`\r\n    }\r\n  ];\r\n\r\n  // Render loading state\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render error state\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() => navigate('/accounts')} // Navigate back to account level\r\n        >\r\n          Go to Account Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main component render\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\"\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1200px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem'\r\n        }}\r\n      >\r\n        {/* Breadcrumbs component */}\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n          <h2 className=\"mb-0 fw-semibold text-dark\">\r\n            📁 Project Level Overview{' '}\r\n            {activeAccountId ? `for ${activeAccountName}` : ''}\r\n          </h2>\r\n          {/* Download button, visible only if projects are loaded */}\r\n          {projects.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n              title=\"Download Project Data\"\r\n            >\r\n              <i className=\"bi bi-download me-2\"></i> Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Responsive table container */}\r\n        <div className=\"table-responsive rounded\">\r\n          <table\r\n            ref={tableRef}\r\n            className=\"display table table-hover align-middle table-borderless mb-0\"\r\n            style={{ width: '100%' }}\r\n          >\r\n            <thead\r\n              className=\"text-white\"\r\n              style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\r\n            >\r\n              <tr>\r\n                <th>Project ID</th>\r\n                <th>Project Name</th>\r\n                <th>Account ID</th>\r\n                <th>Account Name</th>\r\n                <th>Total Associates</th>\r\n                <th>Company Hours</th>\r\n                <th>Client Hours</th>\r\n                <th>Variance Hours</th>\r\n                <th>Revenue</th>\r\n                <th className=\"text-center\">View</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* Map through projects data to render table rows */}\r\n              {projects.map(project => (\r\n                <tr key={project.projectId}>\r\n                  <td>{project.projectId}</td>\r\n                  <td>{project.projectName}</td>\r\n                  <td>{project.accountId}</td>\r\n                  <td>{project.accountName}</td>\r\n                  <td>{project.totalAssociatesCount}</td>\r\n                  <td>{project.totalCompanyHours}</td>\r\n                  <td>{project.totalClientHours}</td>\r\n                  <td>{project.varianceHours}</td>\r\n                  <td>{formatCurrency(project.revenue)}</td>\r\n                  <td className=\"text-center\">\r\n                    {/* Button to navigate to Associate Level details */}\r\n                    <button\r\n                      className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                      onClick={() =>\r\n                        navigate(\r\n                          `/projects/${project.projectId}/associates`,\r\n                          {\r\n                            state: {\r\n                              projectId: project.projectId,\r\n                              projectName: project.projectName,\r\n                              accountId: project.accountId,\r\n                              accountName: project.accountName,\r\n                              month: activeMonth,\r\n                              year: activeYear\r\n                            }\r\n                          }\r\n                        )\r\n                      }\r\n                      title=\"View Associates\"\r\n                    >\r\n                      🔍\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}