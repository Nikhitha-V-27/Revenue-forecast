{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Details\\\\SbuLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Table, Alert, Spinner, Button } from 'react-bootstrap';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SbuLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    month,\n    year\n  } = useLocation().state || {};\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  // 1) Build your Intl.NumberFormat right here from commonData\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatter = new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // 2) Convert exponent strings like \"e7\" → 10^7, then format\n  const formatValue = val => {\n    if (typeof val === 'string') {\n      const m = val.match(/^e(\\d+)$/i);\n      if (m) {\n        val = Math.pow(10, Number(m[1]));\n      } else if (!isNaN(val)) {\n        val = Number(val);\n      }\n    }\n\n    // Check if the value is a number and not NaN/Infinity before formatting as currency\n    if (typeof val === 'number' && isFinite(val)) {\n      // Heuristic: If the column name contains 'revenue' or 'total', format as currency.\n      // This assumes your backend returns consistent naming for revenue fields.\n      // You might need to adjust this logic based on your exact backend response structure.\n      // For now, let's assume all numeric values in the backend response should be formatted.\n      return formatter.format(val);\n    }\n    return val; // Return original value if not a number or not meant for currency formatting\n  };\n\n  // helper to get month name\n  const getMonthName = m => new Date(year, m - 1).toLocaleString('en-US', {\n    month: 'long'\n  });\n  useEffect(() => {\n    if (!month || !year) {\n      setError('Month and year missing. Go back and select a period.');\n      setLoading(false);\n      return;\n    }\n    const fetchSbu = async () => {\n      setLoading(true);\n      setError('');\n      try {\n        const payload = {\n          month: Number(month),\n          year: Number(year),\n          monthNameParam: getMonthName(month).toLowerCase()\n        };\n        const resp = await axios.post('http://localhost:8081/api/sbu', payload);\n        setData(resp.data);\n      } catch (err) {\n        var _err$response;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSbu();\n  }, [month, year]);\n\n  // Filter out specific revenue fields for display in the table,\n  // assuming your backend response might include these as separate fields\n  const columns = data.length ? Object.keys(data[0]).filter(col => {\n    const lc = col.toLowerCase();\n    return lc !== 'revenue' &&\n    // Example: if your backend returns a generic 'revenue' field\n    lc !== 'sburevenue' &&\n    // Example: if your backend returns 'sbuRevenue'\n    lc !== 'totalsburevenue' // Example: if your backend returns 'totalSbuRevenue'\n    ;\n  }) : [];\n\n  // Append a 'View' column to the headers\n  const headerCols = [...columns, 'View'];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"my-4\",\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n      path: [{\n        name: 'SBU Level',\n        page: 'sbu'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"link\",\n      className: \"ps-0 mb-4\",\n      onClick: () => navigate(-1),\n      children: \"\\u2190 Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: [\"SBU Summary for \", getMonthName(month), \" \", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center my-5\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ms-2\",\n        children: \"Loading data\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), !loading && error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }, this), !loading && !error && data.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"info\",\n      children: \"No data found for this period.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), !loading && !error && data.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerCols.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatValue(row[col])\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              variant: \"primary\",\n              onClick: () => navigate('/accounts', {\n                state: {\n                  month,\n                  year,\n                  // IMPORTANT: Use the actual SBU name/title field from your backend response\n                  // For example, if your backend returns 'sbuName' for the SBU title:\n                  sbu: row.sbuName // Assuming 'sbuName' is the field for SBU title\n                  // If it's 'title', 'name', or something else, adjust accordingly.\n                }\n              }),\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(SbuLevel, \"TYwVLPnslVpEk7yPc/h0eOaC6p8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SbuLevel;\nexport default SbuLevel;\nvar _c;\n$RefreshReg$(_c, \"SbuLevel\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Table","Alert","Spinner","Button","useLocation","useNavigate","Breadcrumbs","commonData","jsxDEV","_jsxDEV","SbuLevel","_s","navigate","month","year","state","data","setData","loading","setLoading","error","setError","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatter","Intl","NumberFormat","style","formatValue","val","m","match","Math","pow","Number","isNaN","isFinite","format","getMonthName","Date","toLocaleString","fetchSbu","payload","monthNameParam","toLowerCase","resp","post","err","_err$response","response","message","columns","length","Object","keys","filter","col","lc","headerCols","className","children","path","name","page","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","animation","striped","bordered","hover","responsive","map","row","idx","size","sbu","sbuName","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Details/SbuLevel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n  Container,\r\n  Table,\r\n  Alert,\r\n  Spinner,\r\n  Button\r\n} from 'react-bootstrap'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport Breadcrumbs from '../Breadcrumbs'\r\nimport commonData from '../../data/commonData.json'\r\n\r\nconst SbuLevel = () => {\r\n  const navigate = useNavigate()\r\n  const { month, year } = useLocation().state || {}\r\n\r\n  const [data, setData] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  // 1) Build your Intl.NumberFormat right here from commonData\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  } = commonData.currencySettings\r\n\r\n  const formatter = new Intl.NumberFormat(locale, {\r\n    style: 'currency',\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  })\r\n\r\n  // 2) Convert exponent strings like \"e7\" → 10^7, then format\r\n  const formatValue = (val) => {\r\n    if (typeof val === 'string') {\r\n      const m = val.match(/^e(\\d+)$/i)\r\n      if (m) {\r\n        val = Math.pow(10, Number(m[1]))\r\n      } else if (!isNaN(val)) {\r\n        val = Number(val)\r\n      }\r\n    }\r\n\r\n    // Check if the value is a number and not NaN/Infinity before formatting as currency\r\n    if (typeof val === 'number' && isFinite(val)) {\r\n      // Heuristic: If the column name contains 'revenue' or 'total', format as currency.\r\n      // This assumes your backend returns consistent naming for revenue fields.\r\n      // You might need to adjust this logic based on your exact backend response structure.\r\n      // For now, let's assume all numeric values in the backend response should be formatted.\r\n      return formatter.format(val)\r\n    }\r\n    return val // Return original value if not a number or not meant for currency formatting\r\n  }\r\n\r\n  // helper to get month name\r\n  const getMonthName = (m) =>\r\n    new Date(year, m - 1).toLocaleString('en-US', { month: 'long' })\r\n\r\n  useEffect(() => {\r\n    if (!month || !year) {\r\n      setError('Month and year missing. Go back and select a period.')\r\n      setLoading(false)\r\n      return\r\n    }\r\n\r\n    const fetchSbu = async () => {\r\n      setLoading(true)\r\n      setError('')\r\n      try {\r\n        const payload = {\r\n          month: Number(month),\r\n          year: Number(year),\r\n          monthNameParam: getMonthName(month).toLowerCase()\r\n        }\r\n        const resp = await axios.post(\r\n          'http://localhost:8081/api/sbu',\r\n          payload\r\n        )\r\n        setData(resp.data)\r\n      } catch (err) {\r\n        setError(err.response?.data || err.message)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchSbu()\r\n  }, [month, year])\r\n\r\n  // Filter out specific revenue fields for display in the table,\r\n  // assuming your backend response might include these as separate fields\r\n  const columns = data.length\r\n    ? Object.keys(data[0]).filter((col) => {\r\n        const lc = col.toLowerCase()\r\n        return (\r\n          lc !== 'revenue' && // Example: if your backend returns a generic 'revenue' field\r\n          lc !== 'sburevenue' && // Example: if your backend returns 'sbuRevenue'\r\n          lc !== 'totalsburevenue' // Example: if your backend returns 'totalSbuRevenue'\r\n        )\r\n      })\r\n    : []\r\n\r\n  // Append a 'View' column to the headers\r\n  const headerCols = [...columns, 'View']\r\n\r\n  return (\r\n    <Container className=\"my-4\">\r\n      <Breadcrumbs path={[{ name: 'SBU Level', page: 'sbu' }]} />\r\n\r\n      <Button variant=\"link\" className=\"ps-0 mb-4\" onClick={() => navigate(-1)}>\r\n        ← Back\r\n      </Button>\r\n\r\n      <h2 className=\"mb-4\">\r\n        SBU Summary for {getMonthName(month)} {year}\r\n      </h2>\r\n\r\n      {loading && (\r\n        <div className=\"d-flex justify-content-center my-5\">\r\n          <Spinner animation=\"border\" />\r\n          <span className=\"ms-2\">Loading data…</span>\r\n        </div>\r\n      )}\r\n\r\n      {!loading && error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      {!loading && !error && data.length === 0 && (\r\n        <Alert variant=\"info\">No data found for this period.</Alert>\r\n      )}\r\n\r\n      {!loading && !error && data.length > 0 && (\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              {headerCols.map((col) => (\r\n                <th key={col}>{col}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, idx) => (\r\n              <tr key={idx}>\r\n                {columns.map((col) => (\r\n                  <td key={col}>{formatValue(row[col])}</td>\r\n                ))}\r\n\r\n                <td className=\"text-center\">\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"primary\"\r\n                    onClick={() =>\r\n                      navigate('/accounts', {\r\n                        state: { \r\n                          month, \r\n                          year, \r\n                          // IMPORTANT: Use the actual SBU name/title field from your backend response\r\n                          // For example, if your backend returns 'sbuName' for the SBU title:\r\n                          sbu: row.sbuName // Assuming 'sbuName' is the field for SBU title\r\n                          // If it's 'title', 'name', or something else, adjust accordingly.\r\n                        }\r\n                      })\r\n                    }\r\n                  >\r\n                    View\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SbuLevel\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,iBAAiB;AACxB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,UAAU,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ,KAAK;IAAEC;EAAK,CAAC,GAAGV,WAAW,CAAC,CAAC,CAACW,KAAK,IAAI,CAAC,CAAC;EAEjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAM;IACJ0B,MAAM;IACNC,QAAQ;IACRC,qBAAqB;IACrBC;EACF,CAAC,GAAGlB,UAAU,CAACmB,gBAAgB;EAE/B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAACP,MAAM,EAAE;IAC9CQ,KAAK,EAAE,UAAU;IACjBP,QAAQ;IACRC,qBAAqB;IACrBC;EACF,CAAC,CAAC;;EAEF;EACA,MAAMM,WAAW,GAAIC,GAAG,IAAK;IAC3B,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MAC3B,MAAMC,CAAC,GAAGD,GAAG,CAACE,KAAK,CAAC,WAAW,CAAC;MAChC,IAAID,CAAC,EAAE;QACLD,GAAG,GAAGG,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEC,MAAM,CAACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,MAAM,IAAI,CAACK,KAAK,CAACN,GAAG,CAAC,EAAE;QACtBA,GAAG,GAAGK,MAAM,CAACL,GAAG,CAAC;MACnB;IACF;;IAEA;IACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIO,QAAQ,CAACP,GAAG,CAAC,EAAE;MAC5C;MACA;MACA;MACA;MACA,OAAOL,SAAS,CAACa,MAAM,CAACR,GAAG,CAAC;IAC9B;IACA,OAAOA,GAAG,EAAC;EACb,CAAC;;EAED;EACA,MAAMS,YAAY,GAAIR,CAAC,IACrB,IAAIS,IAAI,CAAC5B,IAAI,EAAEmB,CAAC,GAAG,CAAC,CAAC,CAACU,cAAc,CAAC,OAAO,EAAE;IAAE9B,KAAK,EAAE;EAAO,CAAC,CAAC;EAElEhB,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,KAAK,IAAI,CAACC,IAAI,EAAE;MACnBO,QAAQ,CAAC,sDAAsD,CAAC;MAChEF,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,MAAMyB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BzB,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;MACZ,IAAI;QACF,MAAMwB,OAAO,GAAG;UACdhC,KAAK,EAAEwB,MAAM,CAACxB,KAAK,CAAC;UACpBC,IAAI,EAAEuB,MAAM,CAACvB,IAAI,CAAC;UAClBgC,cAAc,EAAEL,YAAY,CAAC5B,KAAK,CAAC,CAACkC,WAAW,CAAC;QAClD,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMlD,KAAK,CAACmD,IAAI,CAC3B,+BAA+B,EAC/BJ,OACF,CAAC;QACD5B,OAAO,CAAC+B,IAAI,CAAChC,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOkC,GAAG,EAAE;QAAA,IAAAC,aAAA;QACZ9B,QAAQ,CAAC,EAAA8B,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcnC,IAAI,KAAIkC,GAAG,CAACG,OAAO,CAAC;MAC7C,CAAC,SAAS;QACRlC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDyB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAAC/B,KAAK,EAAEC,IAAI,CAAC,CAAC;;EAEjB;EACA;EACA,MAAMwC,OAAO,GAAGtC,IAAI,CAACuC,MAAM,GACvBC,MAAM,CAACC,IAAI,CAACzC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC0C,MAAM,CAAEC,GAAG,IAAK;IACnC,MAAMC,EAAE,GAAGD,GAAG,CAACZ,WAAW,CAAC,CAAC;IAC5B,OACEa,EAAE,KAAK,SAAS;IAAI;IACpBA,EAAE,KAAK,YAAY;IAAI;IACvBA,EAAE,KAAK,iBAAiB,CAAC;IAAA;EAE7B,CAAC,CAAC,GACF,EAAE;;EAEN;EACA,MAAMC,UAAU,GAAG,CAAC,GAAGP,OAAO,EAAE,MAAM,CAAC;EAEvC,oBACE7C,OAAA,CAACV,SAAS;IAAC+D,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACzBtD,OAAA,CAACH,WAAW;MAAC0D,IAAI,EAAE,CAAC;QAAEC,IAAI,EAAE,WAAW;QAAEC,IAAI,EAAE;MAAM,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3D7D,OAAA,CAACN,MAAM;MAACoE,OAAO,EAAC,MAAM;MAACT,SAAS,EAAC,WAAW;MAACU,OAAO,EAAEA,CAAA,KAAM5D,QAAQ,CAAC,CAAC,CAAC,CAAE;MAAAmD,QAAA,EAAC;IAE1E;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAET7D,OAAA;MAAIqD,SAAS,EAAC,MAAM;MAAAC,QAAA,GAAC,kBACH,EAACtB,YAAY,CAAC5B,KAAK,CAAC,EAAC,GAAC,EAACC,IAAI;IAAA;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EAEJpD,OAAO,iBACNT,OAAA;MAAKqD,SAAS,EAAC,oCAAoC;MAAAC,QAAA,gBACjDtD,OAAA,CAACP,OAAO;QAACuE,SAAS,EAAC;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9B7D,OAAA;QAAMqD,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CACN,EAEA,CAACpD,OAAO,IAAIE,KAAK,iBAAIX,OAAA,CAACR,KAAK;MAACsE,OAAO,EAAC,QAAQ;MAAAR,QAAA,EAAE3C;IAAK;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE5D,CAACpD,OAAO,IAAI,CAACE,KAAK,IAAIJ,IAAI,CAACuC,MAAM,KAAK,CAAC,iBACtC9C,OAAA,CAACR,KAAK;MAACsE,OAAO,EAAC,MAAM;MAAAR,QAAA,EAAC;IAA8B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAC5D,EAEA,CAACpD,OAAO,IAAI,CAACE,KAAK,IAAIJ,IAAI,CAACuC,MAAM,GAAG,CAAC,iBACpC9C,OAAA,CAACT,KAAK;MAAC0E,OAAO;MAACC,QAAQ;MAACC,KAAK;MAACC,UAAU;MAAAd,QAAA,gBACtCtD,OAAA;QAAAsD,QAAA,eACEtD,OAAA;UAAAsD,QAAA,EACGF,UAAU,CAACiB,GAAG,CAAEnB,GAAG,iBAClBlD,OAAA;YAAAsD,QAAA,EAAeJ;UAAG,GAATA,GAAG;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAW,CACxB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR7D,OAAA;QAAAsD,QAAA,EACG/C,IAAI,CAAC8D,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACjBvE,OAAA;UAAAsD,QAAA,GACGT,OAAO,CAACwB,GAAG,CAAEnB,GAAG,iBACflD,OAAA;YAAAsD,QAAA,EAAehC,WAAW,CAACgD,GAAG,CAACpB,GAAG,CAAC;UAAC,GAA3BA,GAAG;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAC1C,CAAC,eAEF7D,OAAA;YAAIqD,SAAS,EAAC,aAAa;YAAAC,QAAA,eACzBtD,OAAA,CAACN,MAAM;cACL8E,IAAI,EAAC,IAAI;cACTV,OAAO,EAAC,SAAS;cACjBC,OAAO,EAAEA,CAAA,KACP5D,QAAQ,CAAC,WAAW,EAAE;gBACpBG,KAAK,EAAE;kBACLF,KAAK;kBACLC,IAAI;kBACJ;kBACA;kBACAoE,GAAG,EAAEH,GAAG,CAACI,OAAO,CAAC;kBACjB;gBACF;cACF,CAAC,CACF;cAAApB,QAAA,EACF;YAED;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP,CAAC;QAAA,GAxBEU,GAAG;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAyBR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC;AAAA3D,EAAA,CApKKD,QAAQ;EAAA,QACKL,WAAW,EACJD,WAAW;AAAA;AAAAgF,EAAA,GAF/B1E,QAAQ;AAsKd,eAAeA,QAAQ;AAAA,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}