{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\AccountLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\nimport * as XLSX from 'xlsx'; // Import XLSX for Excel export\nimport { saveAs } from 'file-saver'; // Import saveAs for triggering file download\n\n// Utility to convert month number to month name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const date = new Date();\n  date.setMonth(monthNumber - 1);\n  return date.toLocaleString('en-US', {\n    month: 'long'\n  });\n};\nconst AccountLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tableRef = useRef(null);\n  const tableInstanceRef = useRef(null); // Ref to hold the DataTable instance\n\n  // UI state\n  const [accounts, setAccounts] = useState([]);\n  const [commentsMap, setCommentsMap] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [commentInput, setCommentInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Active filters\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeMonthName, setActiveMonthName] = useState(null);\n  const [activeSbu, setActiveSbu] = useState(null);\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (value = 0) => value.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  /**\r\n   * Handles the \"Download Data\" button click.\r\n   * Generates an Excel (XLSX) file from the filtered 'accounts' data and triggers a download.\r\n   */\n  const handleDownloadData = () => {\n    // Get the currently filtered data from DataTables\n    const dataToExport = tableInstanceRef.current ? tableInstanceRef.current.rows({\n      search: 'applied'\n    }).data().toArray() : accounts; // Fallback to all accounts if DataTable isn't initialized or no filter applied\n\n    if (dataToExport.length === 0) {\n      console.log('No data to download after applying filters.');\n      // Optionally, show a user-friendly message here (e.g., a toast notification)\n      return;\n    }\n    const headers = ['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference', 'Comment'];\n    const dataForExcel = dataToExport.map(account => ({\n      'Account ID': account.accountId,\n      'Account Name': account.accountName,\n      'Total Projects': account.totalProjects,\n      'Total Revenue': formatCurrency(account.totalRevenue),\n      'Forecast Revenue': formatCurrency(account.forecastNetRevenue),\n      'Revenue Difference': formatCurrency(account.difference),\n      'Comment': account.accountComment || ''\n    }));\n    const wb = XLSX.utils.book_new();\n    const ws = XLSX.utils.json_to_sheet(dataForExcel, {\n      header: headers\n    });\n    XLSX.utils.book_append_sheet(wb, ws, 'Account Data');\n    const excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const dataBlob = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    const monthName = getMonthName(activeMonth);\n    const filename = `Account_Data_${activeSbu || 'All'}_${monthName || ''}_${activeYear || ''}.xlsx`;\n    saveAs(dataBlob, filename);\n    console.log('Downloading filtered account data in Excel format!');\n  };\n\n  // Load Poppins font and inject custom CSS for column filters\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n\n    // Inject CSS to style the column filter inputs\n    const style = document.createElement('style');\n    style.innerHTML = `\n      .dataTables_filter { /* Hide default global search filter label */\n        display: none;\n      }\n      .dataTables_filter input { /* Style for global search input */\n        margin-left: 0.5em;\n        padding: 0.5rem;\n        border-radius: 0.375rem; /* rounded-md */\n        border: 1px solid #d1d5db; /* border border-slate-300 */\n        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); /* shadow-sm */\n      }\n      .dataTables_filter input:focus { /* Focus styles */\n        border-color: #3b82f6; /* focus:border-blue-500 */\n        outline: none;\n        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.25); /* focus:ring focus:ring-blue-200 focus:ring-opacity-50 */\n      }\n      .column-filter-input {\n        width: 100%;\n        padding: 0.25rem 0.5rem; /* py-1 px-2 */\n        border-radius: 0.375rem; /* rounded-md */\n        border: 1px solid #d1d5db; /* border border-slate-300 */\n        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); /* shadow-sm */\n        font-size: 0.875rem; /* text-sm */\n        box-sizing: border-box; /* Include padding and border in the element's total width and height */\n      }\n      .column-filter-input:focus {\n        border-color: #3b82f6;\n        outline: none;\n        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.25);\n      }\n      /* Ensure the table header (thead) has enough height for the search inputs in tfoot if it were needed there.\n         Since we're putting inputs in tfoot, this might not be strictly necessary for thead. */\n      table.dataTable thead th {\n        vertical-align: bottom; /* Align content to bottom if it's not already */\n      }\n      table.dataTable tfoot th {\n        padding: 0.5rem 0.75rem; /* Adjust padding for filter cells */\n      }\n    `;\n    document.head.appendChild(style);\n  }, []);\n\n  // Fetch accounts when filters change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const payload = {\n          month,\n          year,\n          monthNameParam,\n          sbu\n        };\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(txt || resp.statusText);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setAccounts(list);\n\n        // seed comments map\n        const initMap = {};\n        list.forEach(acc => {\n          if (acc.accountComment) {\n            initMap[acc.accountId] = acc.accountComment;\n          }\n        });\n        setCommentsMap(initMap);\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load accounts: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Read from React state, sessionStorage, or URL query\n    const qs = new URLSearchParams(location.search);\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let s = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.sbu;\n    if (!m) {\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\n      const qm = qs.get('month');\n      m = sm !== null && sm !== void 0 ? sm : qm;\n    }\n    if (!y) {\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\n      const qy = qs.get('year');\n      y = sy !== null && sy !== void 0 ? sy : qy;\n    }\n    if (!s) {\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\n      const qsS = qs.get('sbu');\n      s = ss !== null && ss !== void 0 ? ss : qsS;\n    }\n\n    // Normalize numeric values\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && s) {\n      const mn = getMonthName(m);\n      if (m !== activeMonth || y !== activeYear || s !== activeSbu || accounts.length === 0) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveMonthName(mn);\n        setActiveSbu(s);\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\n        fetchAccountData(m, y, mn, s);\n      }\n    } else {\n      setError('Missing month, year or SBU. Please navigate here with those parameters.');\n      setLoading(false);\n    }\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\n\n  // Initialize & destroy DataTable with standard sorting and searching\n  useEffect(() => {\n    if (!loading && accounts.length > 0 && tableRef.current) {\n      const $tbl = $(tableRef.current);\n\n      // Destroy existing DataTable instance if it exists\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        tableInstanceRef.current.destroy();\n      }\n\n      // Initialize DataTable with standard options\n      const instance = $tbl.DataTable({\n        paging: true,\n        searching: true,\n        // Enable global search box\n        ordering: true,\n        // Enable default column sorting\n        info: true,\n        autoWidth: false,\n        data: accounts,\n        // Pass the accounts data\n        columns: [{\n          data: 'accountId',\n          orderable: true\n        }, {\n          data: 'accountName',\n          orderable: true\n        }, {\n          data: 'totalProjects',\n          orderable: true\n        }, {\n          data: 'totalRevenue',\n          orderable: true,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'forecastNetRevenue',\n          orderable: true,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'difference',\n          orderable: true,\n          render: data => formatCurrency(data)\n        }, {\n          data: 'accountComment',\n          orderable: false,\n          // Comment column not sortable\n          className: 'text-center',\n          render: function (data, type, row) {\n            return `\n                <button class=\"btn btn-sm btn-outline-secondary comment-btn\" data-account-id=\"${row.accountId}\">\n                  💬\n                </button>\n              `;\n          }\n        }, {\n          data: null,\n          orderable: false,\n          // View button column not sortable\n          className: 'text-center',\n          render: function (data, type, row) {\n            return `\n                <button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" data-account-id=\"${row.accountId}\">\n                  🔍\n                </button>\n              `;\n          }\n        }],\n        order: [[0, 'asc']],\n        // Default sort by Account ID (first column) ascending\n        initComplete: function () {\n          // Setup individual column filters in the footer\n          this.api().columns().every(function () {\n            const column = this;\n            // Get the header text to decide where to add the filter input\n            const headerText = $(column.header()).text().trim();\n\n            // Only add search input to specific data columns, exclude \"Comment\" and \"View\"\n            if (['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference'].includes(headerText)) {\n              const input = $('<input type=\"text\" placeholder=\"Search ' + headerText + '\" class=\"column-filter-input\" />').appendTo($(column.footer()).empty()) // Append to the footer cell for this column\n              .on('keyup change clear', function () {\n                if (column.search() !== this.value) {\n                  column.search(this.value).draw();\n                }\n              });\n            } else {\n              // For \"Comment\" and \"View\" columns, just keep the footer cell empty\n              $(column.footer()).empty();\n            }\n          });\n\n          // IMPORTANT: Move the global search input from its default position to above the table\n          // This is DataTables specific. By default, it creates a div with class 'dataTables_filter'.\n          // We are moving it to a custom div which is expected to be placed by React in the main render.\n          // First, find the default DataTables search input and its label\n          const defaultFilterDiv = $('.dataTables_filter');\n          const defaultSearchInput = defaultFilterDiv.find('input');\n\n          // Find your custom wrapper for the global search input\n          const globalSearchWrapper = $('#global-search-wrapper');\n\n          // Move the input and its label (if it exists) to your custom wrapper\n          if (globalSearchWrapper.length && defaultSearchInput.length) {\n            // Create a label for the moved input\n            const label = $('<label>Search:</label>').css('margin-right', '0.5em');\n            globalSearchWrapper.empty().append(label, defaultSearchInput);\n            defaultFilterDiv.remove(); // Remove the original DataTables filter div\n          }\n        }\n      });\n      tableInstanceRef.current = instance;\n\n      // Re-attach event listeners for dynamically rendered buttons (comments and view)\n      $tbl.off('click', '.comment-btn').on('click', '.comment-btn', function () {\n        const accId = $(this).data('account-id');\n        openCommentModal(accId);\n      });\n      $tbl.off('click', '.view-btn').on('click', '.view-btn', function () {\n        const accId = $(this).data('account-id');\n        navigate(`/accounts/${accId}/project-types`, {\n          state: {\n            accId: accId,\n            month: activeMonth,\n            year: activeYear,\n            monthName: activeMonthName,\n            sbu: activeSbu\n          }\n        });\n      });\n    }\n\n    // Cleanup function to destroy DataTable instance and event listeners\n    return () => {\n      if (tableInstanceRef.current) {\n        tableInstanceRef.current.destroy();\n        tableInstanceRef.current = null;\n      }\n      $(tableRef.current).off('click', '.comment-btn');\n      $(tableRef.current).off('click', '.view-btn');\n      // Re-append the default global filter div back to body if it was moved, for full cleanup.\n      // This helps prevent issues if the component mounts/unmounts multiple times quickly.\n      if ($('#global-search-wrapper').find('input').length && $('.dataTables_filter').length === 0) {\n        $('body').append($('<div class=\"dataTables_filter\">').append($('#global-search-wrapper').contents()));\n      }\n    };\n  }, [loading, accounts, activeMonth, activeYear, activeMonthName, activeSbu, navigate]);\n\n  // Open comment modal\n  const openCommentModal = accId => {\n    setCurrentAccountId(accId);\n    setCommentInput(commentsMap[accId] || '');\n    setModalVisible(true);\n  };\n\n  // Save or update comment\n  const saveComment = async () => {\n    try {\n      const dto = {\n        accId: currentAccountId,\n        month: activeMonth,\n        year: activeYear,\n        comment: commentInput\n      };\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dto)\n      });\n      if (!resp.ok) {\n        throw new Error(await resp.text());\n      }\n      // update local maps\n      setCommentsMap(m => ({\n        ...m,\n        [currentAccountId]: commentInput\n      }));\n      setAccounts(list => list.map(acc => acc.accountId === currentAccountId ? {\n        ...acc,\n        accountComment: commentInput\n      } : acc));\n      setModalVisible(false);\n    } catch (e) {\n      window.alert('Error saving comment: ' + e.message); // Using window.alert for simplicity\n    }\n  };\n\n  // Dynamic breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  },\n  // Always starts with Dashboard\n  {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  },\n  // Added this line\n  ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu'\n  }] : []),\n  // Conditionally add SBU Level\n  {\n    name: 'Account Level',\n    page: 'accounts'\n  }].filter(Boolean);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3 mb-md-0 fw-semibold text-dark\",\n          children: [\"\\uD83C\\uDFE2 Account Level Overview \\u2013 \", activeSbu, activeMonthName && activeYear && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2 text-primary\",\n            children: [\"(\", activeMonthName, \" \", activeYear, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), accounts.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-success rounded-pill px-3\",\n          onClick: handleDownloadData,\n          title: \"Download Account Data\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-download me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), \" Download Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"global-search-wrapper\",\n        className: \"mb-3 d-flex align-items-center justify-content-end\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Account Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload'),\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Forecast Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Revenue Difference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      style: {\n        backgroundColor: '#00000066'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"Comment for \", currentAccountId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setModalVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setModalVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: saveComment,\n              disabled: !commentInput.trim(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 433,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountLevel, \"7INgXGWkl2RLfxYNsixyYJyQse4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AccountLevel;\nexport default AccountLevel;\nvar _c;\n$RefreshReg$(_c, \"AccountLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","$","Breadcrumbs","commonData","XLSX","saveAs","jsxDEV","_jsxDEV","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","AccountLevel","_s","navigate","location","tableRef","tableInstanceRef","accounts","setAccounts","commentsMap","setCommentsMap","modalVisible","setModalVisible","currentAccountId","setCurrentAccountId","commentInput","setCommentInput","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeMonthName","setActiveMonthName","activeSbu","setActiveSbu","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","value","style","handleDownloadData","dataToExport","current","rows","search","data","toArray","length","console","log","headers","dataForExcel","map","account","accountId","accountName","totalProjects","totalRevenue","forecastNetRevenue","difference","accountComment","wb","utils","book_new","ws","json_to_sheet","header","book_append_sheet","excelBuffer","write","bookType","type","dataBlob","Blob","monthName","filename","link","document","createElement","href","rel","head","appendChild","body","fontFamily","innerHTML","_location$state","_location$state2","_location$state3","fetchAccountData","year","monthNameParam","sbu","payload","resp","fetch","method","JSON","stringify","ok","txt","text","Error","statusText","json","list","Array","isArray","filter","Boolean","initMap","forEach","acc","e","message","qs","URLSearchParams","m","state","y","s","sm","sessionStorage","getItem","qm","get","sy","qy","ss","qsS","parseInt","mn","setItem","toString","$tbl","fn","DataTable","isDataTable","destroy","instance","paging","searching","ordering","info","autoWidth","columns","orderable","render","className","row","order","initComplete","api","every","column","headerText","trim","includes","input","appendTo","footer","empty","on","draw","defaultFilterDiv","defaultSearchInput","find","globalSearchWrapper","label","css","append","remove","off","accId","openCommentModal","contents","saveComment","dto","comment","window","alert","breadcrumbPath","name","page","background","children","maxWidth","backgroundColor","borderRadius","path","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","id","role","ref","width","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/AccountLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\nimport * as XLSX from 'xlsx'; // Import XLSX for Excel export\r\nimport { saveAs } from 'file-saver'; // Import saveAs for triggering file download\r\n\r\n// Utility to convert month number to month name\r\nconst getMonthName = (monthNumber) => {\r\n  const date = new Date();\r\n  date.setMonth(monthNumber - 1);\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n};\r\n\r\nconst AccountLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n  const tableInstanceRef = useRef(null); // Ref to hold the DataTable instance\r\n\r\n  // UI state\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Active filters\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeMonthName, setActiveMonthName] = useState(null);\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits,\r\n  } = commonData.currencySettings;\r\n\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits,\r\n    });\r\n\r\n  /**\r\n   * Handles the \"Download Data\" button click.\r\n   * Generates an Excel (XLSX) file from the filtered 'accounts' data and triggers a download.\r\n   */\r\n  const handleDownloadData = () => {\r\n    // Get the currently filtered data from DataTables\r\n    const dataToExport = tableInstanceRef.current\r\n      ? tableInstanceRef.current.rows({ search: 'applied' }).data().toArray()\r\n      : accounts; // Fallback to all accounts if DataTable isn't initialized or no filter applied\r\n\r\n    if (dataToExport.length === 0) {\r\n      console.log('No data to download after applying filters.');\r\n      // Optionally, show a user-friendly message here (e.g., a toast notification)\r\n      return;\r\n    }\r\n\r\n    const headers = [\r\n      'Account ID',\r\n      'Account Name',\r\n      'Total Projects',\r\n      'Total Revenue',\r\n      'Forecast Revenue',\r\n      'Revenue Difference',\r\n      'Comment',\r\n    ];\r\n\r\n    const dataForExcel = dataToExport.map((account) => ({\r\n      'Account ID': account.accountId,\r\n      'Account Name': account.accountName,\r\n      'Total Projects': account.totalProjects,\r\n      'Total Revenue': formatCurrency(account.totalRevenue),\r\n      'Forecast Revenue': formatCurrency(account.forecastNetRevenue),\r\n      'Revenue Difference': formatCurrency(account.difference),\r\n      'Comment': account.accountComment || '',\r\n    }));\r\n\r\n    const wb = XLSX.utils.book_new();\r\n    const ws = XLSX.utils.json_to_sheet(dataForExcel, { header: headers });\r\n\r\n    XLSX.utils.book_append_sheet(wb, ws, 'Account Data');\r\n\r\n    const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n    const dataBlob = new Blob([excelBuffer], {\r\n      type: 'application/octet-stream',\r\n    });\r\n\r\n    const monthName = getMonthName(activeMonth);\r\n    const filename = `Account_Data_${activeSbu || 'All'}_${monthName || ''}_${activeYear || ''}.xlsx`;\r\n    saveAs(dataBlob, filename);\r\n\r\n    console.log('Downloading filtered account data in Excel format!');\r\n  };\r\n\r\n\r\n  // Load Poppins font and inject custom CSS for column filters\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n\r\n    // Inject CSS to style the column filter inputs\r\n    const style = document.createElement('style');\r\n    style.innerHTML = `\r\n      .dataTables_filter { /* Hide default global search filter label */\r\n        display: none;\r\n      }\r\n      .dataTables_filter input { /* Style for global search input */\r\n        margin-left: 0.5em;\r\n        padding: 0.5rem;\r\n        border-radius: 0.375rem; /* rounded-md */\r\n        border: 1px solid #d1d5db; /* border border-slate-300 */\r\n        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); /* shadow-sm */\r\n      }\r\n      .dataTables_filter input:focus { /* Focus styles */\r\n        border-color: #3b82f6; /* focus:border-blue-500 */\r\n        outline: none;\r\n        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.25); /* focus:ring focus:ring-blue-200 focus:ring-opacity-50 */\r\n      }\r\n      .column-filter-input {\r\n        width: 100%;\r\n        padding: 0.25rem 0.5rem; /* py-1 px-2 */\r\n        border-radius: 0.375rem; /* rounded-md */\r\n        border: 1px solid #d1d5db; /* border border-slate-300 */\r\n        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05); /* shadow-sm */\r\n        font-size: 0.875rem; /* text-sm */\r\n        box-sizing: border-box; /* Include padding and border in the element's total width and height */\r\n      }\r\n      .column-filter-input:focus {\r\n        border-color: #3b82f6;\r\n        outline: none;\r\n        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.25);\r\n      }\r\n      /* Ensure the table header (thead) has enough height for the search inputs in tfoot if it were needed there.\r\n         Since we're putting inputs in tfoot, this might not be strictly necessary for thead. */\r\n      table.dataTable thead th {\r\n        vertical-align: bottom; /* Align content to bottom if it's not already */\r\n      }\r\n      table.dataTable tfoot th {\r\n        padding: 0.5rem 0.75rem; /* Adjust padding for filter cells */\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }, []);\r\n\r\n  // Fetch accounts when filters change\r\n  useEffect(() => {\r\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const payload = { month, year, monthNameParam, sbu };\r\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload),\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(txt || resp.statusText);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setAccounts(list);\r\n\r\n        // seed comments map\r\n        const initMap = {};\r\n        list.forEach((acc) => {\r\n          if (acc.accountComment) {\r\n            initMap[acc.accountId] = acc.accountComment;\r\n          }\r\n        });\r\n        setCommentsMap(initMap);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load accounts: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Read from React state, sessionStorage, or URL query\r\n    const qs = new URLSearchParams(location.search);\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    let s = location.state?.sbu;\r\n\r\n    if (!m) {\r\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\r\n      const qm = qs.get('month');\r\n      m = sm ?? qm;\r\n    }\r\n    if (!y) {\r\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\r\n      const qy = qs.get('year');\r\n      y = sy ?? qy;\r\n    }\r\n    if (!s) {\r\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\r\n      const qsS = qs.get('sbu');\r\n      s = ss ?? qsS;\r\n    }\r\n\r\n    // Normalize numeric values\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && s) {\r\n      const mn = getMonthName(m);\r\n      if (\r\n        m !== activeMonth ||\r\n        y !== activeYear ||\r\n        s !== activeSbu ||\r\n        accounts.length === 0\r\n      ) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveMonthName(mn);\r\n        setActiveSbu(s);\r\n\r\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\r\n\r\n        fetchAccountData(m, y, mn, s);\r\n      }\r\n    } else {\r\n      setError(\r\n        'Missing month, year or SBU. Please navigate here with those parameters.'\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\r\n\r\n  // Initialize & destroy DataTable with standard sorting and searching\r\n  useEffect(() => {\r\n    if (!loading && accounts.length > 0 && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n\r\n      // Destroy existing DataTable instance if it exists\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        tableInstanceRef.current.destroy();\r\n      }\r\n\r\n      // Initialize DataTable with standard options\r\n      const instance = $tbl.DataTable({\r\n        paging: true,\r\n        searching: true, // Enable global search box\r\n        ordering: true, // Enable default column sorting\r\n        info: true,\r\n        autoWidth: false,\r\n        data: accounts, // Pass the accounts data\r\n        columns: [\r\n          { data: 'accountId', orderable: true },\r\n          { data: 'accountName', orderable: true },\r\n          { data: 'totalProjects', orderable: true },\r\n          { data: 'totalRevenue', orderable: true, render: (data) => formatCurrency(data) },\r\n          { data: 'forecastNetRevenue', orderable: true, render: (data) => formatCurrency(data) },\r\n          { data: 'difference', orderable: true, render: (data) => formatCurrency(data) },\r\n          {\r\n            data: 'accountComment',\r\n            orderable: false, // Comment column not sortable\r\n            className: 'text-center',\r\n            render: function (data, type, row) {\r\n              return `\r\n                <button class=\"btn btn-sm btn-outline-secondary comment-btn\" data-account-id=\"${row.accountId}\">\r\n                  💬\r\n                </button>\r\n              `;\r\n            }\r\n          },\r\n          {\r\n            data: null,\r\n            orderable: false, // View button column not sortable\r\n            className: 'text-center',\r\n            render: function (data, type, row) {\r\n              return `\r\n                <button class=\"btn btn-sm btn-outline-primary rounded-circle view-btn\" data-account-id=\"${row.accountId}\">\r\n                  🔍\r\n                </button>\r\n              `;\r\n            }\r\n          },\r\n        ],\r\n        order: [[0, 'asc']], // Default sort by Account ID (first column) ascending\r\n        initComplete: function () {\r\n            // Setup individual column filters in the footer\r\n            this.api().columns().every(function () {\r\n                const column = this;\r\n                // Get the header text to decide where to add the filter input\r\n                const headerText = $(column.header()).text().trim();\r\n\r\n                // Only add search input to specific data columns, exclude \"Comment\" and \"View\"\r\n                if (['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference'].includes(headerText)) {\r\n                    const input = $('<input type=\"text\" placeholder=\"Search '+headerText+'\" class=\"column-filter-input\" />')\r\n                        .appendTo($(column.footer()).empty()) // Append to the footer cell for this column\r\n                        .on('keyup change clear', function () {\r\n                            if (column.search() !== this.value) {\r\n                                column.search(this.value).draw();\r\n                            }\r\n                        });\r\n                } else {\r\n                    // For \"Comment\" and \"View\" columns, just keep the footer cell empty\r\n                    $(column.footer()).empty();\r\n                }\r\n            });\r\n\r\n            // IMPORTANT: Move the global search input from its default position to above the table\r\n            // This is DataTables specific. By default, it creates a div with class 'dataTables_filter'.\r\n            // We are moving it to a custom div which is expected to be placed by React in the main render.\r\n            // First, find the default DataTables search input and its label\r\n            const defaultFilterDiv = $('.dataTables_filter');\r\n            const defaultSearchInput = defaultFilterDiv.find('input');\r\n\r\n            // Find your custom wrapper for the global search input\r\n            const globalSearchWrapper = $('#global-search-wrapper');\r\n\r\n            // Move the input and its label (if it exists) to your custom wrapper\r\n            if (globalSearchWrapper.length && defaultSearchInput.length) {\r\n                // Create a label for the moved input\r\n                const label = $('<label>Search:</label>').css('margin-right', '0.5em');\r\n                globalSearchWrapper.empty().append(label, defaultSearchInput);\r\n                defaultFilterDiv.remove(); // Remove the original DataTables filter div\r\n            }\r\n        }\r\n      });\r\n\r\n      tableInstanceRef.current = instance;\r\n\r\n      // Re-attach event listeners for dynamically rendered buttons (comments and view)\r\n      $tbl.off('click', '.comment-btn').on('click', '.comment-btn', function() {\r\n        const accId = $(this).data('account-id');\r\n        openCommentModal(accId);\r\n      });\r\n\r\n      $tbl.off('click', '.view-btn').on('click', '.view-btn', function() {\r\n        const accId = $(this).data('account-id');\r\n        navigate(`/accounts/${accId}/project-types`, {\r\n          state: {\r\n            accId: accId,\r\n            month: activeMonth,\r\n            year: activeYear,\r\n            monthName: activeMonthName,\r\n            sbu: activeSbu,\r\n          },\r\n        });\r\n      });\r\n    }\r\n\r\n    // Cleanup function to destroy DataTable instance and event listeners\r\n    return () => {\r\n      if (tableInstanceRef.current) {\r\n        tableInstanceRef.current.destroy();\r\n        tableInstanceRef.current = null;\r\n      }\r\n      $(tableRef.current).off('click', '.comment-btn');\r\n      $(tableRef.current).off('click', '.view-btn');\r\n      // Re-append the default global filter div back to body if it was moved, for full cleanup.\r\n      // This helps prevent issues if the component mounts/unmounts multiple times quickly.\r\n      if ($('#global-search-wrapper').find('input').length && $('.dataTables_filter').length === 0) {\r\n        $('body').append($('<div class=\"dataTables_filter\">').append($('#global-search-wrapper').contents()));\r\n      }\r\n    };\r\n  }, [loading, accounts, activeMonth, activeYear, activeMonthName, activeSbu, navigate]);\r\n\r\n  // Open comment modal\r\n  const openCommentModal = (accId) => {\r\n    setCurrentAccountId(accId);\r\n    setCommentInput(commentsMap[accId] || '');\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // Save or update comment\r\n  const saveComment = async () => {\r\n    try {\r\n      const dto = {\r\n        accId: currentAccountId,\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        comment: commentInput,\r\n      };\r\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dto),\r\n      });\r\n      if (!resp.ok) {\r\n        throw new Error(await resp.text());\r\n      }\r\n      // update local maps\r\n      setCommentsMap((m) => ({ ...m, [currentAccountId]: commentInput }));\r\n      setAccounts((list) =>\r\n        list.map((acc) =>\r\n          acc.accountId === currentAccountId\r\n            ? { ...acc, accountComment: commentInput }\r\n            : acc\r\n        )\r\n      );\r\n      setModalVisible(false);\r\n    } catch (e) {\r\n      window.alert('Error saving comment: ' + e.message); // Using window.alert for simplicity\r\n    }\r\n  };\r\n\r\n  // Dynamic breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' }, // Always starts with Dashboard\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' }, // Added this line\r\n    ...(activeSbu ? [{ name: `${activeSbu} SBU Level`, page: 'sbu' }] : []), // Conditionally add SBU Level\r\n    { name: 'Account Level', page: 'accounts' },\r\n  ].filter(Boolean);\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\">\r\n          <h2 className=\"mb-3 mb-md-0 fw-semibold text-dark\">\r\n            🏢 Account Level Overview – {activeSbu}\r\n            {activeMonthName && activeYear && (\r\n              <span className=\"ms-2 text-primary\">\r\n                ({activeMonthName} {activeYear})\r\n              </span>\r\n            )}\r\n          </h2>\r\n          {/* Download button, visible only if accounts are loaded */}\r\n          {accounts.length > 0 && (\r\n            <button\r\n              className=\"btn btn-outline-success rounded-pill px-3\"\r\n              onClick={handleDownloadData}\r\n              title=\"Download Account Data\"\r\n            >\r\n              <i className=\"bi bi-download me-2\"></i> Download Data\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Global search input moved here for better layout */}\r\n        {/* It will be populated by DataTables' initComplete */}\r\n        <div id=\"global-search-wrapper\" className=\"mb-3 d-flex align-items-center justify-content-end\">\r\n            {/* DataTables will inject its search input here */}\r\n        </div>\r\n\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\" />\r\n            <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')}\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              ref={tableRef}\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th>Account ID</th>\r\n                  <th>Account Name</th>\r\n                  <th>Total Projects</th>\r\n                  <th>Total Revenue</th>\r\n                  <th>Forecast Revenue</th>\r\n                  <th>Revenue Difference</th>\r\n                  <th className=\"text-center\">Comment</th>\r\n                  <th className=\"text-center\">View</th>\r\n                </tr>\r\n              </thead>\r\n              {/* TFOOT for column filters */}\r\n              <tfoot>\r\n                <tr>\r\n                  <th></th> {/* Account ID Filter */}\r\n                  <th></th> {/* Account Name Filter */}\r\n                  <th></th> {/* Total Projects Filter */}\r\n                  <th></th> {/* Total Revenue Filter */}\r\n                  <th></th> {/* Forecast Revenue Filter */}\r\n                  <th></th> {/* Revenue Difference Filter */}\r\n                  <th></th> {/* Comment (no filter) */}\r\n                  <th></th> {/* View (no filter) */}\r\n                </tr>\r\n              </tfoot>\r\n              <tbody>\r\n                {/* DataTables will handle rendering tbody. */}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {modalVisible && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: '#00000066' }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Comment for {currentAccountId}</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModalVisible(false)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  value={commentInput}\r\n                  onChange={(e) => setCommentInput(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button className=\"btn btn-secondary\" onClick={() => setModalVisible(false)}>\r\n                  Cancel\r\n                </button>\r\n                <button className=\"btn btn-primary\" onClick={saveComment} disabled={!commentInput.trim()}>\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountLevel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}