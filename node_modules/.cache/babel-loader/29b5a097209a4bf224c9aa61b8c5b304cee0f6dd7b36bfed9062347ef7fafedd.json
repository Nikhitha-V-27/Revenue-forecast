{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Details\\\\AccountLevel.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useEffect, useState } from 'react';\n// import { useNavigate, useLocation } from 'react-router-dom';\n// import $ from 'jquery';\n// import 'datatables.net';\n// import 'datatables.net-dt/css/dataTables.dataTables.min.css';\n// import Breadcrumbs from '../Breadcrumbs';\n// import commonData from '../../data/commonData.json';\n\n// const AccountLevel = () => {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const tableRef = useRef(null);\n\n//   // UI state\n//   const [accounts, setAccounts] = useState([]);\n//   const [commentsMap, setCommentsMap] = useState({});\n//   const [modalVisible, setModalVisible] = useState(false);\n//   const [currentAccountId, setCurrentAccountId] = useState(null);\n//   const [commentInput, setCommentInput] = useState('');\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [activeMonth, setActiveMonth] = useState(null);\n//   const [activeYear, setActiveYear] = useState(null);\n\n//   const BACKEND_URL = 'http://localhost:8081';\n\n//   // Currency formatter\n//   const {\n//     locale,\n//     currency,\n//     minimumFractionDigits,\n//     maximumFractionDigits\n//   } = commonData.currencySettings;\n\n//   const formatCurrency = (v = 0) =>\n//     v.toLocaleString(locale, {\n//       style: 'currency',\n//       currency,\n//       minimumFractionDigits,\n//       maximumFractionDigits\n//     });\n\n//   // Load Poppins font\n//   useEffect(() => {\n//     const link = document.createElement('link');\n//     link.href =\n//       'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n//     link.rel = 'stylesheet';\n//     document.head.appendChild(link);\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\n//   }, []);\n\n//   // 1) Fetch account rows and seed commentsMap\n//   useEffect(() => {\n//     const fetchAccountData = async (month, year) => {\n//       setLoading(true);\n//       setError(null);\n//       try {\n//         const resp = await fetch(`${BACKEND_URL}/api/account`, {\n//           method: 'POST',\n//           headers: { 'Content-Type': 'application/json' },\n//           body: JSON.stringify({ month, year })\n//         });\n//         if (!resp.ok) {\n//           const txt = await resp.text();\n//           throw new Error(txt || resp.statusText);\n//         }\n//         const data = await resp.json();\n//         const list = Array.isArray(data) ? data : [data].filter(Boolean);\n//         setAccounts(list);\n\n//         // seed commentsMap from accountComment field\n//         const initMap = {};\n//         list.forEach(acc => {\n//           if (acc.accountComment) {\n//             initMap[acc.accountId] = acc.accountComment;\n//           }\n//         });\n//         setCommentsMap(initMap);\n//       } catch (e) {\n//         console.error(e);\n//         setError(`Failed to load accounts: ${e.message}`);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     let m = location.state?.month;\n//     let y = location.state?.year;\n//     if (!m || !y) {\n//       const sm = sessionStorage.getItem('lastFetchedAccountMonth');\n//       const sy = sessionStorage.getItem('lastFetchedAccountYear');\n//       if (sm && sy) {\n//         m = +sm;\n//         y = +sy;\n//       }\n//     }\n\n//     if (m && y) {\n//       if (m !== activeMonth || y !== activeYear || accounts.length === 0) {\n//         setActiveMonth(m);\n//         setActiveYear(y);\n//         sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n//         sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n\n//         fetchAccountData(m, y);\n//       }\n//     } else {\n//       setError('Missing month or year. Please go back.');\n//       setLoading(false);\n//     }\n//   }, [location.state, activeMonth, activeYear, accounts.length]);\n\n//   // 2) Initialize & destroy DataTable\n//   useEffect(() => {\n//     if (!loading && accounts.length > 0 && tableRef.current) {\n//       const $tbl = $(tableRef.current);\n//       if ($.fn.DataTable.isDataTable($tbl)) {\n//         $tbl.DataTable().destroy();\n//       }\n//       $tbl.DataTable({\n//         paging: true,\n//         searching: true,\n//         ordering: true,\n//         info: true,\n//         autoWidth: false\n//       });\n//     }\n//     return () => {\n//       if (tableRef.current) {\n//         const $tbl = $(tableRef.current);\n//         if ($.fn.DataTable.isDataTable($tbl)) {\n//           $tbl.DataTable().destroy();\n//         }\n//       }\n//     };\n//   }, [loading, accounts]);\n\n//   // 3) Open modal & set input from commentsMap\n//   const openCommentModal = (accId) => {\n//     setCurrentAccountId(accId);\n//     setCommentInput(commentsMap[accId] || '');\n//     setModalVisible(true);\n//   };\n\n//   // 4) Save or update comment and update state\n//   const saveComment = async () => {\n//     try {\n//       const dto = {\n//         accId: currentAccountId,\n//         month: activeMonth,\n//         year: activeYear,\n//         comment: commentInput\n//       };\n//       const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(dto)\n//       });\n//       if (!resp.ok) {\n//         throw new Error(await resp.text());\n//       }\n\n//       // update local comment map\n//       setCommentsMap(m => ({ ...m, [currentAccountId]: commentInput }));\n//       // update account list so accountComment is in sync\n//       setAccounts(list =>\n//         list.map(acc =>\n//           acc.accountId === currentAccountId\n//             ? { ...acc, accountComment: commentInput }\n//             : acc\n//         )\n//       );\n\n//       setModalVisible(false);\n//     } catch (e) {\n//       alert('Error saving comment: ' + e.message);\n//     }\n//   };\n\n//   const breadcrumbPath = [\n//     { name: 'PMO Dashboard', page: '' },\n//     { name: 'Revenue Forecast ‚Äì Early View', page: 'upload' },\n//     { name: 'Account Level', page: 'accounts' }\n//   ];\n\n//   return (\n//     <div\n//       className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\n//       style={{\n//         background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n//         fontFamily: \"'Poppins', sans-serif'\"\n//       }}\n//     >\n//       <div\n//         className=\"card shadow p-4 p-md-5 w-100\"\n//         style={{\n//           maxWidth: '1100px',\n//           backgroundColor: '#ffffffdd',\n//           borderRadius: '1rem'\n//         }}\n//       >\n//         <Breadcrumbs path={breadcrumbPath} />\n//         <h2 className=\"text-center mb-4 fw-semibold text-dark\">\n//           üè¢ Account Level Overview\n//         </h2>\n\n//         {loading ? (\n//           <div className=\"d-flex justify-content-center align-items-center\">\n//             <div className=\"spinner-border text-primary\" role=\"status\" />\n//             <p className=\"ms-3 text-primary\">Loading Account Data...</p>\n//           </div>\n//         ) : error ? (\n//           <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\n//             <p className=\"fs-4\">Error: {error}</p>\n//             <button\n//               className=\"btn btn-primary mt-3\"\n//               onClick={() => navigate('/upload')}\n//             >\n//               Go to Upload Page\n//             </button>\n//           </div>\n//         ) : (\n//           <div className=\"table-responsive rounded\">\n//             <table\n//               ref={tableRef}\n//               className=\"display table table-hover align-middle table-bordered mb-0\"\n//               style={{ width: '100%' }}\n//             >\n//               <thead\n//                 className=\"text-white\"\n//                 style={{\n//                   background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n//                 }}\n//               >\n//                 <tr>\n//                   <th>Account ID</th>\n//                   <th>Account Name</th>\n//                   <th>Total Projects</th>\n//                   <th>Total Revenue</th>\n//                   <th>Forecast Revenue</th>\n//                   <th>Revenue Difference</th>\n//                   <th className=\"text-center\">Comment</th>\n//                   <th className=\"text-center\">View</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {accounts.map(acc => (\n//                   <tr key={acc.accountId}>\n//                     <td>{acc.accountId}</td>\n//                     <td>{acc.accountName}</td>\n//                     <td>{acc.totalProjects}</td>\n//                     <td>{formatCurrency(acc.totalRevenue)}</td>\n//                     <td>{formatCurrency(0)}</td>\n//                     <td>{formatCurrency(0)}</td>\n//                     <td className=\"text-center\">\n//                       <button\n//                         className=\"btn btn-sm btn-outline-secondary\"\n//                         onClick={() => openCommentModal(acc.accountId)}\n//                       >\n//                         üí¨\n//                       </button>\n//                     </td>\n//                     <td className=\"text-center\">\n//                       <button\n//                         className=\"btn btn-sm btn-outline-primary rounded-circle\"\n//                         onClick={() =>\n//                           navigate(`/accounts/${acc.accountId}/projects`, {\n//                             state: {\n//                               accountId: acc.accountId,\n//                               month: activeMonth,\n//                               year: activeYear\n//                             }\n//                           })\n//                         }\n//                       >\n//                         üîç\n//                       </button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         )}\n//       </div>\n\n//       {modalVisible && (\n//         <div\n//           className=\"modal fade show d-block\"\n//           style={{ backgroundColor: '#00000066' }}\n//         >\n//           <div className=\"modal-dialog modal-dialog-centered\">\n//             <div className=\"modal-content\">\n//               <div className=\"modal-header\">\n//                 <h5 className=\"modal-title\">\n//                   üí¨ Comment for {currentAccountId}\n//                 </h5>\n//                 <button\n//                   type=\"button\"\n//                   className=\"btn-close\"\n//                   onClick={() => setModalVisible(false)}\n//                 />\n//               </div>\n//               <div className=\"modal-body\">\n//                 <textarea\n//                   className=\"form-control\"\n//                   rows=\"4\"\n//                   value={commentInput}\n//                   onChange={e => setCommentInput(e.target.value)}\n//                 />\n//               </div>\n//               <div className=\"modal-footer\">\n//                 <button\n//                   className=\"btn btn-secondary\"\n//                   onClick={() => setModalVisible(false)}\n//                 >\n//                   Cancel\n//                 </button>\n//                 <button\n//                   className=\"btn btn-primary\"\n//                   onClick={saveComment}\n//                   disabled={!commentInput.trim()}\n//                 >\n//                   Save\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AccountLevel;\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\n\n// Utility function to convert month number to month name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const date = new Date();\n  date.setMonth(monthNumber - 1); // Month is 0-indexed for Date object\n  return date.toLocaleString('en-US', {\n    month: 'long'\n  });\n};\nconst AccountLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tableRef = useRef(null);\n\n  // UI state\n  const [accounts, setAccounts] = useState([]);\n  const [commentsMap, setCommentsMap] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [commentInput, setCommentInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeMonthName, setActiveMonthName] = useState(null); // Added state for month name\n\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (v = 0) => v.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Load Poppins font\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // 1) Fetch account rows and seed commentsMap\n  useEffect(() => {\n    var _location$state, _location$state2;\n    const fetchAccountData = async (month, year, monthNameParam) => {\n      // Added monthNameParam\n      setLoading(true);\n      setError(null);\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            monthNameParam\n          }) // Pass monthNameParam here\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(txt || resp.statusText);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setAccounts(list);\n\n        // seed commentsMap from accountComment field\n        const initMap = {};\n        list.forEach(acc => {\n          if (acc.accountComment) {\n            initMap[acc.accountId] = acc.accountComment;\n          }\n        });\n        setCommentsMap(initMap);\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load accounts: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    // We will derive monthName directly from 'm' if it's available\n    let mn = null;\n    if (!m || !y) {\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\n      if (sm && sy) {\n        m = +sm;\n        y = +sy;\n      }\n    }\n    if (m && y) {\n      // Derive monthName from the numerical month\n      mn = getMonthName(m);\n      if (m !== activeMonth || y !== activeYear || accounts.length === 0) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveMonthName(mn); // Set the derived month name\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n        fetchAccountData(m, y, mn); // Pass the derived month name to the fetch function\n      }\n    } else {\n      setError('Missing month or year. Please go back.');\n      setLoading(false);\n    }\n  }, [location.state, activeMonth, activeYear, accounts.length]); // Dependencies unchanged as month name is derived\n\n  // 2) Initialize & destroy DataTable\n  useEffect(() => {\n    if (!loading && accounts.length > 0 && tableRef.current) {\n      const $tbl = $(tableRef.current);\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n      }\n      $tbl.DataTable({\n        paging: true,\n        searching: true,\n        ordering: true,\n        info: true,\n        autoWidth: false\n      });\n    }\n    return () => {\n      if (tableRef.current) {\n        const $tbl = $(tableRef.current);\n        if ($.fn.DataTable.isDataTable($tbl)) {\n          $tbl.DataTable().destroy();\n        }\n      }\n    };\n  }, [loading, accounts]);\n\n  // 3) Open modal & set input from commentsMap\n  const openCommentModal = accId => {\n    setCurrentAccountId(accId);\n    setCommentInput(commentsMap[accId] || '');\n    setModalVisible(true);\n  };\n\n  // 4) Save or update comment and update state\n  const saveComment = async () => {\n    try {\n      const dto = {\n        accId: currentAccountId,\n        month: activeMonth,\n        year: activeYear,\n        comment: commentInput\n      };\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dto)\n      });\n      if (!resp.ok) {\n        throw new Error(await resp.text());\n      }\n\n      // update local comment map\n      setCommentsMap(m => ({\n        ...m,\n        [currentAccountId]: commentInput\n      }));\n      // update account list so accountComment is in sync\n      setAccounts(list => list.map(acc => acc.accountId === currentAccountId ? {\n        ...acc,\n        accountComment: commentInput\n      } : acc));\n      setModalVisible(false);\n    } catch (e) {\n      alert('Error saving comment: ' + e.message);\n    }\n  };\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast ‚Äì Early View',\n    page: 'upload'\n  }, {\n    name: 'Account Level',\n    page: 'accounts'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif'\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 fw-semibold text-dark\",\n        children: [\"\\uD83C\\uDFE2 Account Level Overview\", activeMonthName && activeYear &&\n        /*#__PURE__*/\n        // Display month name and year\n        _jsxDEV(\"span\", {\n          className: \"ms-2 text-primary\",\n          children: [\"(\", activeMonthName, \" \", activeYear, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Account Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload'),\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Forecast Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Revenue Difference\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: accounts.map(acc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 610,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.totalProjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.totalRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.forecastNetRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.difference)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-secondary\",\n                  onClick: () => openCommentModal(acc.accountId),\n                  children: \"\\uD83D\\uDCAC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/accounts/${acc.accountId}/projects`, {\n                    state: {\n                      accountId: acc.accountId,\n                      month: activeMonth,\n                      year: activeYear,\n                      monthName: activeMonthName // Pass the month name to project level\n                    }\n                  }),\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this)]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      style: {\n        backgroundColor: '#00000066'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"\\uD83D\\uDCAC Comment for \", currentAccountId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setModalVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setModalVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: saveComment,\n              disabled: !commentInput.trim(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 544,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountLevel, \"NzaKU6qFA3IXnxCQM8efPiQLUXA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AccountLevel;\nexport default AccountLevel;\nvar _c;\n$RefreshReg$(_c, \"AccountLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","AccountLevel","_s","navigate","location","tableRef","accounts","setAccounts","commentsMap","setCommentsMap","modalVisible","setModalVisible","currentAccountId","setCurrentAccountId","commentInput","setCommentInput","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeMonthName","setActiveMonthName","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","v","style","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","fetchAccountData","year","monthNameParam","resp","fetch","method","headers","JSON","stringify","ok","txt","text","Error","statusText","data","json","list","Array","isArray","filter","Boolean","initMap","forEach","acc","accountComment","accountId","e","console","message","m","state","y","mn","sm","sessionStorage","getItem","sy","length","setItem","toString","current","$tbl","fn","DataTable","isDataTable","destroy","paging","searching","ordering","info","autoWidth","openCommentModal","accId","saveComment","dto","comment","map","alert","breadcrumbPath","name","page","className","background","children","maxWidth","backgroundColor","borderRadius","path","fileName","_jsxFileName","lineNumber","columnNumber","role","onClick","ref","width","accountName","totalProjects","totalRevenue","forecastNetRevenue","difference","monthName","type","rows","value","onChange","target","disabled","trim","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Details/AccountLevel.js"],"sourcesContent":["// import React, { useRef, useEffect, useState } from 'react';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\n// import $ from 'jquery';\r\n// import 'datatables.net';\r\n// import 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\n// import Breadcrumbs from '../Breadcrumbs';\r\n// import commonData from '../../data/commonData.json';\r\n\r\n// const AccountLevel = () => {\r\n//   const navigate = useNavigate();\r\n//   const location = useLocation();\r\n//   const tableRef = useRef(null);\r\n\r\n//   // UI state\r\n//   const [accounts, setAccounts] = useState([]);\r\n//   const [commentsMap, setCommentsMap] = useState({});\r\n//   const [modalVisible, setModalVisible] = useState(false);\r\n//   const [currentAccountId, setCurrentAccountId] = useState(null);\r\n//   const [commentInput, setCommentInput] = useState('');\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [activeMonth, setActiveMonth] = useState(null);\r\n//   const [activeYear, setActiveYear] = useState(null);\r\n\r\n\r\n\r\n//   const BACKEND_URL = 'http://localhost:8081';\r\n\r\n//   // Currency formatter\r\n//   const {\r\n//     locale,\r\n//     currency,\r\n//     minimumFractionDigits,\r\n//     maximumFractionDigits\r\n//   } = commonData.currencySettings;\r\n\r\n//   const formatCurrency = (v = 0) =>\r\n//     v.toLocaleString(locale, {\r\n//       style: 'currency',\r\n//       currency,\r\n//       minimumFractionDigits,\r\n//       maximumFractionDigits\r\n//     });\r\n\r\n//   // Load Poppins font\r\n//   useEffect(() => {\r\n//     const link = document.createElement('link');\r\n//     link.href =\r\n//       'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n//     link.rel = 'stylesheet';\r\n//     document.head.appendChild(link);\r\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n//   }, []);\r\n\r\n//   // 1) Fetch account rows and seed commentsMap\r\n//   useEffect(() => {\r\n//     const fetchAccountData = async (month, year) => {\r\n//       setLoading(true);\r\n//       setError(null);\r\n//       try {\r\n//         const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n//           method: 'POST',\r\n//           headers: { 'Content-Type': 'application/json' },\r\n//           body: JSON.stringify({ month, year })\r\n//         });\r\n//         if (!resp.ok) {\r\n//           const txt = await resp.text();\r\n//           throw new Error(txt || resp.statusText);\r\n//         }\r\n//         const data = await resp.json();\r\n//         const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n//         setAccounts(list);\r\n\r\n//         // seed commentsMap from accountComment field\r\n//         const initMap = {};\r\n//         list.forEach(acc => {\r\n//           if (acc.accountComment) {\r\n//             initMap[acc.accountId] = acc.accountComment;\r\n//           }\r\n//         });\r\n//         setCommentsMap(initMap);\r\n//       } catch (e) {\r\n//         console.error(e);\r\n//         setError(`Failed to load accounts: ${e.message}`);\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     let m = location.state?.month;\r\n//     let y = location.state?.year;\r\n//     if (!m || !y) {\r\n//       const sm = sessionStorage.getItem('lastFetchedAccountMonth');\r\n//       const sy = sessionStorage.getItem('lastFetchedAccountYear');\r\n//       if (sm && sy) {\r\n//         m = +sm;\r\n//         y = +sy;\r\n//       }\r\n//     }\r\n\r\n//     if (m && y) {\r\n//       if (m !== activeMonth || y !== activeYear || accounts.length === 0) {\r\n//         setActiveMonth(m);\r\n//         setActiveYear(y);\r\n//         sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n//         sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n\r\n//         fetchAccountData(m, y);\r\n//       }\r\n//     } else {\r\n//       setError('Missing month or year. Please go back.');\r\n//       setLoading(false);\r\n//     }\r\n//   }, [location.state, activeMonth, activeYear, accounts.length]);\r\n\r\n//   // 2) Initialize & destroy DataTable\r\n//   useEffect(() => {\r\n//     if (!loading && accounts.length > 0 && tableRef.current) {\r\n//       const $tbl = $(tableRef.current);\r\n//       if ($.fn.DataTable.isDataTable($tbl)) {\r\n//         $tbl.DataTable().destroy();\r\n//       }\r\n//       $tbl.DataTable({\r\n//         paging: true,\r\n//         searching: true,\r\n//         ordering: true,\r\n//         info: true,\r\n//         autoWidth: false\r\n//       });\r\n//     }\r\n//     return () => {\r\n//       if (tableRef.current) {\r\n//         const $tbl = $(tableRef.current);\r\n//         if ($.fn.DataTable.isDataTable($tbl)) {\r\n//           $tbl.DataTable().destroy();\r\n//         }\r\n//       }\r\n//     };\r\n//   }, [loading, accounts]);\r\n\r\n//   // 3) Open modal & set input from commentsMap\r\n//   const openCommentModal = (accId) => {\r\n//     setCurrentAccountId(accId);\r\n//     setCommentInput(commentsMap[accId] || '');\r\n//     setModalVisible(true);\r\n//   };\r\n\r\n//   // 4) Save or update comment and update state\r\n//   const saveComment = async () => {\r\n//     try {\r\n//       const dto = {\r\n//         accId: currentAccountId,\r\n//         month: activeMonth,\r\n//         year: activeYear,\r\n//         comment: commentInput\r\n//       };\r\n//       const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify(dto)\r\n//       });\r\n//       if (!resp.ok) {\r\n//         throw new Error(await resp.text());\r\n//       }\r\n\r\n//       // update local comment map\r\n//       setCommentsMap(m => ({ ...m, [currentAccountId]: commentInput }));\r\n//       // update account list so accountComment is in sync\r\n//       setAccounts(list =>\r\n//         list.map(acc =>\r\n//           acc.accountId === currentAccountId\r\n//             ? { ...acc, accountComment: commentInput }\r\n//             : acc\r\n//         )\r\n//       );\r\n\r\n//       setModalVisible(false);\r\n//     } catch (e) {\r\n//       alert('Error saving comment: ' + e.message);\r\n//     }\r\n//   };\r\n\r\n//   const breadcrumbPath = [\r\n//     { name: 'PMO Dashboard', page: '' },\r\n//     { name: 'Revenue Forecast ‚Äì Early View', page: 'upload' },\r\n//     { name: 'Account Level', page: 'accounts' }\r\n//   ];\r\n\r\n//   return (\r\n//     <div\r\n//       className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n//       style={{\r\n//         background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n//         fontFamily: \"'Poppins', sans-serif'\"\r\n//       }}\r\n//     >\r\n//       <div\r\n//         className=\"card shadow p-4 p-md-5 w-100\"\r\n//         style={{\r\n//           maxWidth: '1100px',\r\n//           backgroundColor: '#ffffffdd',\r\n//           borderRadius: '1rem'\r\n//         }}\r\n//       >\r\n//         <Breadcrumbs path={breadcrumbPath} />\r\n//         <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n//           üè¢ Account Level Overview\r\n//         </h2>\r\n\r\n//         {loading ? (\r\n//           <div className=\"d-flex justify-content-center align-items-center\">\r\n//             <div className=\"spinner-border text-primary\" role=\"status\" />\r\n//             <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n//           </div>\r\n//         ) : error ? (\r\n//           <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n//             <p className=\"fs-4\">Error: {error}</p>\r\n//             <button\r\n//               className=\"btn btn-primary mt-3\"\r\n//               onClick={() => navigate('/upload')}\r\n//             >\r\n//               Go to Upload Page\r\n//             </button>\r\n//           </div>\r\n//         ) : (\r\n//           <div className=\"table-responsive rounded\">\r\n//             <table\r\n//               ref={tableRef}\r\n//               className=\"display table table-hover align-middle table-bordered mb-0\"\r\n//               style={{ width: '100%' }}\r\n//             >\r\n//               <thead\r\n//                 className=\"text-white\"\r\n//                 style={{\r\n//                   background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\r\n//                 }}\r\n//               >\r\n//                 <tr>\r\n//                   <th>Account ID</th>\r\n//                   <th>Account Name</th>\r\n//                   <th>Total Projects</th>\r\n//                   <th>Total Revenue</th>\r\n//                   <th>Forecast Revenue</th>\r\n//                   <th>Revenue Difference</th>\r\n//                   <th className=\"text-center\">Comment</th>\r\n//                   <th className=\"text-center\">View</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {accounts.map(acc => (\r\n//                   <tr key={acc.accountId}>\r\n//                     <td>{acc.accountId}</td>\r\n//                     <td>{acc.accountName}</td>\r\n//                     <td>{acc.totalProjects}</td>\r\n//                     <td>{formatCurrency(acc.totalRevenue)}</td>\r\n//                     <td>{formatCurrency(0)}</td>\r\n//                     <td>{formatCurrency(0)}</td>\r\n//                     <td className=\"text-center\">\r\n//                       <button\r\n//                         className=\"btn btn-sm btn-outline-secondary\"\r\n//                         onClick={() => openCommentModal(acc.accountId)}\r\n//                       >\r\n//                         üí¨\r\n//                       </button>\r\n//                     </td>\r\n//                     <td className=\"text-center\">\r\n//                       <button\r\n//                         className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n//                         onClick={() =>\r\n//                           navigate(`/accounts/${acc.accountId}/projects`, {\r\n//                             state: {\r\n//                               accountId: acc.accountId,\r\n//                               month: activeMonth,\r\n//                               year: activeYear\r\n//                             }\r\n//                           })\r\n//                         }\r\n//                       >\r\n//                         üîç\r\n//                       </button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {modalVisible && (\r\n//         <div\r\n//           className=\"modal fade show d-block\"\r\n//           style={{ backgroundColor: '#00000066' }}\r\n//         >\r\n//           <div className=\"modal-dialog modal-dialog-centered\">\r\n//             <div className=\"modal-content\">\r\n//               <div className=\"modal-header\">\r\n//                 <h5 className=\"modal-title\">\r\n//                   üí¨ Comment for {currentAccountId}\r\n//                 </h5>\r\n//                 <button\r\n//                   type=\"button\"\r\n//                   className=\"btn-close\"\r\n//                   onClick={() => setModalVisible(false)}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"modal-body\">\r\n//                 <textarea\r\n//                   className=\"form-control\"\r\n//                   rows=\"4\"\r\n//                   value={commentInput}\r\n//                   onChange={e => setCommentInput(e.target.value)}\r\n//                 />\r\n//               </div>\r\n//               <div className=\"modal-footer\">\r\n//                 <button\r\n//                   className=\"btn btn-secondary\"\r\n//                   onClick={() => setModalVisible(false)}\r\n//                 >\r\n//                   Cancel\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"btn btn-primary\"\r\n//                   onClick={saveComment}\r\n//                   disabled={!commentInput.trim()}\r\n//                 >\r\n//                   Save\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AccountLevel;\r\n\r\n\r\n\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\n// Utility function to convert month number to month name\r\nconst getMonthName = (monthNumber) => {\r\n  const date = new Date();\r\n  date.setMonth(monthNumber - 1); // Month is 0-indexed for Date object\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n};\r\n\r\nconst AccountLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  // UI state\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeMonthName, setActiveMonthName] = useState(null); // Added state for month name\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits\r\n  } = commonData.currencySettings;\r\n\r\n  const formatCurrency = (v = 0) =>\r\n    v.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits\r\n    });\r\n\r\n  // Load Poppins font\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // 1) Fetch account rows and seed commentsMap\r\n  useEffect(() => {\r\n    const fetchAccountData = async (month, year, monthNameParam) => { // Added monthNameParam\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, monthNameParam }) // Pass monthNameParam here\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(txt || resp.statusText);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setAccounts(list);\r\n\r\n        // seed commentsMap from accountComment field\r\n        const initMap = {};\r\n        list.forEach(acc => {\r\n          if (acc.accountComment) {\r\n            initMap[acc.accountId] = acc.accountComment;\r\n          }\r\n        });\r\n        setCommentsMap(initMap);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load accounts: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    // We will derive monthName directly from 'm' if it's available\r\n    let mn = null;\r\n\r\n    if (!m || !y) {\r\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\r\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\r\n      if (sm && sy) {\r\n        m = +sm;\r\n        y = +sy;\r\n      }\r\n    }\r\n\r\n    if (m && y) {\r\n      // Derive monthName from the numerical month\r\n      mn = getMonthName(m);\r\n\r\n      if (m !== activeMonth || y !== activeYear || accounts.length === 0) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveMonthName(mn); // Set the derived month name\r\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n\r\n        fetchAccountData(m, y, mn); // Pass the derived month name to the fetch function\r\n      }\r\n    } else {\r\n      setError('Missing month or year. Please go back.');\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, activeMonth, activeYear, accounts.length]); // Dependencies unchanged as month name is derived\r\n\r\n  // 2) Initialize & destroy DataTable\r\n  useEffect(() => {\r\n    if (!loading && accounts.length > 0 && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n      }\r\n      $tbl.DataTable({\r\n        paging: true,\r\n        searching: true,\r\n        ordering: true,\r\n        info: true,\r\n        autoWidth: false\r\n      });\r\n    }\r\n    return () => {\r\n      if (tableRef.current) {\r\n        const $tbl = $(tableRef.current);\r\n        if ($.fn.DataTable.isDataTable($tbl)) {\r\n          $tbl.DataTable().destroy();\r\n        }\r\n      }\r\n    };\r\n  }, [loading, accounts]);\r\n\r\n  // 3) Open modal & set input from commentsMap\r\n  const openCommentModal = (accId) => {\r\n    setCurrentAccountId(accId);\r\n    setCommentInput(commentsMap[accId] || '');\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // 4) Save or update comment and update state\r\n  const saveComment = async () => {\r\n    try {\r\n      const dto = {\r\n        accId: currentAccountId,\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        comment: commentInput\r\n      };\r\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dto)\r\n      });\r\n      if (!resp.ok) {\r\n        throw new Error(await resp.text());\r\n      }\r\n\r\n      // update local comment map\r\n      setCommentsMap(m => ({ ...m, [currentAccountId]: commentInput }));\r\n      // update account list so accountComment is in sync\r\n      setAccounts(list =>\r\n        list.map(acc =>\r\n          acc.accountId === currentAccountId\r\n            ? { ...acc, accountComment: commentInput }\r\n            : acc\r\n        )\r\n      );\r\n\r\n      setModalVisible(false);\r\n    } catch (e) {\r\n      alert('Error saving comment: ' + e.message);\r\n    }\r\n  };\r\n\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast ‚Äì Early View', page: 'upload' },\r\n    { name: 'Account Level', page: 'accounts' }\r\n  ];\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif'\"\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem'\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n        <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n          üè¢ Account Level Overview\r\n          {activeMonthName && activeYear && ( // Display month name and year\r\n            <span className=\"ms-2 text-primary\">({activeMonthName} {activeYear})</span>\r\n          )}\r\n        </h2>\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\" />\r\n            <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')}\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              ref={tableRef}\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th>Account ID</th>\r\n                  <th>Account Name</th>\r\n                  <th>Total Projects</th>\r\n                  <th>Total Revenue</th>\r\n                  <th>Forecast Revenue</th>\r\n                  <th>Revenue Difference</th>\r\n                  <th className=\"text-center\">Comment</th>\r\n                  <th className=\"text-center\">View</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {accounts.map(acc => (\r\n                  <tr key={acc.accountId}>\r\n                    <td>{acc.accountId}</td>\r\n                    <td>{acc.accountName}</td>\r\n                    <td>{acc.totalProjects}</td>\r\n                    <td>{formatCurrency(acc.totalRevenue)}</td>\r\n                    <td>{formatCurrency(acc.forecastNetRevenue)}</td>\r\n                    <td>{formatCurrency(acc.difference)}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-secondary\"\r\n                        onClick={() => openCommentModal(acc.accountId)}\r\n                      >\r\n                        üí¨\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                        onClick={() =>\r\n                          navigate(`/accounts/${acc.accountId}/projects`, {\r\n                            state: {\r\n                              accountId: acc.accountId,\r\n                              month: activeMonth,\r\n                              year: activeYear,\r\n                              monthName: activeMonthName // Pass the month name to project level\r\n                            }\r\n                          })\r\n                        }\r\n                      >\r\n                        üîç\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {modalVisible && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: '#00000066' }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">\r\n                  üí¨ Comment for {currentAccountId}\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModalVisible(false)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  value={commentInput}\r\n                  onChange={e => setCommentInput(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setModalVisible(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={saveComment}\r\n                  disabled={!commentInput.trim()}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountLevel;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}