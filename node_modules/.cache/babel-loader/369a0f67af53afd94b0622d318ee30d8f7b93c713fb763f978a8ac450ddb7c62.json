{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\Frontend\\\\Revenue-forecast\\\\src\\\\components\\\\Details\\\\AccountLevel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport $ from 'jquery';\nimport 'datatables.net';\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\nimport Breadcrumbs from '../Breadcrumbs';\nimport commonData from '../../data/commonData.json';\n\n// Utility to convert month number to month name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getMonthName = monthNumber => {\n  const date = new Date();\n  date.setMonth(monthNumber - 1);\n  return date.toLocaleString('en-US', {\n    month: 'long'\n  });\n};\nconst AccountLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const tableRef = useRef(null);\n\n  // UI state\n  const [accounts, setAccounts] = useState([]);\n  const [commentsMap, setCommentsMap] = useState({});\n  const [modalVisible, setModalVisible] = useState(false);\n  const [currentAccountId, setCurrentAccountId] = useState(null);\n  const [commentInput, setCommentInput] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Active filters\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeMonthName, setActiveMonthName] = useState(null);\n  const [activeSbu, setActiveSbu] = useState(null);\n\n  // Column filters and filtered rows (added)\n  const [columnFilters, setColumnFilters] = useState({});\n  const [filteredAccounts, setFilteredAccounts] = useState([]);\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Currency formatter\n  const {\n    locale,\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  } = commonData.currencySettings;\n  const formatCurrency = (value = 0) => value.toLocaleString(locale, {\n    style: 'currency',\n    currency,\n    minimumFractionDigits,\n    maximumFractionDigits\n  });\n\n  // Load Poppins font\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n\n  // Fetch accounts when filters change\n  useEffect(() => {\n    var _location$state, _location$state2, _location$state3;\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\n      setLoading(true);\n      setError(null);\n      try {\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            month,\n            year,\n            monthNameParam,\n            sbu\n          })\n        });\n        if (!resp.ok) {\n          const txt = await resp.text();\n          throw new Error(txt || resp.statusText);\n        }\n        const data = await resp.json();\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\n        setAccounts(list);\n\n        // seed comments map\n        const initMap = {};\n        list.forEach(acc => {\n          if (acc.accountComment) {\n            initMap[acc.accountId] = acc.accountComment;\n          }\n        });\n        setCommentsMap(initMap);\n      } catch (e) {\n        console.error(e);\n        setError(`Failed to load accounts: ${e.message}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Read from React state, sessionStorage, or URL query\n    const qs = new URLSearchParams(location.search);\n    let m = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let y = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let s = (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.sbu;\n    if (!m) {\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\n      const qm = qs.get('month');\n      m = sm !== null && sm !== void 0 ? sm : qm;\n    }\n    if (!y) {\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\n      const qy = qs.get('year');\n      y = sy !== null && sy !== void 0 ? sy : qy;\n    }\n    if (!s) {\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\n      const qsS = qs.get('sbu');\n      s = ss !== null && ss !== void 0 ? ss : qsS;\n    }\n\n    // Normalize numeric values\n    m = m ? parseInt(m, 10) : null;\n    y = y ? parseInt(y, 10) : null;\n    if (m && y && s) {\n      const mn = getMonthName(m);\n      // only refetch if any filter changed or first load\n      if (m !== activeMonth || y !== activeYear || s !== activeSbu || accounts.length === 0) {\n        setActiveMonth(m);\n        setActiveYear(y);\n        setActiveMonthName(mn);\n        setActiveSbu(s);\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\n        fetchAccountData(m, y, mn, s);\n      }\n    } else {\n      setError('Missing month, year or SBU. Please navigate here with those parameters.');\n      setLoading(false);\n    }\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\n\n  // Build unique options for a given column (added)\n  const getUniqueOptions = columnKey => {\n    const options = accounts.map(acc => acc[columnKey]);\n    const unique = Array.from(new Set(options));\n    // Natural sort: numbers numerically, strings lexicographically\n    unique.sort((a, b) => {\n      const aNum = typeof a === 'number';\n      const bNum = typeof b === 'number';\n      if (aNum && bNum) return a - b;\n      return String(a).localeCompare(String(b));\n    });\n    return ['All', ...unique];\n  };\n\n  // Handle dropdown change (added)\n  const handleFilterChange = (columnKey, value) => {\n    setColumnFilters(prev => ({\n      ...prev,\n      [columnKey]: value === 'All' ? null : value\n    }));\n  };\n\n  // Numeric-aware filtering (added)\n  const applyFilters = (rows, filters) => {\n    const isNumericLike = v => {\n      if (v === null || v === undefined) return false;\n      if (typeof v === 'number') return true;\n      if (typeof v === 'string') {\n        const s = v.trim();\n        if (s === '') return false;\n        return !Number.isNaN(Number(s));\n      }\n      return false;\n    };\n    const nearlyEqual = (a, b, eps = 1e-6) => Math.abs(a - b) < eps;\n    return rows.filter(row => Object.keys(filters).every(key => {\n      const filterValue = filters[key];\n      if (filterValue === null || filterValue === undefined) return true;\n      const rowValue = row[key];\n      if (rowValue === null || rowValue === undefined) return false;\n      if (isNumericLike(rowValue) && isNumericLike(filterValue)) {\n        return nearlyEqual(Number(rowValue), Number(filterValue));\n      }\n      return String(rowValue).trim().toLowerCase() === String(filterValue).trim().toLowerCase();\n    }));\n  };\n\n  // Recompute filtered rows (added)\n  useEffect(() => {\n    setFilteredAccounts(applyFilters(accounts, columnFilters));\n  }, [accounts, columnFilters]);\n\n  // Initialize & destroy DataTable (use filteredAccounts) (updated)\n  useEffect(() => {\n    if (!loading && filteredAccounts.length > 0 && tableRef.current) {\n      const $tbl = $(tableRef.current);\n      if ($.fn.DataTable.isDataTable($tbl)) {\n        $tbl.DataTable().destroy();\n      }\n      $tbl.DataTable({\n        paging: true,\n        searching: true,\n        ordering: true,\n        order: [],\n        info: true,\n        autoWidth: false\n      });\n    }\n    return () => {\n      if (tableRef.current) {\n        const $tbl = $(tableRef.current);\n        if ($.fn.DataTable.isDataTable($tbl)) {\n          $tbl.DataTable().destroy();\n        }\n      }\n    };\n  }, [loading, filteredAccounts]);\n\n  // Download Excel (.xls) of current table view (respects DataTables filters/search)\n  const handleDownloadExcel = () => {\n    const $tbl = $(tableRef.current);\n    let headers = ['Account ID', 'Account Name', 'Total Projects', 'Total Revenue', 'Forecast Revenue', 'Revenue Difference'];\n    let rows = [];\n    if ($.fn.DataTable.isDataTable($tbl)) {\n      const dt = $tbl.DataTable();\n\n      // Read headers (first 6 columns) – strip selects text\n      headers = $tbl.find('thead th').slice(0, 6).map(function () {\n        const th = $(this).clone();\n        th.find('select').remove();\n        return th.text().trim();\n      }).get();\n\n      // Read visible rows (filtered) and grab displayed text for first 6 cells\n      const nodes = dt.rows({\n        search: 'applied'\n      }).nodes().toArray();\n      rows = nodes.map(tr => Array.from(tr.cells).slice(0, 6).map(td => td.textContent.trim()));\n    } else {\n      // Fallback: build from filtered state\n      rows = filteredAccounts.map(acc => {\n        var _acc$accountId, _acc$accountName, _acc$totalProjects, _acc$totalRevenue, _acc$forecastNetReven, _acc$difference;\n        return [String((_acc$accountId = acc.accountId) !== null && _acc$accountId !== void 0 ? _acc$accountId : ''), String((_acc$accountName = acc.accountName) !== null && _acc$accountName !== void 0 ? _acc$accountName : ''), String((_acc$totalProjects = acc.totalProjects) !== null && _acc$totalProjects !== void 0 ? _acc$totalProjects : ''), formatCurrency((_acc$totalRevenue = acc.totalRevenue) !== null && _acc$totalRevenue !== void 0 ? _acc$totalRevenue : 0), formatCurrency((_acc$forecastNetReven = acc.forecastNetRevenue) !== null && _acc$forecastNetReven !== void 0 ? _acc$forecastNetReven : 0), formatCurrency((_acc$difference = acc.difference) !== null && _acc$difference !== void 0 ? _acc$difference : 0)];\n      });\n    }\n\n    // Build simple HTML table which Excel can open as .xls\n    const theadHtml = '<tr>' + headers.map(h => `<th>${h.replace(/&/g, '&amp;').replace(/</g, '&lt;')}</th>`).join('') + '</tr>';\n    const tbodyHtml = rows.map(r => '<tr>' + r.map(v => `<td>${String(v).replace(/&/g, '&amp;').replace(/</g, '&lt;')}</td>`).join('') + '</tr>').join('');\n    const html = `<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" ` + `xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ` + `xmlns=\"http://www.w3.org/TR/REC-html40\">` + `<head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets>` + `<x:ExcelWorksheet><x:Name>AccountLevel</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet>` + `</x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head>` + `<body><table border=\"1\"><thead>${theadHtml}</thead><tbody>${tbodyHtml}</tbody></table></body></html>`;\n    const blob = new Blob([html], {\n      type: 'application/vnd.ms-excel;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    const fileName = `AccountLevel_${activeSbu || 'All'}_${activeMonthName || ''}${activeYear || ''}.xls`;\n    a.href = url;\n    a.download = fileName.replace(/\\s+/g, '_');\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  // Open comment modal\n  const openCommentModal = accId => {\n    setCurrentAccountId(accId);\n    setCommentInput(commentsMap[accId] || '');\n    setModalVisible(true);\n  };\n\n  // Save or update comment\n  const saveComment = async () => {\n    try {\n      const dto = {\n        accId: currentAccountId,\n        month: activeMonth,\n        year: activeYear,\n        comment: commentInput\n      };\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dto)\n      });\n      if (!resp.ok) {\n        throw new Error(await resp.text());\n      }\n      // update local maps\n      setCommentsMap(m => ({\n        ...m,\n        [currentAccountId]: commentInput\n      }));\n      setAccounts(list => list.map(acc => acc.accountId === currentAccountId ? {\n        ...acc,\n        accountComment: commentInput\n      } : acc));\n      setModalVisible(false);\n    } catch (e) {\n      alert('Error saving comment: ' + e.message);\n    }\n  };\n\n  // Dynamic breadcrumb path\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, ...(activeSbu ? [{\n    name: `${activeSbu} SBU Level`,\n    page: 'sbu'\n  }] : []), {\n    name: 'Account Level',\n    page: 'accounts'\n  }].filter(Boolean);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1100px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-3 mb-md-0 fw-semibold text-dark\",\n          children: [\"\\uD83C\\uDFE2 Account Level Overview \\u2013 \", activeSbu, activeMonthName && activeYear && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-2 text-primary\",\n            children: [\"(\", activeMonthName, \" \", activeYear, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleDownloadExcel,\n          disabled: loading || !!error,\n          title: \"Download current table view as Excel\",\n          className: \"btn\",\n          style: {\n            backgroundColor: '#ffffff',\n            border: '1px solid #198754',\n            color: '#198754'\n          },\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border text-primary\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"ms-3 text-primary\",\n          children: \"Loading Account Data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column justify-content-center align-items-center text-danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"fs-4\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-3\",\n          onClick: () => navigate('/upload'),\n          children: \"Go to Upload Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          ref: tableRef,\n          className: \"display table table-hover align-middle table-bordered mb-0\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #1d4ed8, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Account ID\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('accountId', e.target.value),\n                  value: columnFilters.accountId || 'All',\n                  children: getUniqueOptions('accountId').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, String(opt), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Account Name\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('accountName', e.target.value),\n                  value: columnFilters.accountName || 'All',\n                  children: getUniqueOptions('accountName').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, String(opt), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Total Projects\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('totalProjects', e.target.value),\n                  value: columnFilters.totalProjects || 'All',\n                  children: getUniqueOptions('totalProjects').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, String(opt), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Total Revenue\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('totalRevenue', e.target.value),\n                  value: columnFilters.totalRevenue || 'All',\n                  children: getUniqueOptions('totalRevenue').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, String(opt), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Forecast Revenue\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('forecastNetRevenue', e.target.value),\n                  value: columnFilters.forecastNetRevenue || 'All',\n                  children: getUniqueOptions('forecastNetRevenue').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, String(opt), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: [\"Revenue Difference\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-select form-select-sm mt-1\",\n                  onChange: e => handleFilterChange('difference', e.target.value),\n                  value: columnFilters.difference || 'All',\n                  children: getUniqueOptions('difference').map(opt => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: opt,\n                    children: opt\n                  }, String(opt), false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [filteredAccounts.map(acc => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: acc.totalProjects\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.totalRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.forecastNetRevenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatCurrency(acc.difference)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-secondary\",\n                  onClick: () => openCommentModal(acc.accountId),\n                  children: \"\\uD83D\\uDCAC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  onClick: () => navigate(`/accounts/${acc.accountId}/project-types`, {\n                    state: {\n                      accId: acc.accountId,\n                      month: activeMonth,\n                      year: activeYear,\n                      monthName: activeMonthName,\n                      sbu: activeSbu\n                    }\n                  }),\n                  title: \"View Project Types\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 21\n              }, this)]\n            }, acc.accountId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 19\n            }, this)), filteredAccounts.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: 8,\n                className: \"text-center text-muted py-4\",\n                children: \"No results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade show d-block\",\n      style: {\n        backgroundColor: '#00000066'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-dialog-centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: [\"\\uD83D\\uDCAC Comment for \", currentAccountId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setModalVisible(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"form-control\",\n              rows: \"4\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => setModalVisible(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: saveComment,\n              disabled: !commentInput.trim(),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 370,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountLevel, \"zlTDdN1cYkNeTvxhytiyJcR4hFI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AccountLevel;\nexport default AccountLevel;\nvar _c;\n$RefreshReg$(_c, \"AccountLevel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","useLocation","$","Breadcrumbs","commonData","jsxDEV","_jsxDEV","getMonthName","monthNumber","date","Date","setMonth","toLocaleString","month","AccountLevel","_s","navigate","location","tableRef","accounts","setAccounts","commentsMap","setCommentsMap","modalVisible","setModalVisible","currentAccountId","setCurrentAccountId","commentInput","setCommentInput","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeMonthName","setActiveMonthName","activeSbu","setActiveSbu","columnFilters","setColumnFilters","filteredAccounts","setFilteredAccounts","BACKEND_URL","locale","currency","minimumFractionDigits","maximumFractionDigits","currencySettings","formatCurrency","value","style","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","_location$state3","fetchAccountData","year","monthNameParam","sbu","resp","fetch","method","headers","JSON","stringify","ok","txt","text","Error","statusText","data","json","list","Array","isArray","filter","Boolean","initMap","forEach","acc","accountComment","accountId","e","console","message","qs","URLSearchParams","search","m","state","y","s","sm","sessionStorage","getItem","qm","get","sy","qy","ss","qsS","parseInt","mn","length","setItem","toString","getUniqueOptions","columnKey","options","map","unique","from","Set","sort","a","b","aNum","bNum","String","localeCompare","handleFilterChange","prev","applyFilters","rows","filters","isNumericLike","v","undefined","trim","Number","isNaN","nearlyEqual","eps","Math","abs","row","Object","keys","every","key","filterValue","rowValue","toLowerCase","current","$tbl","fn","DataTable","isDataTable","destroy","paging","searching","ordering","order","info","autoWidth","handleDownloadExcel","dt","find","slice","th","clone","remove","nodes","toArray","tr","cells","td","textContent","_acc$accountId","_acc$accountName","_acc$totalProjects","_acc$totalRevenue","_acc$forecastNetReven","_acc$difference","accountName","totalProjects","totalRevenue","forecastNetRevenue","difference","theadHtml","h","replace","join","tbodyHtml","r","html","blob","Blob","type","url","URL","createObjectURL","fileName","download","click","revokeObjectURL","openCommentModal","accId","saveComment","dto","comment","alert","breadcrumbPath","name","page","className","background","children","maxWidth","backgroundColor","borderRadius","path","_jsxFileName","lineNumber","columnNumber","onClick","disabled","title","border","color","role","ref","width","onChange","target","opt","monthName","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/Frontend/Revenue-forecast/src/components/Details/AccountLevel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport 'datatables.net';\r\nimport 'datatables.net-dt/css/dataTables.dataTables.min.css';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport commonData from '../../data/commonData.json';\r\n\r\n// Utility to convert month number to month name\r\nconst getMonthName = (monthNumber) => {\r\n  const date = new Date();\r\n  date.setMonth(monthNumber - 1);\r\n  return date.toLocaleString('en-US', { month: 'long' });\r\n};\r\n\r\nconst AccountLevel = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const tableRef = useRef(null);\r\n\r\n  // UI state\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [commentsMap, setCommentsMap] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [currentAccountId, setCurrentAccountId] = useState(null);\r\n  const [commentInput, setCommentInput] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Active filters\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeMonthName, setActiveMonthName] = useState(null);\r\n  const [activeSbu, setActiveSbu] = useState(null);\r\n\r\n  // Column filters and filtered rows (added)\r\n  const [columnFilters, setColumnFilters] = useState({});\r\n  const [filteredAccounts, setFilteredAccounts] = useState([]);\r\n\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Currency formatter\r\n  const {\r\n    locale,\r\n    currency,\r\n    minimumFractionDigits,\r\n    maximumFractionDigits,\r\n  } = commonData.currencySettings;\r\n\r\n  const formatCurrency = (value = 0) =>\r\n    value.toLocaleString(locale, {\r\n      style: 'currency',\r\n      currency,\r\n      minimumFractionDigits,\r\n      maximumFractionDigits,\r\n    });\r\n\r\n  // Load Poppins font\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  // Fetch accounts when filters change\r\n  useEffect(() => {\r\n    const fetchAccountData = async (month, year, monthNameParam, sbu) => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const resp = await fetch(`${BACKEND_URL}/api/account`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({ month, year, monthNameParam, sbu }),\r\n        });\r\n        if (!resp.ok) {\r\n          const txt = await resp.text();\r\n          throw new Error(txt || resp.statusText);\r\n        }\r\n        const data = await resp.json();\r\n        const list = Array.isArray(data) ? data : [data].filter(Boolean);\r\n        setAccounts(list);\r\n\r\n        // seed comments map\r\n        const initMap = {};\r\n        list.forEach((acc) => {\r\n          if (acc.accountComment) {\r\n            initMap[acc.accountId] = acc.accountComment;\r\n          }\r\n        });\r\n        setCommentsMap(initMap);\r\n      } catch (e) {\r\n        console.error(e);\r\n        setError(`Failed to load accounts: ${e.message}`);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Read from React state, sessionStorage, or URL query\r\n    const qs = new URLSearchParams(location.search);\r\n    let m = location.state?.month;\r\n    let y = location.state?.year;\r\n    let s = location.state?.sbu;\r\n\r\n    if (!m) {\r\n      const sm = sessionStorage.getItem('lastFetchedAccountMonth');\r\n      const qm = qs.get('month');\r\n      m = sm ?? qm;\r\n    }\r\n    if (!y) {\r\n      const sy = sessionStorage.getItem('lastFetchedAccountYear');\r\n      const qy = qs.get('year');\r\n      y = sy ?? qy;\r\n    }\r\n    if (!s) {\r\n      const ss = sessionStorage.getItem('lastFetchedAccountSbu');\r\n      const qsS = qs.get('sbu');\r\n      s = ss ?? qsS;\r\n    }\r\n\r\n    // Normalize numeric values\r\n    m = m ? parseInt(m, 10) : null;\r\n    y = y ? parseInt(y, 10) : null;\r\n\r\n    if (m && y && s) {\r\n      const mn = getMonthName(m);\r\n      // only refetch if any filter changed or first load\r\n      if (\r\n        m !== activeMonth ||\r\n        y !== activeYear ||\r\n        s !== activeSbu ||\r\n        accounts.length === 0\r\n      ) {\r\n        setActiveMonth(m);\r\n        setActiveYear(y);\r\n        setActiveMonthName(mn);\r\n        setActiveSbu(s);\r\n\r\n        sessionStorage.setItem('lastFetchedAccountMonth', m.toString());\r\n        sessionStorage.setItem('lastFetchedAccountYear', y.toString());\r\n        sessionStorage.setItem('lastFetchedAccountSbu', s);\r\n\r\n        fetchAccountData(m, y, mn, s);\r\n      }\r\n    } else {\r\n      setError(\r\n        'Missing month, year or SBU. Please navigate here with those parameters.'\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [location.state, location.search, activeMonth, activeYear, activeSbu, accounts.length]);\r\n\r\n  // Build unique options for a given column (added)\r\n  const getUniqueOptions = (columnKey) => {\r\n    const options = accounts.map(acc => acc[columnKey]);\r\n    const unique = Array.from(new Set(options));\r\n    // Natural sort: numbers numerically, strings lexicographically\r\n    unique.sort((a, b) => {\r\n      const aNum = typeof a === 'number';\r\n      const bNum = typeof b === 'number';\r\n      if (aNum && bNum) return a - b;\r\n      return String(a).localeCompare(String(b));\r\n    });\r\n    return ['All', ...unique];\r\n  };\r\n\r\n  // Handle dropdown change (added)\r\n  const handleFilterChange = (columnKey, value) => {\r\n    setColumnFilters(prev => ({\r\n      ...prev,\r\n      [columnKey]: value === 'All' ? null : value\r\n    }));\r\n  };\r\n\r\n  // Numeric-aware filtering (added)\r\n  const applyFilters = (rows, filters) => {\r\n    const isNumericLike = (v) => {\r\n      if (v === null || v === undefined) return false;\r\n      if (typeof v === 'number') return true;\r\n      if (typeof v === 'string') {\r\n        const s = v.trim();\r\n        if (s === '') return false;\r\n        return !Number.isNaN(Number(s));\r\n      }\r\n      return false;\r\n    };\r\n    const nearlyEqual = (a, b, eps = 1e-6) => Math.abs(a - b) < eps;\r\n\r\n    return rows.filter(row =>\r\n      Object.keys(filters).every(key => {\r\n        const filterValue = filters[key];\r\n        if (filterValue === null || filterValue === undefined) return true;\r\n\r\n        const rowValue = row[key];\r\n        if (rowValue === null || rowValue === undefined) return false;\r\n\r\n        if (isNumericLike(rowValue) && isNumericLike(filterValue)) {\r\n          return nearlyEqual(Number(rowValue), Number(filterValue));\r\n        }\r\n        return String(rowValue).trim().toLowerCase() === String(filterValue).trim().toLowerCase();\r\n      })\r\n    );\r\n  };\r\n\r\n  // Recompute filtered rows (added)\r\n  useEffect(() => {\r\n    setFilteredAccounts(applyFilters(accounts, columnFilters));\r\n  }, [accounts, columnFilters]);\r\n\r\n  // Initialize & destroy DataTable (use filteredAccounts) (updated)\r\n  useEffect(() => {\r\n    if (!loading && filteredAccounts.length > 0 && tableRef.current) {\r\n      const $tbl = $(tableRef.current);\r\n      if ($.fn.DataTable.isDataTable($tbl)) {\r\n        $tbl.DataTable().destroy();\r\n      }\r\n      $tbl.DataTable({\r\n        paging: true,\r\n        searching: true,\r\n        ordering: true,\r\n        order: [],\r\n        info: true,\r\n        autoWidth: false,\r\n      });\r\n    }\r\n    return () => {\r\n      if (tableRef.current) {\r\n        const $tbl = $(tableRef.current);\r\n        if ($.fn.DataTable.isDataTable($tbl)) {\r\n          $tbl.DataTable().destroy();\r\n        }\r\n      }\r\n    };\r\n  }, [loading, filteredAccounts]);\r\n\r\n  // Download Excel (.xls) of current table view (respects DataTables filters/search)\r\n  const handleDownloadExcel = () => {\r\n    const $tbl = $(tableRef.current);\r\n    let headers = [\r\n      'Account ID',\r\n      'Account Name',\r\n      'Total Projects',\r\n      'Total Revenue',\r\n      'Forecast Revenue',\r\n      'Revenue Difference',\r\n    ];\r\n    let rows = [];\r\n\r\n    if ($.fn.DataTable.isDataTable($tbl)) {\r\n      const dt = $tbl.DataTable();\r\n\r\n      // Read headers (first 6 columns) – strip selects text\r\n      headers = $tbl\r\n        .find('thead th')\r\n        .slice(0, 6)\r\n        .map(function () {\r\n          const th = $(this).clone();\r\n          th.find('select').remove();\r\n          return th.text().trim();\r\n        })\r\n        .get();\r\n\r\n      // Read visible rows (filtered) and grab displayed text for first 6 cells\r\n      const nodes = dt.rows({ search: 'applied' }).nodes().toArray();\r\n      rows = nodes.map((tr) =>\r\n        Array.from(tr.cells)\r\n          .slice(0, 6)\r\n          .map((td) => td.textContent.trim())\r\n      );\r\n    } else {\r\n      // Fallback: build from filtered state\r\n      rows = filteredAccounts.map((acc) => [\r\n        String(acc.accountId ?? ''),\r\n        String(acc.accountName ?? ''),\r\n        String(acc.totalProjects ?? ''),\r\n        formatCurrency(acc.totalRevenue ?? 0),\r\n        formatCurrency(acc.forecastNetRevenue ?? 0),\r\n        formatCurrency(acc.difference ?? 0),\r\n      ]);\r\n    }\r\n\r\n    // Build simple HTML table which Excel can open as .xls\r\n    const theadHtml =\r\n      '<tr>' + headers.map((h) => `<th>${h.replace(/&/g, '&amp;').replace(/</g, '&lt;')}</th>`).join('') + '</tr>';\r\n    const tbodyHtml = rows\r\n      .map(\r\n        (r) =>\r\n          '<tr>' +\r\n          r\r\n            .map((v) => `<td>${String(v).replace(/&/g, '&amp;').replace(/</g, '&lt;')}</td>`)\r\n            .join('') +\r\n          '</tr>'\r\n      )\r\n      .join('');\r\n\r\n    const html =\r\n      `<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" ` +\r\n      `xmlns:x=\"urn:schemas-microsoft-com:office:excel\" ` +\r\n      `xmlns=\"http://www.w3.org/TR/REC-html40\">` +\r\n      `<head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets>` +\r\n      `<x:ExcelWorksheet><x:Name>AccountLevel</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet>` +\r\n      `</x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head>` +\r\n      `<body><table border=\"1\"><thead>${theadHtml}</thead><tbody>${tbodyHtml}</tbody></table></body></html>`;\r\n\r\n    const blob = new Blob([html], { type: 'application/vnd.ms-excel;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    const fileName = `AccountLevel_${activeSbu || 'All'}_${activeMonthName || ''}${activeYear || ''}.xls`;\r\n    a.href = url;\r\n    a.download = fileName.replace(/\\s+/g, '_');\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    a.remove();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Open comment modal\r\n  const openCommentModal = (accId) => {\r\n    setCurrentAccountId(accId);\r\n    setCommentInput(commentsMap[accId] || '');\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // Save or update comment\r\n  const saveComment = async () => {\r\n    try {\r\n      const dto = {\r\n        accId: currentAccountId,\r\n        month: activeMonth,\r\n        year: activeYear,\r\n        comment: commentInput,\r\n      };\r\n      const resp = await fetch(`${BACKEND_URL}/api/account/comment`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(dto),\r\n      });\r\n      if (!resp.ok) {\r\n        throw new Error(await resp.text());\r\n      }\r\n      // update local maps\r\n      setCommentsMap((m) => ({ ...m, [currentAccountId]: commentInput }));\r\n      setAccounts((list) =>\r\n        list.map((acc) =>\r\n          acc.accountId === currentAccountId\r\n            ? { ...acc, accountComment: commentInput }\r\n            : acc\r\n        )\r\n      );\r\n      setModalVisible(false);\r\n    } catch (e) {\r\n      alert('Error saving comment: ' + e.message);\r\n    }\r\n  };\r\n\r\n  // Dynamic breadcrumb path\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    ...(activeSbu ? [{ name: `${activeSbu} SBU Level`, page: 'sbu' }] : []),\r\n    { name: 'Account Level', page: 'accounts' },\r\n  ].filter(Boolean);\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{\r\n          maxWidth: '1100px',\r\n          backgroundColor: '#ffffffdd',\r\n          borderRadius: '1rem',\r\n        }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n\r\n        <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-3\">\r\n          <h2 className=\"mb-3 mb-md-0 fw-semibold text-dark\">\r\n            🏢 Account Level Overview – {activeSbu}\r\n            {activeMonthName && activeYear && (\r\n              <span className=\"ms-2 text-primary\">\r\n                ({activeMonthName} {activeYear})\r\n              </span>\r\n            )}\r\n          </h2>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleDownloadExcel}\r\n            disabled={loading || !!error}\r\n            title=\"Download current table view as Excel\"\r\n            className=\"btn\"\r\n            style={{ backgroundColor: '#ffffff', border: '1px solid #198754', color: '#198754' }}\r\n          >\r\n            Download\r\n          </button>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\" />\r\n            <p className=\"ms-3 text-primary\">Loading Account Data...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"d-flex flex-column justify-content-center align-items-center text-danger\">\r\n            <p className=\"fs-4\">Error: {error}</p>\r\n            <button\r\n              className=\"btn btn-primary mt-3\"\r\n              onClick={() => navigate('/upload')}\r\n            >\r\n              Go to Upload Page\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"table-responsive rounded\">\r\n            <table\r\n              ref={tableRef}\r\n              className=\"display table table-hover align-middle table-bordered mb-0\"\r\n              style={{ width: '100%' }}\r\n            >\r\n              <thead\r\n                className=\"text-white\"\r\n                style={{\r\n                  background: 'linear-gradient(to right, #1d4ed8, #2563eb)',\r\n                }}\r\n              >\r\n                <tr>\r\n                  <th>\r\n                    Account ID\r\n                    <select\r\n                      className=\"form-select form-select-sm mt-1\"\r\n                      onChange={(e) => handleFilterChange('accountId', e.target.value)}\r\n                      value={columnFilters.accountId || 'All'}\r\n                    >\r\n                      {getUniqueOptions('accountId').map(opt => (\r\n                        <option key={String(opt)} value={opt}>{opt}</option>\r\n                      ))}\r\n                    </select>\r\n                  </th>\r\n                  <th>\r\n                    Account Name\r\n                    <select\r\n                      className=\"form-select form-select-sm mt-1\"\r\n                      onChange={(e) => handleFilterChange('accountName', e.target.value)}\r\n                      value={columnFilters.accountName || 'All'}\r\n                    >\r\n                      {getUniqueOptions('accountName').map(opt => (\r\n                        <option key={String(opt)} value={opt}>{opt}</option>\r\n                      ))}\r\n                    </select>\r\n                  </th>\r\n                  <th>\r\n                    Total Projects\r\n                    <select\r\n                      className=\"form-select form-select-sm mt-1\"\r\n                      onChange={(e) => handleFilterChange('totalProjects', e.target.value)}\r\n                      value={columnFilters.totalProjects || 'All'}\r\n                    >\r\n                      {getUniqueOptions('totalProjects').map(opt => (\r\n                        <option key={String(opt)} value={opt}>{opt}</option>\r\n                      ))}\r\n                    </select>\r\n                  </th>\r\n                  <th>\r\n                    Total Revenue\r\n                    <select\r\n                      className=\"form-select form-select-sm mt-1\"\r\n                      onChange={(e) => handleFilterChange('totalRevenue', e.target.value)}\r\n                      value={columnFilters.totalRevenue || 'All'}\r\n                    >\r\n                      {getUniqueOptions('totalRevenue').map(opt => (\r\n                        <option key={String(opt)} value={opt}>{opt}</option>\r\n                      ))}\r\n                    </select>\r\n                  </th>\r\n                  <th>\r\n                    Forecast Revenue\r\n                    <select\r\n                      className=\"form-select form-select-sm mt-1\"\r\n                      onChange={(e) => handleFilterChange('forecastNetRevenue', e.target.value)}\r\n                      value={columnFilters.forecastNetRevenue || 'All'}\r\n                    >\r\n                      {getUniqueOptions('forecastNetRevenue').map(opt => (\r\n                        <option key={String(opt)} value={opt}>{opt}</option>\r\n                      ))}\r\n                    </select>\r\n                  </th>\r\n                  <th>\r\n                    Revenue Difference\r\n                    <select\r\n                      className=\"form-select form-select-sm mt-1\"\r\n                      onChange={(e) => handleFilterChange('difference', e.target.value)}\r\n                      value={columnFilters.difference || 'All'}\r\n                    >\r\n                      {getUniqueOptions('difference').map(opt => (\r\n                        <option key={String(opt)} value={opt}>{opt}</option>\r\n                      ))}\r\n                    </select>\r\n                  </th>\r\n                  <th className=\"text-center\">Comment</th>\r\n                  <th className=\"text-center\">View</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredAccounts.map((acc) => (\r\n                  <tr key={acc.accountId}>\r\n                    <td>{acc.accountId}</td>\r\n                    <td>{acc.accountName}</td>\r\n                    <td>{acc.totalProjects}</td>\r\n                    <td>{formatCurrency(acc.totalRevenue)}</td>\r\n                    <td>{formatCurrency(acc.forecastNetRevenue)}</td>\r\n                    <td>{formatCurrency(acc.difference)}</td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-secondary\"\r\n                        onClick={() => openCommentModal(acc.accountId)}\r\n                      >\r\n                        💬\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <button\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                        onClick={() =>\r\n                          navigate(`/accounts/${acc.accountId}/project-types`, {\r\n                            state: {\r\n                              accId: acc.accountId,\r\n                              month: activeMonth,\r\n                              year: activeYear,\r\n                              monthName: activeMonthName,\r\n                              sbu: activeSbu,\r\n                            },\r\n                          })\r\n                        }\r\n                        title=\"View Project Types\"\r\n                      >\r\n                        🔍\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                {filteredAccounts.length === 0 && (\r\n                  <tr>\r\n                    <td colSpan={8} className=\"text-center text-muted py-4\">No results</td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {modalVisible && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: '#00000066' }}\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">\r\n                  💬 Comment for {currentAccountId}\r\n                </h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  onClick={() => setModalVisible(false)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  value={commentInput}\r\n                  onChange={(e) => setCommentInput(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => setModalVisible(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={saveComment}\r\n                  disabled={!commentInput.trim()}\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountLevel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}