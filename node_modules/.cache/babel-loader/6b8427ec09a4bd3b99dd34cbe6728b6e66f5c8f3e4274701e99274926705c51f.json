{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2374927\\\\OneDrive - Cognizant\\\\Desktop\\\\earlyview\\\\revenue-forecast-ui\\\\timesheet-comparison\\\\src\\\\components\\\\Details\\\\ProjectLevel.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n\n// import { useNavigate, useParams, useLocation } from 'react-router-dom';\n\n// import Breadcrumbs from '../Breadcrumbs';\n\n// const ProjectLevel = () => {\n\n//   const navigate = useNavigate();\n\n//   const { accountId: urlAccountId } = useParams();\n\n//   const location = useLocation();\n\n//   const [projects, setProjects] = useState([]);\n\n//   const [loading, setLoading] = useState(true);\n\n//   const [error, setError] = useState(null);\n\n//   const [activeMonth, setActiveMonth] = useState(null);\n\n//   const [activeYear, setActiveYear] = useState(null);\n\n//   const [activeAccountId, setActiveAccountId] = useState(null);\n\n//   const [activeAccountName, setActiveAccountName] = useState('Loading...');\n\n//   const BACKEND_URL = 'http://localhost:8081';\n\n//   useEffect(() => {\n\n//     const link = document.createElement('link');\n\n//     link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n\n//     link.rel = 'stylesheet';\n\n//     document.head.appendChild(link);\n\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\n\n//   }, []);\n\n//   useEffect(() => {\n\n//     const fetchProjectData = async (month, year, accId) => {\n\n//       setLoading(true);\n\n//       setError(null);\n\n//       const requestBody = {\n\n//         month: month,\n\n//         year: year,\n\n//         accId: accId\n\n//       };\n\n//       console.log(\"Fetching project data with request body (POST):\", requestBody);\n\n//       try {\n\n//         const response = await fetch(`${BACKEND_URL}/api/project`, {\n\n//           method: 'POST',\n\n//           headers: {\n\n//             'Content-Type': 'application/json',\n\n//           },\n\n//           body: JSON.stringify(requestBody),\n\n//         });\n\n//         if (!response.ok) {\n\n//           const errorText = await response.text();\n\n//           throw new Error(`HTTP error! status: ${response.status}, message: ${errorText || response.statusText}`);\n\n//         }\n\n//         const data = await response.json();\n\n//         setProjects(Array.isArray(data) ? data : [data].filter(Boolean));\n\n//         if (data && data.length > 0 && data[0].accountName) {\n\n//           setActiveAccountName(data[0].accountName);\n\n//         } else {\n\n//           // Fallback to Account ID if name not found in project data\n\n//           const storedAccountName = sessionStorage.getItem('lastFetchedAccountName');\n\n//           if (storedAccountName) {\n\n//             setActiveAccountName(storedAccountName);\n\n//           } else {\n\n//             setActiveAccountName(accId);\n\n//           }\n\n//         }\n\n//       } catch (err) {\n\n//         console.error(\"Error fetching project data:\", err);\n\n//         setError(`Failed to load project data: ${err.message || \"Network error\"}`);\n\n//       } finally {\n\n//         setLoading(false);\n\n//       }\n\n//     };\n\n//     let monthToUse = location.state?.month;\n\n//     let yearToUse = location.state?.year;\n\n//     let accountIdToUse = urlAccountId;\n\n//     if (!monthToUse || !yearToUse || !accountIdToUse) {\n\n//       const storedMonth = sessionStorage.getItem('lastFetchedProjectMonth');\n\n//       const storedYear = sessionStorage.getItem('lastFetchedProjectYear');\n\n//       const storedAccountId = sessionStorage.getItem('lastFetchedProjectAccountId');\n\n//       const storedAccountName = sessionStorage.getItem('lastFetchedProjectAccountName');\n\n//       if (storedMonth && storedYear && storedAccountId) {\n\n//         monthToUse = parseInt(storedMonth, 10);\n\n//         yearToUse = parseInt(storedYear, 10);\n\n//         accountIdToUse = storedAccountId;\n\n//         if (storedAccountName) setActiveAccountName(storedAccountName);\n\n//       }\n\n//     }\n\n//     if (monthToUse && yearToUse && accountIdToUse) {\n\n//       if (\n\n//         monthToUse !== activeMonth ||\n\n//         yearToUse !== activeYear ||\n\n//         accountIdToUse !== activeAccountId ||\n\n//         projects.length === 0\n\n//       ) {\n\n//         setActiveMonth(monthToUse);\n\n//         setActiveYear(yearToUse);\n\n//         setActiveAccountId(accountIdToUse);\n\n//         sessionStorage.setItem('lastFetchedProjectMonth', monthToUse.toString());\n\n//         sessionStorage.setItem('lastFetchedProjectYear', yearToUse.toString());\n\n//         sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\n\n//         if (activeAccountName && activeAccountName !== 'Loading...') {\n\n//           sessionStorage.setItem('lastFetchedProjectAccountName', activeAccountName);\n\n//         }\n\n//         fetchProjectData(monthToUse, yearToUse, accountIdToUse);\n\n//       } else {\n\n//         setLoading(false);\n\n//       }\n\n//     } else {\n\n//       setError(\"Missing project context (month, year, or account ID). Please go back and select an account.\");\n\n//       setLoading(false);\n\n//     }\n\n//   }, [location.state, urlAccountId, BACKEND_URL, activeMonth, activeYear, activeAccountId, projects.length, activeAccountName]);\n\n//   const breadcrumbPath = [\n\n//     { name: 'PMO Dashboard', page: '' },\n\n//     { name: 'Revenue Forecast - Early View', page: 'upload' },\n\n//     { name: 'Account Level', page: 'accounts' },\n\n//     { name: `Projects (${activeAccountName})`, page: `accounts/${activeAccountId}/projects` }\n\n//   ];\n\n//   if (loading) {\n\n//     return (\n\n//       <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\n\n//         <div className=\"spinner-border text-primary\" role=\"status\">\n\n//           <span className=\"visually-hidden\">Loading Project Data...</span>\n\n//         </div>\n\n//         <p className=\"ms-3 text-primary\">Loading Project Data...</p>\n\n//       </div>\n\n//     );\n\n//   }\n\n//   if (error) {\n\n//     return (\n\n//       <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\n\n//         <p className=\"fs-4\">Error: {error}</p>\n\n//         <button className=\"btn btn-primary mt-3\" onClick={() => navigate('/accounts')}>\n\n//           Go to Account Level\n\n//         </button>\n\n//       </div>\n\n//     );\n\n//   }\n\n//   return (\n\n//     <div\n\n//       className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\n\n//       style={{\n\n//         background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n\n//         fontFamily: \"'Poppins', sans-serif\"\n\n//       }}\n\n//     >\n\n//       <div\n\n//         className=\"card shadow p-4 p-md-5 w-100\"\n\n//         style={{ maxWidth: '1200px', backgroundColor: '#ffffffdd', borderRadius: '1rem' }}\n\n//       >\n\n//         <Breadcrumbs path={breadcrumbPath} />\n\n//         <h2 className=\"text-center mb-4 fw-semibold text-dark\">\n\n//           üìÅ Project Level Overview {activeAccountId ? `for ${activeAccountName}` : ''}\n\n//         </h2>\n\n//         <div className=\"table-responsive rounded\">\n\n//           <table className=\"table table-hover align-middle table-borderless mb-0\">\n\n//             <thead\n\n//               className=\"text-white\"\n\n//               style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\n\n//             >\n\n//               <tr>\n\n//                 <th className=\"px-3 py-2\">Project ID</th>\n\n//                 <th className=\"px-3 py-2\">Project Name</th>\n\n//                 <th className=\"px-3 py-2\">Account ID</th>\n\n//                 <th className=\"px-3 py-2\">Account Name</th>\n\n//                 <th className=\"px-3 py-2\">Total Associates</th>\n\n//                 <th className=\"px-3 py-2\">Company Hours</th>\n\n//                 <th className=\"px-3 py-2\">Client Hours</th>\n\n//                 <th className=\"px-3 py-2\">Variance Hours</th>\n\n//                 <th className=\"px-3 py-2\">Revenue</th>\n\n//                 <th className=\"px-3 py-2 text-center\">View</th>\n\n//               </tr>\n\n//             </thead>\n\n//             <tbody>\n\n//               {projects.length > 0 ? (\n\n//                 projects.map((project) => (\n\n//                   <tr key={project.projectId} style={{ backgroundColor: '#fdfdfd' }}>\n\n//                     <td className=\"px-3 py-2\">{project.projectId}</td>\n\n//                     <td className=\"px-3 py-2\">{project.projectName}</td>\n\n//                     <td className=\"px-3 py-2\">{project.accountId}</td>\n\n//                     <td className=\"px-3 py-2\">{project.accountName}</td>\n\n//                     <td className=\"px-3 py-2\">{project.totalAssociatesCount}</td>\n\n//                     <td className=\"px-3 py-2\">{project.totalCompanyHours}</td>\n\n//                     <td className=\"px-3 py-2\">{project.totalClientHours}</td>\n\n//                     <td className=\"px-3 py-2\">{project.varianceHours}</td>\n\n//                     <td className=\"px-3 py-2\">${project.revenue.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\n\n//                     <td className=\"px-3 py-2 text-center\">\n\n//                       <button\n\n//                         // Navigate to AssociateLevel, passing projectId, month, year, accountId, accountName\n\n//                         onClick={() => navigate(`/projects/${project.projectId}/associates`, {\n\n//                           state: {\n\n//                             projectId: project.projectId,\n\n//                             projectName: project.projectName, // Pass project name for breadcrumbs\n\n//                             accountId: project.accountId, // Pass account ID\n\n//                             accountName: project.accountName, // Pass account name\n\n//                             month: activeMonth, // Pass the active month\n\n//                             year: activeYear // Pass the active year\n\n//                           }\n\n//                         })}\n\n//                         className=\"btn btn-sm btn-outline-primary rounded-circle\"\n\n//                         title=\"View Associates\"\n\n//                       >\n\n//                         üîç\n\n//                       </button>\n\n//                     </td>\n\n//                   </tr>\n\n//                 ))\n\n//               ) : (\n\n//                 <tr>\n\n//                   <td colSpan=\"10\" className=\"text-center text-muted py-4\">\n\n//                     No projects found for this account and period.\n\n//                   </td>\n\n//                 </tr>\n\n//               )}\n\n//             </tbody>\n\n//           </table>\n\n//         </div>\n\n//       </div>\n\n//     </div>\n\n//   );\n\n// };\n\n// export default ProjectLevel;\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\nimport Breadcrumbs from '../Breadcrumbs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectLevel = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    accountId: urlAccountId\n  } = useParams();\n  const location = useLocation();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeMonth, setActiveMonth] = useState(null);\n  const [activeYear, setActiveYear] = useState(null);\n  const [activeAccountId, setActiveAccountId] = useState(null);\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\n  const BACKEND_URL = 'http://localhost:8081';\n\n  // Helper to format numbers as USD\n  const formatUSD = value => value.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  });\n  useEffect(() => {\n    const link = document.createElement('link');\n    link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\n    link.rel = 'stylesheet';\n    document.head.appendChild(link);\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\n  }, []);\n  useEffect(() => {\n    var _location$state, _location$state2;\n    const fetchProjectData = async (month, year, accId) => {\n      setLoading(true);\n      setError(null);\n      const requestBody = {\n        month,\n        year,\n        accId\n      };\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/project`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(requestBody)\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`HTTP error! status: ${response.status}, message: ${errorText || response.statusText}`);\n        }\n        const data = await response.json();\n        setProjects(Array.isArray(data) ? data : [data].filter(Boolean));\n        if (data && data.length > 0 && data[0].accountName) {\n          setActiveAccountName(data[0].accountName);\n        } else {\n          const storedAccountName = sessionStorage.getItem('lastFetchedProjectAccountName');\n          setActiveAccountName(storedAccountName || accId);\n        }\n      } catch (err) {\n        console.error('Error fetching project data:', err);\n        setError(`Failed to load project data: ${err.message || 'Network error'}`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    let monthToUse = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.month;\n    let yearToUse = (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.year;\n    let accountIdToUse = urlAccountId;\n    if (!monthToUse || !yearToUse || !accountIdToUse) {\n      const storedMonth = sessionStorage.getItem('lastFetchedProjectMonth');\n      const storedYear = sessionStorage.getItem('lastFetchedProjectYear');\n      const storedAccountId = sessionStorage.getItem('lastFetchedProjectAccountId');\n      const storedAccountName = sessionStorage.getItem('lastFetchedProjectAccountName');\n      if (storedMonth && storedYear && storedAccountId) {\n        monthToUse = parseInt(storedMonth, 10);\n        yearToUse = parseInt(storedYear, 10);\n        accountIdToUse = storedAccountId;\n        if (storedAccountName) setActiveAccountName(storedAccountName);\n      }\n    }\n    if (monthToUse && yearToUse && accountIdToUse) {\n      if (monthToUse !== activeMonth || yearToUse !== activeYear || accountIdToUse !== activeAccountId || projects.length === 0) {\n        setActiveMonth(monthToUse);\n        setActiveYear(yearToUse);\n        setActiveAccountId(accountIdToUse);\n        sessionStorage.setItem('lastFetchedProjectMonth', monthToUse.toString());\n        sessionStorage.setItem('lastFetchedProjectYear', yearToUse.toString());\n        sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\n        if (activeAccountName && activeAccountName !== 'Loading...') {\n          sessionStorage.setItem('lastFetchedProjectAccountName', activeAccountName);\n        }\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse);\n      } else {\n        setLoading(false);\n      }\n    } else {\n      setError('Missing project context (month, year, or account ID). Please go back and select an account.');\n      setLoading(false);\n    }\n  }, [location.state, urlAccountId, BACKEND_URL, activeMonth, activeYear, activeAccountId, projects.length, activeAccountName]);\n  const breadcrumbPath = [{\n    name: 'PMO Dashboard',\n    page: ''\n  }, {\n    name: 'Revenue Forecast - Early View',\n    page: 'upload'\n  }, {\n    name: 'Account Level',\n    page: 'accounts'\n  }, {\n    name: `Projects (${activeAccountName})`,\n    page: `accounts/${activeAccountId}/projects`\n  }];\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ms-3 text-primary\",\n        children: \"Loading Project Data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"fs-4\",\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mt-3\",\n        onClick: () => navigate('/accounts'),\n        children: \"Go to Account Level\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-vh-100 d-flex flex-column align-items-center px-3 py-4\",\n    style: {\n      background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\n      fontFamily: \"'Poppins', sans-serif\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow p-4 p-md-5 w-100\",\n      style: {\n        maxWidth: '1200px',\n        backgroundColor: '#ffffffdd',\n        borderRadius: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        path: breadcrumbPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4 fw-semibold text-dark\",\n        children: [\"\\uD83D\\uDCC1 Project Level Overview\", ' ', activeAccountId ? `for ${activeAccountName}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hover align-middle table-borderless mb-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"text-white\",\n            style: {\n              background: 'linear-gradient(to right, #3b82f6, #2563eb)'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Project ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Project Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Account ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Account Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Total Associates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Company Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Client Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Variance Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2\",\n                children: \"Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-3 py-2 text-center\",\n                children: \"View\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                backgroundColor: '#fdfdfd'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.projectId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.accountId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.accountName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 656,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.totalAssociatesCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.totalCompanyHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.totalClientHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: project.varianceHours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2\",\n                children: formatUSD(project.revenue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2 text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => navigate(`/projects/${project.projectId}/associates`, {\n                    state: {\n                      projectId: project.projectId,\n                      projectName: project.projectName,\n                      accountId: project.accountId,\n                      accountName: project.accountName,\n                      month: activeMonth,\n                      year: activeYear\n                    }\n                  }),\n                  className: \"btn btn-sm btn-outline-primary rounded-circle\",\n                  title: \"View Associates\",\n                  children: \"\\uD83D\\uDD0D\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 21\n              }, this)]\n            }, project.projectId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"10\",\n                className: \"text-center text-muted py-4\",\n                children: \"No projects found for this account and period.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 613,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectLevel, \"dtZipBuvP2CxkWJcbftvLuDREZU=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = ProjectLevel;\nexport default ProjectLevel;\nvar _c;\n$RefreshReg$(_c, \"ProjectLevel\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","useLocation","Breadcrumbs","jsxDEV","_jsxDEV","ProjectLevel","_s","navigate","accountId","urlAccountId","location","projects","setProjects","loading","setLoading","error","setError","activeMonth","setActiveMonth","activeYear","setActiveYear","activeAccountId","setActiveAccountId","activeAccountName","setActiveAccountName","BACKEND_URL","formatUSD","value","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","link","document","createElement","href","rel","head","appendChild","body","fontFamily","_location$state","_location$state2","fetchProjectData","month","year","accId","requestBody","response","fetch","method","headers","JSON","stringify","ok","errorText","text","Error","status","statusText","data","json","Array","isArray","filter","Boolean","length","accountName","storedAccountName","sessionStorage","getItem","err","console","message","monthToUse","state","yearToUse","accountIdToUse","storedMonth","storedYear","storedAccountId","parseInt","setItem","toString","breadcrumbPath","name","page","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","maxWidth","backgroundColor","borderRadius","path","map","project","projectId","projectName","totalAssociatesCount","totalCompanyHours","totalClientHours","varianceHours","revenue","title","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/2374927/OneDrive - Cognizant/Desktop/earlyview/revenue-forecast-ui/timesheet-comparison/src/components/Details/ProjectLevel.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n\r\n// import { useNavigate, useParams, useLocation } from 'react-router-dom';\r\n\r\n// import Breadcrumbs from '../Breadcrumbs';\r\n\r\n// const ProjectLevel = () => {\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const { accountId: urlAccountId } = useParams();\r\n\r\n//   const location = useLocation();\r\n\r\n//   const [projects, setProjects] = useState([]);\r\n\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const [activeMonth, setActiveMonth] = useState(null);\r\n\r\n//   const [activeYear, setActiveYear] = useState(null);\r\n\r\n//   const [activeAccountId, setActiveAccountId] = useState(null);\r\n\r\n//   const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n\r\n//   const BACKEND_URL = 'http://localhost:8081';\r\n\r\n//   useEffect(() => {\r\n\r\n//     const link = document.createElement('link');\r\n\r\n//     link.href = 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n\r\n//     link.rel = 'stylesheet';\r\n\r\n//     document.head.appendChild(link);\r\n\r\n//     document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n\r\n//     const fetchProjectData = async (month, year, accId) => {\r\n\r\n//       setLoading(true);\r\n\r\n//       setError(null);\r\n\r\n//       const requestBody = {\r\n\r\n//         month: month,\r\n\r\n//         year: year,\r\n\r\n//         accId: accId\r\n\r\n//       };\r\n\r\n//       console.log(\"Fetching project data with request body (POST):\", requestBody);\r\n\r\n//       try {\r\n\r\n//         const response = await fetch(`${BACKEND_URL}/api/project`, {\r\n\r\n//           method: 'POST',\r\n\r\n//           headers: {\r\n\r\n//             'Content-Type': 'application/json',\r\n\r\n//           },\r\n\r\n//           body: JSON.stringify(requestBody),\r\n\r\n//         });\r\n\r\n//         if (!response.ok) {\r\n\r\n//           const errorText = await response.text();\r\n\r\n//           throw new Error(`HTTP error! status: ${response.status}, message: ${errorText || response.statusText}`);\r\n\r\n//         }\r\n\r\n//         const data = await response.json();\r\n\r\n//         setProjects(Array.isArray(data) ? data : [data].filter(Boolean));\r\n\r\n//         if (data && data.length > 0 && data[0].accountName) {\r\n\r\n//           setActiveAccountName(data[0].accountName);\r\n\r\n//         } else {\r\n\r\n//           // Fallback to Account ID if name not found in project data\r\n\r\n//           const storedAccountName = sessionStorage.getItem('lastFetchedAccountName');\r\n\r\n//           if (storedAccountName) {\r\n\r\n//             setActiveAccountName(storedAccountName);\r\n\r\n//           } else {\r\n\r\n//             setActiveAccountName(accId);\r\n\r\n//           }\r\n\r\n//         }\r\n\r\n//       } catch (err) {\r\n\r\n//         console.error(\"Error fetching project data:\", err);\r\n\r\n//         setError(`Failed to load project data: ${err.message || \"Network error\"}`);\r\n\r\n//       } finally {\r\n\r\n//         setLoading(false);\r\n\r\n//       }\r\n\r\n//     };\r\n\r\n//     let monthToUse = location.state?.month;\r\n\r\n//     let yearToUse = location.state?.year;\r\n\r\n//     let accountIdToUse = urlAccountId;\r\n\r\n//     if (!monthToUse || !yearToUse || !accountIdToUse) {\r\n\r\n//       const storedMonth = sessionStorage.getItem('lastFetchedProjectMonth');\r\n\r\n//       const storedYear = sessionStorage.getItem('lastFetchedProjectYear');\r\n\r\n//       const storedAccountId = sessionStorage.getItem('lastFetchedProjectAccountId');\r\n\r\n//       const storedAccountName = sessionStorage.getItem('lastFetchedProjectAccountName');\r\n\r\n//       if (storedMonth && storedYear && storedAccountId) {\r\n\r\n//         monthToUse = parseInt(storedMonth, 10);\r\n\r\n//         yearToUse = parseInt(storedYear, 10);\r\n\r\n//         accountIdToUse = storedAccountId;\r\n\r\n//         if (storedAccountName) setActiveAccountName(storedAccountName);\r\n\r\n//       }\r\n\r\n//     }\r\n\r\n//     if (monthToUse && yearToUse && accountIdToUse) {\r\n\r\n//       if (\r\n\r\n//         monthToUse !== activeMonth ||\r\n\r\n//         yearToUse !== activeYear ||\r\n\r\n//         accountIdToUse !== activeAccountId ||\r\n\r\n//         projects.length === 0\r\n\r\n//       ) {\r\n\r\n//         setActiveMonth(monthToUse);\r\n\r\n//         setActiveYear(yearToUse);\r\n\r\n//         setActiveAccountId(accountIdToUse);\r\n\r\n//         sessionStorage.setItem('lastFetchedProjectMonth', monthToUse.toString());\r\n\r\n//         sessionStorage.setItem('lastFetchedProjectYear', yearToUse.toString());\r\n\r\n//         sessionStorage.setItem('lastFetchedProjectAccountId', accountIdToUse);\r\n\r\n//         if (activeAccountName && activeAccountName !== 'Loading...') {\r\n\r\n//           sessionStorage.setItem('lastFetchedProjectAccountName', activeAccountName);\r\n\r\n//         }\r\n\r\n//         fetchProjectData(monthToUse, yearToUse, accountIdToUse);\r\n\r\n//       } else {\r\n\r\n//         setLoading(false);\r\n\r\n//       }\r\n\r\n//     } else {\r\n\r\n//       setError(\"Missing project context (month, year, or account ID). Please go back and select an account.\");\r\n\r\n//       setLoading(false);\r\n\r\n//     }\r\n\r\n//   }, [location.state, urlAccountId, BACKEND_URL, activeMonth, activeYear, activeAccountId, projects.length, activeAccountName]);\r\n\r\n//   const breadcrumbPath = [\r\n\r\n//     { name: 'PMO Dashboard', page: '' },\r\n\r\n//     { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n\r\n//     { name: 'Account Level', page: 'accounts' },\r\n\r\n//     { name: `Projects (${activeAccountName})`, page: `accounts/${activeAccountId}/projects` }\r\n\r\n//   ];\r\n\r\n//   if (loading) {\r\n\r\n//     return (\r\n\r\n//       <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n\r\n//         <div className=\"spinner-border text-primary\" role=\"status\">\r\n\r\n//           <span className=\"visually-hidden\">Loading Project Data...</span>\r\n\r\n//         </div>\r\n\r\n//         <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n\r\n//       </div>\r\n\r\n//     );\r\n\r\n//   }\r\n\r\n//   if (error) {\r\n\r\n//     return (\r\n\r\n//       <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n\r\n//         <p className=\"fs-4\">Error: {error}</p>\r\n\r\n//         <button className=\"btn btn-primary mt-3\" onClick={() => navigate('/accounts')}>\r\n\r\n//           Go to Account Level\r\n\r\n//         </button>\r\n\r\n//       </div>\r\n\r\n//     );\r\n\r\n//   }\r\n\r\n//   return (\r\n\r\n//     <div\r\n\r\n//       className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n\r\n//       style={{\r\n\r\n//         background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n\r\n//         fontFamily: \"'Poppins', sans-serif\"\r\n\r\n//       }}\r\n\r\n//     >\r\n\r\n//       <div\r\n\r\n//         className=\"card shadow p-4 p-md-5 w-100\"\r\n\r\n//         style={{ maxWidth: '1200px', backgroundColor: '#ffffffdd', borderRadius: '1rem' }}\r\n\r\n//       >\r\n\r\n//         <Breadcrumbs path={breadcrumbPath} />\r\n\r\n//         <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n\r\n//           üìÅ Project Level Overview {activeAccountId ? `for ${activeAccountName}` : ''}\r\n\r\n//         </h2>\r\n\r\n//         <div className=\"table-responsive rounded\">\r\n\r\n//           <table className=\"table table-hover align-middle table-borderless mb-0\">\r\n\r\n//             <thead\r\n\r\n//               className=\"text-white\"\r\n\r\n//               style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\r\n\r\n//             >\r\n\r\n//               <tr>\r\n\r\n//                 <th className=\"px-3 py-2\">Project ID</th>\r\n\r\n//                 <th className=\"px-3 py-2\">Project Name</th>\r\n\r\n//                 <th className=\"px-3 py-2\">Account ID</th>\r\n\r\n//                 <th className=\"px-3 py-2\">Account Name</th>\r\n\r\n//                 <th className=\"px-3 py-2\">Total Associates</th>\r\n\r\n//                 <th className=\"px-3 py-2\">Company Hours</th>\r\n\r\n//                 <th className=\"px-3 py-2\">Client Hours</th>\r\n\r\n//                 <th className=\"px-3 py-2\">Variance Hours</th>\r\n\r\n//                 <th className=\"px-3 py-2\">Revenue</th>\r\n\r\n//                 <th className=\"px-3 py-2 text-center\">View</th>\r\n\r\n//               </tr>\r\n\r\n//             </thead>\r\n\r\n//             <tbody>\r\n\r\n//               {projects.length > 0 ? (\r\n\r\n//                 projects.map((project) => (\r\n\r\n//                   <tr key={project.projectId} style={{ backgroundColor: '#fdfdfd' }}>\r\n\r\n//                     <td className=\"px-3 py-2\">{project.projectId}</td>\r\n\r\n//                     <td className=\"px-3 py-2\">{project.projectName}</td>\r\n\r\n//                     <td className=\"px-3 py-2\">{project.accountId}</td>\r\n\r\n//                     <td className=\"px-3 py-2\">{project.accountName}</td>\r\n\r\n//                     <td className=\"px-3 py-2\">{project.totalAssociatesCount}</td>\r\n\r\n//                     <td className=\"px-3 py-2\">{project.totalCompanyHours}</td>\r\n\r\n//                     <td className=\"px-3 py-2\">{project.totalClientHours}</td>\r\n\r\n//                     <td className=\"px-3 py-2\">{project.varianceHours}</td>\r\n\r\n//                     <td className=\"px-3 py-2\">${project.revenue.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}</td>\r\n\r\n//                     <td className=\"px-3 py-2 text-center\">\r\n\r\n//                       <button\r\n\r\n//                         // Navigate to AssociateLevel, passing projectId, month, year, accountId, accountName\r\n\r\n//                         onClick={() => navigate(`/projects/${project.projectId}/associates`, {\r\n\r\n//                           state: {\r\n\r\n//                             projectId: project.projectId,\r\n\r\n//                             projectName: project.projectName, // Pass project name for breadcrumbs\r\n\r\n//                             accountId: project.accountId, // Pass account ID\r\n\r\n//                             accountName: project.accountName, // Pass account name\r\n\r\n//                             month: activeMonth, // Pass the active month\r\n\r\n//                             year: activeYear // Pass the active year\r\n\r\n//                           }\r\n\r\n//                         })}\r\n\r\n//                         className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n\r\n//                         title=\"View Associates\"\r\n\r\n//                       >\r\n\r\n//                         üîç\r\n\r\n//                       </button>\r\n\r\n//                     </td>\r\n\r\n//                   </tr>\r\n\r\n//                 ))\r\n\r\n//               ) : (\r\n\r\n//                 <tr>\r\n\r\n//                   <td colSpan=\"10\" className=\"text-center text-muted py-4\">\r\n\r\n//                     No projects found for this account and period.\r\n\r\n//                   </td>\r\n\r\n//                 </tr>\r\n\r\n//               )}\r\n\r\n//             </tbody>\r\n\r\n//           </table>\r\n\r\n//         </div>\r\n\r\n//       </div>\r\n\r\n//     </div>\r\n\r\n//   );\r\n\r\n// };\r\n\r\n// export default ProjectLevel;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\n\r\nconst ProjectLevel = () => {\r\n  const navigate = useNavigate();\r\n  const { accountId: urlAccountId } = useParams();\r\n  const location = useLocation();\r\n\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeMonth, setActiveMonth] = useState(null);\r\n  const [activeYear, setActiveYear] = useState(null);\r\n  const [activeAccountId, setActiveAccountId] = useState(null);\r\n  const [activeAccountName, setActiveAccountName] = useState('Loading...');\r\n  const BACKEND_URL = 'http://localhost:8081';\r\n\r\n  // Helper to format numbers as USD\r\n  const formatUSD = (value) =>\r\n    value.toLocaleString('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    });\r\n\r\n  useEffect(() => {\r\n    const link = document.createElement('link');\r\n    link.href =\r\n      'https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap';\r\n    link.rel = 'stylesheet';\r\n    document.head.appendChild(link);\r\n    document.body.style.fontFamily = \"'Poppins', sans-serif\";\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchProjectData = async (month, year, accId) => {\r\n      setLoading(true);\r\n      setError(null);\r\n      const requestBody = { month, year, accId };\r\n\r\n      try {\r\n        const response = await fetch(`${BACKEND_URL}/api/project`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(requestBody),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(\r\n            `HTTP error! status: ${response.status}, message: ${\r\n              errorText || response.statusText\r\n            }`\r\n          );\r\n        }\r\n\r\n        const data = await response.json();\r\n        setProjects(Array.isArray(data) ? data : [data].filter(Boolean));\r\n\r\n        if (data && data.length > 0 && data[0].accountName) {\r\n          setActiveAccountName(data[0].accountName);\r\n        } else {\r\n          const storedAccountName = sessionStorage.getItem(\r\n            'lastFetchedProjectAccountName'\r\n          );\r\n          setActiveAccountName(storedAccountName || accId);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching project data:', err);\r\n        setError(\r\n          `Failed to load project data: ${err.message || 'Network error'}`\r\n        );\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    let monthToUse = location.state?.month;\r\n    let yearToUse = location.state?.year;\r\n    let accountIdToUse = urlAccountId;\r\n\r\n    if (!monthToUse || !yearToUse || !accountIdToUse) {\r\n      const storedMonth = sessionStorage.getItem('lastFetchedProjectMonth');\r\n      const storedYear = sessionStorage.getItem('lastFetchedProjectYear');\r\n      const storedAccountId = sessionStorage.getItem(\r\n        'lastFetchedProjectAccountId'\r\n      );\r\n      const storedAccountName = sessionStorage.getItem(\r\n        'lastFetchedProjectAccountName'\r\n      );\r\n\r\n      if (storedMonth && storedYear && storedAccountId) {\r\n        monthToUse = parseInt(storedMonth, 10);\r\n        yearToUse = parseInt(storedYear, 10);\r\n        accountIdToUse = storedAccountId;\r\n        if (storedAccountName) setActiveAccountName(storedAccountName);\r\n      }\r\n    }\r\n\r\n    if (monthToUse && yearToUse && accountIdToUse) {\r\n      if (\r\n        monthToUse !== activeMonth ||\r\n        yearToUse !== activeYear ||\r\n        accountIdToUse !== activeAccountId ||\r\n        projects.length === 0\r\n      ) {\r\n        setActiveMonth(monthToUse);\r\n        setActiveYear(yearToUse);\r\n        setActiveAccountId(accountIdToUse);\r\n        sessionStorage.setItem(\r\n          'lastFetchedProjectMonth',\r\n          monthToUse.toString()\r\n        );\r\n        sessionStorage.setItem(\r\n          'lastFetchedProjectYear',\r\n          yearToUse.toString()\r\n        );\r\n        sessionStorage.setItem(\r\n          'lastFetchedProjectAccountId',\r\n          accountIdToUse\r\n        );\r\n        if (activeAccountName && activeAccountName !== 'Loading...') {\r\n          sessionStorage.setItem(\r\n            'lastFetchedProjectAccountName',\r\n            activeAccountName\r\n          );\r\n        }\r\n        fetchProjectData(monthToUse, yearToUse, accountIdToUse);\r\n      } else {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setError(\r\n        'Missing project context (month, year, or account ID). Please go back and select an account.'\r\n      );\r\n      setLoading(false);\r\n    }\r\n  }, [\r\n    location.state,\r\n    urlAccountId,\r\n    BACKEND_URL,\r\n    activeMonth,\r\n    activeYear,\r\n    activeAccountId,\r\n    projects.length,\r\n    activeAccountName,\r\n  ]);\r\n\r\n  const breadcrumbPath = [\r\n    { name: 'PMO Dashboard', page: '' },\r\n    { name: 'Revenue Forecast - Early View', page: 'upload' },\r\n    { name: 'Account Level', page: 'accounts' },\r\n    {\r\n      name: `Projects (${activeAccountName})`,\r\n      page: `accounts/${activeAccountId}/projects`,\r\n    },\r\n  ];\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex justify-content-center align-items-center\">\r\n        <div className=\"spinner-border text-primary\" role=\"status\" />\r\n        <p className=\"ms-3 text-primary\">Loading Project Data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-vh-100 d-flex flex-column justify-content-center align-items-center text-danger\">\r\n        <p className=\"fs-4\">Error: {error}</p>\r\n        <button\r\n          className=\"btn btn-primary mt-3\"\r\n          onClick={() => navigate('/accounts')}\r\n        >\r\n          Go to Account Level\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"min-vh-100 d-flex flex-column align-items-center px-3 py-4\"\r\n      style={{\r\n        background: 'linear-gradient(to bottom right, #f5f7fa, #e9ecef)',\r\n        fontFamily: \"'Poppins', sans-serif\",\r\n      }}\r\n    >\r\n      <div\r\n        className=\"card shadow p-4 p-md-5 w-100\"\r\n        style={{ maxWidth: '1200px', backgroundColor: '#ffffffdd', borderRadius: '1rem' }}\r\n      >\r\n        <Breadcrumbs path={breadcrumbPath} />\r\n        <h2 className=\"text-center mb-4 fw-semibold text-dark\">\r\n          üìÅ Project Level Overview{' '}\r\n          {activeAccountId ? `for ${activeAccountName}` : ''}\r\n        </h2>\r\n\r\n        <div className=\"table-responsive rounded\">\r\n          <table className=\"table table-hover align-middle table-borderless mb-0\">\r\n            <thead\r\n              className=\"text-white\"\r\n              style={{ background: 'linear-gradient(to right, #3b82f6, #2563eb)' }}\r\n            >\r\n              <tr>\r\n                <th className=\"px-3 py-2\">Project ID</th>\r\n                <th className=\"px-3 py-2\">Project Name</th>\r\n                <th className=\"px-3 py-2\">Account ID</th>\r\n                <th className=\"px-3 py-2\">Account Name</th>\r\n                <th className=\"px-3 py-2\">Total Associates</th>\r\n                <th className=\"px-3 py-2\">Company Hours</th>\r\n                <th className=\"px-3 py-2\">Client Hours</th>\r\n                <th className=\"px-3 py-2\">Variance Hours</th>\r\n                <th className=\"px-3 py-2\">Revenue</th>\r\n                <th className=\"px-3 py-2 text-center\">View</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {projects.length > 0 ? (\r\n                projects.map((project) => (\r\n                  <tr key={project.projectId} style={{ backgroundColor: '#fdfdfd' }}>\r\n                    <td className=\"px-3 py-2\">{project.projectId}</td>\r\n                    <td className=\"px-3 py-2\">{project.projectName}</td>\r\n                    <td className=\"px-3 py-2\">{project.accountId}</td>\r\n                    <td className=\"px-3 py-2\">{project.accountName}</td>\r\n                    <td className=\"px-3 py-2\">{project.totalAssociatesCount}</td>\r\n                    <td className=\"px-3 py-2\">{project.totalCompanyHours}</td>\r\n                    <td className=\"px-3 py-2\">{project.totalClientHours}</td>\r\n                    <td className=\"px-3 py-2\">{project.varianceHours}</td>\r\n                    <td className=\"px-3 py-2\">{formatUSD(project.revenue)}</td>\r\n                    <td className=\"px-3 py-2 text-center\">\r\n                      <button\r\n                        onClick={() =>\r\n                          navigate(`/projects/${project.projectId}/associates`, {\r\n                            state: {\r\n                              projectId: project.projectId,                            \r\n                              projectName: project.projectName,\r\n                              accountId: project.accountId,\r\n                              accountName: project.accountName,\r\n                              month: activeMonth,\r\n                              year: activeYear,\r\n                            },\r\n                          })\r\n                        }\r\n                        className=\"btn btn-sm btn-outline-primary rounded-circle\"\r\n                        title=\"View Associates\"\r\n                      >\r\n                        üîç\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              ) : (\r\n                <tr>\r\n                  <td colSpan=\"10\" className=\"text-center text-muted py-4\">\r\n                    No projects found for this account and period.\r\n                  </td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectLevel;\r\n"],"mappings":";;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}